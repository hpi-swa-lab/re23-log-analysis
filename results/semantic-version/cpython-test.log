GLOB sdist-make: /workdir/semantic-version-2.10.0/setup.py
cpythonlibtest-unit-test-tests create: /workdir/semantic-version-2.10.0/.tox/cpythonlibtest-unit-test-tests
cpythonlibtest-unit-test-tests installdeps: mock, pytest
cpythonlibtest-unit-test-tests inst: /workdir/semantic-version-2.10.0/.tox/.tmp/package/1/semantic_version-2.10.0.zip
cpythonlibtest-unit-test-tests installed: exceptiongroup==1.2.0,iniconfig==2.0.0,mock==5.1.0,packaging==23.2,pluggy==1.3.0,pytest==7.4.3,semantic-version @ file:///workdir/semantic-version-2.10.0/.tox/.tmp/package/1/semantic_version-2.10.0.zip#sha256=a527e745c953b9ad478b01d0ed0a1f148187d03aa1bbfb5c294e7b2cf33e126c,tomli==2.0.1
cpythonlibtest-unit-test-tests run-test-pre: PYTHONHASHSEED='778098154'
cpythonlibtest-unit-test-tests run-test: commands[0] | pytest -v --tb=native --junitxml /workdir/results/semantic-version/2.10.0/1/cpython-test-results.xml
============================= test session starts ==============================
platform linux -- Python 3.10.8, pytest-7.4.3, pluggy-1.3.0 -- /workdir/semantic-version-2.10.0/.tox/cpythonlibtest-unit-test-tests/bin/python
cachedir: .tox/cpythonlibtest-unit-test-tests/.pytest_cache
rootdir: /workdir/semantic-version-2.10.0
collecting ... collected 68 items

tests/test_base.py::TopLevelTestCase::test_compare PASSED                [  1%]
tests/test_base.py::TopLevelTestCase::test_match PASSED                  [  2%]
tests/test_base.py::TopLevelTestCase::test_validate_invalid PASSED       [  4%]
tests/test_base.py::TopLevelTestCase::test_validate_valid PASSED         [  5%]
tests/test_base.py::VersionTestCase::test_bump_clean_versions PASSED     [  7%]
tests/test_base.py::VersionTestCase::test_bump_prerelease_versions PASSED [  8%]
tests/test_base.py::VersionTestCase::test_compare_partial_to_self PASSED [ 10%]
tests/test_base.py::VersionTestCase::test_compare_to_self PASSED         [ 11%]
tests/test_base.py::VersionTestCase::test_hash PASSED                    [ 13%]
tests/test_base.py::VersionTestCase::test_invalid_comparisons PASSED     [ 14%]
tests/test_base.py::VersionTestCase::test_parsing PASSED                 [ 16%]
tests/test_base.py::VersionTestCase::test_parsing_partials PASSED        [ 17%]
tests/test_base.py::VersionTestCase::test_stable_ordering PASSED         [ 19%]
tests/test_base.py::VersionTestCase::test_str PASSED                     [ 20%]
tests/test_base.py::VersionTestCase::test_str_partials PASSED            [ 22%]
tests/test_base.py::SpecItemTestCase::test_components PASSED             [ 23%]
tests/test_base.py::SpecItemTestCase::test_equality PASSED               [ 25%]
tests/test_base.py::SpecItemTestCase::test_hash PASSED                   [ 26%]
tests/test_base.py::SpecItemTestCase::test_invalids PASSED               [ 27%]
tests/test_base.py::SpecItemTestCase::test_matches PASSED                [ 29%]
tests/test_base.py::SpecItemTestCase::test_to_string PASSED              [ 30%]
tests/test_base.py::CoerceTestCase::test_coerce PASSED                   [ 32%]
tests/test_base.py::CoerceTestCase::test_invalid PASSED                  [ 33%]
tests/test_base.py::SpecTestCase::test_contains PASSED                   [ 35%]
tests/test_base.py::SpecTestCase::test_equality PASSED                   [ 36%]
tests/test_base.py::SpecTestCase::test_filter_compatible PASSED          [ 38%]
tests/test_base.py::SpecTestCase::test_filter_empty PASSED               [ 39%]
tests/test_base.py::SpecTestCase::test_filter_incompatible PASSED        [ 41%]
tests/test_base.py::SpecTestCase::test_hash PASSED                       [ 42%]
tests/test_base.py::SpecTestCase::test_matches PASSED                    [ 44%]
tests/test_base.py::SpecTestCase::test_parsing PASSED                    [ 45%]
tests/test_base.py::SpecTestCase::test_parsing_split PASSED              [ 47%]
tests/test_base.py::SpecTestCase::test_select_compatible PASSED          [ 48%]
tests/test_base.py::SpecTestCase::test_select_empty PASSED               [ 50%]
tests/test_base.py::SpecTestCase::test_select_incompatible PASSED        [ 51%]
tests/test_django.py::DjangoFieldTestCase::test_coerce_clean SKIPPED     [ 52%]
tests/test_django.py::DjangoFieldTestCase::test_invalid_input SKIPPED    [ 54%]
tests/test_django.py::DjangoFieldTestCase::test_partial SKIPPED (Dja...) [ 55%]
tests/test_django.py::DjangoFieldTestCase::test_partial_spec_clean SKIPPED [ 57%]
tests/test_django.py::DjangoFieldTestCase::test_serialization SKIPPED    [ 58%]
tests/test_django.py::DjangoFieldTestCase::test_serialization_partial SKIPPED [ 60%]
tests/test_django.py::DjangoFieldTestCase::test_spec_save SKIPPED (D...) [ 61%]
tests/test_django.py::DjangoFieldTestCase::test_version SKIPPED (Dja...) [ 63%]
tests/test_django.py::DjangoFieldTestCase::test_version_clean SKIPPED    [ 64%]
tests/test_django.py::DjangoFieldTestCase::test_version_save SKIPPED     [ 66%]
tests/test_django.py::FieldMigrationTests::test_nondefault_spec_field SKIPPED [ 67%]
tests/test_django.py::FieldMigrationTests::test_spec_field SKIPPED (...) [ 69%]
tests/test_django.py::FieldMigrationTests::test_version_field SKIPPED    [ 70%]
tests/test_django.py::FullMigrateTests::test_migrate SKIPPED (Django...) [ 72%]
tests/test_django.py::DbInteractingTestCase::test_db_interaction SKIPPED [ 73%]
tests/test_django.py::DbInteractingTestCase::test_get_or_create SKIPPED  [ 75%]
tests/test_match.py::MatchTestCase::test_build_check PASSED              [ 76%]
tests/test_match.py::MatchTestCase::test_contains PASSED                 [ 77%]
tests/test_match.py::MatchTestCase::test_invalid PASSED                  [ 79%]
tests/test_match.py::MatchTestCase::test_match PASSED                    [ 80%]
tests/test_match.py::MatchTestCase::test_prerelease_check PASSED         [ 82%]
tests/test_match.py::MatchTestCase::test_simple PASSED                   [ 83%]
tests/test_npm.py::NpmSpecTests::test_expand PASSED                      [ 85%]
tests/test_npm.py::NpmSpecTests::test_spec PASSED                        [ 86%]
tests/test_parsing.py::ParsingTestCase::test_invalid PASSED              [ 88%]
tests/test_parsing.py::ParsingTestCase::test_kwargs PASSED               [ 89%]
tests/test_parsing.py::ParsingTestCase::test_simple PASSED               [ 91%]
tests/test_parsing.py::ComparisonTestCase::test_comparisons PASSED       [ 92%]
tests/test_parsing.py::ComparisonTestCase::test_unordered PASSED         [ 94%]
tests/test_spec.py::FormatTests::test_build PASSED                       [ 95%]
tests/test_spec.py::FormatTests::test_major_minor_patch PASSED           [ 97%]
tests/test_spec.py::FormatTests::test_precedence PASSED                  [ 98%]
tests/test_spec.py::FormatTests::test_prerelease PASSED                  [100%]

=============================== warnings summary ===============================
tests/test_base.py: 4 warnings
tests/test_match.py: 50 warnings
  /workdir/semantic-version-2.10.0/semantic_version/base.py:600: PendingDeprecationWarning: The Spec() class will be removed in 3.1; use SimpleSpec() instead.
    return Spec(spec).match(Version(version))

tests/test_base.py: 19 warnings
  /workdir/semantic-version-2.10.0/tests/test_base.py:195: DeprecationWarning: Partial versions will be removed in 3.0; use SimpleSpec('1.x.x') instead.
    base.Version(text, partial=True),

tests/test_base.py: 19 warnings
  /workdir/semantic-version-2.10.0/tests/test_base.py:196: DeprecationWarning: Partial versions will be removed in 3.0; use SimpleSpec('1.x.x') instead.
    base.Version(text, partial=True))

tests/test_base.py: 19 warnings
  /workdir/semantic-version-2.10.0/tests/test_base.py:197: DeprecationWarning: Partial versions will be removed in 3.0; use SimpleSpec('1.x.x') instead.
    self.assertNotEqual(text, base.Version(text, partial=True))

tests/test_base.py::VersionTestCase::test_hash
  /workdir/semantic-version-2.10.0/tests/test_base.py:206: DeprecationWarning: Partial versions will be removed in 3.0; use SimpleSpec('1.x.x') instead.
    len(set([base.Version('0.1.0'), base.Version('0.1.0', partial=True)])))

tests/test_base.py::VersionTestCase::test_hash
  /workdir/semantic-version-2.10.0/tests/test_base.py:213: DeprecationWarning: Partial versions will be removed in 3.0; use SimpleSpec('1.x.x') instead.
    base.Version('0.1.0-a1+34', partial=True)

tests/test_base.py: 19 warnings
  /workdir/semantic-version-2.10.0/tests/test_base.py:177: DeprecationWarning: Partial versions will be removed in 3.0; use SimpleSpec('1.x.x') instead.
    version = base.Version(text, partial=True)

tests/test_base.py: 19 warnings
  /workdir/semantic-version-2.10.0/tests/test_base.py:187: DeprecationWarning: Partial versions will be removed in 3.0; use SimpleSpec('1.x.x') instead.
    version = base.Version(text, partial=True)

tests/test_base.py: 15 warnings
  /workdir/semantic-version-2.10.0/tests/test_base.py:441: DeprecationWarning: The `SpecItem` class will be removed in 3.0.
    spec = base.SpecItem(spec_text)

tests/test_base.py: 69 warnings
tests/test_match.py: 26 warnings
  /workdir/semantic-version-2.10.0/semantic_version/base.py:560: DeprecationWarning: Partial versions will be removed in 3.0; use SimpleSpec('1.x.x') instead.
    spec = Version(version, partial=True)

tests/test_base.py: 66 warnings
tests/test_match.py: 28 warnings
  /workdir/semantic-version-2.10.0/semantic_version/base.py:541: PendingDeprecationWarning: The Spec() class will be removed in 3.1; use SimpleSpec() instead.
    self._clause = Spec(requirement_string).clause

tests/test_base.py::SpecItemTestCase::test_equality
  /workdir/semantic-version-2.10.0/tests/test_base.py:563: DeprecationWarning: The `SpecItem` class will be removed in 3.0.
    spec1 = base.SpecItem('==0.1.0')

tests/test_base.py::SpecItemTestCase::test_equality
  /workdir/semantic-version-2.10.0/tests/test_base.py:564: DeprecationWarning: The `SpecItem` class will be removed in 3.0.
    spec2 = base.SpecItem('==0.1.0')

tests/test_base.py::SpecItemTestCase::test_hash
tests/test_base.py::SpecItemTestCase::test_hash
  /workdir/semantic-version-2.10.0/tests/test_base.py:576: DeprecationWarning: The `SpecItem` class will be removed in 3.0.
    len(set([base.SpecItem('==0.1.0'), base.SpecItem('==0.1.0')])))

tests/test_base.py::SpecItemTestCase::test_invalids
tests/test_base.py::SpecItemTestCase::test_invalids
tests/test_base.py::SpecItemTestCase::test_invalids
  /workdir/semantic-version-2.10.0/tests/test_base.py:417: DeprecationWarning: The `SpecItem` class will be removed in 3.0.
    base.SpecItem(invalid)

tests/test_base.py: 23 warnings
  /workdir/semantic-version-2.10.0/tests/test_base.py:547: DeprecationWarning: The `SpecItem` class will be removed in 3.0.
    spec = base.SpecItem(spec_text)

tests/test_base.py::SpecItemTestCase::test_to_string
  /workdir/semantic-version-2.10.0/tests/test_base.py:569: DeprecationWarning: The `SpecItem` class will be removed in 3.0.
    spec = base.SpecItem('==0.1.0')

tests/test_base.py::SpecTestCase::test_contains
  /workdir/semantic-version-2.10.0/tests/test_base.py:782: PendingDeprecationWarning: The Spec() class will be removed in 3.1; use SimpleSpec() instead.
    self.assertFalse('ii' in base.Spec('>=0.1.1'))

tests/test_base.py::SpecTestCase::test_equality
tests/test_base.py::SpecTestCase::test_equality
tests/test_base.py::SpecTestCase::test_equality
tests/test_base.py::SpecTestCase::test_equality
tests/test_base.py::SpecTestCase::test_equality
tests/test_base.py::SpecTestCase::test_equality
  /workdir/semantic-version-2.10.0/tests/test_base.py:715: PendingDeprecationWarning: The Spec() class will be removed in 3.1; use SimpleSpec() instead.
    slist1 = base.Spec(spec_list_text)

tests/test_base.py::SpecTestCase::test_equality
tests/test_base.py::SpecTestCase::test_equality
tests/test_base.py::SpecTestCase::test_equality
tests/test_base.py::SpecTestCase::test_equality
tests/test_base.py::SpecTestCase::test_equality
tests/test_base.py::SpecTestCase::test_equality
  /workdir/semantic-version-2.10.0/tests/test_base.py:716: PendingDeprecationWarning: The Spec() class will be removed in 3.1; use SimpleSpec() instead.
    slist2 = base.Spec(spec_list_text)

tests/test_base.py::SpecTestCase::test_filter_compatible
  /workdir/semantic-version-2.10.0/tests/test_base.py:735: PendingDeprecationWarning: The Spec() class will be removed in 3.1; use SimpleSpec() instead.
    s = base.Spec('>=0.1.1,!=0.1.4,<0.2.0')

tests/test_base.py::SpecTestCase::test_filter_empty
  /workdir/semantic-version-2.10.0/tests/test_base.py:721: PendingDeprecationWarning: The Spec() class will be removed in 3.1; use SimpleSpec() instead.
    s = base.Spec('>=0.1.1')

tests/test_base.py::SpecTestCase::test_filter_incompatible
  /workdir/semantic-version-2.10.0/tests/test_base.py:726: PendingDeprecationWarning: The Spec() class will be removed in 3.1; use SimpleSpec() instead.
    s = base.Spec('>=0.1.1,!=0.1.4')

tests/test_base.py::SpecTestCase::test_hash
tests/test_base.py::SpecTestCase::test_hash
  /workdir/semantic-version-2.10.0/tests/test_base.py:787: PendingDeprecationWarning: The Spec() class will be removed in 3.1; use SimpleSpec() instead.
    len(set([base.Spec('>=0.1.1'), base.Spec('>=0.1.1')])))

tests/test_base.py::SpecTestCase::test_matches
tests/test_base.py::SpecTestCase::test_matches
tests/test_base.py::SpecTestCase::test_matches
tests/test_base.py::SpecTestCase::test_matches
  /workdir/semantic-version-2.10.0/tests/test_base.py:689: PendingDeprecationWarning: The Spec() class will be removed in 3.1; use SimpleSpec() instead.
    spec_list = base.Spec(spec_list_text)

tests/test_base.py::SpecTestCase::test_parsing
tests/test_base.py::SpecTestCase::test_parsing
tests/test_base.py::SpecTestCase::test_parsing
tests/test_base.py::SpecTestCase::test_parsing
tests/test_base.py::SpecTestCase::test_parsing
tests/test_base.py::SpecTestCase::test_parsing
  /workdir/semantic-version-2.10.0/tests/test_base.py:638: PendingDeprecationWarning: The Spec() class will be removed in 3.1; use SimpleSpec() instead.
    spec_list = base.Spec(spec_list_text)

tests/test_base.py::SpecTestCase::test_parsing
tests/test_base.py::SpecTestCase::test_parsing
tests/test_base.py::SpecTestCase::test_parsing
tests/test_base.py::SpecTestCase::test_parsing
tests/test_base.py::SpecTestCase::test_parsing
tests/test_base.py::SpecTestCase::test_parsing
  /workdir/semantic-version-2.10.0/tests/test_base.py:642: DeprecationWarning: Iterating over the components of a SimpleSpec object will be removed in 3.0.
    self.assertCountEqual(specs, [str(spec) for spec in spec_list])

tests/test_base.py::SpecTestCase::test_parsing_split
tests/test_base.py::SpecTestCase::test_parsing_split
  /workdir/semantic-version-2.10.0/tests/test_base.py:652: PendingDeprecationWarning: The Spec() class will be removed in 3.1; use SimpleSpec() instead.
    spec_list = base.Spec(*spec_list_texts)

tests/test_base.py::SpecTestCase::test_parsing_split
tests/test_base.py::SpecTestCase::test_parsing_split
  /workdir/semantic-version-2.10.0/tests/test_base.py:652: DeprecationWarning: Passing 2+ arguments to SimpleSpec will be removed in 3.0; concatenate them with ',' instead.
    spec_list = base.Spec(*spec_list_texts)

tests/test_base.py::SpecTestCase::test_parsing_split
tests/test_base.py::SpecTestCase::test_parsing_split
  /workdir/semantic-version-2.10.0/tests/test_base.py:655: DeprecationWarning: Iterating over the components of a SimpleSpec object will be removed in 3.0.
    self.assertCountEqual(specs, [str(spec) for spec in spec_list])

tests/test_base.py::SpecTestCase::test_parsing_split
tests/test_base.py::SpecTestCase::test_parsing_split
  /workdir/semantic-version-2.10.0/tests/test_base.py:656: PendingDeprecationWarning: The Spec() class will be removed in 3.1; use SimpleSpec() instead.
    self.assertEqual(spec_list, base.Spec(','.join(spec_list_texts)))

tests/test_base.py::SpecTestCase::test_parsing_split
tests/test_base.py::SpecTestCase::test_parsing_split
tests/test_base.py::SpecTestCase::test_parsing_split
tests/test_base.py::SpecTestCase::test_parsing_split
tests/test_base.py::SpecTestCase::test_parsing_split
tests/test_base.py::SpecTestCase::test_parsing_split
  /workdir/semantic-version-2.10.0/tests/test_base.py:659: DeprecationWarning: The `SpecItem` class will be removed in 3.0.
    self.assertIn(str(base.SpecItem(spec_text)), repr(spec_list))

tests/test_base.py::SpecTestCase::test_select_compatible
  /workdir/semantic-version-2.10.0/tests/test_base.py:768: PendingDeprecationWarning: The Spec() class will be removed in 3.1; use SimpleSpec() instead.
    s = base.Spec('>=0.1.1,!=0.1.4,<0.2.0')

tests/test_base.py::SpecTestCase::test_select_empty
  /workdir/semantic-version-2.10.0/tests/test_base.py:755: PendingDeprecationWarning: The Spec() class will be removed in 3.1; use SimpleSpec() instead.
    s = base.Spec('>=0.1.1')

tests/test_base.py::SpecTestCase::test_select_incompatible
  /workdir/semantic-version-2.10.0/tests/test_base.py:759: PendingDeprecationWarning: The Spec() class will be removed in 3.1; use SimpleSpec() instead.
    s = base.Spec('>=0.1.1,!=0.1.4')

tests/test_match.py::MatchTestCase::test_build_check
  /workdir/semantic-version-2.10.0/tests/test_match.py:170: PendingDeprecationWarning: The Spec() class will be removed in 3.1; use SimpleSpec() instead.
    spec = semantic_version.Spec('<=0.1.1-rc1')

tests/test_match.py::MatchTestCase::test_contains
  /workdir/semantic-version-2.10.0/tests/test_match.py:153: PendingDeprecationWarning: The Spec() class will be removed in 3.1; use SimpleSpec() instead.
    spec = semantic_version.Spec('<=0.1.1')

tests/test_match.py::MatchTestCase::test_invalid
tests/test_match.py::MatchTestCase::test_invalid
tests/test_match.py::MatchTestCase::test_invalid
tests/test_match.py::MatchTestCase::test_invalid
tests/test_match.py::MatchTestCase::test_invalid
  /workdir/semantic-version-2.10.0/tests/test_match.py:132: PendingDeprecationWarning: The Spec() class will be removed in 3.1; use SimpleSpec() instead.
    semantic_version.Spec(invalid)

tests/test_match.py: 50 warnings
  /workdir/semantic-version-2.10.0/tests/test_match.py:145: PendingDeprecationWarning: The Spec() class will be removed in 3.1; use SimpleSpec() instead.
    spec = semantic_version.Spec(spec_text)

tests/test_match.py::MatchTestCase::test_prerelease_check
  /workdir/semantic-version-2.10.0/tests/test_match.py:163: PendingDeprecationWarning: The Spec() class will be removed in 3.1; use SimpleSpec() instead.
    strict_spec = semantic_version.Spec('>=0.1.1-')

tests/test_match.py::MatchTestCase::test_prerelease_check
  /workdir/semantic-version-2.10.0/tests/test_match.py:164: PendingDeprecationWarning: The Spec() class will be removed in 3.1; use SimpleSpec() instead.
    lax_spec = semantic_version.Spec('>=0.1.1')

tests/test_match.py: 14 warnings
  /workdir/semantic-version-2.10.0/tests/test_match.py:137: DeprecationWarning: The `SpecItem` class will be removed in 3.0.
    spec = semantic_version.SpecItem(valid)

tests/test_match.py: 14 warnings
  /workdir/semantic-version-2.10.0/tests/test_match.py:139: DeprecationWarning: The `SpecItem` class will be removed in 3.0.
    self.assertEqual(spec, semantic_version.SpecItem(normalized))

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
- generated xml file: /workdir/results/semantic-version/2.10.0/1/cpython-test-results.xml -
================= 52 passed, 16 skipped, 524 warnings in 0.27s =================
___________________________________ summary ____________________________________
  cpythonlibtest-unit-test-tests: commands succeeded
  congratulations :)
