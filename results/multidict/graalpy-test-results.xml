<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="1" skipped="300" tests="730" time="230.270" timestamp="2023-11-22T08:08:18.765000" hostname="80ac3eb7f7f2"><testcase classname="tests.test_abc" name="test_abc_inheritance" time="0.107" /><testcase classname="tests.test_abc" name="test_abc_getall" time="0.077" /><testcase classname="tests.test_abc" name="test_abc_getone" time="0.049" /><testcase classname="tests.test_abc" name="test_abc_add" time="0.325" /><testcase classname="tests.test_abc" name="test_abc_extend" time="0.051" /><testcase classname="tests.test_abc" name="test_abc_popone" time="0.056" /><testcase classname="tests.test_abc" name="test_abc_popall" time="0.059" /><testcase classname="tests.test_abc" name="test_multidict_inheritance[PyMultiDict]" time="0.077" /><testcase classname="tests.test_abc" name="test_multidict_inheritance[PyCIMultiDict]" time="0.069" /><testcase classname="tests.test_abc" name="test_proxy_inheritance[PyMultiDictProxy]" time="0.089" /><testcase classname="tests.test_abc" name="test_proxy_inheritance[PyCIMultiDictProxy]" time="0.067" /><testcase classname="tests.test_abc" name="test_generic_type_in_runtime" time="0.046" /><testcase classname="tests.test_copy" name="test_copy[PyMultiDict]" time="0.082" /><testcase classname="tests.test_copy" name="test_copy[PyCIMultiDict]" time="0.083" /><testcase classname="tests.test_copy" name="test_copy_proxy[PyMultiDictProxy]" time="0.149" /><testcase classname="tests.test_copy" name="test_copy_proxy[PyCIMultiDictProxy]" time="0.072" /><testcase classname="tests.test_copy" name="test_copy_std_copy[PyMultiDict]" time="0.074" /><testcase classname="tests.test_copy" name="test_copy_std_copy[PyCIMultiDict]" time="0.075" /><testcase classname="tests.test_copy" name="test_ci_multidict_clone[PyMultiDict]" time="0.089" /><testcase classname="tests.test_copy" name="test_ci_multidict_clone[PyCIMultiDict]" time="0.077" /><testcase classname="tests.test_guard" name="test_guard_items[PyMultiDict]" time="0.074" /><testcase classname="tests.test_guard" name="test_guard_keys[PyMultiDict]" time="0.061" /><testcase classname="tests.test_guard" name="test_guard_values[PyMultiDict]" time="0.085" /><testcase classname="tests.test_istr.TestPyIStr" name="test_ctor" time="0.055" /><testcase classname="tests.test_istr.TestPyIStr" name="test_ctor_str" time="0.072" /><testcase classname="tests.test_istr.TestPyIStr" name="test_ctor_istr" time="0.047" /><testcase classname="tests.test_istr.TestPyIStr" name="test_ctor_buffer" time="0.052" /><testcase classname="tests.test_istr.TestPyIStr" name="test_ctor_repr" time="0.047" /><testcase classname="tests.test_istr.TestPyIStr" name="test_str" time="0.049" /><testcase classname="tests.test_istr.TestPyIStr" name="test_eq" time="0.049" /><testcase classname="tests.test_istr.TestPyIStr" name="test_leak" time="0.048"><skipped type="pytest.skip" message="PyPy has different GC implementation">/workdir/multidict-6.0.3/tests/test_istr.py:69: PyPy has different GC implementation</skipped></testcase><testcase classname="tests.test_multidict" name="test_exposed_names[multidict._multidict-MultiDict]" time="0.033"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:61: No extensions available</skipped></testcase><testcase classname="tests.test_multidict" name="test_exposed_names[multidict._multidict-CIMultiDict]" time="0.033"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:61: No extensions available</skipped></testcase><testcase classname="tests.test_multidict" name="test__iter__types[multidict._multidict-MultiDict-str]" time="0.024"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:77: No extensions available</skipped></testcase><testcase classname="tests.test_multidict" name="test__iter__types[multidict._multidict-cls1-str]" time="0.025"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:77: No extensions available</skipped></testcase><testcase classname="tests.test_multidict" name="test_proxy_copy[multidict._multidict-classes0]" time="0.035"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:97: No extensions available</skipped></testcase><testcase classname="tests.test_multidict" name="test_proxy_copy[multidict._multidict-classes1]" time="0.025"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:97: No extensions available</skipped></testcase><testcase classname="tests.test_multidict" name="test_subclassing[multidict._multidict-MultiDict]" time="0.024"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:112: No extensions available</skipped></testcase><testcase classname="tests.test_multidict" name="test_subclassing[multidict._multidict-CIMultiDict]" time="0.031"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:112: No extensions available</skipped></testcase><testcase classname="tests.test_multidict" name="test_subclassing[multidict._multidict-MultiDictProxy]" time="0.034"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:112: No extensions available</skipped></testcase><testcase classname="tests.test_multidict" name="test_subclassing[multidict._multidict-CIMultiDictProxy]" time="0.026"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:112: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_instantiate__empty[multidict._multidict-MultiDict]" time="0.027"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:118: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_instantiate__empty[multidict._multidict-cls1]" time="0.027"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:118: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_instantiate__from_arg0[multidict._multidict-MultiDict-arg00]" time="0.026"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:132: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_instantiate__from_arg0[multidict._multidict-MultiDict-arg01]" time="0.027"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:132: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_instantiate__from_arg0[multidict._multidict-cls1-arg00]" time="0.028"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:132: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_instantiate__from_arg0[multidict._multidict-cls1-arg01]" time="0.025"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:132: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_instantiate__with_kwargs[multidict._multidict-MultiDict]" time="0.025"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:145: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_instantiate__with_kwargs[multidict._multidict-cls1]" time="0.040"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:145: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_instantiate__from_generator[multidict._multidict-MultiDict]" time="0.028"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:154: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_instantiate__from_generator[multidict._multidict-cls1]" time="0.026"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:154: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_instantiate__from_list_of_lists[multidict._multidict-MultiDict]" time="0.026"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:165: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_instantiate__from_list_of_lists[multidict._multidict-cls1]" time="0.031"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:165: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_instantiate__from_list_of_custom_pairs[multidict._multidict-MultiDict]" time="0.026"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:170: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_instantiate__from_list_of_custom_pairs[multidict._multidict-cls1]" time="0.028"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:170: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_getone[multidict._multidict-MultiDict]" time="0.025"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:189: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_getone[multidict._multidict-cls1]" time="0.027"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:189: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test__iter__[multidict._multidict-MultiDict]" time="0.025"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:203: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test__iter__[multidict._multidict-cls1]" time="0.027"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:203: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_keys__contains[multidict._multidict-MultiDict]" time="0.028"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:210: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_keys__contains[multidict._multidict-cls1]" time="0.038"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:210: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_values__contains[multidict._multidict-MultiDict]" time="0.030"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:223: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_values__contains[multidict._multidict-cls1]" time="0.056"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:223: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_items__contains[multidict._multidict-MultiDict]" time="0.027"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:237: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_items__contains[multidict._multidict-cls1]" time="0.024"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:237: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_cannot_create_from_unaccepted[multidict._multidict-MultiDict]" time="0.026"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:251: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_cannot_create_from_unaccepted[multidict._multidict-cls1]" time="0.024"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:251: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_keys_is_set_less[multidict._multidict-MultiDict]" time="0.026"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:255: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_keys_is_set_less[multidict._multidict-cls1]" time="0.024"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:255: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_keys_is_set_less_equal[multidict._multidict-MultiDict]" time="0.024"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:260: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_keys_is_set_less_equal[multidict._multidict-cls1]" time="0.029"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:260: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_keys_is_set_equal[multidict._multidict-MultiDict]" time="0.025"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:265: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_keys_is_set_equal[multidict._multidict-cls1]" time="0.027"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:265: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_keys_is_set_greater[multidict._multidict-MultiDict]" time="0.023"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:270: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_keys_is_set_greater[multidict._multidict-cls1]" time="0.027"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:270: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_keys_is_set_greater_equal[multidict._multidict-MultiDict]" time="0.025"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:275: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_keys_is_set_greater_equal[multidict._multidict-cls1]" time="0.025"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:275: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_keys_is_set_not_equal[multidict._multidict-MultiDict]" time="0.035"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:280: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_keys_is_set_not_equal[multidict._multidict-cls1]" time="0.025"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:280: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_eq[multidict._multidict-MultiDict]" time="0.029"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:285: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_eq[multidict._multidict-cls1]" time="0.034"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:285: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_eq2[multidict._multidict-MultiDict]" time="0.044"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:290: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_eq2[multidict._multidict-cls1]" time="0.032"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:290: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_eq3[multidict._multidict-MultiDict]" time="0.030"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:296: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_eq3[multidict._multidict-cls1]" time="0.028"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:296: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_eq_other_mapping_contains_more_keys[multidict._multidict-MultiDict]" time="0.031"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:302: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_eq_other_mapping_contains_more_keys[multidict._multidict-cls1]" time="0.029"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:302: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_eq_bad_mapping_len[multidict._multidict-MultiDict]" time="0.029"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:308: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_eq_bad_mapping_len[multidict._multidict-cls1]" time="0.025"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:308: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_eq_bad_mapping_getitem[multidict._multidict-MultiDict]" time="0.043"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:326: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_eq_bad_mapping_getitem[multidict._multidict-cls1]" time="0.029"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:326: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_ne[multidict._multidict-MultiDict]" time="0.025"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:345: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_ne[multidict._multidict-cls1]" time="0.028"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:345: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_and[multidict._multidict-MultiDict]" time="0.031"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:350: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_and[multidict._multidict-cls1]" time="0.030"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:350: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_and2[multidict._multidict-MultiDict]" time="0.027"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:355: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_and2[multidict._multidict-cls1]" time="0.028"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:355: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_or[multidict._multidict-MultiDict]" time="0.031"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:360: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_or[multidict._multidict-cls1]" time="0.028"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:360: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_or2[multidict._multidict-MultiDict]" time="0.029"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:365: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_or2[multidict._multidict-cls1]" time="0.030"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:365: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_sub[multidict._multidict-MultiDict]" time="0.026"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:370: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_sub[multidict._multidict-cls1]" time="0.026"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:370: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_sub2[multidict._multidict-MultiDict]" time="0.025"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:375: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_sub2[multidict._multidict-cls1]" time="0.032"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:375: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_xor[multidict._multidict-MultiDict]" time="0.025"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:380: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_xor[multidict._multidict-cls1]" time="0.030"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:380: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_xor2[multidict._multidict-MultiDict]" time="0.026"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:385: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_xor2[multidict._multidict-cls1]" time="0.024"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:385: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_isdisjoint[multidict._multidict-MultiDict-_set0-True]" time="0.026"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:391: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_isdisjoint[multidict._multidict-MultiDict-_set1-False]" time="0.029"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:391: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_isdisjoint[multidict._multidict-cls1-_set0-True]" time="0.026"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:391: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_isdisjoint[multidict._multidict-cls1-_set1-False]" time="0.030"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:391: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_repr_issue_410[multidict._multidict-MultiDict]" time="0.025"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:398: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_repr_issue_410[multidict._multidict-cls1]" time="0.026"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:398: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_op_issue_410[multidict._multidict-MultiDict-other0-or_]" time="0.026"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:413: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_op_issue_410[multidict._multidict-MultiDict-other0-and_]" time="0.026"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:413: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_op_issue_410[multidict._multidict-MultiDict-other0-sub]" time="0.070"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:413: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_op_issue_410[multidict._multidict-MultiDict-other0-xor]" time="0.032"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:413: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_op_issue_410[multidict._multidict-cls1-other0-or_]" time="0.026"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:413: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_op_issue_410[multidict._multidict-cls1-other0-and_]" time="0.029"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:413: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_op_issue_410[multidict._multidict-cls1-other0-sub]" time="0.027"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:413: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_op_issue_410[multidict._multidict-cls1-other0-xor]" time="0.037"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:413: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_weakref[multidict._multidict-MultiDict]" time="0.028"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:429: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_weakref[multidict._multidict-cls1]" time="0.029"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:429: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_iter_length_hint_keys[multidict._multidict-MultiDict]" time="0.036"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:443: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_iter_length_hint_keys[multidict._multidict-cls1]" time="0.029"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:443: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_iter_length_hint_items[multidict._multidict-MultiDict]" time="0.025"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:451: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_iter_length_hint_items[multidict._multidict-cls1]" time="0.028"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:451: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_iter_length_hint_values[multidict._multidict-MultiDict]" time="0.032"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:459: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_iter_length_hint_values[multidict._multidict-cls1]" time="0.024"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:459: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_ctor_list_arg_and_kwds[multidict._multidict-MultiDict]" time="0.028"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:467: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_ctor_list_arg_and_kwds[multidict._multidict-cls1]" time="0.028"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:467: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_ctor_tuple_arg_and_kwds[multidict._multidict-MultiDict]" time="0.028"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:476: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_ctor_tuple_arg_and_kwds[multidict._multidict-cls1]" time="0.027"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:476: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_ctor_deque_arg_and_kwds[multidict._multidict-MultiDict]" time="0.030"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:485: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_ctor_deque_arg_and_kwds[multidict._multidict-cls1]" time="0.032"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:485: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test__repr__[multidict._multidict-MultiDict]" time="0.031"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:500: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test__repr__[multidict._multidict-cls1]" time="0.026"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:500: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_getall[multidict._multidict-MultiDict]" time="0.035"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:510: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_getall[multidict._multidict-cls1]" time="0.032"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:510: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_preserve_stable_ordering[multidict._multidict-MultiDict]" time="0.032"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:524: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_preserve_stable_ordering[multidict._multidict-cls1]" time="0.038"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:524: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_get[multidict._multidict-MultiDict]" time="0.034"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:532: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_get[multidict._multidict-cls1]" time="0.029"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:532: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_items__repr__[multidict._multidict-MultiDict]" time="0.030"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:536: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_items__repr__[multidict._multidict-cls1]" time="0.037"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:536: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_keys__repr__[multidict._multidict-MultiDict]" time="0.039"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:541: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_keys__repr__[multidict._multidict-cls1]" time="0.047"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:541: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_values__repr__[multidict._multidict-MultiDict]" time="0.035"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:545: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestMultiDict" name="test_values__repr__[multidict._multidict-cls1]" time="0.042"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:545: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_instantiate__empty[multidict._multidict-CIMultiDict]" time="0.031"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:118: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_instantiate__empty[multidict._multidict-cls1]" time="0.044"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:118: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_instantiate__from_arg0[multidict._multidict-CIMultiDict-arg00]" time="0.042"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:132: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_instantiate__from_arg0[multidict._multidict-CIMultiDict-arg01]" time="0.038"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:132: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_instantiate__from_arg0[multidict._multidict-cls1-arg00]" time="0.039"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:132: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_instantiate__from_arg0[multidict._multidict-cls1-arg01]" time="0.032"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:132: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_instantiate__with_kwargs[multidict._multidict-CIMultiDict]" time="0.032"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:145: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_instantiate__with_kwargs[multidict._multidict-cls1]" time="0.070"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:145: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_instantiate__from_generator[multidict._multidict-CIMultiDict]" time="0.048"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:154: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_instantiate__from_generator[multidict._multidict-cls1]" time="0.077"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:154: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_instantiate__from_list_of_lists[multidict._multidict-CIMultiDict]" time="0.032"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:165: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_instantiate__from_list_of_lists[multidict._multidict-cls1]" time="0.026"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:165: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_instantiate__from_list_of_custom_pairs[multidict._multidict-CIMultiDict]" time="0.023"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:170: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_instantiate__from_list_of_custom_pairs[multidict._multidict-cls1]" time="0.028"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:170: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_getone[multidict._multidict-CIMultiDict]" time="0.033"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:189: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_getone[multidict._multidict-cls1]" time="0.024"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:189: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test__iter__[multidict._multidict-CIMultiDict]" time="0.025"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:203: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test__iter__[multidict._multidict-cls1]" time="0.037"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:203: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_keys__contains[multidict._multidict-CIMultiDict]" time="0.038"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:210: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_keys__contains[multidict._multidict-cls1]" time="0.045"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:210: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_values__contains[multidict._multidict-CIMultiDict]" time="0.043"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:223: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_values__contains[multidict._multidict-cls1]" time="0.024"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:223: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_items__contains[multidict._multidict-CIMultiDict]" time="0.027"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:237: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_items__contains[multidict._multidict-cls1]" time="0.027"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:237: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_cannot_create_from_unaccepted[multidict._multidict-CIMultiDict]" time="0.026"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:251: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_cannot_create_from_unaccepted[multidict._multidict-cls1]" time="0.035"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:251: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_keys_is_set_less[multidict._multidict-CIMultiDict]" time="0.045"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:255: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_keys_is_set_less[multidict._multidict-cls1]" time="0.025"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:255: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_keys_is_set_less_equal[multidict._multidict-CIMultiDict]" time="0.031"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:260: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_keys_is_set_less_equal[multidict._multidict-cls1]" time="0.026"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:260: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_keys_is_set_equal[multidict._multidict-CIMultiDict]" time="0.029"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:265: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_keys_is_set_equal[multidict._multidict-cls1]" time="0.027"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:265: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_keys_is_set_greater[multidict._multidict-CIMultiDict]" time="0.029"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:270: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_keys_is_set_greater[multidict._multidict-cls1]" time="0.033"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:270: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_keys_is_set_greater_equal[multidict._multidict-CIMultiDict]" time="0.047"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:275: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_keys_is_set_greater_equal[multidict._multidict-cls1]" time="0.040"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:275: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_keys_is_set_not_equal[multidict._multidict-CIMultiDict]" time="0.036"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:280: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_keys_is_set_not_equal[multidict._multidict-cls1]" time="0.041"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:280: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_eq[multidict._multidict-CIMultiDict]" time="0.026"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:285: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_eq[multidict._multidict-cls1]" time="0.052"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:285: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_eq2[multidict._multidict-CIMultiDict]" time="0.031"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:290: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_eq2[multidict._multidict-cls1]" time="0.025"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:290: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_eq3[multidict._multidict-CIMultiDict]" time="0.036"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:296: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_eq3[multidict._multidict-cls1]" time="0.028"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:296: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_eq_other_mapping_contains_more_keys[multidict._multidict-CIMultiDict]" time="0.029"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:302: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_eq_other_mapping_contains_more_keys[multidict._multidict-cls1]" time="0.028"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:302: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_eq_bad_mapping_len[multidict._multidict-CIMultiDict]" time="0.031"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:308: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_eq_bad_mapping_len[multidict._multidict-cls1]" time="0.030"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:308: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_eq_bad_mapping_getitem[multidict._multidict-CIMultiDict]" time="0.030"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:326: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_eq_bad_mapping_getitem[multidict._multidict-cls1]" time="0.037"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:326: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_ne[multidict._multidict-CIMultiDict]" time="0.031"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:345: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_ne[multidict._multidict-cls1]" time="0.027"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:345: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_and[multidict._multidict-CIMultiDict]" time="0.028"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:350: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_and[multidict._multidict-cls1]" time="0.027"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:350: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_and2[multidict._multidict-CIMultiDict]" time="0.028"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:355: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_and2[multidict._multidict-cls1]" time="0.027"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:355: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_or[multidict._multidict-CIMultiDict]" time="0.032"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:360: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_or[multidict._multidict-cls1]" time="0.027"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:360: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_or2[multidict._multidict-CIMultiDict]" time="0.026"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:365: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_or2[multidict._multidict-cls1]" time="0.089"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:365: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_sub[multidict._multidict-CIMultiDict]" time="0.031"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:370: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_sub[multidict._multidict-cls1]" time="0.027"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:370: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_sub2[multidict._multidict-CIMultiDict]" time="0.030"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:375: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_sub2[multidict._multidict-cls1]" time="0.027"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:375: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_xor[multidict._multidict-CIMultiDict]" time="0.027"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:380: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_xor[multidict._multidict-cls1]" time="0.029"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:380: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_xor2[multidict._multidict-CIMultiDict]" time="0.025"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:385: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_xor2[multidict._multidict-cls1]" time="0.027"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:385: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_isdisjoint[multidict._multidict-CIMultiDict-_set0-True]" time="0.024"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:391: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_isdisjoint[multidict._multidict-CIMultiDict-_set1-False]" time="0.026"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:391: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_isdisjoint[multidict._multidict-cls1-_set0-True]" time="0.024"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:391: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_isdisjoint[multidict._multidict-cls1-_set1-False]" time="0.022"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:391: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_repr_issue_410[multidict._multidict-CIMultiDict]" time="0.024"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:398: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_repr_issue_410[multidict._multidict-cls1]" time="0.024"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:398: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_op_issue_410[multidict._multidict-CIMultiDict-other0-or_]" time="0.028"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:413: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_op_issue_410[multidict._multidict-CIMultiDict-other0-and_]" time="0.024"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:413: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_op_issue_410[multidict._multidict-CIMultiDict-other0-sub]" time="0.026"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:413: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_op_issue_410[multidict._multidict-CIMultiDict-other0-xor]" time="0.024"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:413: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_op_issue_410[multidict._multidict-cls1-other0-or_]" time="0.034"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:413: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_op_issue_410[multidict._multidict-cls1-other0-and_]" time="0.028"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:413: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_op_issue_410[multidict._multidict-cls1-other0-sub]" time="0.026"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:413: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_op_issue_410[multidict._multidict-cls1-other0-xor]" time="0.025"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:413: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_weakref[multidict._multidict-CIMultiDict]" time="0.025"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:429: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_weakref[multidict._multidict-cls1]" time="0.023"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:429: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_iter_length_hint_keys[multidict._multidict-CIMultiDict]" time="0.029"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:443: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_iter_length_hint_keys[multidict._multidict-cls1]" time="0.025"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:443: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_iter_length_hint_items[multidict._multidict-CIMultiDict]" time="0.022"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:451: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_iter_length_hint_items[multidict._multidict-cls1]" time="0.026"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:451: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_iter_length_hint_values[multidict._multidict-CIMultiDict]" time="0.029"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:459: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_iter_length_hint_values[multidict._multidict-cls1]" time="0.022"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:459: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_ctor_list_arg_and_kwds[multidict._multidict-CIMultiDict]" time="0.025"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:467: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_ctor_list_arg_and_kwds[multidict._multidict-cls1]" time="0.028"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:467: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_ctor_tuple_arg_and_kwds[multidict._multidict-CIMultiDict]" time="0.025"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:476: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_ctor_tuple_arg_and_kwds[multidict._multidict-cls1]" time="0.024"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:476: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_ctor_deque_arg_and_kwds[multidict._multidict-CIMultiDict]" time="0.026"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:485: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_ctor_deque_arg_and_kwds[multidict._multidict-cls1]" time="0.028"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:485: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_basics[multidict._multidict-CIMultiDict]" time="0.025"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:555: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_basics[multidict._multidict-cls1]" time="0.023"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:555: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_getall[multidict._multidict-CIMultiDict]" time="0.023"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:569: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_getall[multidict._multidict-cls1]" time="0.026"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:569: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_get[multidict._multidict-CIMultiDict]" time="0.026"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:580: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_get[multidict._multidict-cls1]" time="0.026"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:580: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test__repr__[multidict._multidict-CIMultiDict]" time="0.025"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:584: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test__repr__[multidict._multidict-cls1]" time="0.024"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:584: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_items__repr__[multidict._multidict-CIMultiDict]" time="0.028"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:591: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_items__repr__[multidict._multidict-cls1]" time="0.024"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:591: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_keys__repr__[multidict._multidict-CIMultiDict]" time="0.029"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:596: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_keys__repr__[multidict._multidict-cls1]" time="0.026"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:596: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_values__repr__[multidict._multidict-CIMultiDict]" time="0.024"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:600: No extensions available</skipped></testcase><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_values__repr__[multidict._multidict-cls1]" time="0.023"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_multidict.py:600: No extensions available</skipped></testcase><testcase classname="tests.test_mutable_multidict.TestMutableMultiDict" name="test_copy[multidict._multidict]" time="0.033"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_mutable_multidict.py:20: No extensions available</skipped></testcase><testcase classname="tests.test_mutable_multidict.TestMutableMultiDict" name="test__repr__[multidict._multidict]" time="0.025"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_mutable_multidict.py:27: No extensions available</skipped></testcase><testcase classname="tests.test_mutable_multidict.TestMutableMultiDict" name="test_getall[multidict._multidict]" time="0.027"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_mutable_multidict.py:36: No extensions available</skipped></testcase><testcase classname="tests.test_mutable_multidict.TestMutableMultiDict" name="test_add[multidict._multidict]" time="0.025"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_mutable_multidict.py:48: No extensions available</skipped></testcase><testcase classname="tests.test_mutable_multidict.TestMutableMultiDict" name="test_extend[multidict._multidict]" time="0.027"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_mutable_multidict.py:68: No extensions available</skipped></testcase><testcase classname="tests.test_mutable_multidict.TestMutableMultiDict" name="test_extend_from_proxy[multidict._multidict]" time="0.025"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_mutable_multidict.py:97: No extensions available</skipped></testcase><testcase classname="tests.test_mutable_multidict.TestMutableMultiDict" name="test_clear[multidict._multidict]" time="0.027"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_mutable_multidict.py:106: No extensions available</skipped></testcase><testcase classname="tests.test_mutable_multidict.TestMutableMultiDict" name="test_del[multidict._multidict]" time="0.028"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_mutable_multidict.py:113: No extensions available</skipped></testcase><testcase classname="tests.test_mutable_multidict.TestMutableMultiDict" name="test_set_default[multidict._multidict]" time="0.049"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_mutable_multidict.py:124: No extensions available</skipped></testcase><testcase classname="tests.test_mutable_multidict.TestMutableMultiDict" name="test_popitem[multidict._multidict]" time="0.028"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_mutable_multidict.py:131: No extensions available</skipped></testcase><testcase classname="tests.test_mutable_multidict.TestMutableMultiDict" name="test_popitem_empty_multidict[multidict._multidict]" time="0.025"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_mutable_multidict.py:139: No extensions available</skipped></testcase><testcase classname="tests.test_mutable_multidict.TestMutableMultiDict" name="test_pop[multidict._multidict]" time="0.025"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_mutable_multidict.py:145: No extensions available</skipped></testcase><testcase classname="tests.test_mutable_multidict.TestMutableMultiDict" name="test_pop2[multidict._multidict]" time="0.023"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_mutable_multidict.py:153: No extensions available</skipped></testcase><testcase classname="tests.test_mutable_multidict.TestMutableMultiDict" name="test_pop_default[multidict._multidict]" time="0.025"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_mutable_multidict.py:162: No extensions available</skipped></testcase><testcase classname="tests.test_mutable_multidict.TestMutableMultiDict" name="test_pop_raises[multidict._multidict]" time="0.027"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_mutable_multidict.py:168: No extensions available</skipped></testcase><testcase classname="tests.test_mutable_multidict.TestMutableMultiDict" name="test_replacement_order[multidict._multidict]" time="0.029"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_mutable_multidict.py:176: No extensions available</skipped></testcase><testcase classname="tests.test_mutable_multidict.TestMutableMultiDict" name="test_nonstr_key[multidict._multidict]" time="0.029"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_mutable_multidict.py:189: No extensions available</skipped></testcase><testcase classname="tests.test_mutable_multidict.TestMutableMultiDict" name="test_istr_key[multidict._multidict]" time="0.032"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_mutable_multidict.py:194: No extensions available</skipped></testcase><testcase classname="tests.test_mutable_multidict.TestMutableMultiDict" name="test_str_derived_key[multidict._multidict]" time="0.024"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_mutable_multidict.py:199: No extensions available</skipped></testcase><testcase classname="tests.test_mutable_multidict.TestMutableMultiDict" name="test_istr_key_add[multidict._multidict]" time="0.027"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_mutable_multidict.py:207: No extensions available</skipped></testcase><testcase classname="tests.test_mutable_multidict.TestMutableMultiDict" name="test_str_derived_key_add[multidict._multidict]" time="0.025"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_mutable_multidict.py:212: No extensions available</skipped></testcase><testcase classname="tests.test_mutable_multidict.TestMutableMultiDict" name="test_popall[multidict._multidict]" time="0.028"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_mutable_multidict.py:220: No extensions available</skipped></testcase><testcase classname="tests.test_mutable_multidict.TestMutableMultiDict" name="test_popall_default[multidict._multidict]" time="0.028"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_mutable_multidict.py:229: No extensions available</skipped></testcase><testcase classname="tests.test_mutable_multidict.TestMutableMultiDict" name="test_popall_key_error[multidict._multidict]" time="0.029"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_mutable_multidict.py:233: No extensions available</skipped></testcase><testcase classname="tests.test_mutable_multidict.TestMutableMultiDict" name="test_large_multidict_resizing[multidict._multidict]" time="0.026"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_mutable_multidict.py:238: No extensions available</skipped></testcase><testcase classname="tests.test_mutable_multidict.TestCIMutableMultiDict" name="test_getall[multidict._multidict]" time="0.032"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_mutable_multidict.py:263: No extensions available</skipped></testcase><testcase classname="tests.test_mutable_multidict.TestCIMutableMultiDict" name="test_ctor[multidict._multidict]" time="0.033"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_mutable_multidict.py:274: No extensions available</skipped></testcase><testcase classname="tests.test_mutable_multidict.TestCIMutableMultiDict" name="test_setitem[multidict._multidict]" time="0.030"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_mutable_multidict.py:279: No extensions available</skipped></testcase><testcase classname="tests.test_mutable_multidict.TestCIMutableMultiDict" name="test_delitem[multidict._multidict]" time="0.033"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_mutable_multidict.py:285: No extensions available</skipped></testcase><testcase classname="tests.test_mutable_multidict.TestCIMutableMultiDict" name="test_copy[multidict._multidict]" time="0.035"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_mutable_multidict.py:292: No extensions available</skipped></testcase><testcase classname="tests.test_mutable_multidict.TestCIMutableMultiDict" name="test__repr__[multidict._multidict]" time="0.031"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_mutable_multidict.py:300: No extensions available</skipped></testcase><testcase classname="tests.test_mutable_multidict.TestCIMutableMultiDict" name="test_add[multidict._multidict]" time="0.029"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_mutable_multidict.py:309: No extensions available</skipped></testcase><testcase classname="tests.test_mutable_multidict.TestCIMutableMultiDict" name="test_extend[multidict._multidict]" time="0.031"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_mutable_multidict.py:338: No extensions available</skipped></testcase><testcase classname="tests.test_mutable_multidict.TestCIMutableMultiDict" name="test_extend_from_proxy[multidict._multidict]" time="0.029"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_mutable_multidict.py:368: No extensions available</skipped></testcase><testcase classname="tests.test_mutable_multidict.TestCIMutableMultiDict" name="test_clear[multidict._multidict]" time="0.029"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_mutable_multidict.py:377: No extensions available</skipped></testcase><testcase classname="tests.test_mutable_multidict.TestCIMutableMultiDict" name="test_del[multidict._multidict]" time="0.027"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_mutable_multidict.py:384: No extensions available</skipped></testcase><testcase classname="tests.test_mutable_multidict.TestCIMutableMultiDict" name="test_set_default[multidict._multidict]" time="0.028"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_mutable_multidict.py:394: No extensions available</skipped></testcase><testcase classname="tests.test_mutable_multidict.TestCIMutableMultiDict" name="test_popitem[multidict._multidict]" time="0.026"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_mutable_multidict.py:402: No extensions available</skipped></testcase><testcase classname="tests.test_mutable_multidict.TestCIMutableMultiDict" name="test_popitem_empty_multidict[multidict._multidict]" time="0.033"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_mutable_multidict.py:412: No extensions available</skipped></testcase><testcase classname="tests.test_mutable_multidict.TestCIMutableMultiDict" name="test_pop[multidict._multidict]" time="0.027"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_mutable_multidict.py:418: No extensions available</skipped></testcase><testcase classname="tests.test_mutable_multidict.TestCIMutableMultiDict" name="test_pop_lowercase[multidict._multidict]" time="0.027"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_mutable_multidict.py:426: No extensions available</skipped></testcase><testcase classname="tests.test_mutable_multidict.TestCIMutableMultiDict" name="test_pop_default[multidict._multidict]" time="0.026"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_mutable_multidict.py:434: No extensions available</skipped></testcase><testcase classname="tests.test_mutable_multidict.TestCIMutableMultiDict" name="test_pop_raises[multidict._multidict]" time="0.025"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_mutable_multidict.py:440: No extensions available</skipped></testcase><testcase classname="tests.test_mutable_multidict.TestCIMutableMultiDict" name="test_extend_with_istr[multidict._multidict]" time="0.045"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_mutable_multidict.py:448: No extensions available</skipped></testcase><testcase classname="tests.test_mutable_multidict.TestCIMutableMultiDict" name="test_copy_istr[multidict._multidict]" time="0.028"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_mutable_multidict.py:455: No extensions available</skipped></testcase><testcase classname="tests.test_mutable_multidict.TestCIMutableMultiDict" name="test_eq[multidict._multidict]" time="0.026"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_mutable_multidict.py:460: No extensions available</skipped></testcase><testcase classname="tests.test_mutable_multidict.TestCIMutableMultiDict" name="test_sizeof[multidict._multidict]" time="0.042"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_mutable_multidict.py:470: No extensions available</skipped></testcase><testcase classname="tests.test_mutable_multidict.TestCIMutableMultiDict" name="test_min_sizeof[multidict._multidict]" time="0.028"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_mutable_multidict.py:484: No extensions available</skipped></testcase><testcase classname="tests.test_mutable_multidict.TestCIMutableMultiDict" name="test_issue_620_items[multidict._multidict]" time="0.030"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_mutable_multidict.py:488: No extensions available</skipped></testcase><testcase classname="tests.test_mutable_multidict.TestCIMutableMultiDict" name="test_issue_620_keys[multidict._multidict]" time="0.040"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_mutable_multidict.py:496: No extensions available</skipped></testcase><testcase classname="tests.test_mutable_multidict.TestCIMutableMultiDict" name="test_issue_620_values[multidict._multidict]" time="0.027"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_mutable_multidict.py:504: No extensions available</skipped></testcase><testcase classname="tests.test_types" name="test_proxies[multidict._multidict]" time="0.027"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_types.py:7: No extensions available</skipped></testcase><testcase classname="tests.test_types" name="test_dicts[multidict._multidict]" time="0.026"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_types.py:11: No extensions available</skipped></testcase><testcase classname="tests.test_types" name="test_proxy_not_inherited_from_dict[multidict._multidict]" time="0.025"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_types.py:15: No extensions available</skipped></testcase><testcase classname="tests.test_types" name="test_dict_not_inherited_from_proxy[multidict._multidict]" time="0.024"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_types.py:19: No extensions available</skipped></testcase><testcase classname="tests.test_types" name="test_multidict_proxy_copy_type[multidict._multidict]" time="0.025"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_types.py:23: No extensions available</skipped></testcase><testcase classname="tests.test_types" name="test_cimultidict_proxy_copy_type[multidict._multidict]" time="0.032"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_types.py:29: No extensions available</skipped></testcase><testcase classname="tests.test_types" name="test_create_multidict_proxy_from_nonmultidict[multidict._multidict]" time="0.044"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_types.py:35: No extensions available</skipped></testcase><testcase classname="tests.test_types" name="test_create_multidict_proxy_from_cimultidict[multidict._multidict]" time="0.026"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_types.py:40: No extensions available</skipped></testcase><testcase classname="tests.test_types" name="test_create_multidict_proxy_from_multidict_proxy_from_mdict[multidict._multidict]" time="0.027"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_types.py:46: No extensions available</skipped></testcase><testcase classname="tests.test_types" name="test_create_cimultidict_proxy_from_cimultidict_proxy_from_ci[multidict._multidict]" time="0.025"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_types.py:54: No extensions available</skipped></testcase><testcase classname="tests.test_types" name="test_create_cimultidict_proxy_from_nonmultidict[multidict._multidict]" time="0.026"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_types.py:62: No extensions available</skipped></testcase><testcase classname="tests.test_types" name="test_create_ci_multidict_proxy_from_multidict[multidict._multidict]" time="0.044"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_types.py:73: No extensions available</skipped></testcase><testcase classname="tests.test_types" name="test_generic_exists[multidict._multidict]" time="0.086"><skipped type="pytest.skip" message="Python 3.9 uses GenericAlias which is different">/workdir/multidict-6.0.3/tests/test_types.py:88: Python 3.9 uses GenericAlias which is different</skipped></testcase><testcase classname="tests.test_types" name="test_generic_alias[multidict._multidict]" time="0.030"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_types.py:98: No extensions available</skipped></testcase><testcase classname="tests.test_update" name="test_update_md[multidict._multidict]" time="0.025"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_update.py:93: No extensions available</skipped></testcase><testcase classname="tests.test_update" name="test_update_istr_ci_md[multidict._multidict]" time="0.027"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_update.py:104: No extensions available</skipped></testcase><testcase classname="tests.test_update" name="test_update_ci_md[multidict._multidict]" time="0.038"><skipped type="pytest.skip" message="No extensions available">/workdir/multidict-6.0.3/tests/test_update.py:115: No extensions available</skipped></testcase><testcase classname="tests.test_multidict" name="test_exposed_names[multidict._multidict_py-MultiDict]" time="0.075" /><testcase classname="tests.test_multidict" name="test_exposed_names[multidict._multidict_py-CIMultiDict]" time="0.069" /><testcase classname="tests.test_multidict" name="test__iter__types[multidict._multidict_py-MultiDict-str]" time="0.089" /><testcase classname="tests.test_multidict" name="test__iter__types[multidict._multidict_py-cls1-str]" time="0.076" /><testcase classname="tests.test_multidict" name="test_proxy_copy[multidict._multidict_py-classes0]" time="0.078" /><testcase classname="tests.test_multidict" name="test_proxy_copy[multidict._multidict_py-classes1]" time="0.079" /><testcase classname="tests.test_multidict" name="test_subclassing[multidict._multidict_py-MultiDict]" time="0.066" /><testcase classname="tests.test_multidict" name="test_subclassing[multidict._multidict_py-CIMultiDict]" time="0.084" /><testcase classname="tests.test_multidict" name="test_subclassing[multidict._multidict_py-MultiDictProxy]" time="0.094" /><testcase classname="tests.test_multidict" name="test_subclassing[multidict._multidict_py-CIMultiDictProxy]" time="0.056" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_instantiate__empty[multidict._multidict_py-MultiDict]" time="0.108" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_instantiate__empty[multidict._multidict_py-cls1]" time="0.085" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_instantiate__from_arg0[multidict._multidict_py-MultiDict-arg00]" time="0.095" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_instantiate__from_arg0[multidict._multidict_py-MultiDict-arg01]" time="0.087" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_instantiate__from_arg0[multidict._multidict_py-cls1-arg00]" time="0.082" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_instantiate__from_arg0[multidict._multidict_py-cls1-arg01]" time="0.096" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_instantiate__with_kwargs[multidict._multidict_py-MultiDict]" time="0.082" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_instantiate__with_kwargs[multidict._multidict_py-cls1]" time="0.079" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_instantiate__from_generator[multidict._multidict_py-MultiDict]" time="0.086" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_instantiate__from_generator[multidict._multidict_py-cls1]" time="0.088" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_instantiate__from_list_of_lists[multidict._multidict_py-MultiDict]" time="0.066" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_instantiate__from_list_of_lists[multidict._multidict_py-cls1]" time="0.074" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_instantiate__from_list_of_custom_pairs[multidict._multidict_py-MultiDict]" time="0.066" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_instantiate__from_list_of_custom_pairs[multidict._multidict_py-cls1]" time="0.072" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_getone[multidict._multidict_py-MultiDict]" time="0.084" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_getone[multidict._multidict_py-cls1]" time="0.084" /><testcase classname="tests.test_multidict.TestMultiDict" name="test__iter__[multidict._multidict_py-MultiDict]" time="0.079" /><testcase classname="tests.test_multidict.TestMultiDict" name="test__iter__[multidict._multidict_py-cls1]" time="0.070" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_keys__contains[multidict._multidict_py-MultiDict]" time="0.094" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_keys__contains[multidict._multidict_py-cls1]" time="0.114" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_values__contains[multidict._multidict_py-MultiDict]" time="0.082" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_values__contains[multidict._multidict_py-cls1]" time="0.073" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_items__contains[multidict._multidict_py-MultiDict]" time="0.077" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_items__contains[multidict._multidict_py-cls1]" time="0.085" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_cannot_create_from_unaccepted[multidict._multidict_py-MultiDict]" time="0.074" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_cannot_create_from_unaccepted[multidict._multidict_py-cls1]" time="0.071" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_keys_is_set_less[multidict._multidict_py-MultiDict]" time="0.077" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_keys_is_set_less[multidict._multidict_py-cls1]" time="0.079" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_keys_is_set_less_equal[multidict._multidict_py-MultiDict]" time="0.077" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_keys_is_set_less_equal[multidict._multidict_py-cls1]" time="0.075" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_keys_is_set_equal[multidict._multidict_py-MultiDict]" time="0.079" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_keys_is_set_equal[multidict._multidict_py-cls1]" time="0.075" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_keys_is_set_greater[multidict._multidict_py-MultiDict]" time="0.072" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_keys_is_set_greater[multidict._multidict_py-cls1]" time="0.080" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_keys_is_set_greater_equal[multidict._multidict_py-MultiDict]" time="0.086" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_keys_is_set_greater_equal[multidict._multidict_py-cls1]" time="0.072" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_keys_is_set_not_equal[multidict._multidict_py-MultiDict]" time="0.075" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_keys_is_set_not_equal[multidict._multidict_py-cls1]" time="0.070" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_eq[multidict._multidict_py-MultiDict]" time="0.071" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_eq[multidict._multidict_py-cls1]" time="0.082" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_eq2[multidict._multidict_py-MultiDict]" time="0.069" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_eq2[multidict._multidict_py-cls1]" time="0.080" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_eq3[multidict._multidict_py-MultiDict]" time="0.082" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_eq3[multidict._multidict_py-cls1]" time="0.067" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_eq_other_mapping_contains_more_keys[multidict._multidict_py-MultiDict]" time="0.072" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_eq_other_mapping_contains_more_keys[multidict._multidict_py-cls1]" time="0.088" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_eq_bad_mapping_len[multidict._multidict_py-MultiDict]" time="0.096" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_eq_bad_mapping_len[multidict._multidict_py-cls1]" time="0.089" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_eq_bad_mapping_getitem[multidict._multidict_py-MultiDict]" time="0.101" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_eq_bad_mapping_getitem[multidict._multidict_py-cls1]" time="0.087" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_ne[multidict._multidict_py-MultiDict]" time="0.123" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_ne[multidict._multidict_py-cls1]" time="0.081" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_and[multidict._multidict_py-MultiDict]" time="0.083" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_and[multidict._multidict_py-cls1]" time="0.075" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_and2[multidict._multidict_py-MultiDict]" time="0.069" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_and2[multidict._multidict_py-cls1]" time="0.063" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_or[multidict._multidict_py-MultiDict]" time="0.077" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_or[multidict._multidict_py-cls1]" time="0.073" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_or2[multidict._multidict_py-MultiDict]" time="0.064" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_or2[multidict._multidict_py-cls1]" time="0.070" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_sub[multidict._multidict_py-MultiDict]" time="0.077" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_sub[multidict._multidict_py-cls1]" time="0.069" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_sub2[multidict._multidict_py-MultiDict]" time="0.071" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_sub2[multidict._multidict_py-cls1]" time="0.083" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_xor[multidict._multidict_py-MultiDict]" time="0.068" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_xor[multidict._multidict_py-cls1]" time="0.077" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_xor2[multidict._multidict_py-MultiDict]" time="0.077" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_xor2[multidict._multidict_py-cls1]" time="0.085" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_isdisjoint[multidict._multidict_py-MultiDict-_set0-True]" time="0.106" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_isdisjoint[multidict._multidict_py-MultiDict-_set1-False]" time="0.095" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_isdisjoint[multidict._multidict_py-cls1-_set0-True]" time="0.089" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_isdisjoint[multidict._multidict_py-cls1-_set1-False]" time="0.092" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_repr_issue_410[multidict._multidict_py-MultiDict]" time="0.070" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_repr_issue_410[multidict._multidict_py-cls1]" time="0.064" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_op_issue_410[multidict._multidict_py-MultiDict-other0-or_]" time="0.088" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_op_issue_410[multidict._multidict_py-MultiDict-other0-and_]" time="0.094" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_op_issue_410[multidict._multidict_py-MultiDict-other0-sub]" time="0.085" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_op_issue_410[multidict._multidict_py-MultiDict-other0-xor]" time="0.095" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_op_issue_410[multidict._multidict_py-cls1-other0-or_]" time="0.093" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_op_issue_410[multidict._multidict_py-cls1-other0-and_]" time="0.089" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_op_issue_410[multidict._multidict_py-cls1-other0-sub]" time="0.090" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_op_issue_410[multidict._multidict_py-cls1-other0-xor]" time="0.091" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_weakref[multidict._multidict_py-MultiDict]" time="0.311" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_weakref[multidict._multidict_py-cls1]" time="0.349" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_iter_length_hint_keys[multidict._multidict_py-MultiDict]" time="0.065" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_iter_length_hint_keys[multidict._multidict_py-cls1]" time="0.126" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_iter_length_hint_items[multidict._multidict_py-MultiDict]" time="0.068" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_iter_length_hint_items[multidict._multidict_py-cls1]" time="0.071" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_iter_length_hint_values[multidict._multidict_py-MultiDict]" time="0.074" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_iter_length_hint_values[multidict._multidict_py-cls1]" time="0.106" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_ctor_list_arg_and_kwds[multidict._multidict_py-MultiDict]" time="0.073" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_ctor_list_arg_and_kwds[multidict._multidict_py-cls1]" time="0.073" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_ctor_tuple_arg_and_kwds[multidict._multidict_py-MultiDict]" time="0.077" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_ctor_tuple_arg_and_kwds[multidict._multidict_py-cls1]" time="0.079" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_ctor_deque_arg_and_kwds[multidict._multidict_py-MultiDict]" time="0.111" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_ctor_deque_arg_and_kwds[multidict._multidict_py-cls1]" time="0.095" /><testcase classname="tests.test_multidict.TestMultiDict" name="test__repr__[multidict._multidict_py-MultiDict]" time="0.085" /><testcase classname="tests.test_multidict.TestMultiDict" name="test__repr__[multidict._multidict_py-cls1]" time="0.078" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_getall[multidict._multidict_py-MultiDict]" time="0.071" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_getall[multidict._multidict_py-cls1]" time="0.096" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_preserve_stable_ordering[multidict._multidict_py-MultiDict]" time="0.104" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_preserve_stable_ordering[multidict._multidict_py-cls1]" time="0.080" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_get[multidict._multidict_py-MultiDict]" time="0.072" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_get[multidict._multidict_py-cls1]" time="0.071" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_items__repr__[multidict._multidict_py-MultiDict]" time="0.074" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_items__repr__[multidict._multidict_py-cls1]" time="0.070" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_keys__repr__[multidict._multidict_py-MultiDict]" time="0.075" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_keys__repr__[multidict._multidict_py-cls1]" time="0.077" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_values__repr__[multidict._multidict_py-MultiDict]" time="0.075" /><testcase classname="tests.test_multidict.TestMultiDict" name="test_values__repr__[multidict._multidict_py-cls1]" time="0.073" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_instantiate__empty[multidict._multidict_py-CIMultiDict]" time="0.090" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_instantiate__empty[multidict._multidict_py-cls1]" time="0.080" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_instantiate__from_arg0[multidict._multidict_py-CIMultiDict-arg00]" time="0.097" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_instantiate__from_arg0[multidict._multidict_py-CIMultiDict-arg01]" time="0.086" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_instantiate__from_arg0[multidict._multidict_py-cls1-arg00]" time="0.080" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_instantiate__from_arg0[multidict._multidict_py-cls1-arg01]" time="0.096" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_instantiate__with_kwargs[multidict._multidict_py-CIMultiDict]" time="0.081" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_instantiate__with_kwargs[multidict._multidict_py-cls1]" time="0.084" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_instantiate__from_generator[multidict._multidict_py-CIMultiDict]" time="0.075" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_instantiate__from_generator[multidict._multidict_py-cls1]" time="0.101" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_instantiate__from_list_of_lists[multidict._multidict_py-CIMultiDict]" time="0.117" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_instantiate__from_list_of_lists[multidict._multidict_py-cls1]" time="0.068" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_instantiate__from_list_of_custom_pairs[multidict._multidict_py-CIMultiDict]" time="0.082" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_instantiate__from_list_of_custom_pairs[multidict._multidict_py-cls1]" time="0.073" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_getone[multidict._multidict_py-CIMultiDict]" time="0.087" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_getone[multidict._multidict_py-cls1]" time="0.073" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test__iter__[multidict._multidict_py-CIMultiDict]" time="0.080" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test__iter__[multidict._multidict_py-cls1]" time="0.071" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_keys__contains[multidict._multidict_py-CIMultiDict]" time="0.081" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_keys__contains[multidict._multidict_py-cls1]" time="0.066" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_values__contains[multidict._multidict_py-CIMultiDict]" time="0.081" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_values__contains[multidict._multidict_py-cls1]" time="0.078" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_items__contains[multidict._multidict_py-CIMultiDict]" time="0.077" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_items__contains[multidict._multidict_py-cls1]" time="0.077" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_cannot_create_from_unaccepted[multidict._multidict_py-CIMultiDict]" time="0.072" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_cannot_create_from_unaccepted[multidict._multidict_py-cls1]" time="0.076" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_keys_is_set_less[multidict._multidict_py-CIMultiDict]" time="0.074" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_keys_is_set_less[multidict._multidict_py-cls1]" time="0.086" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_keys_is_set_less_equal[multidict._multidict_py-CIMultiDict]" time="0.070" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_keys_is_set_less_equal[multidict._multidict_py-cls1]" time="0.068" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_keys_is_set_equal[multidict._multidict_py-CIMultiDict]" time="0.074" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_keys_is_set_equal[multidict._multidict_py-cls1]" time="0.076" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_keys_is_set_greater[multidict._multidict_py-CIMultiDict]" time="0.068" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_keys_is_set_greater[multidict._multidict_py-cls1]" time="0.067" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_keys_is_set_greater_equal[multidict._multidict_py-CIMultiDict]" time="0.071" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_keys_is_set_greater_equal[multidict._multidict_py-cls1]" time="0.066" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_keys_is_set_not_equal[multidict._multidict_py-CIMultiDict]" time="0.064" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_keys_is_set_not_equal[multidict._multidict_py-cls1]" time="0.067" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_eq[multidict._multidict_py-CIMultiDict]" time="0.066" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_eq[multidict._multidict_py-cls1]" time="0.065" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_eq2[multidict._multidict_py-CIMultiDict]" time="0.069" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_eq2[multidict._multidict_py-cls1]" time="0.074" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_eq3[multidict._multidict_py-CIMultiDict]" time="0.071" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_eq3[multidict._multidict_py-cls1]" time="0.061" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_eq_other_mapping_contains_more_keys[multidict._multidict_py-CIMultiDict]" time="0.080" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_eq_other_mapping_contains_more_keys[multidict._multidict_py-cls1]" time="0.069" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_eq_bad_mapping_len[multidict._multidict_py-CIMultiDict]" time="0.069" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_eq_bad_mapping_len[multidict._multidict_py-cls1]" time="0.084" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_eq_bad_mapping_getitem[multidict._multidict_py-CIMultiDict]" time="0.133" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_eq_bad_mapping_getitem[multidict._multidict_py-cls1]" time="0.084" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_ne[multidict._multidict_py-CIMultiDict]" time="0.070" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_ne[multidict._multidict_py-cls1]" time="0.068" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_and[multidict._multidict_py-CIMultiDict]" time="0.080" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_and[multidict._multidict_py-cls1]" time="0.073" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_and2[multidict._multidict_py-CIMultiDict]" time="0.080" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_and2[multidict._multidict_py-cls1]" time="0.078" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_or[multidict._multidict_py-CIMultiDict]" time="0.070" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_or[multidict._multidict_py-cls1]" time="0.070" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_or2[multidict._multidict_py-CIMultiDict]" time="0.072" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_or2[multidict._multidict_py-cls1]" time="0.069" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_sub[multidict._multidict_py-CIMultiDict]" time="0.075" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_sub[multidict._multidict_py-cls1]" time="0.081" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_sub2[multidict._multidict_py-CIMultiDict]" time="0.068" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_sub2[multidict._multidict_py-cls1]" time="0.076" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_xor[multidict._multidict_py-CIMultiDict]" time="0.079" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_xor[multidict._multidict_py-cls1]" time="0.080" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_xor2[multidict._multidict_py-CIMultiDict]" time="0.077" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_xor2[multidict._multidict_py-cls1]" time="0.080" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_isdisjoint[multidict._multidict_py-CIMultiDict-_set0-True]" time="0.089" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_isdisjoint[multidict._multidict_py-CIMultiDict-_set1-False]" time="0.097" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_isdisjoint[multidict._multidict_py-cls1-_set0-True]" time="0.085" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_isdisjoint[multidict._multidict_py-cls1-_set1-False]" time="0.082" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_repr_issue_410[multidict._multidict_py-CIMultiDict]" time="0.087" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_repr_issue_410[multidict._multidict_py-cls1]" time="0.067" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_op_issue_410[multidict._multidict_py-CIMultiDict-other0-or_]" time="0.096" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_op_issue_410[multidict._multidict_py-CIMultiDict-other0-and_]" time="0.100" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_op_issue_410[multidict._multidict_py-CIMultiDict-other0-sub]" time="0.084" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_op_issue_410[multidict._multidict_py-CIMultiDict-other0-xor]" time="0.097" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_op_issue_410[multidict._multidict_py-cls1-other0-or_]" time="0.104" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_op_issue_410[multidict._multidict_py-cls1-other0-and_]" time="0.094" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_op_issue_410[multidict._multidict_py-cls1-other0-sub]" time="0.104" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_op_issue_410[multidict._multidict_py-cls1-other0-xor]" time="0.096" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_weakref[multidict._multidict_py-CIMultiDict]" time="0.392" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_weakref[multidict._multidict_py-cls1]" time="0.340" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_iter_length_hint_keys[multidict._multidict_py-CIMultiDict]" time="0.072" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_iter_length_hint_keys[multidict._multidict_py-cls1]" time="0.086" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_iter_length_hint_items[multidict._multidict_py-CIMultiDict]" time="0.066" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_iter_length_hint_items[multidict._multidict_py-cls1]" time="0.072" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_iter_length_hint_values[multidict._multidict_py-CIMultiDict]" time="0.072" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_iter_length_hint_values[multidict._multidict_py-cls1]" time="0.067" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_ctor_list_arg_and_kwds[multidict._multidict_py-CIMultiDict]" time="0.066" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_ctor_list_arg_and_kwds[multidict._multidict_py-cls1]" time="0.087" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_ctor_tuple_arg_and_kwds[multidict._multidict_py-CIMultiDict]" time="0.073" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_ctor_tuple_arg_and_kwds[multidict._multidict_py-cls1]" time="0.070" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_ctor_deque_arg_and_kwds[multidict._multidict_py-CIMultiDict]" time="0.075" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_ctor_deque_arg_and_kwds[multidict._multidict_py-cls1]" time="0.073" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_basics[multidict._multidict_py-CIMultiDict]" time="0.076" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_basics[multidict._multidict_py-cls1]" time="0.082" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_getall[multidict._multidict_py-CIMultiDict]" time="0.084" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_getall[multidict._multidict_py-cls1]" time="0.078" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_get[multidict._multidict_py-CIMultiDict]" time="0.091" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_get[multidict._multidict_py-cls1]" time="0.068" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test__repr__[multidict._multidict_py-CIMultiDict]" time="0.071" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test__repr__[multidict._multidict_py-cls1]" time="0.070" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_items__repr__[multidict._multidict_py-CIMultiDict]" time="0.075" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_items__repr__[multidict._multidict_py-cls1]" time="0.069" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_keys__repr__[multidict._multidict_py-CIMultiDict]" time="0.070" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_keys__repr__[multidict._multidict_py-cls1]" time="0.066" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_values__repr__[multidict._multidict_py-CIMultiDict]" time="0.061" /><testcase classname="tests.test_multidict.TestCIMultiDict" name="test_values__repr__[multidict._multidict_py-cls1]" time="0.072" /><testcase classname="tests.test_mutable_multidict.TestMutableMultiDict" name="test_copy[multidict._multidict_py]" time="0.083" /><testcase classname="tests.test_mutable_multidict.TestMutableMultiDict" name="test__repr__[multidict._multidict_py]" time="0.070" /><testcase classname="tests.test_mutable_multidict.TestMutableMultiDict" name="test_getall[multidict._multidict_py]" time="0.065" /><testcase classname="tests.test_mutable_multidict.TestMutableMultiDict" name="test_add[multidict._multidict_py]" time="0.082" /><testcase classname="tests.test_mutable_multidict.TestMutableMultiDict" name="test_extend[multidict._multidict_py]" time="0.092" /><testcase classname="tests.test_mutable_multidict.TestMutableMultiDict" name="test_extend_from_proxy[multidict._multidict_py]" time="0.093" /><testcase classname="tests.test_mutable_multidict.TestMutableMultiDict" name="test_clear[multidict._multidict_py]" time="0.095" /><testcase classname="tests.test_mutable_multidict.TestMutableMultiDict" name="test_del[multidict._multidict_py]" time="0.083" /><testcase classname="tests.test_mutable_multidict.TestMutableMultiDict" name="test_set_default[multidict._multidict_py]" time="0.079" /><testcase classname="tests.test_mutable_multidict.TestMutableMultiDict" name="test_popitem[multidict._multidict_py]" time="0.070" /><testcase classname="tests.test_mutable_multidict.TestMutableMultiDict" name="test_popitem_empty_multidict[multidict._multidict_py]" time="0.082" /><testcase classname="tests.test_mutable_multidict.TestMutableMultiDict" name="test_pop[multidict._multidict_py]" time="0.065" /><testcase classname="tests.test_mutable_multidict.TestMutableMultiDict" name="test_pop2[multidict._multidict_py]" time="0.082" /><testcase classname="tests.test_mutable_multidict.TestMutableMultiDict" name="test_pop_default[multidict._multidict_py]" time="0.101" /><testcase classname="tests.test_mutable_multidict.TestMutableMultiDict" name="test_pop_raises[multidict._multidict_py]" time="0.114" /><testcase classname="tests.test_mutable_multidict.TestMutableMultiDict" name="test_replacement_order[multidict._multidict_py]" time="0.101" /><testcase classname="tests.test_mutable_multidict.TestMutableMultiDict" name="test_nonstr_key[multidict._multidict_py]" time="0.126" /><testcase classname="tests.test_mutable_multidict.TestMutableMultiDict" name="test_istr_key[multidict._multidict_py]" time="0.132" /><testcase classname="tests.test_mutable_multidict.TestMutableMultiDict" name="test_str_derived_key[multidict._multidict_py]" time="0.110" /><testcase classname="tests.test_mutable_multidict.TestMutableMultiDict" name="test_istr_key_add[multidict._multidict_py]" time="0.079" /><testcase classname="tests.test_mutable_multidict.TestMutableMultiDict" name="test_str_derived_key_add[multidict._multidict_py]" time="0.071" /><testcase classname="tests.test_mutable_multidict.TestMutableMultiDict" name="test_popall[multidict._multidict_py]" time="0.123" /><testcase classname="tests.test_mutable_multidict.TestMutableMultiDict" name="test_popall_default[multidict._multidict_py]" time="0.097" /><testcase classname="tests.test_mutable_multidict.TestMutableMultiDict" name="test_popall_key_error[multidict._multidict_py]" time="0.115" /><testcase classname="tests.test_mutable_multidict.TestMutableMultiDict" name="test_large_multidict_resizing[multidict._multidict_py]" time="88.270" /><testcase classname="tests.test_mutable_multidict.TestCIMutableMultiDict" name="test_getall[multidict._multidict_py]" time="0.075" /><testcase classname="tests.test_mutable_multidict.TestCIMutableMultiDict" name="test_ctor[multidict._multidict_py]" time="0.079" /><testcase classname="tests.test_mutable_multidict.TestCIMutableMultiDict" name="test_setitem[multidict._multidict_py]" time="0.074" /><testcase classname="tests.test_mutable_multidict.TestCIMutableMultiDict" name="test_delitem[multidict._multidict_py]" time="0.073" /><testcase classname="tests.test_mutable_multidict.TestCIMutableMultiDict" name="test_copy[multidict._multidict_py]" time="0.094" /><testcase classname="tests.test_mutable_multidict.TestCIMutableMultiDict" name="test__repr__[multidict._multidict_py]" time="0.111" /><testcase classname="tests.test_mutable_multidict.TestCIMutableMultiDict" name="test_add[multidict._multidict_py]" time="0.122" /><testcase classname="tests.test_mutable_multidict.TestCIMutableMultiDict" name="test_extend[multidict._multidict_py]" time="0.091" /><testcase classname="tests.test_mutable_multidict.TestCIMutableMultiDict" name="test_extend_from_proxy[multidict._multidict_py]" time="0.086" /><testcase classname="tests.test_mutable_multidict.TestCIMutableMultiDict" name="test_clear[multidict._multidict_py]" time="0.080" /><testcase classname="tests.test_mutable_multidict.TestCIMutableMultiDict" name="test_del[multidict._multidict_py]" time="0.078" /><testcase classname="tests.test_mutable_multidict.TestCIMutableMultiDict" name="test_set_default[multidict._multidict_py]" time="0.073" /><testcase classname="tests.test_mutable_multidict.TestCIMutableMultiDict" name="test_popitem[multidict._multidict_py]" time="0.077" /><testcase classname="tests.test_mutable_multidict.TestCIMutableMultiDict" name="test_popitem_empty_multidict[multidict._multidict_py]" time="0.069" /><testcase classname="tests.test_mutable_multidict.TestCIMutableMultiDict" name="test_pop[multidict._multidict_py]" time="0.082" /><testcase classname="tests.test_mutable_multidict.TestCIMutableMultiDict" name="test_pop_lowercase[multidict._multidict_py]" time="0.071" /><testcase classname="tests.test_mutable_multidict.TestCIMutableMultiDict" name="test_pop_default[multidict._multidict_py]" time="0.067" /><testcase classname="tests.test_mutable_multidict.TestCIMutableMultiDict" name="test_pop_raises[multidict._multidict_py]" time="0.069" /><testcase classname="tests.test_mutable_multidict.TestCIMutableMultiDict" name="test_extend_with_istr[multidict._multidict_py]" time="0.098" /><testcase classname="tests.test_mutable_multidict.TestCIMutableMultiDict" name="test_copy_istr[multidict._multidict_py]" time="0.122" /><testcase classname="tests.test_mutable_multidict.TestCIMutableMultiDict" name="test_eq[multidict._multidict_py]" time="0.074" /><testcase classname="tests.test_mutable_multidict.TestCIMutableMultiDict" name="test_sizeof[multidict._multidict_py]" time="22.835"><failure message="AssertionError">Traceback (most recent call last):
  File "/workdir/multidict-6.0.3/tests/test_mutable_multidict.py", line 77, in test_sizeof
    assert ("key", "one") in itms
  File "/workdir/multidict-6.0.3/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 195, in pytest_pyfunc_call
    result = testfunction(**testargs)
  File "/workdir/multidict-6.0.3/tests/test_mutable_multidict.py", line 478, in test_sizeof
    assert s2 &gt; s1
AssertionError</failure></testcase><testcase classname="tests.test_mutable_multidict.TestCIMutableMultiDict" name="test_min_sizeof[multidict._multidict_py]" time="0.064" /><testcase classname="tests.test_mutable_multidict.TestCIMutableMultiDict" name="test_issue_620_items[multidict._multidict_py]" time="0.067" /><testcase classname="tests.test_mutable_multidict.TestCIMutableMultiDict" name="test_issue_620_keys[multidict._multidict_py]" time="0.073" /><testcase classname="tests.test_mutable_multidict.TestCIMutableMultiDict" name="test_issue_620_values[multidict._multidict_py]" time="0.071" /><testcase classname="tests.test_types" name="test_proxies[multidict._multidict_py]" time="0.050" /><testcase classname="tests.test_types" name="test_dicts[multidict._multidict_py]" time="0.052" /><testcase classname="tests.test_types" name="test_proxy_not_inherited_from_dict[multidict._multidict_py]" time="0.058" /><testcase classname="tests.test_types" name="test_dict_not_inherited_from_proxy[multidict._multidict_py]" time="0.068" /><testcase classname="tests.test_types" name="test_multidict_proxy_copy_type[multidict._multidict_py]" time="0.067" /><testcase classname="tests.test_types" name="test_cimultidict_proxy_copy_type[multidict._multidict_py]" time="0.065" /><testcase classname="tests.test_types" name="test_create_multidict_proxy_from_nonmultidict[multidict._multidict_py]" time="0.051" /><testcase classname="tests.test_types" name="test_create_multidict_proxy_from_cimultidict[multidict._multidict_py]" time="0.052" /><testcase classname="tests.test_types" name="test_create_multidict_proxy_from_multidict_proxy_from_mdict[multidict._multidict_py]" time="0.053" /><testcase classname="tests.test_types" name="test_create_cimultidict_proxy_from_cimultidict_proxy_from_ci[multidict._multidict_py]" time="0.053" /><testcase classname="tests.test_types" name="test_create_cimultidict_proxy_from_nonmultidict[multidict._multidict_py]" time="0.053" /><testcase classname="tests.test_types" name="test_create_ci_multidict_proxy_from_multidict[multidict._multidict_py]" time="0.055" /><testcase classname="tests.test_types" name="test_generic_exists[multidict._multidict_py]" time="0.025"><skipped type="pytest.skip" message="Python 3.9 uses GenericAlias which is different">/workdir/multidict-6.0.3/tests/test_types.py:88: Python 3.9 uses GenericAlias which is different</skipped></testcase><testcase classname="tests.test_types" name="test_generic_alias[multidict._multidict_py]" time="0.111" /><testcase classname="tests.test_update" name="test_update_md[multidict._multidict_py]" time="0.070" /><testcase classname="tests.test_update" name="test_update_istr_ci_md[multidict._multidict_py]" time="0.079" /><testcase classname="tests.test_update" name="test_update_ci_md[multidict._multidict_py]" time="0.066" /><testcase classname="tests.test_mypy" name="test_classes_not_abstract" time="0.044" /><testcase classname="tests.test_mypy" name="test_getitem" time="0.048" /><testcase classname="tests.test_mypy" name="test_get" time="0.052" /><testcase classname="tests.test_mypy" name="test_get_default" time="0.063" /><testcase classname="tests.test_mypy" name="test_getone" time="0.060" /><testcase classname="tests.test_mypy" name="test_getone_default" time="0.060" /><testcase classname="tests.test_mypy" name="test_getall" time="0.065" /><testcase classname="tests.test_mypy" name="test_getall_default" time="0.053" /><testcase classname="tests.test_mypy" name="test_copy" time="0.073" /><testcase classname="tests.test_mypy" name="test_iter" time="0.065" /><testcase classname="tests.test_mypy" name="test_setitem" time="0.064" /><testcase classname="tests.test_mypy" name="test_delitem" time="0.058" /><testcase classname="tests.test_mypy" name="test_additem" time="0.055" /><testcase classname="tests.test_mypy" name="test_extend_mapping" time="0.057" /><testcase classname="tests.test_mypy" name="test_update_mapping" time="0.066" /><testcase classname="tests.test_mypy" name="test_popone" time="0.060" /><testcase classname="tests.test_mypy" name="test_popall" time="0.068" /><testcase classname="tests.test_pickle" name="test_pickle[PyMultiDict-0]" time="0.107" /><testcase classname="tests.test_pickle" name="test_load_from_file[PyMultiDict-0]" time="0.086" /><testcase classname="tests.test_pickle" name="test_pickle[PyMultiDict-1]" time="0.109" /><testcase classname="tests.test_pickle" name="test_load_from_file[PyMultiDict-1]" time="0.085" /><testcase classname="tests.test_pickle" name="test_pickle[PyMultiDict-2]" time="0.155" /><testcase classname="tests.test_pickle" name="test_load_from_file[PyMultiDict-2]" time="0.077" /><testcase classname="tests.test_pickle" name="test_pickle[PyMultiDict-3]" time="0.093" /><testcase classname="tests.test_pickle" name="test_load_from_file[PyMultiDict-3]" time="0.080" /><testcase classname="tests.test_pickle" name="test_pickle[PyMultiDict-4]" time="0.104" /><testcase classname="tests.test_pickle" name="test_load_from_file[PyMultiDict-4]" time="0.132" /><testcase classname="tests.test_pickle" name="test_pickle[PyMultiDict-5]" time="0.096" /><testcase classname="tests.test_pickle" name="test_load_from_file[PyMultiDict-5]" time="0.073" /><testcase classname="tests.test_pickle" name="test_pickle[PyCIMultiDict-0]" time="0.097" /><testcase classname="tests.test_pickle" name="test_load_from_file[PyCIMultiDict-0]" time="0.079" /><testcase classname="tests.test_pickle" name="test_pickle[PyCIMultiDict-1]" time="0.183" /><testcase classname="tests.test_pickle" name="test_load_from_file[PyCIMultiDict-1]" time="0.135" /><testcase classname="tests.test_pickle" name="test_pickle[PyCIMultiDict-2]" time="0.101" /><testcase classname="tests.test_pickle" name="test_load_from_file[PyCIMultiDict-2]" time="0.078" /><testcase classname="tests.test_pickle" name="test_pickle[PyCIMultiDict-3]" time="0.096" /><testcase classname="tests.test_pickle" name="test_load_from_file[PyCIMultiDict-3]" time="0.078" /><testcase classname="tests.test_pickle" name="test_pickle[PyCIMultiDict-4]" time="0.101" /><testcase classname="tests.test_pickle" name="test_load_from_file[PyCIMultiDict-4]" time="0.074" /><testcase classname="tests.test_pickle" name="test_pickle[PyCIMultiDict-5]" time="0.094" /><testcase classname="tests.test_pickle" name="test_load_from_file[PyCIMultiDict-5]" time="0.071" /><testcase classname="tests.test_pickle" name="test_pickle_proxy[PyMultiDictProxy]" time="0.068" /><testcase classname="tests.test_pickle" name="test_pickle_proxy[PyCIMultiDictProxy]" time="0.065" /><testcase classname="tests.test_update" name="test_update_replace[PyMultiDict]" time="0.076" /><testcase classname="tests.test_update" name="test_update_replace[PyCIMultiDict]" time="0.074" /><testcase classname="tests.test_update" name="test_update_append[PyMultiDict]" time="0.075" /><testcase classname="tests.test_update" name="test_update_append[PyCIMultiDict]" time="0.079" /><testcase classname="tests.test_update" name="test_update_remove[PyMultiDict]" time="0.068" /><testcase classname="tests.test_update" name="test_update_remove[PyCIMultiDict]" time="0.076" /><testcase classname="tests.test_update" name="test_update_replace_seq[PyMultiDict]" time="0.073" /><testcase classname="tests.test_update" name="test_update_replace_seq[PyCIMultiDict]" time="0.065" /><testcase classname="tests.test_update" name="test_update_replace_seq2[PyMultiDict]" time="0.076" /><testcase classname="tests.test_update" name="test_update_replace_seq2[PyCIMultiDict]" time="0.072" /><testcase classname="tests.test_update" name="test_update_append_seq[PyMultiDict]" time="0.071" /><testcase classname="tests.test_update" name="test_update_append_seq[PyCIMultiDict]" time="0.073" /><testcase classname="tests.test_update" name="test_update_remove_seq[PyMultiDict]" time="0.067" /><testcase classname="tests.test_update" name="test_update_remove_seq[PyCIMultiDict]" time="0.071" /><testcase classname="tests.test_update" name="test_update_list_arg_and_kwds[PyMultiDict]" time="0.056" /><testcase classname="tests.test_update" name="test_update_list_arg_and_kwds[PyCIMultiDict]" time="0.060" /><testcase classname="tests.test_update" name="test_update_tuple_arg_and_kwds[PyMultiDict]" time="0.061" /><testcase classname="tests.test_update" name="test_update_tuple_arg_and_kwds[PyCIMultiDict]" time="0.070" /><testcase classname="tests.test_update" name="test_update_deque_arg_and_kwds[PyMultiDict]" time="0.061" /><testcase classname="tests.test_update" name="test_update_deque_arg_and_kwds[PyCIMultiDict]" time="0.074" /><testcase classname="tests.test_version.TestPyMultiDict" name="test_getversion_bad_param" time="0.060" /><testcase classname="tests.test_version.TestPyMultiDict" name="test_ctor" time="0.057" /><testcase classname="tests.test_version.TestPyMultiDict" name="test_add" time="0.064" /><testcase classname="tests.test_version.TestPyMultiDict" name="test_delitem" time="0.051" /><testcase classname="tests.test_version.TestPyMultiDict" name="test_delitem_not_found" time="0.050" /><testcase classname="tests.test_version.TestPyMultiDict" name="test_setitem" time="0.049" /><testcase classname="tests.test_version.TestPyMultiDict" name="test_setitem_not_found" time="0.049" /><testcase classname="tests.test_version.TestPyMultiDict" name="test_clear" time="0.075" /><testcase classname="tests.test_version.TestPyMultiDict" name="test_setdefault" time="0.067" /><testcase classname="tests.test_version.TestPyMultiDict" name="test_popone" time="0.045" /><testcase classname="tests.test_version.TestPyMultiDict" name="test_popone_default" time="0.054" /><testcase classname="tests.test_version.TestPyMultiDict" name="test_popone_key_error" time="0.045" /><testcase classname="tests.test_version.TestPyMultiDict" name="test_pop" time="0.050" /><testcase classname="tests.test_version.TestPyMultiDict" name="test_pop_default" time="0.052" /><testcase classname="tests.test_version.TestPyMultiDict" name="test_pop_key_error" time="0.051" /><testcase classname="tests.test_version.TestPyMultiDict" name="test_popall" time="0.056" /><testcase classname="tests.test_version.TestPyMultiDict" name="test_popall_default" time="0.052" /><testcase classname="tests.test_version.TestPyMultiDict" name="test_popall_key_error" time="0.050" /><testcase classname="tests.test_version.TestPyMultiDict" name="test_popitem" time="0.053" /><testcase classname="tests.test_version.TestPyMultiDict" name="test_popitem_key_error" time="0.055" /><testcase classname="tests.test_version.TestPyCIMultiDict" name="test_getversion_bad_param" time="0.045" /><testcase classname="tests.test_version.TestPyCIMultiDict" name="test_ctor" time="0.054" /><testcase classname="tests.test_version.TestPyCIMultiDict" name="test_add" time="0.052" /><testcase classname="tests.test_version.TestPyCIMultiDict" name="test_delitem" time="0.050" /><testcase classname="tests.test_version.TestPyCIMultiDict" name="test_delitem_not_found" time="0.052" /><testcase classname="tests.test_version.TestPyCIMultiDict" name="test_setitem" time="0.059" /><testcase classname="tests.test_version.TestPyCIMultiDict" name="test_setitem_not_found" time="0.054" /><testcase classname="tests.test_version.TestPyCIMultiDict" name="test_clear" time="0.050" /><testcase classname="tests.test_version.TestPyCIMultiDict" name="test_setdefault" time="0.058" /><testcase classname="tests.test_version.TestPyCIMultiDict" name="test_popone" time="0.054" /><testcase classname="tests.test_version.TestPyCIMultiDict" name="test_popone_default" time="0.049" /><testcase classname="tests.test_version.TestPyCIMultiDict" name="test_popone_key_error" time="0.057" /><testcase classname="tests.test_version.TestPyCIMultiDict" name="test_pop" time="0.072" /><testcase classname="tests.test_version.TestPyCIMultiDict" name="test_pop_default" time="0.053" /><testcase classname="tests.test_version.TestPyCIMultiDict" name="test_pop_key_error" time="0.051" /><testcase classname="tests.test_version.TestPyCIMultiDict" name="test_popall" time="0.053" /><testcase classname="tests.test_version.TestPyCIMultiDict" name="test_popall_default" time="0.058" /><testcase classname="tests.test_version.TestPyCIMultiDict" name="test_popall_key_error" time="0.053" /><testcase classname="tests.test_version.TestPyCIMultiDict" name="test_popitem" time="0.056" /><testcase classname="tests.test_version.TestPyCIMultiDict" name="test_popitem_key_error" time="1.589" /></testsuite></testsuites>