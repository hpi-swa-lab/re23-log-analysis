<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="16" failures="35" skipped="269" tests="2031" time="107.438" timestamp="2023-11-21T22:35:09.474372" hostname="80ac3eb7f7f2"><testcase classname="" name="geopandas.io.tests.test_arrow" time="0.000"><skipped message="collection skipped">('/workdir/geopandas-0.12.1/geopandas/io/tests/test_arrow.py', 41, "Skipped: could not import 'pyarrow': No module named 'pyarrow'")</skipped></testcase><testcase classname="" name="geopandas.tests.test_explore" time="0.000"><skipped message="collection skipped">('/workdir/geopandas-0.12.1/geopandas/tests/test_explore.py', 7, "Skipped: could not import 'folium': No module named 'folium'")</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file[fiona-ESRI Shapefile-.shp]" time="0.466" /><testcase classname="geopandas.io.tests.test_file" name="test_to_file[fiona-GeoJSON-.geojson]" time="0.852" /><testcase classname="geopandas.io.tests.test_file" name="test_to_file[fiona-GPKG-.gpkg]" time="0.311" /><testcase classname="geopandas.io.tests.test_file" name="test_to_file[fiona-None-.shp]" time="0.355" /><testcase classname="geopandas.io.tests.test_file" name="test_to_file[fiona-None-]" time="0.303" /><testcase classname="geopandas.io.tests.test_file" name="test_to_file[fiona-None-.geojson]" time="0.812" /><testcase classname="geopandas.io.tests.test_file" name="test_to_file[fiona-None-.gpkg]" time="0.282" /><testcase classname="geopandas.io.tests.test_file" name="test_to_file[pyogrio-ESRI Shapefile-.shp]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:130: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file[pyogrio-GeoJSON-.geojson]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:130: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file[pyogrio-GPKG-.gpkg]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:130: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file[pyogrio-None-.shp]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:130: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file[pyogrio-None-]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:130: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file[pyogrio-None-.geojson]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:130: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file[pyogrio-None-.gpkg]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:130: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file_pathlib[fiona-ESRI Shapefile-.shp]" time="0.267" /><testcase classname="geopandas.io.tests.test_file" name="test_to_file_pathlib[fiona-GeoJSON-.geojson]" time="0.953" /><testcase classname="geopandas.io.tests.test_file" name="test_to_file_pathlib[fiona-GPKG-.gpkg]" time="0.262" /><testcase classname="geopandas.io.tests.test_file" name="test_to_file_pathlib[fiona-None-.shp]" time="0.270" /><testcase classname="geopandas.io.tests.test_file" name="test_to_file_pathlib[fiona-None-]" time="0.341" /><testcase classname="geopandas.io.tests.test_file" name="test_to_file_pathlib[fiona-None-.geojson]" time="0.808" /><testcase classname="geopandas.io.tests.test_file" name="test_to_file_pathlib[fiona-None-.gpkg]" time="0.344" /><testcase classname="geopandas.io.tests.test_file" name="test_to_file_pathlib[pyogrio-ESRI Shapefile-.shp]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:153: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file_pathlib[pyogrio-GeoJSON-.geojson]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:153: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file_pathlib[pyogrio-GPKG-.gpkg]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:153: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file_pathlib[pyogrio-None-.shp]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:153: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file_pathlib[pyogrio-None-]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:153: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file_pathlib[pyogrio-None-.geojson]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:153: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file_pathlib[pyogrio-None-.gpkg]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:153: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file_bool[fiona-ESRI Shapefile-.shp]" time="0.021" /><testcase classname="geopandas.io.tests.test_file" name="test_to_file_bool[fiona-GeoJSON-.geojson]" time="0.020" /><testcase classname="geopandas.io.tests.test_file" name="test_to_file_bool[fiona-GPKG-.gpkg]" time="0.027" /><testcase classname="geopandas.io.tests.test_file" name="test_to_file_bool[fiona-None-.shp]" time="0.020" /><testcase classname="geopandas.io.tests.test_file" name="test_to_file_bool[fiona-None-]" time="0.020" /><testcase classname="geopandas.io.tests.test_file" name="test_to_file_bool[fiona-None-.geojson]" time="0.021" /><testcase classname="geopandas.io.tests.test_file" name="test_to_file_bool[fiona-None-.gpkg]" time="0.030" /><testcase classname="geopandas.io.tests.test_file" name="test_to_file_bool[pyogrio-ESRI Shapefile-.shp]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:167: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file_bool[pyogrio-GeoJSON-.geojson]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:167: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file_bool[pyogrio-GPKG-.gpkg]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:167: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file_bool[pyogrio-None-.shp]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:167: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file_bool[pyogrio-None-]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:167: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file_bool[pyogrio-None-.geojson]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:167: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file_bool[pyogrio-None-.gpkg]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:167: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file_datetime[fiona-ESRI Shapefile-.shp-naive_datetime]" time="0.002"><skipped type="pytest.skip" message="Driver corresponding to ext .shp doesn't support dt fields">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:208: Driver corresponding to ext .shp doesn't support dt fields</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file_datetime[fiona-ESRI Shapefile-.shp-datetime_with_timezone]" time="0.002"><skipped type="pytest.skip" message="Driver corresponding to ext .shp doesn't support dt fields">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:208: Driver corresponding to ext .shp doesn't support dt fields</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file_datetime[fiona-GeoJSON-.geojson-naive_datetime]" time="0.025" /><testcase classname="geopandas.io.tests.test_file" name="test_to_file_datetime[fiona-GeoJSON-.geojson-datetime_with_timezone]" time="0.026" /><testcase classname="geopandas.io.tests.test_file" name="test_to_file_datetime[fiona-GPKG-.gpkg-naive_datetime]" time="0.029" /><testcase classname="geopandas.io.tests.test_file" name="test_to_file_datetime[fiona-GPKG-.gpkg-datetime_with_timezone]" time="0.030" /><testcase classname="geopandas.io.tests.test_file" name="test_to_file_datetime[fiona-None-.shp-naive_datetime]" time="0.002"><skipped type="pytest.skip" message="Driver corresponding to ext .shp doesn't support dt fields">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:208: Driver corresponding to ext .shp doesn't support dt fields</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file_datetime[fiona-None-.shp-datetime_with_timezone]" time="0.002"><skipped type="pytest.skip" message="Driver corresponding to ext .shp doesn't support dt fields">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:208: Driver corresponding to ext .shp doesn't support dt fields</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file_datetime[fiona-None--naive_datetime]" time="0.002"><skipped type="pytest.skip" message="Driver corresponding to ext  doesn't support dt fields">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:208: Driver corresponding to ext  doesn't support dt fields</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file_datetime[fiona-None--datetime_with_timezone]" time="0.001"><skipped type="pytest.skip" message="Driver corresponding to ext  doesn't support dt fields">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:208: Driver corresponding to ext  doesn't support dt fields</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file_datetime[fiona-None-.geojson-naive_datetime]" time="0.023" /><testcase classname="geopandas.io.tests.test_file" name="test_to_file_datetime[fiona-None-.geojson-datetime_with_timezone]" time="0.024" /><testcase classname="geopandas.io.tests.test_file" name="test_to_file_datetime[fiona-None-.gpkg-naive_datetime]" time="0.029" /><testcase classname="geopandas.io.tests.test_file" name="test_to_file_datetime[fiona-None-.gpkg-datetime_with_timezone]" time="0.033" /><testcase classname="geopandas.io.tests.test_file" name="test_to_file_datetime[pyogrio-ESRI Shapefile-.shp-naive_datetime]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:198: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file_datetime[pyogrio-ESRI Shapefile-.shp-datetime_with_timezone]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:198: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file_datetime[pyogrio-GeoJSON-.geojson-naive_datetime]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:198: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file_datetime[pyogrio-GeoJSON-.geojson-datetime_with_timezone]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:198: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file_datetime[pyogrio-GPKG-.gpkg-naive_datetime]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:198: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file_datetime[pyogrio-GPKG-.gpkg-datetime_with_timezone]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:198: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file_datetime[pyogrio-None-.shp-naive_datetime]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:198: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file_datetime[pyogrio-None-.shp-datetime_with_timezone]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:198: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file_datetime[pyogrio-None--naive_datetime]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:198: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file_datetime[pyogrio-None--datetime_with_timezone]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:198: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file_datetime[pyogrio-None-.geojson-naive_datetime]" time="0.001"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:198: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file_datetime[pyogrio-None-.geojson-datetime_with_timezone]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:198: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file_datetime[pyogrio-None-.gpkg-naive_datetime]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:198: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file_datetime[pyogrio-None-.gpkg-datetime_with_timezone]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:198: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_read_file_datetime_invalid[fiona-gpkg]" time="0.052" /><testcase classname="geopandas.io.tests.test_file" name="test_read_file_datetime_invalid[fiona-geojson]" time="0.014" /><testcase classname="geopandas.io.tests.test_file" name="test_read_file_datetime_invalid[pyogrio-gpkg]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:262: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_read_file_datetime_invalid[pyogrio-geojson]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:262: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_read_file_datetime_out_of_bounds_ns[fiona-gpkg]" time="0.046" /><testcase classname="geopandas.io.tests.test_file" name="test_read_file_datetime_out_of_bounds_ns[fiona-geojson]" time="0.015" /><testcase classname="geopandas.io.tests.test_file" name="test_read_file_datetime_out_of_bounds_ns[pyogrio-gpkg]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:280: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_read_file_datetime_out_of_bounds_ns[pyogrio-geojson]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:280: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_read_file_datetime_mixed_offsets" time="0.017"><failure message="assert datetime.timezone.utc == &lt;UTC&gt;&#10; +  where datetime.timezone.utc = &lt;pandas.core.indexes.accessors.DatetimeProperties object at 0x7fa00fdaea70&gt;.tz&#10; +    where &lt;pandas.core.indexes.accessors.DatetimeProperties object at 0x7fa00fdaea70&gt; = 0   2014-08-26 08:01:23.040000+00:00\n1   2019-03-07 16:31:43.119000+00:00\nName: date, dtype: datetime64[ns, UTC].dt&#10; +  and   &lt;UTC&gt; = pytz.utc">Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    result: Optional[TResult] = func()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 262, in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 177, in pytest_runtest_call
    raise e
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 169, in pytest_runtest_call
    item.runtest()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 1792, in runtest
    self.ihook.pytest_pyfunc_call(pyfuncitem=self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 113, in _multicall
    raise exception.with_traceback(exception.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 194, in pytest_pyfunc_call
    result = testfunction(**testargs)
  File "/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py", line 312, in test_read_file_datetime_mixed_offsets
    assert res["date"].dt.tz == pytz.utc
AssertionError: assert datetime.timezone.utc == &lt;UTC&gt;
 +  where datetime.timezone.utc = &lt;pandas.core.indexes.accessors.DatetimeProperties object at 0x7fa00fdaea70&gt;.tz
 +    where &lt;pandas.core.indexes.accessors.DatetimeProperties object at 0x7fa00fdaea70&gt; = 0   2014-08-26 08:01:23.040000+00:00\n1   2019-03-07 16:31:43.119000+00:00\nName: date, dtype: datetime64[ns, UTC].dt
 +  and   &lt;UTC&gt; = pytz.utc</failure></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file_with_point_z[fiona-ESRI Shapefile-.shp]" time="0.019" /><testcase classname="geopandas.io.tests.test_file" name="test_to_file_with_point_z[fiona-GeoJSON-.geojson]" time="0.018" /><testcase classname="geopandas.io.tests.test_file" name="test_to_file_with_point_z[fiona-GPKG-.gpkg]" time="0.027" /><testcase classname="geopandas.io.tests.test_file" name="test_to_file_with_point_z[fiona-None-.shp]" time="0.018" /><testcase classname="geopandas.io.tests.test_file" name="test_to_file_with_point_z[fiona-None-]" time="0.018" /><testcase classname="geopandas.io.tests.test_file" name="test_to_file_with_point_z[fiona-None-.geojson]" time="0.018" /><testcase classname="geopandas.io.tests.test_file" name="test_to_file_with_point_z[fiona-None-.gpkg]" time="0.026" /><testcase classname="geopandas.io.tests.test_file" name="test_to_file_with_point_z[pyogrio-ESRI Shapefile-.shp]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:318: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file_with_point_z[pyogrio-GeoJSON-.geojson]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:318: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file_with_point_z[pyogrio-GPKG-.gpkg]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:318: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file_with_point_z[pyogrio-None-.shp]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:318: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file_with_point_z[pyogrio-None-]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:318: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file_with_point_z[pyogrio-None-.geojson]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:318: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file_with_point_z[pyogrio-None-.gpkg]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:318: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file_with_poly_z[fiona-ESRI Shapefile-.shp]" time="0.019" /><testcase classname="geopandas.io.tests.test_file" name="test_to_file_with_poly_z[fiona-GeoJSON-.geojson]" time="0.018" /><testcase classname="geopandas.io.tests.test_file" name="test_to_file_with_poly_z[fiona-GPKG-.gpkg]" time="0.026" /><testcase classname="geopandas.io.tests.test_file" name="test_to_file_with_poly_z[fiona-None-.shp]" time="0.019" /><testcase classname="geopandas.io.tests.test_file" name="test_to_file_with_poly_z[fiona-None-]" time="0.018" /><testcase classname="geopandas.io.tests.test_file" name="test_to_file_with_poly_z[fiona-None-.geojson]" time="0.018" /><testcase classname="geopandas.io.tests.test_file" name="test_to_file_with_poly_z[fiona-None-.gpkg]" time="0.026" /><testcase classname="geopandas.io.tests.test_file" name="test_to_file_with_poly_z[pyogrio-ESRI Shapefile-.shp]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:333: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file_with_poly_z[pyogrio-GeoJSON-.geojson]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:333: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file_with_poly_z[pyogrio-GPKG-.gpkg]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:333: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file_with_poly_z[pyogrio-None-.shp]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:333: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file_with_poly_z[pyogrio-None-]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:333: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file_with_poly_z[pyogrio-None-.geojson]" time="0.001"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:333: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file_with_poly_z[pyogrio-None-.gpkg]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:333: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file_types[fiona]" time="0.017" /><testcase classname="geopandas.io.tests.test_file" name="test_to_file_types[pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:348: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file_int64[fiona]" time="0.024" /><testcase classname="geopandas.io.tests.test_file" name="test_to_file_int64[pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:371: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file_empty[fiona]" time="0.008" /><testcase classname="geopandas.io.tests.test_file" name="test_to_file_empty[pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:382: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file_privacy[fiona]" time="0.201" /><testcase classname="geopandas.io.tests.test_file" name="test_to_file_privacy[pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:389: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file_schema[fiona]" time="0.103" /><testcase classname="geopandas.io.tests.test_file" name="test_to_file_schema[pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:395: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file_crs[fiona]" time="0.734" /><testcase classname="geopandas.io.tests.test_file" name="test_to_file_crs[pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:427: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file_column_len[fiona]" time="0.016" /><testcase classname="geopandas.io.tests.test_file" name="test_to_file_column_len[pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:458: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file_with_duplicate_columns[fiona]" time="0.010" /><testcase classname="geopandas.io.tests.test_file" name="test_to_file_with_duplicate_columns[pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:474: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_append_file[fiona-ESRI Shapefile-.shp]" time="0.476" /><testcase classname="geopandas.io.tests.test_file" name="test_append_file[fiona-GeoJSON-.geojson]" time="1.545" /><testcase classname="geopandas.io.tests.test_file" name="test_append_file[fiona-GPKG-.gpkg]" time="0.618" /><testcase classname="geopandas.io.tests.test_file" name="test_append_file[fiona-None-.shp]" time="0.480" /><testcase classname="geopandas.io.tests.test_file" name="test_append_file[fiona-None-]" time="0.479" /><testcase classname="geopandas.io.tests.test_file" name="test_append_file[fiona-None-.geojson]" time="1.451" /><testcase classname="geopandas.io.tests.test_file" name="test_append_file[fiona-None-.gpkg]" time="0.575" /><testcase classname="geopandas.io.tests.test_file" name="test_append_file[pyogrio-ESRI Shapefile-.shp]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:483: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_append_file[pyogrio-GeoJSON-.geojson]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:483: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_append_file[pyogrio-GPKG-.gpkg]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:483: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_append_file[pyogrio-None-.shp]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:483: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_append_file[pyogrio-None-]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:483: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_append_file[pyogrio-None-.geojson]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:483: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_append_file[pyogrio-None-.gpkg]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:483: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_empty_crs[fiona-ESRI Shapefile-.shp]" time="0.015" /><testcase classname="geopandas.io.tests.test_file" name="test_empty_crs[fiona-GeoJSON-.geojson]" time="0.020" /><testcase classname="geopandas.io.tests.test_file" name="test_empty_crs[fiona-GPKG-.gpkg]" time="0.002"><skipped type="pytest.xfail" message="GPKG is read with Undefined geographic SRS." /></testcase><testcase classname="geopandas.io.tests.test_file" name="test_empty_crs[fiona-None-.shp]" time="0.017" /><testcase classname="geopandas.io.tests.test_file" name="test_empty_crs[fiona-None-]" time="0.016" /><testcase classname="geopandas.io.tests.test_file" name="test_empty_crs[fiona-None-.geojson]" time="0.018" /><testcase classname="geopandas.io.tests.test_file" name="test_empty_crs[fiona-None-.gpkg]" time="0.002"><skipped type="pytest.xfail" message="GPKG is read with Undefined geographic SRS." /></testcase><testcase classname="geopandas.io.tests.test_file" name="test_empty_crs[pyogrio-ESRI Shapefile-.shp]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:515: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_empty_crs[pyogrio-GeoJSON-.geojson]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:515: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_empty_crs[pyogrio-GPKG-.gpkg]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:515: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_empty_crs[pyogrio-None-.shp]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:515: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_empty_crs[pyogrio-None-]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:515: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_empty_crs[pyogrio-None-.geojson]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:515: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_empty_crs[pyogrio-None-.gpkg]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:515: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_read_file[fiona]" time="0.158" /><testcase classname="geopandas.io.tests.test_file" name="test_read_file[pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:547: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_read_file_remote_geojson_url[fiona]" time="0.222" /><testcase classname="geopandas.io.tests.test_file" name="test_read_file_remote_geojson_url[pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:555: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_read_file_remote_zipfile_url[fiona]" time="0.520" /><testcase classname="geopandas.io.tests.test_file" name="test_read_file_remote_zipfile_url[pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:565: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_read_file_textio[fiona]" time="0.014" /><testcase classname="geopandas.io.tests.test_file" name="test_read_file_textio[pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:575: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_read_file_bytesio[fiona]" time="0.014" /><testcase classname="geopandas.io.tests.test_file" name="test_read_file_bytesio[pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:584: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_read_file_raw_stream[fiona]" time="0.008" /><testcase classname="geopandas.io.tests.test_file" name="test_read_file_raw_stream[pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:593: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_read_file_pathlib[fiona]" time="0.008" /><testcase classname="geopandas.io.tests.test_file" name="test_read_file_pathlib[pyogrio]" time="0.001"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:599: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_read_file_tempfile[fiona]" time="0.008" /><testcase classname="geopandas.io.tests.test_file" name="test_read_file_tempfile[pyogrio]" time="0.001"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:605: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_read_binary_file_fsspec[fiona]" time="0.002"><skipped type="pytest.skip" message="could not import 'fsspec': No module named 'fsspec'">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:628: could not import 'fsspec': No module named 'fsspec'</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_read_binary_file_fsspec[pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:627: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_read_text_file_fsspec[fiona]" time="0.001"><skipped type="pytest.skip" message="could not import 'fsspec': No module named 'fsspec'">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:638: could not import 'fsspec': No module named 'fsspec'</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_read_text_file_fsspec[pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:637: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_infer_zipped_file[fiona]" time="0.484" /><testcase classname="geopandas.io.tests.test_file" name="test_infer_zipped_file[pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:644: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_allow_legacy_gdal_path[fiona]" time="0.155" /><testcase classname="geopandas.io.tests.test_file" name="test_allow_legacy_gdal_path[pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:662: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_read_file_filtered__bbox[fiona]" time="0.462" /><testcase classname="geopandas.io.tests.test_file" name="test_read_file_filtered__bbox[pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:669: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_read_file_filtered__bbox__polygon[fiona]" time="0.347" /><testcase classname="geopandas.io.tests.test_file" name="test_read_file_filtered__bbox__polygon[pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:682: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_read_file_filtered__rows[fiona]" time="0.126" /><testcase classname="geopandas.io.tests.test_file" name="test_read_file_filtered__rows[pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:692: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_read_file_filtered__rows_slice[fiona]" time="0.410" /><testcase classname="geopandas.io.tests.test_file" name="test_read_file_filtered__rows_slice[pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:698: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_read_file_filtered__rows_bbox[fiona]" time="0.233" /><testcase classname="geopandas.io.tests.test_file" name="test_read_file_filtered__rows_bbox[pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:704: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_read_file_filtered_rows_invalid[fiona]" time="0.007" /><testcase classname="geopandas.io.tests.test_file" name="test_read_file_filtered_rows_invalid[pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:744: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_read_file__ignore_geometry[fiona]" time="0.006" /><testcase classname="geopandas.io.tests.test_file" name="test_read_file__ignore_geometry[pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:751: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_read_file__ignore_all_fields[fiona]" time="0.037" /><testcase classname="geopandas.io.tests.test_file" name="test_read_file__ignore_all_fields[pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:761: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_read_file__where_filter[fiona]" time="0.017" /><testcase classname="geopandas.io.tests.test_file" name="test_read_file__where_filter[pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:771: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_read_file__columns" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:788: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_read_file_filtered_with_gdf_boundary[fiona]" time="0.210" /><testcase classname="geopandas.io.tests.test_file" name="test_read_file_filtered_with_gdf_boundary[pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:799: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_read_file_filtered_with_gdf_boundary__mask[fiona]" time="0.210" /><testcase classname="geopandas.io.tests.test_file" name="test_read_file_filtered_with_gdf_boundary__mask[pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:819: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_read_file_filtered_with_gdf_boundary__mask__polygon[fiona]" time="0.207" /><testcase classname="geopandas.io.tests.test_file" name="test_read_file_filtered_with_gdf_boundary__mask__polygon[pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:831: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_read_file_filtered_with_gdf_boundary_mismatched_crs[fiona]" time="0.235" /><testcase classname="geopandas.io.tests.test_file" name="test_read_file_filtered_with_gdf_boundary_mismatched_crs[pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:844: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_read_file_filtered_with_gdf_boundary_mismatched_crs__mask[fiona]" time="0.234" /><testcase classname="geopandas.io.tests.test_file" name="test_read_file_filtered_with_gdf_boundary_mismatched_crs__mask[pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:866: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_read_file_empty_shapefile[fiona]" time="0.006" /><testcase classname="geopandas.io.tests.test_file" name="test_read_file_empty_shapefile[pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:888: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_read_file_privacy[fiona]" time="0.241" /><testcase classname="geopandas.io.tests.test_file" name="test_read_file_privacy[pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:918: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_write_index_to_file[fiona-ESRI Shapefile-shp]" time="1.173" /><testcase classname="geopandas.io.tests.test_file" name="test_write_index_to_file[fiona-GeoJSON-geojson]" time="1.156" /><testcase classname="geopandas.io.tests.test_file" name="test_write_index_to_file[pyogrio-ESRI Shapefile-shp]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:939: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_write_index_to_file[pyogrio-GeoJSON-geojson]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:939: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_to_file__undetermined_driver[fiona]" time="0.249" /><testcase classname="geopandas.io.tests.test_file" name="test_to_file__undetermined_driver[pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:1112: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_write_read_file[fiona-test_file0]" time="0.016" /><testcase classname="geopandas.io.tests.test_file" name="test_write_read_file[fiona-~/test_file.geojson]" time="0.016" /><testcase classname="geopandas.io.tests.test_file" name="test_write_read_file[pyogrio-test_file0]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:1119: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file" name="test_write_read_file[pyogrio-~/test_file.geojson]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file.py:1119: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe0-GeoJSON-fiona]" time="0.017" /><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe0-GeoJSON-pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file_geom_types_drivers.py:262: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe0-ESRI Shapefile-fiona]" time="0.017" /><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe0-ESRI Shapefile-pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file_geom_types_drivers.py:262: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe0-GPKG-fiona]" time="0.023" /><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe0-GPKG-pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file_geom_types_drivers.py:262: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe1-GeoJSON-fiona]" time="0.017" /><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe1-GeoJSON-pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file_geom_types_drivers.py:262: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe1-ESRI Shapefile-fiona]" time="0.017" /><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe1-ESRI Shapefile-pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file_geom_types_drivers.py:262: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe1-GPKG-fiona]" time="0.023" /><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe1-GPKG-pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file_geom_types_drivers.py:262: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe2-GeoJSON-fiona]" time="0.017" /><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe2-GeoJSON-pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file_geom_types_drivers.py:262: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe2-ESRI Shapefile-fiona]" time="0.010" /><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe2-ESRI Shapefile-pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file_geom_types_drivers.py:262: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe2-GPKG-fiona]" time="0.022" /><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe2-GPKG-pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file_geom_types_drivers.py:262: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe3-GeoJSON-fiona]" time="0.016" /><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe3-GeoJSON-pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file_geom_types_drivers.py:262: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe3-ESRI Shapefile-fiona]" time="0.016" /><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe3-ESRI Shapefile-pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file_geom_types_drivers.py:262: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe3-GPKG-fiona]" time="0.023" /><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe3-GPKG-pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file_geom_types_drivers.py:262: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe4-GeoJSON-fiona]" time="0.017" /><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe4-GeoJSON-pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file_geom_types_drivers.py:262: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe4-ESRI Shapefile-fiona]" time="0.018" /><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe4-ESRI Shapefile-pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file_geom_types_drivers.py:262: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe4-GPKG-fiona]" time="0.023" /><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe4-GPKG-pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file_geom_types_drivers.py:262: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe5-GeoJSON-fiona]" time="0.017" /><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe5-GeoJSON-pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file_geom_types_drivers.py:262: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe5-ESRI Shapefile-fiona]" time="0.017" /><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe5-ESRI Shapefile-pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file_geom_types_drivers.py:262: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe5-GPKG-fiona]" time="0.023" /><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe5-GPKG-pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file_geom_types_drivers.py:262: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe6-GeoJSON-fiona]" time="0.017" /><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe6-GeoJSON-pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file_geom_types_drivers.py:262: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe6-ESRI Shapefile-fiona]" time="0.017" /><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe6-ESRI Shapefile-pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file_geom_types_drivers.py:262: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe6-GPKG-fiona]" time="0.023" /><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe6-GPKG-pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file_geom_types_drivers.py:262: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe7-GeoJSON-fiona]" time="0.029" /><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe7-GeoJSON-pyogrio]" time="0.001"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file_geom_types_drivers.py:262: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe7-ESRI Shapefile-fiona]" time="0.038" /><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe7-ESRI Shapefile-pyogrio]" time="0.001"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file_geom_types_drivers.py:262: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe7-GPKG-fiona]" time="0.070" /><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe7-GPKG-pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file_geom_types_drivers.py:262: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe8-GeoJSON-fiona]" time="0.023" /><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe8-GeoJSON-pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file_geom_types_drivers.py:262: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe8-ESRI Shapefile-fiona]" time="0.020" /><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe8-ESRI Shapefile-pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file_geom_types_drivers.py:262: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe8-GPKG-fiona]" time="0.025" /><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe8-GPKG-pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file_geom_types_drivers.py:262: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe9-GeoJSON-fiona]" time="0.015" /><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe9-GeoJSON-pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file_geom_types_drivers.py:262: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe9-ESRI Shapefile-fiona]" time="0.016" /><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe9-ESRI Shapefile-pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file_geom_types_drivers.py:262: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe9-GPKG-fiona]" time="0.022" /><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe9-GPKG-pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file_geom_types_drivers.py:262: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe10-GeoJSON-fiona]" time="0.016" /><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe10-GeoJSON-pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file_geom_types_drivers.py:262: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe10-ESRI Shapefile-fiona]" time="0.016" /><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe10-ESRI Shapefile-pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file_geom_types_drivers.py:262: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe10-GPKG-fiona]" time="0.023" /><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe10-GPKG-pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file_geom_types_drivers.py:262: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe11-GeoJSON-fiona]" time="0.016" /><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe11-GeoJSON-pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file_geom_types_drivers.py:262: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe11-ESRI Shapefile-fiona]" time="0.016" /><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe11-ESRI Shapefile-pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file_geom_types_drivers.py:262: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe11-GPKG-fiona]" time="0.022" /><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe11-GPKG-pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file_geom_types_drivers.py:262: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe12-GeoJSON-fiona]" time="0.018" /><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe12-GeoJSON-pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file_geom_types_drivers.py:262: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe12-ESRI Shapefile-fiona]" time="0.010" /><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe12-ESRI Shapefile-pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file_geom_types_drivers.py:262: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe12-GPKG-fiona]" time="0.027" /><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe12-GPKG-pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file_geom_types_drivers.py:262: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe13-GeoJSON-fiona]" time="0.019" /><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe13-GeoJSON-pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file_geom_types_drivers.py:262: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe13-ESRI Shapefile-fiona]" time="0.010" /><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe13-ESRI Shapefile-pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file_geom_types_drivers.py:262: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe13-GPKG-fiona]" time="0.024" /><testcase classname="geopandas.io.tests.test_file_geom_types_drivers" name="test_to_file_roundtrip[geodataframe13-GPKG-pyogrio]" time="0.000"><skipped type="pytest.skip" message="pyogrio not installed">/workdir/geopandas-0.12.1/geopandas/io/tests/test_file_geom_types_drivers.py:262: pyogrio not installed</skipped></testcase><testcase classname="geopandas.io.tests.test_infer_schema" name="test_infer_schema_only_points" time="0.005" /><testcase classname="geopandas.io.tests.test_infer_schema" name="test_infer_schema_points_and_multipoints" time="0.005" /><testcase classname="geopandas.io.tests.test_infer_schema" name="test_infer_schema_only_multipoints" time="0.004" /><testcase classname="geopandas.io.tests.test_infer_schema" name="test_infer_schema_only_linestrings" time="0.004" /><testcase classname="geopandas.io.tests.test_infer_schema" name="test_infer_schema_linestrings_and_multilinestrings" time="0.005" /><testcase classname="geopandas.io.tests.test_infer_schema" name="test_infer_schema_only_multilinestrings" time="0.004" /><testcase classname="geopandas.io.tests.test_infer_schema" name="test_infer_schema_only_polygons" time="0.004" /><testcase classname="geopandas.io.tests.test_infer_schema" name="test_infer_schema_polygons_and_multipolygons" time="0.005" /><testcase classname="geopandas.io.tests.test_infer_schema" name="test_infer_schema_only_multipolygons" time="0.005" /><testcase classname="geopandas.io.tests.test_infer_schema" name="test_infer_schema_multiple_shape_types" time="0.005" /><testcase classname="geopandas.io.tests.test_infer_schema" name="test_infer_schema_mixed_3D_shape_type" time="0.005" /><testcase classname="geopandas.io.tests.test_infer_schema" name="test_infer_schema_mixed_3D_Point" time="0.005" /><testcase classname="geopandas.io.tests.test_infer_schema" name="test_infer_schema_only_3D_Points" time="0.004" /><testcase classname="geopandas.io.tests.test_infer_schema" name="test_infer_schema_mixed_3D_linestring" time="0.005" /><testcase classname="geopandas.io.tests.test_infer_schema" name="test_infer_schema_only_3D_linestrings" time="0.004" /><testcase classname="geopandas.io.tests.test_infer_schema" name="test_infer_schema_mixed_3D_Polygon" time="0.005" /><testcase classname="geopandas.io.tests.test_infer_schema" name="test_infer_schema_only_3D_Polygons" time="0.005" /><testcase classname="geopandas.io.tests.test_infer_schema" name="test_infer_schema_null_geometry_and_2D_point" time="0.005" /><testcase classname="geopandas.io.tests.test_infer_schema" name="test_infer_schema_null_geometry_and_3D_point" time="0.005" /><testcase classname="geopandas.io.tests.test_infer_schema" name="test_infer_schema_null_geometry_all" time="0.005" /><testcase classname="geopandas.io.tests.test_infer_schema" name="test_infer_schema_int64" time="0.005" /><testcase classname="geopandas.io.tests.test_pickle" name="test_legacy_pickles[0.7.0_pd-1.0.4_py-3.7.6_x86_64_linux.pickle]" time="0.000"><skipped type="pytest.skip" message="shapely 2.0/pygeos-based unpickling currently only works for shapely-2.0/pygeos-written files; old pyproj versions can't read pickles from newer pyproj versions">/workdir/geopandas-0.12.1/geopandas/io/tests/test_pickle.py:50: shapely 2.0/pygeos-based unpickling currently only works for shapely-2.0/pygeos-written files; old pyproj versions can't read pickles from newer pyproj versions</skipped></testcase><testcase classname="geopandas.io.tests.test_pickle" name="test_legacy_pickles[0.6.3_pd-0.25.3_py-3.8.0_x86_64_linux.pickle]" time="0.000"><skipped type="pytest.skip" message="shapely 2.0/pygeos-based unpickling currently only works for shapely-2.0/pygeos-written files; old pyproj versions can't read pickles from newer pyproj versions">/workdir/geopandas-0.12.1/geopandas/io/tests/test_pickle.py:50: shapely 2.0/pygeos-based unpickling currently only works for shapely-2.0/pygeos-written files; old pyproj versions can't read pickles from newer pyproj versions</skipped></testcase><testcase classname="geopandas.io.tests.test_pickle" name="test_legacy_pickles[0.8.0_pd-1.0.5_py-3.8.3_x86_64_linux.pickle]" time="0.000"><skipped type="pytest.skip" message="shapely 2.0/pygeos-based unpickling currently only works for shapely-2.0/pygeos-written files; old pyproj versions can't read pickles from newer pyproj versions">/workdir/geopandas-0.12.1/geopandas/io/tests/test_pickle.py:50: shapely 2.0/pygeos-based unpickling currently only works for shapely-2.0/pygeos-written files; old pyproj versions can't read pickles from newer pyproj versions</skipped></testcase><testcase classname="geopandas.io.tests.test_pickle" name="test_round_trip_current" time="0.014" /><testcase classname="geopandas.io.tests.test_pickle" name="test_pygeos_switch" time="0.001"><skipped type="pytest.skip" message="requires pygeos to test #1745">/workdir/geopandas-0.12.1/geopandas/io/tests/test_pickle.py:86: requires pygeos to test #1745</skipped></testcase><testcase classname="geopandas.io.tests.test_sql.TestIO" name="test_get_conn" time="0.127"><failure message="sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) could not connect to server: No such file or directory&#10;&#09;Is the server running locally and accepting&#10;&#09;connections on Unix domain socket &quot;/var/run/postgresql/.s.PGSQL.5432&quot;?&#10;&#10;(Background on this error at: https://sqlalche.me/e/20/e3q8)">Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 145, in __init__
    self._dbapi_connection = engine.raw_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3292, in raw_connection
    return self.pool.connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 452, in connect
    return _ConnectionFairy._checkout(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 1269, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 716, in checkout
    rec = pool._do_get()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 169, in _do_get
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 167, in _do_get
    return self._create_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 393, in _create_connection
    return _ConnectionRecord(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 678, in __init__
    self.__connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 902, in __connect
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 898, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 637, in connect
    return dialect.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 616, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: could not connect to server: No such file or directory
	Is the server running locally and accepting
	connections on Unix domain socket "/var/run/postgresql/.s.PGSQL.5432"?


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    result: Optional[TResult] = func()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 262, in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 177, in pytest_runtest_call
    raise e
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 169, in pytest_runtest_call
    item.runtest()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 1792, in runtest
    self.ihook.pytest_pyfunc_call(pyfuncitem=self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 113, in _multicall
    raise exception.with_traceback(exception.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 194, in pytest_pyfunc_call
    result = testfunction(**testargs)
  File "/workdir/geopandas-0.12.1/geopandas/io/tests/test_sql.py", line 195, in test_get_conn
    with get_conn(engine) as output:
  File "/usr/local/lib/python3.10/contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "/workdir/geopandas-0.12.1/geopandas/io/sql.py", line 37, in _get_conn
    with conn_or_engine.begin() as conn:
  File "/usr/local/lib/python3.10/contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3232, in begin
    with self.connect() as conn:
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3268, in connect
    return self._connection_cls(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 147, in __init__
    Connection._handle_dbapi_exception_noconnection(
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 2430, in _handle_dbapi_exception_noconnection
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 145, in __init__
    self._dbapi_connection = engine.raw_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3292, in raw_connection
    return self.pool.connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 452, in connect
    return _ConnectionFairy._checkout(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 1269, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 716, in checkout
    rec = pool._do_get()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 169, in _do_get
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 167, in _do_get
    return self._create_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 393, in _create_connection
    return _ConnectionRecord(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 678, in __init__
    self.__connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 902, in __connect
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 898, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 637, in connect
    return dialect.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 616, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) could not connect to server: No such file or directory
	Is the server running locally and accepting
	connections on Unix domain socket "/var/run/postgresql/.s.PGSQL.5432"?

(Background on this error at: https://sqlalche.me/e/20/e3q8)</failure></testcase><testcase classname="geopandas.io.tests.test_sql.TestIO" name="test_read_postgis_default" time="0.001"><skipped type="pytest.skip" message="Cannot connect with postgresql database">/workdir/geopandas-0.12.1/geopandas/io/tests/test_sql.py:204: Cannot connect with postgresql database</skipped></testcase><testcase classname="geopandas.io.tests.test_sql.TestIO" name="test_read_postgis_custom_geom_col" time="0.001"><skipped type="pytest.skip" message="Cannot connect with postgresql database">/workdir/geopandas-0.12.1/geopandas/io/tests/test_sql.py:216: Cannot connect with postgresql database</skipped></testcase><testcase classname="geopandas.io.tests.test_sql.TestIO" name="test_read_postgis_select_geom_as" time="0.001"><skipped type="pytest.skip" message="Cannot connect with postgresql database">/workdir/geopandas-0.12.1/geopandas/io/tests/test_sql.py:226: Cannot connect with postgresql database</skipped></testcase><testcase classname="geopandas.io.tests.test_sql.TestIO" name="test_read_postgis_get_srid" time="0.001"><skipped type="pytest.skip" message="Cannot connect with postgresql database">/workdir/geopandas-0.12.1/geopandas/io/tests/test_sql.py:241: Cannot connect with postgresql database</skipped></testcase><testcase classname="geopandas.io.tests.test_sql.TestIO" name="test_read_postgis_override_srid" time="0.001"><skipped type="pytest.skip" message="Cannot connect with postgresql database">/workdir/geopandas-0.12.1/geopandas/io/tests/test_sql.py:254: Cannot connect with postgresql database</skipped></testcase><testcase classname="geopandas.io.tests.test_sql.TestIO" name="test_from_postgis_default" time="0.001"><skipped type="pytest.skip" message="Cannot connect with postgresql database">/workdir/geopandas-0.12.1/geopandas/io/tests/test_sql.py:266: Cannot connect with postgresql database</skipped></testcase><testcase classname="geopandas.io.tests.test_sql.TestIO" name="test_from_postgis_custom_geom_col" time="0.001"><skipped type="pytest.skip" message="Cannot connect with postgresql database">/workdir/geopandas-0.12.1/geopandas/io/tests/test_sql.py:275: Cannot connect with postgresql database</skipped></testcase><testcase classname="geopandas.io.tests.test_sql.TestIO" name="test_read_postgis_null_geom" time="0.001"><skipped type="pytest.skip" message="Cannot setup spatialite database">/workdir/geopandas-0.12.1/geopandas/io/tests/test_sql.py:285: Cannot setup spatialite database</skipped></testcase><testcase classname="geopandas.io.tests.test_sql.TestIO" name="test_read_postgis_binary" time="0.001"><skipped type="pytest.skip" message="Cannot setup spatialite database">/workdir/geopandas-0.12.1/geopandas/io/tests/test_sql.py:298: Cannot setup spatialite database</skipped></testcase><testcase classname="geopandas.io.tests.test_sql.TestIO" name="test_read_postgis_chunksize" time="0.001"><skipped type="pytest.skip" message="Cannot connect with postgresql database">/workdir/geopandas-0.12.1/geopandas/io/tests/test_sql.py:310: Cannot connect with postgresql database</skipped></testcase><testcase classname="geopandas.io.tests.test_sql.TestIO" name="test_read_postgis_privacy" time="0.001"><skipped type="pytest.skip" message="Cannot connect with postgresql database">/workdir/geopandas-0.12.1/geopandas/io/tests/test_sql.py:324: Cannot connect with postgresql database</skipped></testcase><testcase classname="geopandas.io.tests.test_sql.TestIO" name="test_write_postgis_default" time="0.171"><failure message="sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) could not connect to server: No such file or directory&#10;&#09;Is the server running locally and accepting&#10;&#09;connections on Unix domain socket &quot;/var/run/postgresql/.s.PGSQL.5432&quot;?&#10;&#10;(Background on this error at: https://sqlalche.me/e/20/e3q8)">Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 145, in __init__
    self._dbapi_connection = engine.raw_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3292, in raw_connection
    return self.pool.connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 452, in connect
    return _ConnectionFairy._checkout(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 1269, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 716, in checkout
    rec = pool._do_get()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 169, in _do_get
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 167, in _do_get
    return self._create_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 393, in _create_connection
    return _ConnectionRecord(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 678, in __init__
    self.__connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 902, in __connect
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 898, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 637, in connect
    return dialect.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 616, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: could not connect to server: No such file or directory
	Is the server running locally and accepting
	connections on Unix domain socket "/var/run/postgresql/.s.PGSQL.5432"?


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    result: Optional[TResult] = func()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 262, in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 177, in pytest_runtest_call
    raise e
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 169, in pytest_runtest_call
    item.runtest()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 1792, in runtest
    self.ihook.pytest_pyfunc_call(pyfuncitem=self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 113, in _multicall
    raise exception.with_traceback(exception.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 194, in pytest_pyfunc_call
    result = testfunction(**testargs)
  File "/workdir/geopandas-0.12.1/geopandas/io/tests/test_sql.py", line 338, in test_write_postgis_default
    drop_table_if_exists(engine, table)
  File "/workdir/geopandas-0.12.1/geopandas/io/tests/test_sql.py", line 117, in drop_table_if_exists
    if sqlalchemy.inspect(conn_or_engine).has_table(table):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/inspection.py", line 145, in inspect
    ret = reg(subject)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/reflection.py", line 303, in _engine_insp
    return Inspector._construct(Inspector._init_engine, bind)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/reflection.py", line 236, in _construct
    init(self, bind)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/reflection.py", line 247, in _init_engine
    engine.connect().close()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3268, in connect
    return self._connection_cls(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 147, in __init__
    Connection._handle_dbapi_exception_noconnection(
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 2430, in _handle_dbapi_exception_noconnection
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 145, in __init__
    self._dbapi_connection = engine.raw_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3292, in raw_connection
    return self.pool.connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 452, in connect
    return _ConnectionFairy._checkout(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 1269, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 716, in checkout
    rec = pool._do_get()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 169, in _do_get
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 167, in _do_get
    return self._create_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 393, in _create_connection
    return _ConnectionRecord(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 678, in __init__
    self.__connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 902, in __connect
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 898, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 637, in connect
    return dialect.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 616, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) could not connect to server: No such file or directory
	Is the server running locally and accepting
	connections on Unix domain socket "/var/run/postgresql/.s.PGSQL.5432"?

(Background on this error at: https://sqlalche.me/e/20/e3q8)</failure></testcase><testcase classname="geopandas.io.tests.test_sql.TestIO" name="test_write_postgis_uppercase_tablename" time="0.078"><failure message="sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) could not connect to server: No such file or directory&#10;&#09;Is the server running locally and accepting&#10;&#09;connections on Unix domain socket &quot;/var/run/postgresql/.s.PGSQL.5432&quot;?&#10;&#10;(Background on this error at: https://sqlalche.me/e/20/e3q8)">Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 145, in __init__
    self._dbapi_connection = engine.raw_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3292, in raw_connection
    return self.pool.connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 452, in connect
    return _ConnectionFairy._checkout(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 1269, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 716, in checkout
    rec = pool._do_get()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 169, in _do_get
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 167, in _do_get
    return self._create_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 393, in _create_connection
    return _ConnectionRecord(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 678, in __init__
    self.__connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 902, in __connect
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 898, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 637, in connect
    return dialect.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 616, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: could not connect to server: No such file or directory
	Is the server running locally and accepting
	connections on Unix domain socket "/var/run/postgresql/.s.PGSQL.5432"?


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    result: Optional[TResult] = func()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 262, in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 177, in pytest_runtest_call
    raise e
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 169, in pytest_runtest_call
    item.runtest()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 1792, in runtest
    self.ihook.pytest_pyfunc_call(pyfuncitem=self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 113, in _multicall
    raise exception.with_traceback(exception.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 194, in pytest_pyfunc_call
    result = testfunction(**testargs)
  File "/workdir/geopandas-0.12.1/geopandas/io/tests/test_sql.py", line 353, in test_write_postgis_uppercase_tablename
    drop_table_if_exists(engine, table)
  File "/workdir/geopandas-0.12.1/geopandas/io/tests/test_sql.py", line 117, in drop_table_if_exists
    if sqlalchemy.inspect(conn_or_engine).has_table(table):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/inspection.py", line 145, in inspect
    ret = reg(subject)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/reflection.py", line 303, in _engine_insp
    return Inspector._construct(Inspector._init_engine, bind)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/reflection.py", line 236, in _construct
    init(self, bind)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/reflection.py", line 247, in _init_engine
    engine.connect().close()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3268, in connect
    return self._connection_cls(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 147, in __init__
    Connection._handle_dbapi_exception_noconnection(
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 2430, in _handle_dbapi_exception_noconnection
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 145, in __init__
    self._dbapi_connection = engine.raw_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3292, in raw_connection
    return self.pool.connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 452, in connect
    return _ConnectionFairy._checkout(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 1269, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 716, in checkout
    rec = pool._do_get()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 169, in _do_get
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 167, in _do_get
    return self._create_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 393, in _create_connection
    return _ConnectionRecord(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 678, in __init__
    self.__connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 902, in __connect
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 898, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 637, in connect
    return dialect.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 616, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) could not connect to server: No such file or directory
	Is the server running locally and accepting
	connections on Unix domain socket "/var/run/postgresql/.s.PGSQL.5432"?

(Background on this error at: https://sqlalche.me/e/20/e3q8)</failure></testcase><testcase classname="geopandas.io.tests.test_sql.TestIO" name="test_write_postgis_sqlalchemy_connection" time="0.165"><failure message="sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) could not connect to server: No such file or directory&#10;&#09;Is the server running locally and accepting&#10;&#09;connections on Unix domain socket &quot;/var/run/postgresql/.s.PGSQL.5432&quot;?&#10;&#10;(Background on this error at: https://sqlalche.me/e/20/e3q8)">Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 145, in __init__
    self._dbapi_connection = engine.raw_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3292, in raw_connection
    return self.pool.connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 452, in connect
    return _ConnectionFairy._checkout(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 1269, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 716, in checkout
    rec = pool._do_get()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 169, in _do_get
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 167, in _do_get
    return self._create_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 393, in _create_connection
    return _ConnectionRecord(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 678, in __init__
    self.__connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 902, in __connect
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 898, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 637, in connect
    return dialect.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 616, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: could not connect to server: No such file or directory
	Is the server running locally and accepting
	connections on Unix domain socket "/var/run/postgresql/.s.PGSQL.5432"?


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    result: Optional[TResult] = func()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 262, in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 177, in pytest_runtest_call
    raise e
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 169, in pytest_runtest_call
    item.runtest()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 1792, in runtest
    self.ihook.pytest_pyfunc_call(pyfuncitem=self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 113, in _multicall
    raise exception.with_traceback(exception.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 194, in pytest_pyfunc_call
    result = testfunction(**testargs)
  File "/workdir/geopandas-0.12.1/geopandas/io/tests/test_sql.py", line 364, in test_write_postgis_sqlalchemy_connection
    with engine_postgis.begin() as con:
  File "/usr/local/lib/python3.10/contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3232, in begin
    with self.connect() as conn:
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3268, in connect
    return self._connection_cls(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 147, in __init__
    Connection._handle_dbapi_exception_noconnection(
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 2430, in _handle_dbapi_exception_noconnection
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 145, in __init__
    self._dbapi_connection = engine.raw_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3292, in raw_connection
    return self.pool.connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 452, in connect
    return _ConnectionFairy._checkout(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 1269, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 716, in checkout
    rec = pool._do_get()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 169, in _do_get
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 167, in _do_get
    return self._create_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 393, in _create_connection
    return _ConnectionRecord(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 678, in __init__
    self.__connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 902, in __connect
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 898, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 637, in connect
    return dialect.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 616, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) could not connect to server: No such file or directory
	Is the server running locally and accepting
	connections on Unix domain socket "/var/run/postgresql/.s.PGSQL.5432"?

(Background on this error at: https://sqlalche.me/e/20/e3q8)</failure></testcase><testcase classname="geopandas.io.tests.test_sql.TestIO" name="test_write_postgis_fail_when_table_exists" time="0.260"><failure message="sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) could not connect to server: No such file or directory&#10;&#09;Is the server running locally and accepting&#10;&#09;connections on Unix domain socket &quot;/var/run/postgresql/.s.PGSQL.5432&quot;?&#10;&#10;(Background on this error at: https://sqlalche.me/e/20/e3q8)">Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 145, in __init__
    self._dbapi_connection = engine.raw_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3292, in raw_connection
    return self.pool.connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 452, in connect
    return _ConnectionFairy._checkout(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 1269, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 716, in checkout
    rec = pool._do_get()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 169, in _do_get
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 167, in _do_get
    return self._create_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 393, in _create_connection
    return _ConnectionRecord(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 678, in __init__
    self.__connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 902, in __connect
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 898, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 637, in connect
    return dialect.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 616, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: could not connect to server: No such file or directory
	Is the server running locally and accepting
	connections on Unix domain socket "/var/run/postgresql/.s.PGSQL.5432"?


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    result: Optional[TResult] = func()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 262, in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 177, in pytest_runtest_call
    raise e
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 169, in pytest_runtest_call
    item.runtest()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 1792, in runtest
    self.ihook.pytest_pyfunc_call(pyfuncitem=self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 113, in _multicall
    raise exception.with_traceback(exception.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 194, in pytest_pyfunc_call
    result = testfunction(**testargs)
  File "/workdir/geopandas-0.12.1/geopandas/io/tests/test_sql.py", line 386, in test_write_postgis_fail_when_table_exists
    write_postgis(df_nybb, con=engine, name=table, if_exists="replace")
  File "/workdir/geopandas-0.12.1/geopandas/io/sql.py", line 443, in _write_postgis
    with _get_conn(con) as connection:
  File "/usr/local/lib/python3.10/contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "/workdir/geopandas-0.12.1/geopandas/io/sql.py", line 37, in _get_conn
    with conn_or_engine.begin() as conn:
  File "/usr/local/lib/python3.10/contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3232, in begin
    with self.connect() as conn:
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3268, in connect
    return self._connection_cls(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 147, in __init__
    Connection._handle_dbapi_exception_noconnection(
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 2430, in _handle_dbapi_exception_noconnection
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 145, in __init__
    self._dbapi_connection = engine.raw_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3292, in raw_connection
    return self.pool.connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 452, in connect
    return _ConnectionFairy._checkout(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 1269, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 716, in checkout
    rec = pool._do_get()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 169, in _do_get
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 167, in _do_get
    return self._create_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 393, in _create_connection
    return _ConnectionRecord(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 678, in __init__
    self.__connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 902, in __connect
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 898, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 637, in connect
    return dialect.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 616, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) could not connect to server: No such file or directory
	Is the server running locally and accepting
	connections on Unix domain socket "/var/run/postgresql/.s.PGSQL.5432"?

(Background on this error at: https://sqlalche.me/e/20/e3q8)</failure></testcase><testcase classname="geopandas.io.tests.test_sql.TestIO" name="test_write_postgis_replace_when_table_exists" time="0.117"><failure message="sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) could not connect to server: No such file or directory&#10;&#09;Is the server running locally and accepting&#10;&#09;connections on Unix domain socket &quot;/var/run/postgresql/.s.PGSQL.5432&quot;?&#10;&#10;(Background on this error at: https://sqlalche.me/e/20/e3q8)">Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 145, in __init__
    self._dbapi_connection = engine.raw_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3292, in raw_connection
    return self.pool.connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 452, in connect
    return _ConnectionFairy._checkout(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 1269, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 716, in checkout
    rec = pool._do_get()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 169, in _do_get
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 167, in _do_get
    return self._create_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 393, in _create_connection
    return _ConnectionRecord(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 678, in __init__
    self.__connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 902, in __connect
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 898, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 637, in connect
    return dialect.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 616, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: could not connect to server: No such file or directory
	Is the server running locally and accepting
	connections on Unix domain socket "/var/run/postgresql/.s.PGSQL.5432"?


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    result: Optional[TResult] = func()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 262, in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 177, in pytest_runtest_call
    raise e
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 169, in pytest_runtest_call
    item.runtest()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 1792, in runtest
    self.ihook.pytest_pyfunc_call(pyfuncitem=self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 113, in _multicall
    raise exception.with_traceback(exception.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 194, in pytest_pyfunc_call
    result = testfunction(**testargs)
  File "/workdir/geopandas-0.12.1/geopandas/io/tests/test_sql.py", line 405, in test_write_postgis_replace_when_table_exists
    write_postgis(df_nybb, con=engine, name=table, if_exists="replace")
  File "/workdir/geopandas-0.12.1/geopandas/io/sql.py", line 443, in _write_postgis
    with _get_conn(con) as connection:
  File "/usr/local/lib/python3.10/contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "/workdir/geopandas-0.12.1/geopandas/io/sql.py", line 37, in _get_conn
    with conn_or_engine.begin() as conn:
  File "/usr/local/lib/python3.10/contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3232, in begin
    with self.connect() as conn:
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3268, in connect
    return self._connection_cls(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 147, in __init__
    Connection._handle_dbapi_exception_noconnection(
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 2430, in _handle_dbapi_exception_noconnection
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 145, in __init__
    self._dbapi_connection = engine.raw_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3292, in raw_connection
    return self.pool.connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 452, in connect
    return _ConnectionFairy._checkout(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 1269, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 716, in checkout
    rec = pool._do_get()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 169, in _do_get
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 167, in _do_get
    return self._create_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 393, in _create_connection
    return _ConnectionRecord(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 678, in __init__
    self.__connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 902, in __connect
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 898, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 637, in connect
    return dialect.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 616, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) could not connect to server: No such file or directory
	Is the server running locally and accepting
	connections on Unix domain socket "/var/run/postgresql/.s.PGSQL.5432"?

(Background on this error at: https://sqlalche.me/e/20/e3q8)</failure></testcase><testcase classname="geopandas.io.tests.test_sql.TestIO" name="test_write_postgis_append_when_table_exists" time="0.207"><failure message="sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) could not connect to server: No such file or directory&#10;&#09;Is the server running locally and accepting&#10;&#09;connections on Unix domain socket &quot;/var/run/postgresql/.s.PGSQL.5432&quot;?&#10;&#10;(Background on this error at: https://sqlalche.me/e/20/e3q8)">Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 145, in __init__
    self._dbapi_connection = engine.raw_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3292, in raw_connection
    return self.pool.connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 452, in connect
    return _ConnectionFairy._checkout(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 1269, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 716, in checkout
    rec = pool._do_get()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 169, in _do_get
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 167, in _do_get
    return self._create_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 393, in _create_connection
    return _ConnectionRecord(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 678, in __init__
    self.__connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 902, in __connect
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 898, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 637, in connect
    return dialect.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 616, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: could not connect to server: No such file or directory
	Is the server running locally and accepting
	connections on Unix domain socket "/var/run/postgresql/.s.PGSQL.5432"?


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    result: Optional[TResult] = func()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 262, in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 177, in pytest_runtest_call
    raise e
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 169, in pytest_runtest_call
    item.runtest()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 1792, in runtest
    self.ihook.pytest_pyfunc_call(pyfuncitem=self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 113, in _multicall
    raise exception.with_traceback(exception.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 194, in pytest_pyfunc_call
    result = testfunction(**testargs)
  File "/workdir/geopandas-0.12.1/geopandas/io/tests/test_sql.py", line 423, in test_write_postgis_append_when_table_exists
    write_postgis(df_nybb, con=engine, name=table, if_exists="replace")
  File "/workdir/geopandas-0.12.1/geopandas/io/sql.py", line 443, in _write_postgis
    with _get_conn(con) as connection:
  File "/usr/local/lib/python3.10/contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "/workdir/geopandas-0.12.1/geopandas/io/sql.py", line 37, in _get_conn
    with conn_or_engine.begin() as conn:
  File "/usr/local/lib/python3.10/contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3232, in begin
    with self.connect() as conn:
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3268, in connect
    return self._connection_cls(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 147, in __init__
    Connection._handle_dbapi_exception_noconnection(
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 2430, in _handle_dbapi_exception_noconnection
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 145, in __init__
    self._dbapi_connection = engine.raw_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3292, in raw_connection
    return self.pool.connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 452, in connect
    return _ConnectionFairy._checkout(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 1269, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 716, in checkout
    rec = pool._do_get()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 169, in _do_get
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 167, in _do_get
    return self._create_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 393, in _create_connection
    return _ConnectionRecord(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 678, in __init__
    self.__connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 902, in __connect
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 898, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 637, in connect
    return dialect.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 616, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) could not connect to server: No such file or directory
	Is the server running locally and accepting
	connections on Unix domain socket "/var/run/postgresql/.s.PGSQL.5432"?

(Background on this error at: https://sqlalche.me/e/20/e3q8)</failure></testcase><testcase classname="geopandas.io.tests.test_sql.TestIO" name="test_write_postgis_without_crs" time="0.211"><failure message="sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) could not connect to server: No such file or directory&#10;&#09;Is the server running locally and accepting&#10;&#09;connections on Unix domain socket &quot;/var/run/postgresql/.s.PGSQL.5432&quot;?&#10;&#10;(Background on this error at: https://sqlalche.me/e/20/e3q8)">Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 145, in __init__
    self._dbapi_connection = engine.raw_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3292, in raw_connection
    return self.pool.connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 452, in connect
    return _ConnectionFairy._checkout(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 1269, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 716, in checkout
    rec = pool._do_get()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 169, in _do_get
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 167, in _do_get
    return self._create_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 393, in _create_connection
    return _ConnectionRecord(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 678, in __init__
    self.__connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 902, in __connect
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 898, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 637, in connect
    return dialect.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 616, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: could not connect to server: No such file or directory
	Is the server running locally and accepting
	connections on Unix domain socket "/var/run/postgresql/.s.PGSQL.5432"?


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    result: Optional[TResult] = func()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 262, in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 177, in pytest_runtest_call
    raise e
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 169, in pytest_runtest_call
    item.runtest()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 1792, in runtest
    self.ihook.pytest_pyfunc_call(pyfuncitem=self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 113, in _multicall
    raise exception.with_traceback(exception.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 194, in pytest_pyfunc_call
    result = testfunction(**testargs)
  File "/workdir/geopandas-0.12.1/geopandas/io/tests/test_sql.py", line 452, in test_write_postgis_without_crs
    write_postgis(df_nybb, con=engine, name=table, if_exists="replace")
  File "/workdir/geopandas-0.12.1/geopandas/io/sql.py", line 443, in _write_postgis
    with _get_conn(con) as connection:
  File "/usr/local/lib/python3.10/contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "/workdir/geopandas-0.12.1/geopandas/io/sql.py", line 37, in _get_conn
    with conn_or_engine.begin() as conn:
  File "/usr/local/lib/python3.10/contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3232, in begin
    with self.connect() as conn:
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3268, in connect
    return self._connection_cls(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 147, in __init__
    Connection._handle_dbapi_exception_noconnection(
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 2430, in _handle_dbapi_exception_noconnection
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 145, in __init__
    self._dbapi_connection = engine.raw_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3292, in raw_connection
    return self.pool.connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 452, in connect
    return _ConnectionFairy._checkout(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 1269, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 716, in checkout
    rec = pool._do_get()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 169, in _do_get
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 167, in _do_get
    return self._create_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 393, in _create_connection
    return _ConnectionRecord(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 678, in __init__
    self.__connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 902, in __connect
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 898, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 637, in connect
    return dialect.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 616, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) could not connect to server: No such file or directory
	Is the server running locally and accepting
	connections on Unix domain socket "/var/run/postgresql/.s.PGSQL.5432"?

(Background on this error at: https://sqlalche.me/e/20/e3q8)</failure></testcase><testcase classname="geopandas.io.tests.test_sql.TestIO" name="test_write_postgis_with_esri_authority" time="0.278"><failure message="sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) could not connect to server: No such file or directory&#10;&#09;Is the server running locally and accepting&#10;&#09;connections on Unix domain socket &quot;/var/run/postgresql/.s.PGSQL.5432&quot;?&#10;&#10;(Background on this error at: https://sqlalche.me/e/20/e3q8)">Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 145, in __init__
    self._dbapi_connection = engine.raw_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3292, in raw_connection
    return self.pool.connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 452, in connect
    return _ConnectionFairy._checkout(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 1269, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 716, in checkout
    rec = pool._do_get()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 169, in _do_get
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 167, in _do_get
    return self._create_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 393, in _create_connection
    return _ConnectionRecord(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 678, in __init__
    self.__connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 902, in __connect
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 898, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 637, in connect
    return dialect.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 616, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: could not connect to server: No such file or directory
	Is the server running locally and accepting
	connections on Unix domain socket "/var/run/postgresql/.s.PGSQL.5432"?


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    result: Optional[TResult] = func()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 262, in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 177, in pytest_runtest_call
    raise e
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 169, in pytest_runtest_call
    item.runtest()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 1792, in runtest
    self.ihook.pytest_pyfunc_call(pyfuncitem=self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 113, in _multicall
    raise exception.with_traceback(exception.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 194, in pytest_pyfunc_call
    result = testfunction(**testargs)
  File "/workdir/geopandas-0.12.1/geopandas/io/tests/test_sql.py", line 472, in test_write_postgis_with_esri_authority
    write_postgis(df_nybb_esri, con=engine, name=table, if_exists="replace")
  File "/workdir/geopandas-0.12.1/geopandas/io/sql.py", line 443, in _write_postgis
    with _get_conn(con) as connection:
  File "/usr/local/lib/python3.10/contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "/workdir/geopandas-0.12.1/geopandas/io/sql.py", line 37, in _get_conn
    with conn_or_engine.begin() as conn:
  File "/usr/local/lib/python3.10/contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3232, in begin
    with self.connect() as conn:
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3268, in connect
    return self._connection_cls(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 147, in __init__
    Connection._handle_dbapi_exception_noconnection(
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 2430, in _handle_dbapi_exception_noconnection
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 145, in __init__
    self._dbapi_connection = engine.raw_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3292, in raw_connection
    return self.pool.connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 452, in connect
    return _ConnectionFairy._checkout(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 1269, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 716, in checkout
    rec = pool._do_get()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 169, in _do_get
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 167, in _do_get
    return self._create_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 393, in _create_connection
    return _ConnectionRecord(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 678, in __init__
    self.__connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 902, in __connect
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 898, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 637, in connect
    return dialect.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 616, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) could not connect to server: No such file or directory
	Is the server running locally and accepting
	connections on Unix domain socket "/var/run/postgresql/.s.PGSQL.5432"?

(Background on this error at: https://sqlalche.me/e/20/e3q8)</failure></testcase><testcase classname="geopandas.io.tests.test_sql.TestIO" name="test_write_postgis_geometry_collection" time="0.008"><failure message="sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) could not connect to server: No such file or directory&#10;&#09;Is the server running locally and accepting&#10;&#09;connections on Unix domain socket &quot;/var/run/postgresql/.s.PGSQL.5432&quot;?&#10;&#10;(Background on this error at: https://sqlalche.me/e/20/e3q8)">Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 145, in __init__
    self._dbapi_connection = engine.raw_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3292, in raw_connection
    return self.pool.connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 452, in connect
    return _ConnectionFairy._checkout(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 1269, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 716, in checkout
    rec = pool._do_get()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 169, in _do_get
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 167, in _do_get
    return self._create_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 393, in _create_connection
    return _ConnectionRecord(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 678, in __init__
    self.__connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 902, in __connect
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 898, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 637, in connect
    return dialect.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 616, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: could not connect to server: No such file or directory
	Is the server running locally and accepting
	connections on Unix domain socket "/var/run/postgresql/.s.PGSQL.5432"?


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    result: Optional[TResult] = func()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 262, in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 177, in pytest_runtest_call
    raise e
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 169, in pytest_runtest_call
    item.runtest()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 1792, in runtest
    self.ihook.pytest_pyfunc_call(pyfuncitem=self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 113, in _multicall
    raise exception.with_traceback(exception.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 194, in pytest_pyfunc_call
    result = testfunction(**testargs)
  File "/workdir/geopandas-0.12.1/geopandas/io/tests/test_sql.py", line 491, in test_write_postgis_geometry_collection
    write_postgis(df_geom_collection, con=engine, name=table, if_exists="replace")
  File "/workdir/geopandas-0.12.1/geopandas/io/sql.py", line 443, in _write_postgis
    with _get_conn(con) as connection:
  File "/usr/local/lib/python3.10/contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "/workdir/geopandas-0.12.1/geopandas/io/sql.py", line 37, in _get_conn
    with conn_or_engine.begin() as conn:
  File "/usr/local/lib/python3.10/contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3232, in begin
    with self.connect() as conn:
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3268, in connect
    return self._connection_cls(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 147, in __init__
    Connection._handle_dbapi_exception_noconnection(
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 2430, in _handle_dbapi_exception_noconnection
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 145, in __init__
    self._dbapi_connection = engine.raw_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3292, in raw_connection
    return self.pool.connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 452, in connect
    return _ConnectionFairy._checkout(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 1269, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 716, in checkout
    rec = pool._do_get()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 169, in _do_get
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 167, in _do_get
    return self._create_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 393, in _create_connection
    return _ConnectionRecord(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 678, in __init__
    self.__connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 902, in __connect
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 898, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 637, in connect
    return dialect.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 616, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) could not connect to server: No such file or directory
	Is the server running locally and accepting
	connections on Unix domain socket "/var/run/postgresql/.s.PGSQL.5432"?

(Background on this error at: https://sqlalche.me/e/20/e3q8)</failure></testcase><testcase classname="geopandas.io.tests.test_sql.TestIO" name="test_write_postgis_mixed_geometry_types" time="0.008"><failure message="sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) could not connect to server: No such file or directory&#10;&#09;Is the server running locally and accepting&#10;&#09;connections on Unix domain socket &quot;/var/run/postgresql/.s.PGSQL.5432&quot;?&#10;&#10;(Background on this error at: https://sqlalche.me/e/20/e3q8)">Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 145, in __init__
    self._dbapi_connection = engine.raw_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3292, in raw_connection
    return self.pool.connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 452, in connect
    return _ConnectionFairy._checkout(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 1269, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 716, in checkout
    rec = pool._do_get()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 169, in _do_get
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 167, in _do_get
    return self._create_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 393, in _create_connection
    return _ConnectionRecord(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 678, in __init__
    self.__connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 902, in __connect
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 898, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 637, in connect
    return dialect.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 616, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: could not connect to server: No such file or directory
	Is the server running locally and accepting
	connections on Unix domain socket "/var/run/postgresql/.s.PGSQL.5432"?


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    result: Optional[TResult] = func()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 262, in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 177, in pytest_runtest_call
    raise e
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 169, in pytest_runtest_call
    item.runtest()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 1792, in runtest
    self.ihook.pytest_pyfunc_call(pyfuncitem=self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 113, in _multicall
    raise exception.with_traceback(exception.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 194, in pytest_pyfunc_call
    result = testfunction(**testargs)
  File "/workdir/geopandas-0.12.1/geopandas/io/tests/test_sql.py", line 514, in test_write_postgis_mixed_geometry_types
    write_postgis(
  File "/workdir/geopandas-0.12.1/geopandas/io/sql.py", line 443, in _write_postgis
    with _get_conn(con) as connection:
  File "/usr/local/lib/python3.10/contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "/workdir/geopandas-0.12.1/geopandas/io/sql.py", line 37, in _get_conn
    with conn_or_engine.begin() as conn:
  File "/usr/local/lib/python3.10/contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3232, in begin
    with self.connect() as conn:
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3268, in connect
    return self._connection_cls(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 147, in __init__
    Connection._handle_dbapi_exception_noconnection(
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 2430, in _handle_dbapi_exception_noconnection
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 145, in __init__
    self._dbapi_connection = engine.raw_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3292, in raw_connection
    return self.pool.connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 452, in connect
    return _ConnectionFairy._checkout(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 1269, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 716, in checkout
    rec = pool._do_get()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 169, in _do_get
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 167, in _do_get
    return self._create_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 393, in _create_connection
    return _ConnectionRecord(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 678, in __init__
    self.__connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 902, in __connect
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 898, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 637, in connect
    return dialect.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 616, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) could not connect to server: No such file or directory
	Is the server running locally and accepting
	connections on Unix domain socket "/var/run/postgresql/.s.PGSQL.5432"?

(Background on this error at: https://sqlalche.me/e/20/e3q8)</failure></testcase><testcase classname="geopandas.io.tests.test_sql.TestIO" name="test_write_postgis_linear_ring" time="0.008"><failure message="sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) could not connect to server: No such file or directory&#10;&#09;Is the server running locally and accepting&#10;&#09;connections on Unix domain socket &quot;/var/run/postgresql/.s.PGSQL.5432&quot;?&#10;&#10;(Background on this error at: https://sqlalche.me/e/20/e3q8)">Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 145, in __init__
    self._dbapi_connection = engine.raw_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3292, in raw_connection
    return self.pool.connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 452, in connect
    return _ConnectionFairy._checkout(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 1269, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 716, in checkout
    rec = pool._do_get()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 169, in _do_get
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 167, in _do_get
    return self._create_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 393, in _create_connection
    return _ConnectionRecord(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 678, in __init__
    self.__connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 902, in __connect
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 898, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 637, in connect
    return dialect.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 616, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: could not connect to server: No such file or directory
	Is the server running locally and accepting
	connections on Unix domain socket "/var/run/postgresql/.s.PGSQL.5432"?


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    result: Optional[TResult] = func()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 262, in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 177, in pytest_runtest_call
    raise e
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 169, in pytest_runtest_call
    item.runtest()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 1792, in runtest
    self.ihook.pytest_pyfunc_call(pyfuncitem=self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 113, in _multicall
    raise exception.with_traceback(exception.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 194, in pytest_pyfunc_call
    result = testfunction(**testargs)
  File "/workdir/geopandas-0.12.1/geopandas/io/tests/test_sql.py", line 535, in test_write_postgis_linear_ring
    write_postgis(df_linear_ring, con=engine, name=table, if_exists="replace")
  File "/workdir/geopandas-0.12.1/geopandas/io/sql.py", line 443, in _write_postgis
    with _get_conn(con) as connection:
  File "/usr/local/lib/python3.10/contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "/workdir/geopandas-0.12.1/geopandas/io/sql.py", line 37, in _get_conn
    with conn_or_engine.begin() as conn:
  File "/usr/local/lib/python3.10/contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3232, in begin
    with self.connect() as conn:
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3268, in connect
    return self._connection_cls(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 147, in __init__
    Connection._handle_dbapi_exception_noconnection(
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 2430, in _handle_dbapi_exception_noconnection
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 145, in __init__
    self._dbapi_connection = engine.raw_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3292, in raw_connection
    return self.pool.connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 452, in connect
    return _ConnectionFairy._checkout(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 1269, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 716, in checkout
    rec = pool._do_get()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 169, in _do_get
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 167, in _do_get
    return self._create_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 393, in _create_connection
    return _ConnectionRecord(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 678, in __init__
    self.__connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 902, in __connect
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 898, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 637, in connect
    return dialect.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 616, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) could not connect to server: No such file or directory
	Is the server running locally and accepting
	connections on Unix domain socket "/var/run/postgresql/.s.PGSQL.5432"?

(Background on this error at: https://sqlalche.me/e/20/e3q8)</failure></testcase><testcase classname="geopandas.io.tests.test_sql.TestIO" name="test_write_postgis_in_chunks" time="0.007"><failure message="sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) could not connect to server: No such file or directory&#10;&#09;Is the server running locally and accepting&#10;&#09;connections on Unix domain socket &quot;/var/run/postgresql/.s.PGSQL.5432&quot;?&#10;&#10;(Background on this error at: https://sqlalche.me/e/20/e3q8)">Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 145, in __init__
    self._dbapi_connection = engine.raw_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3292, in raw_connection
    return self.pool.connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 452, in connect
    return _ConnectionFairy._checkout(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 1269, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 716, in checkout
    rec = pool._do_get()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 169, in _do_get
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 167, in _do_get
    return self._create_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 393, in _create_connection
    return _ConnectionRecord(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 678, in __init__
    self.__connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 902, in __connect
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 898, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 637, in connect
    return dialect.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 616, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: could not connect to server: No such file or directory
	Is the server running locally and accepting
	connections on Unix domain socket "/var/run/postgresql/.s.PGSQL.5432"?


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    result: Optional[TResult] = func()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 262, in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 177, in pytest_runtest_call
    raise e
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 169, in pytest_runtest_call
    item.runtest()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 1792, in runtest
    self.ihook.pytest_pyfunc_call(pyfuncitem=self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 113, in _multicall
    raise exception.with_traceback(exception.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 194, in pytest_pyfunc_call
    result = testfunction(**testargs)
  File "/workdir/geopandas-0.12.1/geopandas/io/tests/test_sql.py", line 553, in test_write_postgis_in_chunks
    write_postgis(
  File "/workdir/geopandas-0.12.1/geopandas/io/sql.py", line 443, in _write_postgis
    with _get_conn(con) as connection:
  File "/usr/local/lib/python3.10/contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "/workdir/geopandas-0.12.1/geopandas/io/sql.py", line 37, in _get_conn
    with conn_or_engine.begin() as conn:
  File "/usr/local/lib/python3.10/contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3232, in begin
    with self.connect() as conn:
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3268, in connect
    return self._connection_cls(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 147, in __init__
    Connection._handle_dbapi_exception_noconnection(
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 2430, in _handle_dbapi_exception_noconnection
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 145, in __init__
    self._dbapi_connection = engine.raw_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3292, in raw_connection
    return self.pool.connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 452, in connect
    return _ConnectionFairy._checkout(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 1269, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 716, in checkout
    rec = pool._do_get()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 169, in _do_get
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 167, in _do_get
    return self._create_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 393, in _create_connection
    return _ConnectionRecord(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 678, in __init__
    self.__connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 902, in __connect
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 898, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 637, in connect
    return dialect.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 616, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) could not connect to server: No such file or directory
	Is the server running locally and accepting
	connections on Unix domain socket "/var/run/postgresql/.s.PGSQL.5432"?

(Background on this error at: https://sqlalche.me/e/20/e3q8)</failure></testcase><testcase classname="geopandas.io.tests.test_sql.TestIO" name="test_write_postgis_to_different_schema" time="0.169"><failure message="AttributeError: 'Engine' object has no attribute 'execute'">Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    result: Optional[TResult] = func()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 262, in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 177, in pytest_runtest_call
    raise e
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 169, in pytest_runtest_call
    item.runtest()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 1792, in runtest
    self.ihook.pytest_pyfunc_call(pyfuncitem=self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 113, in _multicall
    raise exception.with_traceback(exception.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 194, in pytest_pyfunc_call
    result = testfunction(**testargs)
  File "/workdir/geopandas-0.12.1/geopandas/io/tests/test_sql.py", line 583, in test_write_postgis_to_different_schema
    engine.execute(sql)
AttributeError: 'Engine' object has no attribute 'execute'</failure></testcase><testcase classname="geopandas.io.tests.test_sql.TestIO" name="test_write_postgis_to_different_schema_when_table_exists" time="0.074"><failure message="AttributeError: 'Engine' object has no attribute 'execute'">Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    result: Optional[TResult] = func()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 262, in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 177, in pytest_runtest_call
    raise e
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 169, in pytest_runtest_call
    item.runtest()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 1792, in runtest
    self.ihook.pytest_pyfunc_call(pyfuncitem=self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 113, in _multicall
    raise exception.with_traceback(exception.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 194, in pytest_pyfunc_call
    result = testfunction(**testargs)
  File "/workdir/geopandas-0.12.1/geopandas/io/tests/test_sql.py", line 607, in test_write_postgis_to_different_schema_when_table_exists
    engine.execute(sql)
AttributeError: 'Engine' object has no attribute 'execute'</failure></testcase><testcase classname="geopandas.io.tests.test_sql.TestIO" name="test_write_postgis_3D_geometries" time="0.007"><failure message="sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) could not connect to server: No such file or directory&#10;&#09;Is the server running locally and accepting&#10;&#09;connections on Unix domain socket &quot;/var/run/postgresql/.s.PGSQL.5432&quot;?&#10;&#10;(Background on this error at: https://sqlalche.me/e/20/e3q8)">Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 145, in __init__
    self._dbapi_connection = engine.raw_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3292, in raw_connection
    return self.pool.connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 452, in connect
    return _ConnectionFairy._checkout(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 1269, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 716, in checkout
    rec = pool._do_get()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 169, in _do_get
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 167, in _do_get
    return self._create_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 393, in _create_connection
    return _ConnectionRecord(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 678, in __init__
    self.__connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 902, in __connect
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 898, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 637, in connect
    return dialect.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 616, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: could not connect to server: No such file or directory
	Is the server running locally and accepting
	connections on Unix domain socket "/var/run/postgresql/.s.PGSQL.5432"?


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    result: Optional[TResult] = func()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 262, in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 177, in pytest_runtest_call
    raise e
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 169, in pytest_runtest_call
    item.runtest()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 1792, in runtest
    self.ihook.pytest_pyfunc_call(pyfuncitem=self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 113, in _multicall
    raise exception.with_traceback(exception.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 194, in pytest_pyfunc_call
    result = testfunction(**testargs)
  File "/workdir/geopandas-0.12.1/geopandas/io/tests/test_sql.py", line 645, in test_write_postgis_3D_geometries
    write_postgis(df_3D_geoms, con=engine, name=table, if_exists="replace")
  File "/workdir/geopandas-0.12.1/geopandas/io/sql.py", line 443, in _write_postgis
    with _get_conn(con) as connection:
  File "/usr/local/lib/python3.10/contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "/workdir/geopandas-0.12.1/geopandas/io/sql.py", line 37, in _get_conn
    with conn_or_engine.begin() as conn:
  File "/usr/local/lib/python3.10/contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3232, in begin
    with self.connect() as conn:
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3268, in connect
    return self._connection_cls(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 147, in __init__
    Connection._handle_dbapi_exception_noconnection(
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 2430, in _handle_dbapi_exception_noconnection
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 145, in __init__
    self._dbapi_connection = engine.raw_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3292, in raw_connection
    return self.pool.connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 452, in connect
    return _ConnectionFairy._checkout(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 1269, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 716, in checkout
    rec = pool._do_get()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 169, in _do_get
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 167, in _do_get
    return self._create_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 393, in _create_connection
    return _ConnectionRecord(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 678, in __init__
    self.__connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 902, in __connect
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 898, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 637, in connect
    return dialect.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 616, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) could not connect to server: No such file or directory
	Is the server running locally and accepting
	connections on Unix domain socket "/var/run/postgresql/.s.PGSQL.5432"?

(Background on this error at: https://sqlalche.me/e/20/e3q8)</failure></testcase><testcase classname="geopandas.io.tests.test_sql.TestIO" name="test_row_order" time="0.211"><failure message="sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) could not connect to server: No such file or directory&#10;&#09;Is the server running locally and accepting&#10;&#09;connections on Unix domain socket &quot;/var/run/postgresql/.s.PGSQL.5432&quot;?&#10;&#10;(Background on this error at: https://sqlalche.me/e/20/e3q8)">Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 145, in __init__
    self._dbapi_connection = engine.raw_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3292, in raw_connection
    return self.pool.connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 452, in connect
    return _ConnectionFairy._checkout(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 1269, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 716, in checkout
    rec = pool._do_get()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 169, in _do_get
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 167, in _do_get
    return self._create_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 393, in _create_connection
    return _ConnectionRecord(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 678, in __init__
    self.__connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 902, in __connect
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 898, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 637, in connect
    return dialect.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 616, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: could not connect to server: No such file or directory
	Is the server running locally and accepting
	connections on Unix domain socket "/var/run/postgresql/.s.PGSQL.5432"?


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    result: Optional[TResult] = func()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 262, in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 177, in pytest_runtest_call
    raise e
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 169, in pytest_runtest_call
    item.runtest()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 1792, in runtest
    self.ihook.pytest_pyfunc_call(pyfuncitem=self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 113, in _multicall
    raise exception.with_traceback(exception.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 194, in pytest_pyfunc_call
    result = testfunction(**testargs)
  File "/workdir/geopandas-0.12.1/geopandas/io/tests/test_sql.py", line 661, in test_row_order
    write_postgis(df_nybb, con=engine, name=table, if_exists="replace")
  File "/workdir/geopandas-0.12.1/geopandas/io/sql.py", line 443, in _write_postgis
    with _get_conn(con) as connection:
  File "/usr/local/lib/python3.10/contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "/workdir/geopandas-0.12.1/geopandas/io/sql.py", line 37, in _get_conn
    with conn_or_engine.begin() as conn:
  File "/usr/local/lib/python3.10/contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3232, in begin
    with self.connect() as conn:
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3268, in connect
    return self._connection_cls(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 147, in __init__
    Connection._handle_dbapi_exception_noconnection(
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 2430, in _handle_dbapi_exception_noconnection
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 145, in __init__
    self._dbapi_connection = engine.raw_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3292, in raw_connection
    return self.pool.connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 452, in connect
    return _ConnectionFairy._checkout(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 1269, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 716, in checkout
    rec = pool._do_get()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 169, in _do_get
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 167, in _do_get
    return self._create_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 393, in _create_connection
    return _ConnectionRecord(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 678, in __init__
    self.__connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 902, in __connect
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 898, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 637, in connect
    return dialect.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 616, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) could not connect to server: No such file or directory
	Is the server running locally and accepting
	connections on Unix domain socket "/var/run/postgresql/.s.PGSQL.5432"?

(Background on this error at: https://sqlalche.me/e/20/e3q8)</failure></testcase><testcase classname="geopandas.io.tests.test_sql.TestIO" name="test_append_before_table_exists" time="0.078"><failure message="sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) could not connect to server: No such file or directory&#10;&#09;Is the server running locally and accepting&#10;&#09;connections on Unix domain socket &quot;/var/run/postgresql/.s.PGSQL.5432&quot;?&#10;&#10;(Background on this error at: https://sqlalche.me/e/20/e3q8)">Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 145, in __init__
    self._dbapi_connection = engine.raw_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3292, in raw_connection
    return self.pool.connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 452, in connect
    return _ConnectionFairy._checkout(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 1269, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 716, in checkout
    rec = pool._do_get()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 169, in _do_get
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 167, in _do_get
    return self._create_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 393, in _create_connection
    return _ConnectionRecord(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 678, in __init__
    self.__connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 902, in __connect
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 898, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 637, in connect
    return dialect.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 616, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: could not connect to server: No such file or directory
	Is the server running locally and accepting
	connections on Unix domain socket "/var/run/postgresql/.s.PGSQL.5432"?


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    result: Optional[TResult] = func()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 262, in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 177, in pytest_runtest_call
    raise e
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 169, in pytest_runtest_call
    item.runtest()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 1792, in runtest
    self.ihook.pytest_pyfunc_call(pyfuncitem=self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 113, in _multicall
    raise exception.with_traceback(exception.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 194, in pytest_pyfunc_call
    result = testfunction(**testargs)
  File "/workdir/geopandas-0.12.1/geopandas/io/tests/test_sql.py", line 676, in test_append_before_table_exists
    drop_table_if_exists(engine, table)
  File "/workdir/geopandas-0.12.1/geopandas/io/tests/test_sql.py", line 117, in drop_table_if_exists
    if sqlalchemy.inspect(conn_or_engine).has_table(table):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/inspection.py", line 145, in inspect
    ret = reg(subject)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/reflection.py", line 303, in _engine_insp
    return Inspector._construct(Inspector._init_engine, bind)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/reflection.py", line 236, in _construct
    init(self, bind)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/reflection.py", line 247, in _init_engine
    engine.connect().close()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3268, in connect
    return self._connection_cls(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 147, in __init__
    Connection._handle_dbapi_exception_noconnection(
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 2430, in _handle_dbapi_exception_noconnection
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 145, in __init__
    self._dbapi_connection = engine.raw_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3292, in raw_connection
    return self.pool.connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 452, in connect
    return _ConnectionFairy._checkout(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 1269, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 716, in checkout
    rec = pool._do_get()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 169, in _do_get
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 167, in _do_get
    return self._create_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 393, in _create_connection
    return _ConnectionRecord(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 678, in __init__
    self.__connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 902, in __connect
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 898, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 637, in connect
    return dialect.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 616, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) could not connect to server: No such file or directory
	Is the server running locally and accepting
	connections on Unix domain socket "/var/run/postgresql/.s.PGSQL.5432"?

(Background on this error at: https://sqlalche.me/e/20/e3q8)</failure></testcase><testcase classname="geopandas.io.tests.test_sql.TestIO" name="test_append_with_different_crs" time="0.217"><failure message="sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) could not connect to server: No such file or directory&#10;&#09;Is the server running locally and accepting&#10;&#09;connections on Unix domain socket &quot;/var/run/postgresql/.s.PGSQL.5432&quot;?&#10;&#10;(Background on this error at: https://sqlalche.me/e/20/e3q8)">Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 145, in __init__
    self._dbapi_connection = engine.raw_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3292, in raw_connection
    return self.pool.connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 452, in connect
    return _ConnectionFairy._checkout(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 1269, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 716, in checkout
    rec = pool._do_get()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 169, in _do_get
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 167, in _do_get
    return self._create_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 393, in _create_connection
    return _ConnectionRecord(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 678, in __init__
    self.__connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 902, in __connect
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 898, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 637, in connect
    return dialect.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 616, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: could not connect to server: No such file or directory
	Is the server running locally and accepting
	connections on Unix domain socket "/var/run/postgresql/.s.PGSQL.5432"?


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    result: Optional[TResult] = func()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 262, in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 177, in pytest_runtest_call
    raise e
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 169, in pytest_runtest_call
    item.runtest()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 1792, in runtest
    self.ihook.pytest_pyfunc_call(pyfuncitem=self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 113, in _multicall
    raise exception.with_traceback(exception.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 194, in pytest_pyfunc_call
    result = testfunction(**testargs)
  File "/workdir/geopandas-0.12.1/geopandas/io/tests/test_sql.py", line 692, in test_append_with_different_crs
    write_postgis(df_nybb, con=engine, name=table, if_exists="replace")
  File "/workdir/geopandas-0.12.1/geopandas/io/sql.py", line 443, in _write_postgis
    with _get_conn(con) as connection:
  File "/usr/local/lib/python3.10/contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "/workdir/geopandas-0.12.1/geopandas/io/sql.py", line 37, in _get_conn
    with conn_or_engine.begin() as conn:
  File "/usr/local/lib/python3.10/contextlib.py", line 135, in __enter__
    return next(self.gen)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3232, in begin
    with self.connect() as conn:
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3268, in connect
    return self._connection_cls(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 147, in __init__
    Connection._handle_dbapi_exception_noconnection(
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 2430, in _handle_dbapi_exception_noconnection
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 145, in __init__
    self._dbapi_connection = engine.raw_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3292, in raw_connection
    return self.pool.connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 452, in connect
    return _ConnectionFairy._checkout(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 1269, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 716, in checkout
    rec = pool._do_get()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 169, in _do_get
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 167, in _do_get
    return self._create_connection()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 393, in _create_connection
    return _ConnectionRecord(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 678, in __init__
    self.__connect()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 902, in __connect
    with util.safe_reraise():
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 898, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 637, in connect
    return dialect.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 616, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) could not connect to server: No such file or directory
	Is the server running locally and accepting
	connections on Unix domain socket "/var/run/postgresql/.s.PGSQL.5432"?

(Background on this error at: https://sqlalche.me/e/20/e3q8)</failure></testcase><testcase classname="geopandas.tests.test_api" name="test_no_additional_imports" time="0.411" /><testcase classname="geopandas.tests.test_array" name="test_points" time="0.001" /><testcase classname="geopandas.tests.test_array" name="test_points_from_xy" time="0.005" /><testcase classname="geopandas.tests.test_array" name="test_from_shapely" time="0.001" /><testcase classname="geopandas.tests.test_array" name="test_from_shapely_geo_interface" time="0.001" /><testcase classname="geopandas.tests.test_array" name="test_from_wkb" time="0.002" /><testcase classname="geopandas.tests.test_array" name="test_from_wkb_hex" time="0.001" /><testcase classname="geopandas.tests.test_array" name="test_to_wkb" time="0.001" /><testcase classname="geopandas.tests.test_array" name="test_from_wkt[str]" time="0.002" /><testcase classname="geopandas.tests.test_array" name="test_from_wkt[bytes]" time="0.002" /><testcase classname="geopandas.tests.test_array" name="test_to_wkt" time="0.001" /><testcase classname="geopandas.tests.test_array" name="test_predicates_vector_scalar[contains-args0]" time="0.002" /><testcase classname="geopandas.tests.test_array" name="test_predicates_vector_scalar[covers-args1]" time="0.001" /><testcase classname="geopandas.tests.test_array" name="test_predicates_vector_scalar[crosses-args2]" time="0.001" /><testcase classname="geopandas.tests.test_array" name="test_predicates_vector_scalar[disjoint-args3]" time="0.001" /><testcase classname="geopandas.tests.test_array" name="test_predicates_vector_scalar[geom_equals-args4]" time="0.001" /><testcase classname="geopandas.tests.test_array" name="test_predicates_vector_scalar[intersects-args5]" time="0.001" /><testcase classname="geopandas.tests.test_array" name="test_predicates_vector_scalar[overlaps-args6]" time="0.001" /><testcase classname="geopandas.tests.test_array" name="test_predicates_vector_scalar[touches-args7]" time="0.001" /><testcase classname="geopandas.tests.test_array" name="test_predicates_vector_scalar[within-args8]" time="0.001" /><testcase classname="geopandas.tests.test_array" name="test_predicates_vector_scalar[geom_equals_exact-args9]" time="0.001" /><testcase classname="geopandas.tests.test_array" name="test_predicates_vector_scalar[geom_almost_equals-args10]" time="0.001" /><testcase classname="geopandas.tests.test_array" name="test_predicates_vector_vector[contains-args0]" time="0.007" /><testcase classname="geopandas.tests.test_array" name="test_predicates_vector_vector[covers-args1]" time="0.007" /><testcase classname="geopandas.tests.test_array" name="test_predicates_vector_vector[crosses-args2]" time="0.009" /><testcase classname="geopandas.tests.test_array" name="test_predicates_vector_vector[disjoint-args3]" time="0.009" /><testcase classname="geopandas.tests.test_array" name="test_predicates_vector_vector[geom_equals-args4]" time="0.007" /><testcase classname="geopandas.tests.test_array" name="test_predicates_vector_vector[intersects-args5]" time="0.009" /><testcase classname="geopandas.tests.test_array" name="test_predicates_vector_vector[overlaps-args6]" time="0.009" /><testcase classname="geopandas.tests.test_array" name="test_predicates_vector_vector[touches-args7]" time="0.008" /><testcase classname="geopandas.tests.test_array" name="test_predicates_vector_vector[within-args8]" time="0.007" /><testcase classname="geopandas.tests.test_array" name="test_predicates_vector_vector[geom_equals_exact-args9]" time="0.007" /><testcase classname="geopandas.tests.test_array" name="test_predicates_vector_vector[geom_almost_equals-args10]" time="0.007" /><testcase classname="geopandas.tests.test_array" name="test_unary_geo[boundary]" time="0.001" /><testcase classname="geopandas.tests.test_array" name="test_unary_geo[centroid]" time="0.001" /><testcase classname="geopandas.tests.test_array" name="test_unary_geo[convex_hull]" time="0.001" /><testcase classname="geopandas.tests.test_array" name="test_unary_geo[envelope]" time="0.001" /><testcase classname="geopandas.tests.test_array" name="test_unary_geo[exterior]" time="0.001" /><testcase classname="geopandas.tests.test_array" name="test_unary_geo_callable[representative_point]" time="0.001" /><testcase classname="geopandas.tests.test_array" name="test_binary_geo_vector[difference]" time="0.003" /><testcase classname="geopandas.tests.test_array" name="test_binary_geo_vector[symmetric_difference]" time="0.003" /><testcase classname="geopandas.tests.test_array" name="test_binary_geo_vector[union]" time="0.003" /><testcase classname="geopandas.tests.test_array" name="test_binary_geo_vector[intersection]" time="0.003" /><testcase classname="geopandas.tests.test_array" name="test_binary_geo_scalar[difference]" time="0.002" /><testcase classname="geopandas.tests.test_array" name="test_binary_geo_scalar[symmetric_difference]" time="0.002" /><testcase classname="geopandas.tests.test_array" name="test_binary_geo_scalar[union]" time="0.002" /><testcase classname="geopandas.tests.test_array" name="test_binary_geo_scalar[intersection]" time="0.002" /><testcase classname="geopandas.tests.test_array" name="test_unary_predicates[is_closed]" time="0.001" /><testcase classname="geopandas.tests.test_array" name="test_unary_predicates[is_valid]" time="0.001" /><testcase classname="geopandas.tests.test_array" name="test_unary_predicates[is_empty]" time="0.001" /><testcase classname="geopandas.tests.test_array" name="test_unary_predicates[is_simple]" time="0.001" /><testcase classname="geopandas.tests.test_array" name="test_unary_predicates[has_z]" time="0.001" /><testcase classname="geopandas.tests.test_array" name="test_unary_predicates[is_ring]" time="0.001" /><testcase classname="geopandas.tests.test_array" name="test_is_ring" time="0.001" /><testcase classname="geopandas.tests.test_array" name="test_unary_float[area]" time="0.001" /><testcase classname="geopandas.tests.test_array" name="test_unary_float[length]" time="0.001" /><testcase classname="geopandas.tests.test_array" name="test_geom_types" time="0.001" /><testcase classname="geopandas.tests.test_array" name="test_geom_types_null_mixed" time="0.001" /><testcase classname="geopandas.tests.test_array" name="test_binary_distance" time="0.002" /><testcase classname="geopandas.tests.test_array" name="test_binary_relate" time="0.001" /><testcase classname="geopandas.tests.test_array" name="test_binary_project[True]" time="0.002" /><testcase classname="geopandas.tests.test_array" name="test_binary_project[False]" time="0.001" /><testcase classname="geopandas.tests.test_array" name="test_buffer[16-BufferJoinStyle.round-BufferCapStyle.round]" time="0.009" /><testcase classname="geopandas.tests.test_array" name="test_buffer[16-BufferJoinStyle.round-BufferCapStyle.square]" time="0.003" /><testcase classname="geopandas.tests.test_array" name="test_buffer[16-BufferJoinStyle.bevel-BufferCapStyle.round]" time="0.009" /><testcase classname="geopandas.tests.test_array" name="test_buffer[16-BufferJoinStyle.bevel-BufferCapStyle.square]" time="0.003" /><testcase classname="geopandas.tests.test_array" name="test_buffer[25-BufferJoinStyle.round-BufferCapStyle.round]" time="0.012" /><testcase classname="geopandas.tests.test_array" name="test_buffer[25-BufferJoinStyle.round-BufferCapStyle.square]" time="0.003" /><testcase classname="geopandas.tests.test_array" name="test_buffer[25-BufferJoinStyle.bevel-BufferCapStyle.round]" time="0.011" /><testcase classname="geopandas.tests.test_array" name="test_buffer[25-BufferJoinStyle.bevel-BufferCapStyle.square]" time="0.003" /><testcase classname="geopandas.tests.test_array" name="test_simplify" time="0.003" /><testcase classname="geopandas.tests.test_array" name="test_unary_union" time="0.001" /><testcase classname="geopandas.tests.test_array" name="test_affinity_methods[affine_transform-arg0]" time="0.002" /><testcase classname="geopandas.tests.test_array" name="test_affinity_methods[translate-arg1]" time="0.002" /><testcase classname="geopandas.tests.test_array" name="test_affinity_methods[rotate-arg2]" time="0.002" /><testcase classname="geopandas.tests.test_array" name="test_affinity_methods[scale-arg3]" time="0.002" /><testcase classname="geopandas.tests.test_array" name="test_affinity_methods[skew-arg4]" time="0.002" /><testcase classname="geopandas.tests.test_array" name="test_coords_x_y" time="0.001" /><testcase classname="geopandas.tests.test_array" name="test_bounds" time="0.001" /><testcase classname="geopandas.tests.test_array" name="test_total_bounds" time="0.001" /><testcase classname="geopandas.tests.test_array" name="test_getitem" time="0.001" /><testcase classname="geopandas.tests.test_array" name="test_setitem[item0]" time="0.001" /><testcase classname="geopandas.tests.test_array" name="test_setitem[item1]" time="0.001" /><testcase classname="geopandas.tests.test_array" name="test_setitem[item2]" time="0.001" /><testcase classname="geopandas.tests.test_array" name="test_setitem[item3]" time="0.001" /><testcase classname="geopandas.tests.test_array" name="test_setitem[item4]" time="0.001" /><testcase classname="geopandas.tests.test_array" name="test_equality_ops" time="0.002" /><testcase classname="geopandas.tests.test_array" name="test_dir" time="0.001" /><testcase classname="geopandas.tests.test_array" name="test_chaining" time="0.001" /><testcase classname="geopandas.tests.test_array" name="test_pickle" time="0.001" /><testcase classname="geopandas.tests.test_array" name="test_raise_on_bad_sizes" time="0.001" /><testcase classname="geopandas.tests.test_array" name="test_buffer_single_multipolygon" time="0.002" /><testcase classname="geopandas.tests.test_array" name="test_astype_multipolygon" time="0.001" /><testcase classname="geopandas.tests.test_array" name="test_check_crs" time="0.003" /><testcase classname="geopandas.tests.test_array" name="test_crs_mismatch_warn" time="0.004" /><testcase classname="geopandas.tests.test_array" name="test_isna[None]" time="0.001" /><testcase classname="geopandas.tests.test_array" name="test_isna[nan]" time="0.001" /><testcase classname="geopandas.tests.test_array" name="test_isna_pdNA" time="0.001" /><testcase classname="geopandas.tests.test_array" name="test_shift_has_crs" time="0.002" /><testcase classname="geopandas.tests.test_array" name="test_unique_has_crs" time="0.002" /><testcase classname="geopandas.tests.test_array.TestEstimateUtmCrs" name="test_estimate_utm_crs__geographic" time="0.183" /><testcase classname="geopandas.tests.test_array.TestEstimateUtmCrs" name="test_estimate_utm_crs__projected" time="0.113" /><testcase classname="geopandas.tests.test_array.TestEstimateUtmCrs" name="test_estimate_utm_crs__antimeridian" time="0.121" /><testcase classname="geopandas.tests.test_array.TestEstimateUtmCrs" name="test_estimate_utm_crs__out_of_bounds" time="0.093" /><testcase classname="geopandas.tests.test_array.TestEstimateUtmCrs" name="test_estimate_utm_crs__missing_crs" time="0.003" /><testcase classname="geopandas.tests.test_compat" name="test_import_optional_dependency_present" time="0.001" /><testcase classname="geopandas.tests.test_compat" name="test_import_optional_dependency_absent" time="0.001" /><testcase classname="geopandas.tests.test_compat" name="test_import_optional_dependency_invalid[bad_import0]" time="0.001" /><testcase classname="geopandas.tests.test_compat" name="test_import_optional_dependency_invalid[0]" time="0.001" /><testcase classname="geopandas.tests.test_compat" name="test_import_optional_dependency_invalid[False]" time="0.001" /><testcase classname="geopandas.tests.test_compat" name="test_import_optional_dependency_invalid[True]" time="0.001" /><testcase classname="geopandas.tests.test_compat" name="test_import_optional_dependency_invalid[bad_import4]" time="0.001" /><testcase classname="geopandas.tests.test_compat" name="test_import_optional_dependency_invalid[bad_import5]" time="0.001" /><testcase classname="geopandas.tests.test_compat" name="test_import_optional_dependency_invalid[bad_import6]" time="0.001" /><testcase classname="geopandas.tests.test_config" name="test_options" time="0.001" /><testcase classname="geopandas.tests.test_config" name="test_options_display_precision" time="0.001" /><testcase classname="geopandas.tests.test_crs" name="test_to_crs_transform" time="0.031" /><testcase classname="geopandas.tests.test_crs" name="test_to_crs_transform__missing_data" time="0.030" /><testcase classname="geopandas.tests.test_crs" name="test_to_crs_inplace" time="0.024" /><testcase classname="geopandas.tests.test_crs" name="test_to_crs_geo_column_name" time="0.029" /><testcase classname="geopandas.tests.test_crs" name="test_transform2[epsg_number-epsg_number]" time="0.029" /><testcase classname="geopandas.tests.test_crs" name="test_transform2[epsg_number-epsg_string]" time="0.030" /><testcase classname="geopandas.tests.test_crs" name="test_transform2[epsg_number-epsg_dict]" time="0.034" /><testcase classname="geopandas.tests.test_crs" name="test_transform2[epsg_number-proj4_string]" time="0.071" /><testcase classname="geopandas.tests.test_crs" name="test_transform2[epsg_number-proj4_dict]" time="0.070" /><testcase classname="geopandas.tests.test_crs" name="test_transform2[epsg_string-epsg_number]" time="0.028" /><testcase classname="geopandas.tests.test_crs" name="test_transform2[epsg_string-epsg_string]" time="0.028" /><testcase classname="geopandas.tests.test_crs" name="test_transform2[epsg_string-epsg_dict]" time="0.033" /><testcase classname="geopandas.tests.test_crs" name="test_transform2[epsg_string-proj4_string]" time="0.070" /><testcase classname="geopandas.tests.test_crs" name="test_transform2[epsg_string-proj4_dict]" time="0.070" /><testcase classname="geopandas.tests.test_crs" name="test_transform2[epsg_dict-epsg_number]" time="0.065" /><testcase classname="geopandas.tests.test_crs" name="test_transform2[epsg_dict-epsg_string]" time="0.064" /><testcase classname="geopandas.tests.test_crs" name="test_transform2[epsg_dict-epsg_dict]" time="0.074" /><testcase classname="geopandas.tests.test_crs" name="test_transform2[epsg_dict-proj4_string]" time="0.090" /><testcase classname="geopandas.tests.test_crs" name="test_transform2[epsg_dict-proj4_dict]" time="0.092" /><testcase classname="geopandas.tests.test_crs" name="test_transform2[proj4_string-epsg_number]" time="0.062" /><testcase classname="geopandas.tests.test_crs" name="test_transform2[proj4_string-epsg_string]" time="0.058" /><testcase classname="geopandas.tests.test_crs" name="test_transform2[proj4_string-epsg_dict]" time="0.064" /><testcase classname="geopandas.tests.test_crs" name="test_transform2[proj4_string-proj4_string]" time="0.082" /><testcase classname="geopandas.tests.test_crs" name="test_transform2[proj4_string-proj4_dict]" time="0.083" /><testcase classname="geopandas.tests.test_crs" name="test_transform2[proj4_dict-epsg_number]" time="0.059" /><testcase classname="geopandas.tests.test_crs" name="test_transform2[proj4_dict-epsg_string]" time="0.059" /><testcase classname="geopandas.tests.test_crs" name="test_transform2[proj4_dict-epsg_dict]" time="0.064" /><testcase classname="geopandas.tests.test_crs" name="test_transform2[proj4_dict-proj4_string]" time="0.088" /><testcase classname="geopandas.tests.test_crs" name="test_transform2[proj4_dict-proj4_dict]" time="0.172" /><testcase classname="geopandas.tests.test_crs" name="test_crs_axis_order__always_xy" time="0.028" /><testcase classname="geopandas.tests.test_crs" name="test_skip_exact_same" time="0.010" /><testcase classname="geopandas.tests.test_crs.TestGeometryArrayCRS" name="test_array" time="0.009" /><testcase classname="geopandas.tests.test_crs.TestGeometryArrayCRS" name="test_series" time="0.013" /><testcase classname="geopandas.tests.test_crs.TestGeometryArrayCRS" name="test_dataframe" time="0.042" /><testcase classname="geopandas.tests.test_crs.TestGeometryArrayCRS" name="test_dataframe_getitem_without_geometry_column" time="0.008" /><testcase classname="geopandas.tests.test_crs.TestGeometryArrayCRS" name="test_dataframe_setitem" time="0.055" /><testcase classname="geopandas.tests.test_crs.TestGeometryArrayCRS" name="test_dataframe_setitem_without_geometry_column" time="0.008" /><testcase classname="geopandas.tests.test_crs.TestGeometryArrayCRS" name="test_scalar[None]" time="0.008" /><testcase classname="geopandas.tests.test_crs.TestGeometryArrayCRS" name="test_scalar[scalar1]" time="0.007" /><testcase classname="geopandas.tests.test_crs.TestGeometryArrayCRS" name="test_scalar[scalar2]" time="0.007" /><testcase classname="geopandas.tests.test_crs.TestGeometryArrayCRS" name="test_crs_with_no_geom_fails" time="0.006" /><testcase classname="geopandas.tests.test_crs.TestGeometryArrayCRS" name="test_read_file" time="0.177" /><testcase classname="geopandas.tests.test_crs.TestGeometryArrayCRS" name="test_multiple_geoms" time="0.009" /><testcase classname="geopandas.tests.test_crs.TestGeometryArrayCRS" name="test_multiple_geoms_set_geom" time="0.009" /><testcase classname="geopandas.tests.test_crs.TestGeometryArrayCRS" name="test_assign_cols" time="0.009" /><testcase classname="geopandas.tests.test_crs.TestGeometryArrayCRS" name="test_copy" time="0.009" /><testcase classname="geopandas.tests.test_crs.TestGeometryArrayCRS" name="test_rename" time="0.011" /><testcase classname="geopandas.tests.test_crs.TestGeometryArrayCRS" name="test_geoseries_to_crs" time="0.125" /><testcase classname="geopandas.tests.test_crs.TestGeometryArrayCRS" name="test_array_to_crs" time="0.039" /><testcase classname="geopandas.tests.test_crs.TestGeometryArrayCRS" name="test_from_shapely" time="0.006" /><testcase classname="geopandas.tests.test_crs.TestGeometryArrayCRS" name="test_from_wkb" time="0.006" /><testcase classname="geopandas.tests.test_crs.TestGeometryArrayCRS" name="test_from_wkt" time="0.006" /><testcase classname="geopandas.tests.test_crs.TestGeometryArrayCRS" name="test_points_from_xy" time="0.006" /><testcase classname="geopandas.tests.test_crs.TestGeometryArrayCRS" name="test_original" time="0.006" /><testcase classname="geopandas.tests.test_crs.TestGeometryArrayCRS" name="test_ops" time="0.005" /><testcase classname="geopandas.tests.test_crs.TestGeometryArrayCRS" name="test_binary_ops" time="0.008" /><testcase classname="geopandas.tests.test_crs.TestGeometryArrayCRS" name="test_other" time="0.005" /><testcase classname="geopandas.tests.test_crs.TestGeometryArrayCRS" name="test_affinity_methods[affine_transform-arg0]" time="0.005" /><testcase classname="geopandas.tests.test_crs.TestGeometryArrayCRS" name="test_affinity_methods[translate-arg1]" time="0.005" /><testcase classname="geopandas.tests.test_crs.TestGeometryArrayCRS" name="test_affinity_methods[rotate-arg2]" time="0.005" /><testcase classname="geopandas.tests.test_crs.TestGeometryArrayCRS" name="test_affinity_methods[scale-arg3]" time="0.005" /><testcase classname="geopandas.tests.test_crs.TestGeometryArrayCRS" name="test_affinity_methods[skew-arg4]" time="0.005" /><testcase classname="geopandas.tests.test_crs.TestGeometryArrayCRS" name="test_slice" time="0.009" /><testcase classname="geopandas.tests.test_crs.TestGeometryArrayCRS" name="test_concat" time="0.012" /><testcase classname="geopandas.tests.test_crs.TestGeometryArrayCRS" name="test_merge" time="0.014" /><testcase classname="geopandas.tests.test_crs.TestGeometryArrayCRS" name="test_setitem_geometry" time="0.010" /><testcase classname="geopandas.tests.test_crs.TestGeometryArrayCRS" name="test_astype" time="0.009" /><testcase classname="geopandas.tests.test_crs.TestGeometryArrayCRS" name="test_apply" time="0.007" /><testcase classname="geopandas.tests.test_crs.TestGeometryArrayCRS" name="test_apply_geodataframe" time="0.015" /><testcase classname="geopandas.tests.test_crs.TestSetCRS" name="test_set_crs[geoseries]" time="0.021" /><testcase classname="geopandas.tests.test_crs.TestSetCRS" name="test_set_crs[geodataframe]" time="0.030" /><testcase classname="geopandas.tests.test_datasets" name="test_read_paths[naturalearth_lowres]" time="0.043" /><testcase classname="geopandas.tests.test_datasets" name="test_read_paths[naturalearth_cities]" time="0.027" /><testcase classname="geopandas.tests.test_datasets" name="test_read_paths[nybb]" time="0.079" /><testcase classname="geopandas.tests.test_decorator" name="test_docstring_formatting" time="0.001" /><testcase classname="geopandas.tests.test_decorator" name="test_docstring_appending" time="0.001" /><testcase classname="geopandas.tests.test_decorator" name="test_doc_template_from_func" time="0.001" /><testcase classname="geopandas.tests.test_decorator" name="test_inherit_doc_template" time="0.001" /><testcase classname="geopandas.tests.test_dissolve" name="test_geom_dissolve" time="0.483" /><testcase classname="geopandas.tests.test_dissolve" name="test_dissolve_retains_existing_crs" time="0.234" /><testcase classname="geopandas.tests.test_dissolve" name="test_dissolve_retains_nonexisting_crs" time="0.323" /><testcase classname="geopandas.tests.test_dissolve" name="test_first_dissolve" time="0.483" /><testcase classname="geopandas.tests.test_dissolve" name="test_mean_dissolve" time="0.234"><failure message="TypeError: agg function failed [how-&gt;mean,dtype-&gt;object]">Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/groupby/groupby.py", line 1874, in _agg_py_fallback
    res_values = self.grouper.agg_series(ser, alt, preserve_dtype=True)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/groupby/ops.py", line 850, in agg_series
    result = self._aggregate_series_pure_python(obj, func)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/groupby/ops.py", line 871, in _aggregate_series_pure_python
    res = func(group)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/groupby/groupby.py", line 2380, in &lt;lambda&gt;
    alt=lambda x: Series(x).mean(numeric_only=numeric_only),
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/series.py", line 6221, in mean
    return NDFrame.mean(self, axis, skipna, numeric_only, **kwargs)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/generic.py", line 11984, in mean
    return self._stat_function(
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/generic.py", line 11941, in _stat_function
    return self._reduce(
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/series.py", line 6129, in _reduce
    return op(delegate, skipna=skipna, **kwds)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/nanops.py", line 147, in f
    result = alt(values, axis=axis, skipna=skipna, **kwds)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/nanops.py", line 404, in new_func
    result = func(values, axis=axis, skipna=skipna, mask=mask, **kwargs)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/nanops.py", line 720, in nanmean
    the_sum = _ensure_numeric(the_sum)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/nanops.py", line 1693, in _ensure_numeric
    raise TypeError(f"Could not convert string '{x}' to numeric")
TypeError: Could not convert string 'Staten IslandQueensBrooklyn' to numeric

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    result: Optional[TResult] = func()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 262, in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 177, in pytest_runtest_call
    raise e
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 169, in pytest_runtest_call
    item.runtest()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 1792, in runtest
    self.ihook.pytest_pyfunc_call(pyfuncitem=self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 113, in _multicall
    raise exception.with_traceback(exception.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 194, in pytest_pyfunc_call
    result = testfunction(**testargs)
  File "/workdir/geopandas-0.12.1/geopandas/tests/test_dissolve.py", line 85, in test_mean_dissolve
    test = nybb_polydf.dissolve("manhattan_bronx", aggfunc="mean")
  File "/workdir/geopandas-0.12.1/geopandas/geodataframe.py", line 1676, in dissolve
    aggregated_data = data.groupby(**groupby_kwargs).agg(aggfunc)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/groupby/generic.py", line 1445, in aggregate
    result = op.agg()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/apply.py", line 172, in agg
    return self.apply_str()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/apply.py", line 586, in apply_str
    return self._apply_str(obj, func, *self.args, **self.kwargs)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/apply.py", line 669, in _apply_str
    return f(*args, **kwargs)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/groupby/groupby.py", line 2378, in mean
    result = self._cython_agg_general(
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/groupby/groupby.py", line 1929, in _cython_agg_general
    new_mgr = data.grouped_reduce(array_func)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/internals/managers.py", line 1428, in grouped_reduce
    applied = sb.apply(func)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/internals/blocks.py", line 366, in apply
    result = func(self.values, **kwargs)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/groupby/groupby.py", line 1926, in array_func
    result = self._agg_py_fallback(how, values, ndim=data.ndim, alt=alt)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/groupby/groupby.py", line 1878, in _agg_py_fallback
    raise type(err)(msg) from err
TypeError: agg function failed [how-&gt;mean,dtype-&gt;object]</failure></testcase><testcase classname="geopandas.tests.test_dissolve" name="test_multicolumn_dissolve" time="0.503" /><testcase classname="geopandas.tests.test_dissolve" name="test_reset_index" time="0.397" /><testcase classname="geopandas.tests.test_dissolve" name="test_dissolve_none" time="0.603" /><testcase classname="geopandas.tests.test_dissolve" name="test_dissolve_none_mean" time="0.080"><failure message="TypeError: agg function failed [how-&gt;mean,dtype-&gt;object]">Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/groupby/groupby.py", line 1874, in _agg_py_fallback
    res_values = self.grouper.agg_series(ser, alt, preserve_dtype=True)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/groupby/ops.py", line 850, in agg_series
    result = self._aggregate_series_pure_python(obj, func)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/groupby/ops.py", line 871, in _aggregate_series_pure_python
    res = func(group)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/groupby/groupby.py", line 2380, in &lt;lambda&gt;
    alt=lambda x: Series(x).mean(numeric_only=numeric_only),
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/series.py", line 6221, in mean
    return NDFrame.mean(self, axis, skipna, numeric_only, **kwargs)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/generic.py", line 11984, in mean
    return self._stat_function(
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/generic.py", line 11941, in _stat_function
    return self._reduce(
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/series.py", line 6129, in _reduce
    return op(delegate, skipna=skipna, **kwds)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/nanops.py", line 147, in f
    result = alt(values, axis=axis, skipna=skipna, **kwds)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/nanops.py", line 404, in new_func
    result = func(values, axis=axis, skipna=skipna, mask=mask, **kwargs)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/nanops.py", line 720, in nanmean
    the_sum = _ensure_numeric(the_sum)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/nanops.py", line 1693, in _ensure_numeric
    raise TypeError(f"Could not convert string '{x}' to numeric")
TypeError: Could not convert string 'Staten IslandQueensBrooklynManhattanBronx' to numeric

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    result: Optional[TResult] = func()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 262, in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 177, in pytest_runtest_call
    raise e
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 169, in pytest_runtest_call
    item.runtest()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 1792, in runtest
    self.ihook.pytest_pyfunc_call(pyfuncitem=self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 113, in _multicall
    raise exception.with_traceback(exception.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 194, in pytest_pyfunc_call
    result = testfunction(**testargs)
  File "/workdir/geopandas-0.12.1/geopandas/tests/test_dissolve.py", line 126, in test_dissolve_none_mean
    test = nybb_polydf.dissolve(aggfunc="mean")
  File "/workdir/geopandas-0.12.1/geopandas/geodataframe.py", line 1676, in dissolve
    aggregated_data = data.groupby(**groupby_kwargs).agg(aggfunc)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/groupby/generic.py", line 1445, in aggregate
    result = op.agg()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/apply.py", line 172, in agg
    return self.apply_str()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/apply.py", line 586, in apply_str
    return self._apply_str(obj, func, *self.args, **self.kwargs)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/apply.py", line 669, in _apply_str
    return f(*args, **kwargs)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/groupby/groupby.py", line 2378, in mean
    result = self._cython_agg_general(
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/groupby/groupby.py", line 1929, in _cython_agg_general
    new_mgr = data.grouped_reduce(array_func)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/internals/managers.py", line 1428, in grouped_reduce
    applied = sb.apply(func)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/internals/blocks.py", line 366, in apply
    result = func(self.values, **kwargs)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/groupby/groupby.py", line 1926, in array_func
    result = self._agg_py_fallback(how, values, ndim=data.ndim, alt=alt)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/groupby/groupby.py", line 1878, in _agg_py_fallback
    raise type(err)(msg) from err
TypeError: agg function failed [how-&gt;mean,dtype-&gt;object]</failure></testcase><testcase classname="geopandas.tests.test_dissolve" name="test_dissolve_level" time="0.038" /><testcase classname="geopandas.tests.test_dissolve" name="test_dissolve_sort" time="0.013" /><testcase classname="geopandas.tests.test_dissolve" name="test_dissolve_categorical" time="0.024" /><testcase classname="geopandas.tests.test_dissolve" name="test_dissolve_dropna" time="0.014" /><testcase classname="geopandas.tests.test_dissolve" name="test_dissolve_dropna_warn" time="0.000"><skipped type="pytest.skip" message="dropna warning is only emitted if pandas &lt; 1.1.0">/workdir/geopandas-0.12.1/geopandas/tests/test_dissolve.py:289: dropna warning is only emitted if pandas &lt; 1.1.0</skipped></testcase><testcase classname="geopandas.tests.test_dissolve" name="test_dissolve_multi_agg" time="0.814" /><testcase classname="geopandas.tests.test_extension_array.TestDtype" name="test_name" time="0.001" /><testcase classname="geopandas.tests.test_extension_array.TestDtype" name="test_kind" time="0.001" /><testcase classname="geopandas.tests.test_extension_array.TestDtype" name="test_is_dtype_from_name" time="0.001" /><testcase classname="geopandas.tests.test_extension_array.TestDtype" name="test_is_dtype_unboxes_dtype" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestDtype" name="test_is_dtype_from_self" time="0.001" /><testcase classname="geopandas.tests.test_extension_array.TestDtype" name="test_is_dtype_other_input" time="0.001" /><testcase classname="geopandas.tests.test_extension_array.TestDtype" name="test_is_not_string_type" time="0.001" /><testcase classname="geopandas.tests.test_extension_array.TestDtype" name="test_is_not_object_type" time="0.001" /><testcase classname="geopandas.tests.test_extension_array.TestDtype" name="test_eq_with_str" time="0.001" /><testcase classname="geopandas.tests.test_extension_array.TestDtype" name="test_eq_with_numpy_object" time="0.001" /><testcase classname="geopandas.tests.test_extension_array.TestDtype" name="test_eq_with_self" time="0.001" /><testcase classname="geopandas.tests.test_extension_array.TestDtype" name="test_array_type" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestDtype" name="test_check_dtype" time="0.004" /><testcase classname="geopandas.tests.test_extension_array.TestDtype" name="test_hashable" time="0.001" /><testcase classname="geopandas.tests.test_extension_array.TestDtype" name="test_str" time="0.001" /><testcase classname="geopandas.tests.test_extension_array.TestDtype" name="test_eq" time="0.001" /><testcase classname="geopandas.tests.test_extension_array.TestDtype" name="test_construct_from_string_own_name" time="0.001" /><testcase classname="geopandas.tests.test_extension_array.TestDtype" name="test_construct_from_string_another_type_raises" time="0.001" /><testcase classname="geopandas.tests.test_extension_array.TestDtype" name="test_construct_from_string_wrong_type_raises" time="0.001" /><testcase classname="geopandas.tests.test_extension_array.TestDtype" name="test_get_common_dtype" time="0.001" /><testcase classname="geopandas.tests.test_extension_array.TestDtype" name="test_infer_dtype[True]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestDtype" name="test_infer_dtype[False]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestDtype" name="test_array_type_with_arg" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestDtype" name="test_registry" time="0.002"><failure message="AttributeError: 'TestDtype' object has no attribute 'assert_series_equal'">Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    result: Optional[TResult] = func()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 262, in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 177, in pytest_runtest_call
    raise e
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 169, in pytest_runtest_call
    item.runtest()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 1792, in runtest
    self.ihook.pytest_pyfunc_call(pyfuncitem=self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 113, in _multicall
    raise exception.with_traceback(exception.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 194, in pytest_pyfunc_call
    result = testfunction(**testargs)
  File "/workdir/geopandas-0.12.1/geopandas/tests/test_extension_array.py", line 302, in test_registry
    self.assert_series_equal(result, expected)
AttributeError: 'TestDtype' object has no attribute 'assert_series_equal'</failure></testcase><testcase classname="geopandas.tests.test_extension_array.TestInterface" name="test_len" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestInterface" name="test_size" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestInterface" name="test_ndim" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestInterface" name="test_can_hold_na_valid" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestInterface" name="test_memory_usage" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestInterface" name="test_is_extension_array_dtype" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestInterface" name="test_no_values_attribute" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestInterface" name="test_is_numeric_honored" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestInterface" name="test_isna_extension_array" time="0.001" /><testcase classname="geopandas.tests.test_extension_array.TestInterface" name="test_copy" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestInterface" name="test_view" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestInterface" name="test_tolist" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestInterface" name="test_array_interface" time="0.004" /><testcase classname="geopandas.tests.test_extension_array.TestInterface" name="test_contains" time="0.005" /><testcase classname="geopandas.tests.test_extension_array.TestConstructors" name="test_from_sequence_from_cls" time="0.005" /><testcase classname="geopandas.tests.test_extension_array.TestConstructors" name="test_array_from_scalars" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestConstructors" name="test_series_constructor" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestConstructors" name="test_series_constructor_no_data_with_index" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestConstructors" name="test_series_constructor_scalar_na_with_index" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestConstructors" name="test_series_constructor_scalar_with_index" time="0.004" /><testcase classname="geopandas.tests.test_extension_array.TestConstructors" name="test_dataframe_constructor_from_dict[True]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestConstructors" name="test_dataframe_constructor_from_dict[False]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestConstructors" name="test_dataframe_from_series" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestConstructors" name="test_series_given_mismatched_index_raises" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestConstructors" name="test_from_dtype" time="0.019" /><testcase classname="geopandas.tests.test_extension_array.TestConstructors" name="test_pandas_array" time="0.006" /><testcase classname="geopandas.tests.test_extension_array.TestConstructors" name="test_pandas_array_dtype" time="0.006" /><testcase classname="geopandas.tests.test_extension_array.TestConstructors" name="test_construct_empty_dataframe" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestConstructors" name="test_empty" time="0.001" /><testcase classname="geopandas.tests.test_extension_array.TestReshaping" name="test_concat[True]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestReshaping" name="test_concat[False]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestReshaping" name="test_concat_all_na_block[True]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestReshaping" name="test_concat_all_na_block[False]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestReshaping" name="test_concat_mixed_dtypes" time="0.007" /><testcase classname="geopandas.tests.test_extension_array.TestReshaping" name="test_concat_columns" time="0.007" /><testcase classname="geopandas.tests.test_extension_array.TestReshaping" name="test_concat_extension_arrays_copy_false" time="0.004" /><testcase classname="geopandas.tests.test_extension_array.TestReshaping" name="test_concat_with_reindex" time="0.004" /><testcase classname="geopandas.tests.test_extension_array.TestReshaping" name="test_align" time="0.003" /><testcase classname="geopandas.tests.test_extension_array.TestReshaping" name="test_align_frame" time="0.004" /><testcase classname="geopandas.tests.test_extension_array.TestReshaping" name="test_align_series_frame" time="0.007" /><testcase classname="geopandas.tests.test_extension_array.TestReshaping" name="test_set_frame_expand_regular_with_extension" time="0.007" /><testcase classname="geopandas.tests.test_extension_array.TestReshaping" name="test_set_frame_expand_extension_with_regular" time="0.007" /><testcase classname="geopandas.tests.test_extension_array.TestReshaping" name="test_set_frame_overwrite_object" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestReshaping" name="test_merge" time="0.008" /><testcase classname="geopandas.tests.test_extension_array.TestReshaping" name="test_merge_on_extension_array" time="0.006" /><testcase classname="geopandas.tests.test_extension_array.TestReshaping" name="test_merge_on_extension_array_duplicates" time="0.005" /><testcase classname="geopandas.tests.test_extension_array.TestReshaping" name="test_stack[True-columns0]" time="0.007" /><testcase classname="geopandas.tests.test_extension_array.TestReshaping" name="test_stack[True-columns1]" time="0.007" /><testcase classname="geopandas.tests.test_extension_array.TestReshaping" name="test_stack[False-columns0]" time="0.004" /><testcase classname="geopandas.tests.test_extension_array.TestReshaping" name="test_stack[False-columns1]" time="0.007" /><testcase classname="geopandas.tests.test_extension_array.TestReshaping" name="test_unstack[series-index0]" time="0.009" /><testcase classname="geopandas.tests.test_extension_array.TestReshaping" name="test_unstack[series-index1]" time="0.009" /><testcase classname="geopandas.tests.test_extension_array.TestReshaping" name="test_unstack[series-index2]" time="0.061" /><testcase classname="geopandas.tests.test_extension_array.TestReshaping" name="test_unstack[series-index3]" time="0.051" /><testcase classname="geopandas.tests.test_extension_array.TestReshaping" name="test_unstack[frame-index0]" time="0.009" /><testcase classname="geopandas.tests.test_extension_array.TestReshaping" name="test_unstack[frame-index1]" time="0.009" /><testcase classname="geopandas.tests.test_extension_array.TestReshaping" name="test_unstack[frame-index2]" time="0.057" /><testcase classname="geopandas.tests.test_extension_array.TestReshaping" name="test_unstack[frame-index3]" time="0.045" /><testcase classname="geopandas.tests.test_extension_array.TestReshaping" name="test_ravel" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestReshaping" name="test_transpose" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestReshaping" name="test_transpose_frame" time="0.007" /><testcase classname="geopandas.tests.test_extension_array.TestGetitem" name="test_iloc_series" time="0.003" /><testcase classname="geopandas.tests.test_extension_array.TestGetitem" name="test_iloc_frame" time="0.010" /><testcase classname="geopandas.tests.test_extension_array.TestGetitem" name="test_iloc_frame_single_block" time="0.020" /><testcase classname="geopandas.tests.test_extension_array.TestGetitem" name="test_loc_series" time="0.003" /><testcase classname="geopandas.tests.test_extension_array.TestGetitem" name="test_loc_frame" time="0.005" /><testcase classname="geopandas.tests.test_extension_array.TestGetitem" name="test_loc_iloc_frame_single_dtype" time="0.003" /><testcase classname="geopandas.tests.test_extension_array.TestGetitem" name="test_getitem_scalar" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestGetitem" name="test_getitem_invalid" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestGetitem" name="test_getitem_scalar_na" time="0.001" /><testcase classname="geopandas.tests.test_extension_array.TestGetitem" name="test_getitem_empty" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestGetitem" name="test_getitem_mask" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestGetitem" name="test_getitem_mask_raises" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestGetitem" name="test_getitem_boolean_array_mask" time="0.003" /><testcase classname="geopandas.tests.test_extension_array.TestGetitem" name="test_getitem_boolean_na_treated_as_false" time="0.003" /><testcase classname="geopandas.tests.test_extension_array.TestGetitem" name="test_getitem_integer_array[list]" time="0.004" /><testcase classname="geopandas.tests.test_extension_array.TestGetitem" name="test_getitem_integer_array[integer-array]" time="0.007" /><testcase classname="geopandas.tests.test_extension_array.TestGetitem" name="test_getitem_integer_array[numpy-array]" time="0.007" /><testcase classname="geopandas.tests.test_extension_array.TestGetitem" name="test_getitem_integer_with_missing_raises[list]" time="0.006" /><testcase classname="geopandas.tests.test_extension_array.TestGetitem" name="test_getitem_integer_with_missing_raises[integer-array]" time="0.004" /><testcase classname="geopandas.tests.test_extension_array.TestGetitem" name="test_getitem_series_integer_with_missing_raises[list]" time="0.004"><skipped type="pytest.xfail" message="Tries label-based and raises KeyError; in some cases raises when calling np.asarray" /></testcase><testcase classname="geopandas.tests.test_extension_array.TestGetitem" name="test_getitem_series_integer_with_missing_raises[integer-array]" time="0.006"><skipped type="pytest.xfail" message="Tries label-based and raises KeyError; in some cases raises when calling np.asarray" /></testcase><testcase classname="geopandas.tests.test_extension_array.TestGetitem" name="test_getitem_slice" time="0.003" /><testcase classname="geopandas.tests.test_extension_array.TestGetitem" name="test_getitem_ellipsis_and_slice" time="0.038" /><testcase classname="geopandas.tests.test_extension_array.TestGetitem" name="test_get" time="0.118" /><testcase classname="geopandas.tests.test_extension_array.TestGetitem" name="test_take_sequence" time="0.003" /><testcase classname="geopandas.tests.test_extension_array.TestGetitem" name="test_take" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestGetitem" name="test_take_empty" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestGetitem" name="test_take_negative" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestGetitem" name="test_take_non_na_fill_value" time="0.001" /><testcase classname="geopandas.tests.test_extension_array.TestGetitem" name="test_take_pandas_style_negative_raises" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestGetitem" name="test_take_out_of_bounds_raises[True]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestGetitem" name="test_take_out_of_bounds_raises[False]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestGetitem" name="test_take_series" time="0.003" /><testcase classname="geopandas.tests.test_extension_array.TestGetitem" name="test_reindex" time="0.004" /><testcase classname="geopandas.tests.test_extension_array.TestGetitem" name="test_reindex_non_na_fill_value" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestGetitem" name="test_loc_len1" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestGetitem" name="test_item" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_is_immutable" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_scalar_series[True]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_scalar_series[False]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_sequence[True]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_sequence[False]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_sequence_mismatched_length_raises[True]" time="0.010" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_sequence_mismatched_length_raises[False]" time="0.009" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_empty_indexer[True]" time="0.006" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_empty_indexer[False]" time="0.005" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_sequence_broadcasts[True]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_sequence_broadcasts[False]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_scalar[loc]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_scalar[iloc]" time="0.003" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_loc_scalar_mixed" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_loc_scalar_single" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_loc_scalar_multiple_homogoneous" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_iloc_scalar_mixed" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_iloc_scalar_single" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_iloc_scalar_multiple_homogoneous" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_mask[True-numpy-array]" time="0.003" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_mask[True-boolean-array]" time="0.003" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_mask[True-boolean-array-na]" time="0.003" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_mask[False-numpy-array]" time="0.003" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_mask[False-boolean-array]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_mask[False-boolean-array-na]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_mask_raises[True]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_mask_raises[False]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_mask_boolean_array_with_na[True]" time="0.003" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_mask_boolean_array_with_na[False]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_integer_array[True-list]" time="0.003" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_integer_array[True-integer-array]" time="0.003" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_integer_array[True-numpy-array]" time="0.003" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_integer_array[False-list]" time="0.003" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_integer_array[False-integer-array]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_integer_array[False-numpy-array]" time="0.004" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_integer_with_missing_raises[list-False]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_integer_with_missing_raises[list-True]" time="0.003"><skipped type="pytest.xfail" message="GH-31948" /></testcase><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_integer_with_missing_raises[integer-array-False]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_integer_with_missing_raises[integer-array-True]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_mask_aligned[loc-True]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_mask_aligned[loc-False]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_mask_aligned[None-True]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_mask_aligned[None-False]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_mask_broadcast[loc]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_mask_broadcast[None]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_expand_columns" time="0.018" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_expand_with_extension" time="0.012" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_frame_invalid_length" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_tuple_index" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_slice[True]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_slice[False]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_loc_iloc_slice" time="0.003" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_slice_mismatch_length_raises" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_slice_array" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_scalar_key_sequence_raise" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_preserves_views" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_with_expansion_dataframe_column[index]" time="0.007" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_with_expansion_dataframe_column[list[index]]" time="0.007" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_with_expansion_dataframe_column[null_slice]" time="0.006" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_with_expansion_dataframe_column[full_slice]" time="0.007" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_with_expansion_dataframe_column[range]" time="0.007" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_with_expansion_dataframe_column[list(range)]" time="0.007" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_with_expansion_dataframe_column[mask]" time="0.007" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_with_expansion_row" time="0.004" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_series[index]" time="0.006" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_series[list[index]]" time="0.006" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_series[null_slice]" time="0.006" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_series[full_slice]" time="0.006" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_series[range]" time="0.007" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_series[list(range)]" time="0.006" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_series[mask]" time="0.007" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_frame_2d_values" time="0.018" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_delitem_series" time="0.006" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_invalid" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestSetitem" name="test_setitem_2d_values" time="0.004" /><testcase classname="geopandas.tests.test_extension_array.TestMissing" name="test_isna" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestMissing" name="test_isna_returns_copy[isna]" time="0.001" /><testcase classname="geopandas.tests.test_extension_array.TestMissing" name="test_isna_returns_copy[notna]" time="0.001" /><testcase classname="geopandas.tests.test_extension_array.TestMissing" name="test_dropna_array" time="0.001" /><testcase classname="geopandas.tests.test_extension_array.TestMissing" name="test_dropna_series" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestMissing" name="test_dropna_frame" time="0.004" /><testcase classname="geopandas.tests.test_extension_array.TestMissing" name="test_fillna_scalar" time="0.001" /><testcase classname="geopandas.tests.test_extension_array.TestMissing" name="test_fillna_frame" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestMissing" name="test_fillna_fill_other" time="0.007" /><testcase classname="geopandas.tests.test_extension_array.TestMissing" name="test_use_inf_as_na_no_effect" time="0.003" /><testcase classname="geopandas.tests.test_extension_array.TestMissing" name="test_fillna_series" time="0.001"><failure message="AttributeError: 'TestMissing' object has no attribute 'assert_series_equal'">Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    result: Optional[TResult] = func()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 262, in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 177, in pytest_runtest_call
    raise e
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 169, in pytest_runtest_call
    item.runtest()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 1792, in runtest
    self.ihook.pytest_pyfunc_call(pyfuncitem=self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 113, in _multicall
    raise exception.with_traceback(exception.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 194, in pytest_pyfunc_call
    result = testfunction(**testargs)
  File "/workdir/geopandas-0.12.1/geopandas/tests/test_extension_array.py", line 360, in test_fillna_series
    self.assert_series_equal(result, expected)
AttributeError: 'TestMissing' object has no attribute 'assert_series_equal'</failure></testcase><testcase classname="geopandas.tests.test_extension_array.TestMissing" name="test_fillna_limit_pad" time="0.000"><skipped type="pytest.skip" message="fillna method not supported">/workdir/geopandas-0.12.1/geopandas/tests/test_extension_array.py:372: fillna method not supported</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestMissing" name="test_fillna_limit_backfill" time="0.000"><skipped type="pytest.skip" message="fillna method not supported">/workdir/geopandas-0.12.1/geopandas/tests/test_extension_array.py:376: fillna method not supported</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestMissing" name="test_fillna_series_method" time="0.000"><skipped type="pytest.skip" message="fillna method not supported">/workdir/geopandas-0.12.1/geopandas/tests/test_extension_array.py:380: fillna method not supported</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestMissing" name="test_fillna_no_op_returns_copy" time="0.000"><skipped type="pytest.skip" message="fillna method not supported">/workdir/geopandas-0.12.1/geopandas/tests/test_extension_array.py:384: fillna method not supported</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestReduce" name="test_reduce_series_numeric[sum-True]" time="0.003" /><testcase classname="geopandas.tests.test_extension_array.TestReduce" name="test_reduce_series_numeric[sum-False]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestReduce" name="test_reduce_series_numeric[max-True]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestReduce" name="test_reduce_series_numeric[max-False]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestReduce" name="test_reduce_series_numeric[min-True]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestReduce" name="test_reduce_series_numeric[min-False]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestReduce" name="test_reduce_series_numeric[mean-True]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestReduce" name="test_reduce_series_numeric[mean-False]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestReduce" name="test_reduce_series_numeric[prod-True]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestReduce" name="test_reduce_series_numeric[prod-False]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestReduce" name="test_reduce_series_numeric[std-True]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestReduce" name="test_reduce_series_numeric[std-False]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestReduce" name="test_reduce_series_numeric[var-True]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestReduce" name="test_reduce_series_numeric[var-False]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestReduce" name="test_reduce_series_numeric[median-True]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestReduce" name="test_reduce_series_numeric[median-False]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestReduce" name="test_reduce_series_numeric[kurt-True]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestReduce" name="test_reduce_series_numeric[kurt-False]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestReduce" name="test_reduce_series_numeric[skew-True]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestReduce" name="test_reduce_series_numeric[skew-False]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestReduce" name="test_reduce_frame[sum-True]" time="0.002"><skipped type="pytest.skip" message="not numeric dtype">/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/tests/extension/base/reduce.py:120: not numeric dtype</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestReduce" name="test_reduce_frame[sum-False]" time="0.002"><skipped type="pytest.skip" message="not numeric dtype">/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/tests/extension/base/reduce.py:120: not numeric dtype</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestReduce" name="test_reduce_frame[max-True]" time="0.002"><skipped type="pytest.skip" message="not numeric dtype">/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/tests/extension/base/reduce.py:120: not numeric dtype</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestReduce" name="test_reduce_frame[max-False]" time="0.002"><skipped type="pytest.skip" message="not numeric dtype">/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/tests/extension/base/reduce.py:120: not numeric dtype</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestReduce" name="test_reduce_frame[min-True]" time="0.002"><skipped type="pytest.skip" message="not numeric dtype">/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/tests/extension/base/reduce.py:120: not numeric dtype</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestReduce" name="test_reduce_frame[min-False]" time="0.002"><skipped type="pytest.skip" message="not numeric dtype">/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/tests/extension/base/reduce.py:120: not numeric dtype</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestReduce" name="test_reduce_frame[mean-True]" time="0.002"><skipped type="pytest.skip" message="not numeric dtype">/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/tests/extension/base/reduce.py:120: not numeric dtype</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestReduce" name="test_reduce_frame[mean-False]" time="0.002"><skipped type="pytest.skip" message="not numeric dtype">/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/tests/extension/base/reduce.py:120: not numeric dtype</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestReduce" name="test_reduce_frame[prod-True]" time="0.002"><skipped type="pytest.skip" message="not numeric dtype">/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/tests/extension/base/reduce.py:120: not numeric dtype</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestReduce" name="test_reduce_frame[prod-False]" time="0.002"><skipped type="pytest.skip" message="not numeric dtype">/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/tests/extension/base/reduce.py:120: not numeric dtype</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestReduce" name="test_reduce_frame[std-True]" time="0.002"><skipped type="pytest.skip" message="not numeric dtype">/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/tests/extension/base/reduce.py:120: not numeric dtype</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestReduce" name="test_reduce_frame[std-False]" time="0.002"><skipped type="pytest.skip" message="not numeric dtype">/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/tests/extension/base/reduce.py:120: not numeric dtype</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestReduce" name="test_reduce_frame[var-True]" time="0.002"><skipped type="pytest.skip" message="not numeric dtype">/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/tests/extension/base/reduce.py:120: not numeric dtype</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestReduce" name="test_reduce_frame[var-False]" time="0.002"><skipped type="pytest.skip" message="not numeric dtype">/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/tests/extension/base/reduce.py:120: not numeric dtype</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestReduce" name="test_reduce_frame[median-True]" time="0.002"><skipped type="pytest.skip" message="not numeric dtype">/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/tests/extension/base/reduce.py:120: not numeric dtype</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestReduce" name="test_reduce_frame[median-False]" time="0.002"><skipped type="pytest.skip" message="not numeric dtype">/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/tests/extension/base/reduce.py:120: not numeric dtype</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestReduce" name="test_reduce_frame[kurt-True]" time="0.002"><skipped type="pytest.skip" message="not numeric dtype">/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/tests/extension/base/reduce.py:120: not numeric dtype</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestReduce" name="test_reduce_frame[kurt-False]" time="0.002"><skipped type="pytest.skip" message="not numeric dtype">/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/tests/extension/base/reduce.py:120: not numeric dtype</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestReduce" name="test_reduce_frame[skew-True]" time="0.003"><skipped type="pytest.skip" message="not numeric dtype">/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/tests/extension/base/reduce.py:120: not numeric dtype</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestReduce" name="test_reduce_frame[skew-False]" time="0.002"><skipped type="pytest.skip" message="not numeric dtype">/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/tests/extension/base/reduce.py:120: not numeric dtype</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestReduce" name="test_reduce_series_boolean" time="0.000"><skipped type="pytest.skip" message="boolean reduce (any/all) tested in test_pandas_methods">/workdir/geopandas-0.12.1/geopandas/tests/test_extension_array.py:390: boolean reduce (any/all) tested in test_pandas_methods</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_arith_series_with_scalar[__add__]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_arith_series_with_scalar[__radd__]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_arith_series_with_scalar[__mul__]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_arith_series_with_scalar[__rmul__]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_arith_series_with_scalar[__floordiv__]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_arith_series_with_scalar[__rfloordiv__]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_arith_series_with_scalar[__truediv__]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_arith_series_with_scalar[__rtruediv__]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_arith_series_with_scalar[__pow__]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_arith_series_with_scalar[__rpow__]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_arith_series_with_scalar[__mod__]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_arith_series_with_scalar[__rmod__]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_arith_frame_with_scalar[__add__]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_arith_frame_with_scalar[__radd__]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_arith_frame_with_scalar[__mul__]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_arith_frame_with_scalar[__rmul__]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_arith_frame_with_scalar[__floordiv__]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_arith_frame_with_scalar[__rfloordiv__]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_arith_frame_with_scalar[__truediv__]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_arith_frame_with_scalar[__rtruediv__]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_arith_frame_with_scalar[__pow__]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_arith_frame_with_scalar[__rpow__]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_arith_frame_with_scalar[__mod__]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_arith_frame_with_scalar[__rmod__]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_arith_series_with_array[__add__]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_arith_series_with_array[__radd__]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_arith_series_with_array[__mul__]" time="0.003" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_arith_series_with_array[__rmul__]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_arith_series_with_array[__floordiv__]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_arith_series_with_array[__rfloordiv__]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_arith_series_with_array[__truediv__]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_arith_series_with_array[__rtruediv__]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_arith_series_with_array[__pow__]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_arith_series_with_array[__rpow__]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_arith_series_with_array[__mod__]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_arith_series_with_array[__rmod__]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_divmod" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_direct_arith_with_ndframe_returns_not_implemented[__add__-Series]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_direct_arith_with_ndframe_returns_not_implemented[__add__-DataFrame]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_direct_arith_with_ndframe_returns_not_implemented[__add__-Index]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_direct_arith_with_ndframe_returns_not_implemented[__sub__-Series]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_direct_arith_with_ndframe_returns_not_implemented[__sub__-DataFrame]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_direct_arith_with_ndframe_returns_not_implemented[__sub__-Index]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_direct_arith_with_ndframe_returns_not_implemented[__mul__-Series]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_direct_arith_with_ndframe_returns_not_implemented[__mul__-DataFrame]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_direct_arith_with_ndframe_returns_not_implemented[__mul__-Index]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_direct_arith_with_ndframe_returns_not_implemented[__floordiv__-Series]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_direct_arith_with_ndframe_returns_not_implemented[__floordiv__-DataFrame]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_direct_arith_with_ndframe_returns_not_implemented[__floordiv__-Index]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_direct_arith_with_ndframe_returns_not_implemented[__truediv__-Series]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_direct_arith_with_ndframe_returns_not_implemented[__truediv__-DataFrame]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_direct_arith_with_ndframe_returns_not_implemented[__truediv__-Index]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_direct_arith_with_ndframe_returns_not_implemented[__pow__-Series]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_direct_arith_with_ndframe_returns_not_implemented[__pow__-DataFrame]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_direct_arith_with_ndframe_returns_not_implemented[__pow__-Index]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_direct_arith_with_ndframe_returns_not_implemented[__mod__-Series]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_direct_arith_with_ndframe_returns_not_implemented[__mod__-DataFrame]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_direct_arith_with_ndframe_returns_not_implemented[__mod__-Index]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_direct_arith_with_ndframe_returns_not_implemented[__eq__-Series]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_direct_arith_with_ndframe_returns_not_implemented[__eq__-DataFrame]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_direct_arith_with_ndframe_returns_not_implemented[__eq__-Index]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_direct_arith_with_ndframe_returns_not_implemented[__ne__-Series]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_direct_arith_with_ndframe_returns_not_implemented[__ne__-DataFrame]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_direct_arith_with_ndframe_returns_not_implemented[__ne__-Index]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_direct_arith_with_ndframe_returns_not_implemented[__le__-Series]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_direct_arith_with_ndframe_returns_not_implemented[__le__-DataFrame]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_direct_arith_with_ndframe_returns_not_implemented[__le__-Index]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_direct_arith_with_ndframe_returns_not_implemented[__lt__-Series]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_direct_arith_with_ndframe_returns_not_implemented[__lt__-DataFrame]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_direct_arith_with_ndframe_returns_not_implemented[__lt__-Index]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_direct_arith_with_ndframe_returns_not_implemented[__ge__-Series]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_direct_arith_with_ndframe_returns_not_implemented[__ge__-DataFrame]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_direct_arith_with_ndframe_returns_not_implemented[__ge__-Index]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_direct_arith_with_ndframe_returns_not_implemented[__gt__-Series]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_direct_arith_with_ndframe_returns_not_implemented[__gt__-DataFrame]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_direct_arith_with_ndframe_returns_not_implemented[__gt__-Index]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_divmod_series_array" time="0.000"><skipped type="pytest.skip" message="not applicable">/workdir/geopandas-0.12.1/geopandas/tests/test_extension_array.py:428: not applicable</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestArithmeticOps" name="test_add_series_with_extension_array" time="0.000"><skipped type="pytest.skip" message="not applicable">/workdir/geopandas-0.12.1/geopandas/tests/test_extension_array.py:432: not applicable</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestComparisonOps" name="test_compare_scalar[__eq__]" time="0.008"><failure message="AttributeError: 'TestComparisonOps' object has no attribute 'assert_series_equal'">Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    result: Optional[TResult] = func()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 262, in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 177, in pytest_runtest_call
    raise e
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 169, in pytest_runtest_call
    item.runtest()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 1792, in runtest
    self.ihook.pytest_pyfunc_call(pyfuncitem=self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 113, in _multicall
    raise exception.with_traceback(exception.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 194, in pytest_pyfunc_call
    result = testfunction(**testargs)
  File "/workdir/geopandas-0.12.1/geopandas/tests/test_extension_array.py", line 452, in test_compare_scalar
    self._compare_other(s, data, op_name, data[0])
  File "/workdir/geopandas-0.12.1/geopandas/tests/test_extension_array.py", line 447, in _compare_other
    self.assert_series_equal(result, expected)
AttributeError: 'TestComparisonOps' object has no attribute 'assert_series_equal'</failure></testcase><testcase classname="geopandas.tests.test_extension_array.TestComparisonOps" name="test_compare_scalar[__ne__]" time="0.008"><failure message="AttributeError: 'TestComparisonOps' object has no attribute 'assert_series_equal'">Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    result: Optional[TResult] = func()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 262, in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 177, in pytest_runtest_call
    raise e
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 169, in pytest_runtest_call
    item.runtest()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 1792, in runtest
    self.ihook.pytest_pyfunc_call(pyfuncitem=self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 113, in _multicall
    raise exception.with_traceback(exception.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 194, in pytest_pyfunc_call
    result = testfunction(**testargs)
  File "/workdir/geopandas-0.12.1/geopandas/tests/test_extension_array.py", line 452, in test_compare_scalar
    self._compare_other(s, data, op_name, data[0])
  File "/workdir/geopandas-0.12.1/geopandas/tests/test_extension_array.py", line 447, in _compare_other
    self.assert_series_equal(result, expected)
AttributeError: 'TestComparisonOps' object has no attribute 'assert_series_equal'</failure></testcase><testcase classname="geopandas.tests.test_extension_array.TestComparisonOps" name="test_compare_array[__eq__]" time="0.010"><failure message="AttributeError: 'TestComparisonOps' object has no attribute 'assert_series_equal'">Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    result: Optional[TResult] = func()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 262, in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 177, in pytest_runtest_call
    raise e
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 169, in pytest_runtest_call
    item.runtest()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 1792, in runtest
    self.ihook.pytest_pyfunc_call(pyfuncitem=self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 113, in _multicall
    raise exception.with_traceback(exception.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 194, in pytest_pyfunc_call
    result = testfunction(**testargs)
  File "/workdir/geopandas-0.12.1/geopandas/tests/test_extension_array.py", line 458, in test_compare_array
    self._compare_other(s, data, op_name, other)
  File "/workdir/geopandas-0.12.1/geopandas/tests/test_extension_array.py", line 447, in _compare_other
    self.assert_series_equal(result, expected)
AttributeError: 'TestComparisonOps' object has no attribute 'assert_series_equal'</failure></testcase><testcase classname="geopandas.tests.test_extension_array.TestComparisonOps" name="test_compare_array[__ne__]" time="0.009"><failure message="AttributeError: 'TestComparisonOps' object has no attribute 'assert_series_equal'">Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    result: Optional[TResult] = func()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 262, in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 177, in pytest_runtest_call
    raise e
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 169, in pytest_runtest_call
    item.runtest()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 1792, in runtest
    self.ihook.pytest_pyfunc_call(pyfuncitem=self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 113, in _multicall
    raise exception.with_traceback(exception.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 194, in pytest_pyfunc_call
    result = testfunction(**testargs)
  File "/workdir/geopandas-0.12.1/geopandas/tests/test_extension_array.py", line 458, in test_compare_array
    self._compare_other(s, data, op_name, other)
  File "/workdir/geopandas-0.12.1/geopandas/tests/test_extension_array.py", line 447, in _compare_other
    self.assert_series_equal(result, expected)
AttributeError: 'TestComparisonOps' object has no attribute 'assert_series_equal'</failure></testcase><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_hash_pandas_object" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_value_counts_default_dropna" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_count" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_series_count" time="0.001" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_apply_simple_series" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_map[None]" time="0.001" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_map[ignore]" time="0.001" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_unique[&lt;lambda&gt;-Series]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_unique[&lt;lambda&gt;-&lt;lambda&gt;]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_unique[unique-Series]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_unique[unique-&lt;lambda&gt;]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_factorize" time="0.001" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_factorize_equivalence" time="0.001" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_factorize_empty" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_fillna_copy_frame" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_fillna_copy_series" time="0.001" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_combine_first" time="0.003" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_container_shift[-2-indices0-True]" time="0.004" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_container_shift[-2-indices0-False]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_container_shift[0-indices1-True]" time="0.004" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_container_shift[0-indices1-False]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_container_shift[2-indices2-True]" time="0.004" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_container_shift[2-indices2-False]" time="0.003" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_shift_0_periods" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_diff[1]" time="0.002"><skipped type="pytest.skip" message="&lt;class 'geopandas.array.GeometryArray'&gt; does not support diff">/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/tests/extension/base/methods.py:426: &lt;class 'geopandas.array.GeometryArray'&gt; does not support diff</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_diff[-2]" time="0.002"><skipped type="pytest.skip" message="&lt;class 'geopandas.array.GeometryArray'&gt; does not support diff">/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/tests/extension/base/methods.py:426: &lt;class 'geopandas.array.GeometryArray'&gt; does not support diff</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_shift_non_empty_array[-4-indices0]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_shift_non_empty_array[-1-indices1]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_shift_non_empty_array[0-indices2]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_shift_non_empty_array[1-indices3]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_shift_non_empty_array[4-indices4]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_shift_empty_array[-4]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_shift_empty_array[-1]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_shift_empty_array[0]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_shift_empty_array[1]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_shift_empty_array[4]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_shift_zero_copies" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_shift_fill_value" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_not_hashable" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_hash_pandas_object_works[True]" time="0.003" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_hash_pandas_object_works[False]" time="0.003" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_where_series[True]" time="0.006" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_where_series[False]" time="0.004" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_repeat[True-True-0]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_repeat[True-True-1]" time="0.003" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_repeat[True-True-2]" time="0.003" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_repeat[True-True-repeats3]" time="0.003" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_repeat[True-False-0]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_repeat[True-False-1]" time="0.003" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_repeat[True-False-2]" time="0.003" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_repeat[True-False-repeats3]" time="0.003" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_repeat[False-True-0]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_repeat[False-True-1]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_repeat[False-True-2]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_repeat[False-True-repeats3]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_repeat[False-False-0]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_repeat[False-False-1]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_repeat[False-False-2]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_repeat[False-False-repeats3]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_repeat_raises[True-2-kwargs0-ValueError-axis]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_repeat_raises[True--1-kwargs1-ValueError-negative]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_repeat_raises[True-repeats2-kwargs2-ValueError-shape]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_repeat_raises[True-2-kwargs3-TypeError-'foo']" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_repeat_raises[False-2-kwargs0-ValueError-axis]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_repeat_raises[False--1-kwargs1-ValueError-negative]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_repeat_raises[False-repeats2-kwargs2-ValueError-shape]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_repeat_raises[False-2-kwargs3-TypeError-'foo']" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_delete" time="0.009" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_insert" time="0.012" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_insert_invalid" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_insert_invalid_loc" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_equals[True-array]" time="0.012" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_equals[True-Series]" time="0.014" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_equals[True-DataFrame]" time="0.014" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_equals[False-array]" time="0.013" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_equals[False-Series]" time="0.013" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_equals[False-DataFrame]" time="0.013" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_equals_same_data_different_object" time="0.005" /><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_value_counts[data-True]" time="0.000"><skipped type="pytest.skip" message="Sorting not supported">/workdir/geopandas-0.12.1/geopandas/tests/test_extension_array.py:462: Sorting not supported</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_value_counts[data-False]" time="0.000"><skipped type="pytest.skip" message="Sorting not supported">/workdir/geopandas-0.12.1/geopandas/tests/test_extension_array.py:462: Sorting not supported</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_value_counts[data_missing-True]" time="0.000"><skipped type="pytest.skip" message="Sorting not supported">/workdir/geopandas-0.12.1/geopandas/tests/test_extension_array.py:462: Sorting not supported</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_value_counts[data_missing-False]" time="0.000"><skipped type="pytest.skip" message="Sorting not supported">/workdir/geopandas-0.12.1/geopandas/tests/test_extension_array.py:462: Sorting not supported</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_value_counts_with_normalize" time="0.000"><skipped type="pytest.skip" message="Sorting not supported">/workdir/geopandas-0.12.1/geopandas/tests/test_extension_array.py:467: Sorting not supported</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_argsort" time="0.000"><skipped type="pytest.skip" message="Sorting not supported">/workdir/geopandas-0.12.1/geopandas/tests/test_extension_array.py:471: Sorting not supported</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_argsort_missing" time="0.001"><skipped type="pytest.skip" message="Sorting not supported">/workdir/geopandas-0.12.1/geopandas/tests/test_extension_array.py:477: Sorting not supported</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_sort_values[True]" time="0.000"><skipped type="pytest.skip" message="Sorting not supported">/workdir/geopandas-0.12.1/geopandas/tests/test_extension_array.py:483: Sorting not supported</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_sort_values[False]" time="0.000"><skipped type="pytest.skip" message="Sorting not supported">/workdir/geopandas-0.12.1/geopandas/tests/test_extension_array.py:483: Sorting not supported</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_sort_values_missing[True]" time="0.000"><skipped type="pytest.skip" message="Sorting not supported">/workdir/geopandas-0.12.1/geopandas/tests/test_extension_array.py:494: Sorting not supported</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_sort_values_missing[False]" time="0.000"><skipped type="pytest.skip" message="Sorting not supported">/workdir/geopandas-0.12.1/geopandas/tests/test_extension_array.py:494: Sorting not supported</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_sort_values_frame[True]" time="0.000"><skipped type="pytest.skip" message="Sorting not supported">/workdir/geopandas-0.12.1/geopandas/tests/test_extension_array.py:505: Sorting not supported</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_sort_values_frame[False]" time="0.000"><skipped type="pytest.skip" message="Sorting not supported">/workdir/geopandas-0.12.1/geopandas/tests/test_extension_array.py:505: Sorting not supported</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_searchsorted[True]" time="0.000"><skipped type="pytest.skip" message="Sorting not supported">/workdir/geopandas-0.12.1/geopandas/tests/test_extension_array.py:515: Sorting not supported</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_searchsorted[False]" time="0.000"><skipped type="pytest.skip" message="Sorting not supported">/workdir/geopandas-0.12.1/geopandas/tests/test_extension_array.py:515: Sorting not supported</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_combine_le" time="0.000"><skipped type="pytest.skip" message="Not yet implemented">/workdir/geopandas-0.12.1/geopandas/tests/test_extension_array.py:519: Not yet implemented</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_combine_add" time="0.001"><skipped type="pytest.skip" message="addition not supported">/workdir/geopandas-0.12.1/geopandas/tests/test_extension_array.py:523: addition not supported</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_fillna_length_mismatch" time="0.001"><skipped type="pytest.skip" message="Not yet implemented">/workdir/geopandas-0.12.1/geopandas/tests/test_extension_array.py:527: Not yet implemented</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_nargsort" time="0.000"><skipped type="pytest.skip" message="Sorting not supported">/workdir/geopandas-0.12.1/geopandas/tests/test_extension_array.py:533: Sorting not supported</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_argsort_missing_array" time="0.000"><skipped type="pytest.skip" message="Sorting not supported">/workdir/geopandas-0.12.1/geopandas/tests/test_extension_array.py:537: Sorting not supported</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_argmin_argmax" time="0.000"><skipped type="pytest.skip" message="Sorting not supported">/workdir/geopandas-0.12.1/geopandas/tests/test_extension_array.py:541: Sorting not supported</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_argmin_argmax_empty_array" time="0.000"><skipped type="pytest.skip" message="Sorting not supported">/workdir/geopandas-0.12.1/geopandas/tests/test_extension_array.py:545: Sorting not supported</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_argmin_argmax_all_na" time="0.000"><skipped type="pytest.skip" message="Sorting not supported">/workdir/geopandas-0.12.1/geopandas/tests/test_extension_array.py:549: Sorting not supported</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_argreduce_series" time="0.000"><skipped type="pytest.skip" message="Sorting not supported">/workdir/geopandas-0.12.1/geopandas/tests/test_extension_array.py:553: Sorting not supported</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestMethods" name="test_argmax_argmin_no_skipna_notimplemented" time="0.000"><skipped type="pytest.skip" message="Sorting not supported">/workdir/geopandas-0.12.1/geopandas/tests/test_extension_array.py:557: Sorting not supported</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestCasting" name="test_astype_object_series[data]" time="0.003" /><testcase classname="geopandas.tests.test_extension_array.TestCasting" name="test_astype_object_series[data_missing]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestCasting" name="test_astype_object_frame[data]" time="0.003" /><testcase classname="geopandas.tests.test_extension_array.TestCasting" name="test_astype_object_frame[data_missing]" time="0.003" /><testcase classname="geopandas.tests.test_extension_array.TestCasting" name="test_tolist" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestCasting" name="test_astype_str" time="0.003" /><testcase classname="geopandas.tests.test_extension_array.TestCasting" name="test_astype_string[string[python]]" time="0.003" /><testcase classname="geopandas.tests.test_extension_array.TestCasting" name="test_astype_string[string[pyarrow]]" time="0.000"><skipped type="pytest.skip" message="Could not import 'pyarrow'">/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/tests/extension/base/casting.py:50: Could not import 'pyarrow'</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestCasting" name="test_to_numpy" time="0.003" /><testcase classname="geopandas.tests.test_extension_array.TestCasting" name="test_astype_empty_dataframe" time="0.001" /><testcase classname="geopandas.tests.test_extension_array.TestCasting" name="test_astype_own_type[True]" time="0.007" /><testcase classname="geopandas.tests.test_extension_array.TestCasting" name="test_astype_own_type[False]" time="0.007" /><testcase classname="geopandas.tests.test_extension_array.TestGroupby" name="test_grouping_grouper" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestGroupby" name="test_groupby_agg_extension" time="0.008" /><testcase classname="geopandas.tests.test_extension_array.TestGroupby" name="test_groupby_extension_no_sort" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestGroupby" name="test_groupby_apply_identity" time="0.004" /><testcase classname="geopandas.tests.test_extension_array.TestGroupby" name="test_in_numeric_groupby" time="0.004" /><testcase classname="geopandas.tests.test_extension_array.TestGroupby" name="test_groupby_extension_agg[True]" time="0.000"><skipped type="pytest.skip" message="Sorting not supported">/workdir/geopandas-0.12.1/geopandas/tests/test_extension_array.py:567: Sorting not supported</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestGroupby" name="test_groupby_extension_agg[False]" time="0.000"><skipped type="pytest.skip" message="Sorting not supported">/workdir/geopandas-0.12.1/geopandas/tests/test_extension_array.py:567: Sorting not supported</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestGroupby" name="test_groupby_extension_transform" time="0.000"><skipped type="pytest.skip" message="Sorting not supported">/workdir/geopandas-0.12.1/geopandas/tests/test_extension_array.py:572: Sorting not supported</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestGroupby" name="test_groupby_extension_apply[scalar]" time="0.000"><skipped type="pytest.skip" message="Sorting not supported">/workdir/geopandas-0.12.1/geopandas/tests/test_extension_array.py:576: Sorting not supported</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestGroupby" name="test_groupby_extension_apply[list]" time="0.000"><skipped type="pytest.skip" message="Sorting not supported">/workdir/geopandas-0.12.1/geopandas/tests/test_extension_array.py:576: Sorting not supported</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestGroupby" name="test_groupby_extension_apply[series]" time="0.000"><skipped type="pytest.skip" message="Sorting not supported">/workdir/geopandas-0.12.1/geopandas/tests/test_extension_array.py:576: Sorting not supported</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestGroupby" name="test_groupby_extension_apply[object]" time="0.000"><skipped type="pytest.skip" message="Sorting not supported">/workdir/geopandas-0.12.1/geopandas/tests/test_extension_array.py:576: Sorting not supported</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestPrinting" name="test_array_repr[big]" time="0.003" /><testcase classname="geopandas.tests.test_extension_array.TestPrinting" name="test_array_repr[small]" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestPrinting" name="test_array_repr_unicode" time="0.002" /><testcase classname="geopandas.tests.test_extension_array.TestPrinting" name="test_series_repr" time="0.003" /><testcase classname="geopandas.tests.test_extension_array.TestPrinting" name="test_dataframe_repr" time="0.008" /><testcase classname="geopandas.tests.test_extension_array.TestPrinting" name="test_dtype_name_in_info" time="0.006" /><testcase classname="geopandas.tests.test_extension_array.TestParsing" name="test_EA_types[c]" time="0.000"><skipped type="pytest.skip" message="Not yet implemented">/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/tests/extension/base/io.py:11: Not yet implemented</skipped></testcase><testcase classname="geopandas.tests.test_extension_array.TestParsing" name="test_EA_types[python]" time="0.000"><skipped type="pytest.skip" message="Not yet implemented">/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/tests/extension/base/io.py:11: Not yet implemented</skipped></testcase><testcase classname="geopandas.tests.test_geocode" name="test_prepare_result" time="0.008" /><testcase classname="geopandas.tests.test_geocode" name="test_prepare_result_none" time="0.007" /><testcase classname="geopandas.tests.test_geocode" name="test_prepare_geocode_result_when_result_is[None]" time="0.011" /><testcase classname="geopandas.tests.test_geocode" name="test_prepare_geocode_result_when_result_is[geocode_result1]" time="0.011" /><testcase classname="geopandas.tests.test_geocode" name="test_bad_provider_forward" time="0.001" /><testcase classname="geopandas.tests.test_geocode" name="test_bad_provider_reverse" time="0.001" /><testcase classname="geopandas.tests.test_geocode" name="test_forward" time="0.025" /><testcase classname="geopandas.tests.test_geocode" name="test_reverse" time="0.024" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_df_init" time="0.186" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_different_geo_colname" time="0.334" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_geo_getitem" time="0.192" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_getitem_no_geometry" time="0.189" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_geo_setitem" time="0.087" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_geometry_property" time="0.447" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_geometry_property_errors" time="0.082" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_rename_geometry" time="0.183" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_set_geometry" time="0.592" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_set_geometry_col" time="0.321" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_set_geometry_inplace" time="0.210" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_set_geometry_series" time="0.081" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_set_geometry_empty" time="0.184" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_set_geometry_np_int" time="0.081" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_get_geometry_invalid" time="0.190" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_get_geometry_geometry_inactive" time="0.082" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_align" time="0.117" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_to_json" time="0.446" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_to_json_geom_col" time="0.463" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_to_json_only_geom_column" time="0.411" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_to_json_na" time="0.328" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_to_json_bad_na" time="0.193" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_to_json_dropna" time="0.327" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_to_json_keepna" time="0.444" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_to_json_drop_id" time="0.328" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_to_json_drop_id_only_geom_column" time="0.437" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_to_json_with_duplicate_columns" time="0.082" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_copy" time="0.189" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_bool_index" time="0.081" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_coord_slice_points" time="0.091" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_from_dict" time="0.189" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_from_features" time="0.299" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_from_features_unaligned_properties" time="0.083" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_from_features_empty_properties" time="0.196" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_from_features_geom_interface_feature" time="0.195" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_from_feature_collection" time="0.106" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_dataframe_to_geodataframe" time="0.467" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_geodataframe_geointerface" time="0.147" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_geodataframe_iterfeatures" time="0.235" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_geodataframe_geojson_no_bbox" time="0.114" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_geodataframe_geojson_bbox" time="0.252" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_pickle" time="0.331" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_pickle_method" time="0.211" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_estimate_utm_crs" time="0.370" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_to_wkb" time="0.199" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_to_wkt" time="0.086" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_sjoin[intersects-left]" time="0.000"><skipped type="pytest.skip" message="sjoin needs `rtree` or `pygeos` dependency">/workdir/geopandas-0.12.1/geopandas/tests/test_geodataframe.py:906: sjoin needs `rtree` or `pygeos` dependency</skipped></testcase><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_sjoin[intersects-inner]" time="0.000"><skipped type="pytest.skip" message="sjoin needs `rtree` or `pygeos` dependency">/workdir/geopandas-0.12.1/geopandas/tests/test_geodataframe.py:906: sjoin needs `rtree` or `pygeos` dependency</skipped></testcase><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_sjoin[intersects-right]" time="0.000"><skipped type="pytest.skip" message="sjoin needs `rtree` or `pygeos` dependency">/workdir/geopandas-0.12.1/geopandas/tests/test_geodataframe.py:906: sjoin needs `rtree` or `pygeos` dependency</skipped></testcase><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_sjoin[within-left]" time="0.000"><skipped type="pytest.skip" message="sjoin needs `rtree` or `pygeos` dependency">/workdir/geopandas-0.12.1/geopandas/tests/test_geodataframe.py:906: sjoin needs `rtree` or `pygeos` dependency</skipped></testcase><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_sjoin[within-inner]" time="0.000"><skipped type="pytest.skip" message="sjoin needs `rtree` or `pygeos` dependency">/workdir/geopandas-0.12.1/geopandas/tests/test_geodataframe.py:906: sjoin needs `rtree` or `pygeos` dependency</skipped></testcase><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_sjoin[within-right]" time="0.000"><skipped type="pytest.skip" message="sjoin needs `rtree` or `pygeos` dependency">/workdir/geopandas-0.12.1/geopandas/tests/test_geodataframe.py:906: sjoin needs `rtree` or `pygeos` dependency</skipped></testcase><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_sjoin[contains-left]" time="0.000"><skipped type="pytest.skip" message="sjoin needs `rtree` or `pygeos` dependency">/workdir/geopandas-0.12.1/geopandas/tests/test_geodataframe.py:906: sjoin needs `rtree` or `pygeos` dependency</skipped></testcase><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_sjoin[contains-inner]" time="0.000"><skipped type="pytest.skip" message="sjoin needs `rtree` or `pygeos` dependency">/workdir/geopandas-0.12.1/geopandas/tests/test_geodataframe.py:906: sjoin needs `rtree` or `pygeos` dependency</skipped></testcase><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_sjoin[contains-right]" time="0.001"><skipped type="pytest.skip" message="sjoin needs `rtree` or `pygeos` dependency">/workdir/geopandas-0.12.1/geopandas/tests/test_geodataframe.py:906: sjoin needs `rtree` or `pygeos` dependency</skipped></testcase><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_sjoin_nearest[None-None-left]" time="0.316" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_sjoin_nearest[None-None-inner]" time="0.196" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_sjoin_nearest[None-None-right]" time="0.348" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_sjoin_nearest[None-1-left]" time="0.201" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_sjoin_nearest[None-1-inner]" time="0.314" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_sjoin_nearest[None-1-right]" time="0.248" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_sjoin_nearest[distance-None-left]" time="0.313" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_sjoin_nearest[distance-None-inner]" time="0.203" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_sjoin_nearest[distance-None-right]" time="0.361" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_sjoin_nearest[distance-1-left]" time="0.231" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_sjoin_nearest[distance-1-inner]" time="0.319" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_sjoin_nearest[distance-1-right]" time="0.360" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_clip" time="0.197" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_overlay[union]" time="0.291" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_overlay[intersection]" time="0.120" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_overlay[difference]" time="0.224" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_overlay[symmetric_difference]" time="0.138" /><testcase classname="geopandas.tests.test_geodataframe.TestDataFrame" name="test_overlay[identity]" time="0.268" /><testcase classname="geopandas.tests.test_geodataframe.TestConstructor" name="test_dict" time="0.006" /><testcase classname="geopandas.tests.test_geodataframe.TestConstructor" name="test_dict_of_series" time="0.005" /><testcase classname="geopandas.tests.test_geodataframe.TestConstructor" name="test_dict_specified_geometry" time="0.006" /><testcase classname="geopandas.tests.test_geodataframe.TestConstructor" name="test_array" time="0.002" /><testcase classname="geopandas.tests.test_geodataframe.TestConstructor" name="test_from_frame" time="0.007" /><testcase classname="geopandas.tests.test_geodataframe.TestConstructor" name="test_from_frame_specified_geometry" time="0.002" /><testcase classname="geopandas.tests.test_geodataframe.TestConstructor" name="test_only_geometry" time="0.011" /><testcase classname="geopandas.tests.test_geodataframe.TestConstructor" name="test_no_geometries" time="0.001" /><testcase classname="geopandas.tests.test_geodataframe.TestConstructor" name="test_empty" time="0.002" /><testcase classname="geopandas.tests.test_geodataframe.TestConstructor" name="test_column_ordering" time="0.004" /><testcase classname="geopandas.tests.test_geodataframe.TestConstructor" name="test_preserve_series_name" time="0.004"><skipped type="pytest.xfail" message="" /></testcase><testcase classname="geopandas.tests.test_geodataframe.TestConstructor" name="test_overwrite_geometry" time="0.003" /><testcase classname="geopandas.tests.test_geodataframe.TestConstructor" name="test_repeat_geo_col" time="0.002" /><testcase classname="geopandas.tests.test_geodataframe.TestConstructor" name="test_multiindex_with_geometry_label[geometry]" time="0.008" /><testcase classname="geopandas.tests.test_geodataframe.TestConstructor" name="test_multiindex_with_geometry_label[object]" time="0.006" /><testcase classname="geopandas.tests.test_geodataframe" name="test_geodataframe_crs" time="0.008" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_intersection" time="0.025" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_clip_by_rect" time="0.018" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_union_series" time="0.020" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_union_polygon" time="0.016" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_symmetric_difference_series" time="0.020" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_symmetric_difference_poly" time="0.017" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_difference_series" time="0.020" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_difference_poly" time="0.017" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_geo_op_empty_result" time="0.017" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_boundary" time="0.017" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_area" time="0.016" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_area_crs_warn" time="0.015" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_bounds" time="0.017" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_bounds_empty" time="0.015" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_unary_union" time="0.019" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_cascaded_union_deprecated" time="0.015" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_contains" time="0.015" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_length" time="0.017" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_length_crs_warn" time="0.015" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_crosses" time="0.016" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_disjoint" time="0.015" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_relate" time="0.016" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_distance" time="0.016" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_distance_crs_warning" time="0.015" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_intersects" time="0.015" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_overlaps" time="0.015" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_touches" time="0.015" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_within" time="0.015" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_covers_itself" time="0.014" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_covers" time="0.015" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_covers_inverse" time="0.016" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_covered_by" time="0.017" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_is_valid" time="0.017" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_is_empty" time="0.016" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_is_ring" time="0.016" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_is_simple" time="0.015" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_has_z" time="0.016" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_xyz_points" time="0.015" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_xyz_points_empty" time="0.014" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_xyz_polygons" time="0.014" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_centroid" time="0.015" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_centroid_crs_warn" time="0.015" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_normalize" time="0.015" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_make_valid" time="0.018" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_make_valid_shapely_pre18" time="0.000"><skipped type="pytest.skip" message="make_valid keyword introduced in shapely 1.8.0">/workdir/geopandas-0.12.1/geopandas/tests/test_geom_methods.py:718: make_valid keyword introduced in shapely 1.8.0</skipped></testcase><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_convex_hull" time="0.033" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_exterior" time="0.041" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_interiors" time="0.037" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_interpolate" time="0.049" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_interpolate_distance_array" time="0.025" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_interpolate_distance_wrong_length" time="0.016" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_interpolate_distance_wrong_index" time="0.015" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_interpolate_crs_warning" time="0.017" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_project" time="0.017" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_affine_transform" time="0.015" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_translate_tuple" time="0.015" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_rotate" time="0.017" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_scale" time="0.017" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_skew" time="0.020" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_buffer" time="0.014" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_buffer_args" time="0.015" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_buffer_distance_array" time="0.015" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_buffer_distance_wrong_length" time="0.014" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_buffer_distance_wrong_index" time="0.014" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_buffer_empty_none" time="0.016" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_buffer_crs_warn" time="0.015" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_envelope" time="0.013" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_total_bounds" time="0.014" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_explode_geoseries" time="0.018" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_explode_geodataframe[None]" time="0.021" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_explode_geodataframe[test]" time="0.020" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_explode_geodataframe_level_1[None]" time="0.021" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_explode_geodataframe_level_1[test]" time="0.022" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_explode_geodataframe_no_multiindex[None]" time="0.020" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_explode_geodataframe_no_multiindex[test]" time="0.019" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_explode_pandas_fallback" time="0.034" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_explode_pandas_fallback_ignore_index" time="0.033" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_explode_pandas_multi_index[10]" time="0.023" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_explode_pandas_multi_index[outer_index1]" time="0.024" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_explode_pandas_multi_index[11]" time="0.025" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_explode_pandas_multi_index_false[10]" time="0.022" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_explode_pandas_multi_index_false[outer_index1]" time="0.021" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_explode_pandas_multi_index_false[11]" time="0.021" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_explode_pandas_multi_index_ignore_index[10]" time="0.023" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_explode_pandas_multi_index_ignore_index[outer_index1]" time="0.026" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_explode_pandas_multi_index_ignore_index[11]" time="0.025" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_explode_order" time="0.023" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_explode_order_no_multi" time="0.023" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_explode_order_mixed" time="0.026" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_explode_duplicated_index" time="0.164" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_explode_geometry_name[geom]" time="0.018" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_explode_geometry_name[geometry]" time="0.019" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_explode_geometry_name_two_geoms" time="0.020" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_intersection_operator" time="0.019" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_union_operator" time="0.019" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_union_operator_polygon" time="0.015" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_symmetric_difference_operator" time="0.019" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_difference_series2" time="0.020" /><testcase classname="geopandas.tests.test_geom_methods.TestGeomMethods" name="test_difference_poly2" time="0.017" /><testcase classname="geopandas.tests.test_geoseries.TestSeries" name="test_copy" time="0.006" /><testcase classname="geopandas.tests.test_geoseries.TestSeries" name="test_in" time="0.006" /><testcase classname="geopandas.tests.test_geoseries.TestSeries" name="test_align" time="0.006" /><testcase classname="geopandas.tests.test_geoseries.TestSeries" name="test_align_crs" time="0.012" /><testcase classname="geopandas.tests.test_geoseries.TestSeries" name="test_align_mixed" time="0.006" /><testcase classname="geopandas.tests.test_geoseries.TestSeries" name="test_warning_if_not_aligned" time="0.006" /><testcase classname="geopandas.tests.test_geoseries.TestSeries" name="test_no_warning_if_aligned" time="0.006" /><testcase classname="geopandas.tests.test_geoseries.TestSeries" name="test_geom_equals" time="0.007" /><testcase classname="geopandas.tests.test_geoseries.TestSeries" name="test_geom_equals_align" time="0.007" /><testcase classname="geopandas.tests.test_geoseries.TestSeries" name="test_geom_almost_equals" time="0.007" /><testcase classname="geopandas.tests.test_geoseries.TestSeries" name="test_geom_equals_exact" time="0.007" /><testcase classname="geopandas.tests.test_geoseries.TestSeries" name="test_equal_comp_op" time="0.006" /><testcase classname="geopandas.tests.test_geoseries.TestSeries" name="test_to_file" time="0.017" /><testcase classname="geopandas.tests.test_geoseries.TestSeries" name="test_to_json" time="0.007" /><testcase classname="geopandas.tests.test_geoseries.TestSeries" name="test_representative_point" time="0.007" /><testcase classname="geopandas.tests.test_geoseries.TestSeries" name="test_transform" time="0.026" /><testcase classname="geopandas.tests.test_geoseries.TestSeries" name="test_estimate_utm_crs__geographic" time="0.182" /><testcase classname="geopandas.tests.test_geoseries.TestSeries" name="test_estimate_utm_crs__projected" time="0.099" /><testcase classname="geopandas.tests.test_geoseries.TestSeries" name="test_estimate_utm_crs__out_of_bounds" time="0.093" /><testcase classname="geopandas.tests.test_geoseries.TestSeries" name="test_estimate_utm_crs__missing_crs" time="0.006" /><testcase classname="geopandas.tests.test_geoseries.TestSeries" name="test_fillna" time="0.007" /><testcase classname="geopandas.tests.test_geoseries.TestSeries" name="test_coord_slice" time="0.009" /><testcase classname="geopandas.tests.test_geoseries.TestSeries" name="test_coord_slice_with_zero" time="0.012" /><testcase classname="geopandas.tests.test_geoseries.TestSeries" name="test_geoseries_geointerface" time="0.008" /><testcase classname="geopandas.tests.test_geoseries.TestSeries" name="test_proj4strings" time="0.072" /><testcase classname="geopandas.tests.test_geoseries.TestSeries" name="test_from_wkb" time="0.007" /><testcase classname="geopandas.tests.test_geoseries.TestSeries" name="test_from_wkb_series" time="0.007" /><testcase classname="geopandas.tests.test_geoseries.TestSeries" name="test_from_wkb_series_with_index" time="0.007" /><testcase classname="geopandas.tests.test_geoseries.TestSeries" name="test_from_wkt" time="0.006" /><testcase classname="geopandas.tests.test_geoseries.TestSeries" name="test_from_wkt_series" time="0.007" /><testcase classname="geopandas.tests.test_geoseries.TestSeries" name="test_from_wkt_series_with_index" time="0.007" /><testcase classname="geopandas.tests.test_geoseries.TestSeries" name="test_to_wkb" time="0.006" /><testcase classname="geopandas.tests.test_geoseries.TestSeries" name="test_to_wkt" time="0.006" /><testcase classname="geopandas.tests.test_geoseries.TestSeries" name="test_clip" time="0.080" /><testcase classname="geopandas.tests.test_geoseries.TestSeries" name="test_from_xy_points" time="0.008" /><testcase classname="geopandas.tests.test_geoseries.TestSeries" name="test_from_xy_points_w_z" time="0.007" /><testcase classname="geopandas.tests.test_geoseries.TestSeries" name="test_from_xy_points_unequal_index" time="0.008" /><testcase classname="geopandas.tests.test_geoseries.TestSeries" name="test_from_xy_points_indexless" time="0.007" /><testcase classname="geopandas.tests.test_geoseries" name="test_missing_values" time="0.003" /><testcase classname="geopandas.tests.test_geoseries" name="test_isna_empty_geoseries" time="0.001" /><testcase classname="geopandas.tests.test_geoseries" name="test_geoseries_crs" time="0.007" /><testcase classname="geopandas.tests.test_geoseries.TestConstructor" name="test_constructor" time="0.001" /><testcase classname="geopandas.tests.test_geoseries.TestConstructor" name="test_single_geom_constructor" time="0.005" /><testcase classname="geopandas.tests.test_geoseries.TestConstructor" name="test_non_geometry_raises" time="0.001" /><testcase classname="geopandas.tests.test_geoseries.TestConstructor" name="test_empty" time="0.001" /><testcase classname="geopandas.tests.test_geoseries.TestConstructor" name="test_data_is_none" time="0.001" /><testcase classname="geopandas.tests.test_geoseries.TestConstructor" name="test_empty_array" time="0.001" /><testcase classname="geopandas.tests.test_geoseries.TestConstructor" name="test_from_series" time="0.002" /><testcase classname="geopandas.tests.test_geoseries.TestConstructor" name="test_reset_index[None-None]" time="0.004" /><testcase classname="geopandas.tests.test_geoseries.TestConstructor" name="test_reset_index[None-geometry]" time="0.005" /><testcase classname="geopandas.tests.test_geoseries.TestConstructor" name="test_reset_index[None-Points]" time="0.004" /><testcase classname="geopandas.tests.test_geoseries.TestConstructor" name="test_reset_index[epsg:4326-None]" time="0.006" /><testcase classname="geopandas.tests.test_geoseries.TestConstructor" name="test_reset_index[epsg:4326-geometry]" time="0.007" /><testcase classname="geopandas.tests.test_geoseries.TestConstructor" name="test_reset_index[epsg:4326-Points]" time="0.006" /><testcase classname="geopandas.tests.test_geoseries.TestConstructor" name="test_to_frame[None-None]" time="0.003" /><testcase classname="geopandas.tests.test_geoseries.TestConstructor" name="test_to_frame[None-geometry]" time="0.004" /><testcase classname="geopandas.tests.test_geoseries.TestConstructor" name="test_to_frame[None-Points]" time="0.003" /><testcase classname="geopandas.tests.test_geoseries.TestConstructor" name="test_to_frame[epsg:4326-None]" time="0.005" /><testcase classname="geopandas.tests.test_geoseries.TestConstructor" name="test_to_frame[epsg:4326-geometry]" time="0.005" /><testcase classname="geopandas.tests.test_geoseries.TestConstructor" name="test_to_frame[epsg:4326-Points]" time="0.005" /><testcase classname="geopandas.tests.test_geoseries.TestConstructor" name="test_explode_without_multiindex" time="0.002" /><testcase classname="geopandas.tests.test_geoseries.TestConstructor" name="test_explode_ignore_index" time="0.002" /><testcase classname="geopandas.tests.test_merge.TestMerging" name="test_merge" time="0.012" /><testcase classname="geopandas.tests.test_merge.TestMerging" name="test_concat_axis0" time="0.006" /><testcase classname="geopandas.tests.test_merge.TestMerging" name="test_concat_axis0_crs" time="0.028" /><testcase classname="geopandas.tests.test_merge.TestMerging" name="test_concat_axis1" time="0.003" /><testcase classname="geopandas.tests.test_merge.TestMerging" name="test_concat_axis1_multiple_geodataframes" time="0.010" /><testcase classname="geopandas.tests.test_merge.TestMerging" name="test_concat_axis1_geoseries" time="0.006" /><testcase classname="geopandas.tests.test_op_output_types" name="test_getitem[geometry]" time="0.009" /><testcase classname="geopandas.tests.test_op_output_types" name="test_getitem[point]" time="0.007" /><testcase classname="geopandas.tests.test_op_output_types" name="test_loc[geometry]" time="0.008" /><testcase classname="geopandas.tests.test_op_output_types" name="test_loc[point]" time="0.007" /><testcase classname="geopandas.tests.test_op_output_types" name="test_iloc[geometry]" time="0.006" /><testcase classname="geopandas.tests.test_op_output_types" name="test_iloc[point]" time="0.005" /><testcase classname="geopandas.tests.test_op_output_types" name="test_squeeze[geometry]" time="0.004" /><testcase classname="geopandas.tests.test_op_output_types" name="test_squeeze[point]" time="0.003" /><testcase classname="geopandas.tests.test_op_output_types" name="test_to_frame[geometry]" time="0.004" /><testcase classname="geopandas.tests.test_op_output_types" name="test_to_frame[point]" time="0.004" /><testcase classname="geopandas.tests.test_op_output_types" name="test_reindex[geometry]" time="0.011" /><testcase classname="geopandas.tests.test_op_output_types" name="test_reindex[point]" time="0.008" /><testcase classname="geopandas.tests.test_op_output_types" name="test_drop[geometry]" time="0.006" /><testcase classname="geopandas.tests.test_op_output_types" name="test_drop[point]" time="0.006" /><testcase classname="geopandas.tests.test_op_output_types" name="test_apply[geometry]" time="0.027" /><testcase classname="geopandas.tests.test_op_output_types" name="test_apply[point]" time="0.023" /><testcase classname="geopandas.tests.test_op_output_types" name="test_apply_axis1_secondary_geo_cols[geometry]" time="0.005" /><testcase classname="geopandas.tests.test_op_output_types" name="test_apply_axis1_secondary_geo_cols[point]" time="0.005" /><testcase classname="geopandas.tests.test_op_output_types" name="test_expanddim_in_apply" time="0.002" /><testcase classname="geopandas.tests.test_op_output_types" name="test_expandim_in_groupby_aggregate_multiple_funcs" time="0.008" /><testcase classname="geopandas.tests.test_op_output_types" name="test_expanddim_in_unstack" time="0.007" /><testcase classname="geopandas.tests.test_op_output_types" name="test_constructor_sliced_row_slices[geometry]" time="0.004" /><testcase classname="geopandas.tests.test_op_output_types" name="test_constructor_sliced_row_slices[geometry2]" time="0.004" /><testcase classname="geopandas.tests.test_op_output_types" name="test_constructor_sliced_row_slices[geometry, geometry2]" time="0.004" /><testcase classname="geopandas.tests.test_op_output_types" name="test_constructor_sliced_row_slices[geometry, value]" time="0.004" /><testcase classname="geopandas.tests.test_op_output_types" name="test_constructor_sliced_row_slices[geometry, value_nan]" time="0.004" /><testcase classname="geopandas.tests.test_op_output_types" name="test_constructor_sliced_row_slices[geometry2, value]" time="0.004" /><testcase classname="geopandas.tests.test_op_output_types" name="test_constructor_sliced_row_slices[geometry2, value_nan]" time="0.003" /><testcase classname="geopandas.tests.test_op_output_types" name="test_constructor_sliced_column_slices" time="0.005" /><testcase classname="geopandas.tests.test_op_output_types" name="test_constructor_sliced_in_pandas_methods" time="0.005"><failure message="TypeError: '&lt;' not supported between instances of 'Point' and 'Point'">Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    result: Optional[TResult] = func()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 262, in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 177, in pytest_runtest_call
    raise e
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 169, in pytest_runtest_call
    item.runtest()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 1792, in runtest
    self.ihook.pytest_pyfunc_call(pyfuncitem=self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 113, in _multicall
    raise exception.with_traceback(exception.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 194, in pytest_pyfunc_call
    result = testfunction(**testargs)
  File "/workdir/geopandas-0.12.1/geopandas/tests/test_op_output_types.py", line 351, in test_constructor_sliced_in_pandas_methods
    assert type(df2.quantile()) == pd.Series
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/frame.py", line 11786, in quantile
    res_df = self.quantile(  # type: ignore[call-overload]
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/frame.py", line 11831, in quantile
    res = data._mgr.quantile(qs=q, interpolation=interpolation)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/internals/managers.py", line 1507, in quantile
    blocks = [
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/internals/managers.py", line 1508, in &lt;listcomp&gt;
    blk.quantile(qs=qs, interpolation=interpolation) for blk in self.blocks
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/internals/blocks.py", line 1587, in quantile
    result = quantile_compat(self.values, np.asarray(qs._values), interpolation)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/array_algos/quantile.py", line 41, in quantile_compat
    return values._quantile(qs, interpolation)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/arrays/base.py", line 2119, in _quantile
    res_values = quantile_with_mask(arr, mask, fill_value, qs, interpolation)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/array_algos/quantile.py", line 84, in quantile_with_mask
    res_values = quantile_with_mask(values, mask, fill_value, qs, interpolation)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/array_algos/quantile.py", line 97, in quantile_with_mask
    result = _nanpercentile(
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/array_algos/quantile.py", line 218, in _nanpercentile
    return np.percentile(
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/numpy/lib/function_base.py", line 4283, in percentile
    return _quantile_unchecked(
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/numpy/lib/function_base.py", line 4555, in _quantile_unchecked
    return _ureduce(a,
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/numpy/lib/function_base.py", line 3823, in _ureduce
    r = func(a, **kwargs)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/numpy/lib/function_base.py", line 4721, in _quantile_ureduce_func
    result = _quantile(arr,
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/numpy/lib/function_base.py", line 4823, in _quantile
    arr.partition(
TypeError: '&lt;' not supported between instances of 'Point' and 'Point'</failure></testcase><testcase classname="geopandas.tests.test_overlay" name="test_overlay[default-index-union]" time="0.046" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay[default-index-intersection]" time="0.024" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay[default-index-difference]" time="0.038" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay[default-index-symmetric_difference]" time="0.034" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay[default-index-identity]" time="0.049" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay[int-index-union]" time="0.048" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay[int-index-intersection]" time="0.024" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay[int-index-difference]" time="0.039" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay[int-index-symmetric_difference]" time="0.034" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay[int-index-identity]" time="0.049" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay[string-index-union]" time="0.045" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay[string-index-intersection]" time="0.024" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay[string-index-difference]" time="0.039" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay[string-index-symmetric_difference]" time="0.034" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay[string-index-identity]" time="0.049" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_nybb[union]" time="1.681" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_nybb[intersection]" time="1.299" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_nybb[difference]" time="1.506" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_nybb[symmetric_difference]" time="1.546" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_nybb[identity]" time="1.512" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_overlap[union]" time="0.054" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_overlap[intersection]" time="0.033" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_overlap[difference]" time="0.029" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_overlap[symmetric_difference]" time="0.043" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_overlap[identity]" time="0.043"><skipped type="pytest.skip" message="Skipped">/workdir/geopandas-0.12.1/geopandas/tests/test_overlay.py:265: Skipped</skipped></testcase><testcase classname="geopandas.tests.test_overlay" name="test_geometry_not_named_geometry[union-False]" time="0.134" /><testcase classname="geopandas.tests.test_overlay" name="test_geometry_not_named_geometry[union-True]" time="0.139" /><testcase classname="geopandas.tests.test_overlay" name="test_geometry_not_named_geometry[intersection-False]" time="0.063" /><testcase classname="geopandas.tests.test_overlay" name="test_geometry_not_named_geometry[intersection-True]" time="0.067" /><testcase classname="geopandas.tests.test_overlay" name="test_geometry_not_named_geometry[difference-False]" time="0.048" /><testcase classname="geopandas.tests.test_overlay" name="test_geometry_not_named_geometry[difference-True]" time="0.051" /><testcase classname="geopandas.tests.test_overlay" name="test_geometry_not_named_geometry[symmetric_difference-False]" time="0.102" /><testcase classname="geopandas.tests.test_overlay" name="test_geometry_not_named_geometry[symmetric_difference-True]" time="0.107" /><testcase classname="geopandas.tests.test_overlay" name="test_geometry_not_named_geometry[identity-False]" time="0.136" /><testcase classname="geopandas.tests.test_overlay" name="test_geometry_not_named_geometry[identity-True]" time="0.146" /><testcase classname="geopandas.tests.test_overlay" name="test_bad_how" time="0.003" /><testcase classname="geopandas.tests.test_overlay" name="test_duplicate_column_name[union]" time="0.035" /><testcase classname="geopandas.tests.test_overlay" name="test_duplicate_column_name[intersection]" time="0.018" /><testcase classname="geopandas.tests.test_overlay" name="test_duplicate_column_name[difference]" time="0.003"><skipped type="pytest.skip" message="Difference uses columns from one df only.">/workdir/geopandas-0.12.1/geopandas/tests/test_overlay.py:343: Difference uses columns from one df only.</skipped></testcase><testcase classname="geopandas.tests.test_overlay" name="test_duplicate_column_name[symmetric_difference]" time="0.029" /><testcase classname="geopandas.tests.test_overlay" name="test_duplicate_column_name[identity]" time="0.075" /><testcase classname="geopandas.tests.test_overlay" name="test_geoseries_warning" time="0.004" /><testcase classname="geopandas.tests.test_overlay" name="test_preserve_crs[union]" time="0.122" /><testcase classname="geopandas.tests.test_overlay" name="test_preserve_crs[intersection]" time="0.035" /><testcase classname="geopandas.tests.test_overlay" name="test_preserve_crs[difference]" time="0.026" /><testcase classname="geopandas.tests.test_overlay" name="test_preserve_crs[symmetric_difference]" time="0.053" /><testcase classname="geopandas.tests.test_overlay" name="test_preserve_crs[identity]" time="0.071" /><testcase classname="geopandas.tests.test_overlay" name="test_crs_mismatch[union]" time="0.038" /><testcase classname="geopandas.tests.test_overlay" name="test_crs_mismatch[intersection]" time="0.020" /><testcase classname="geopandas.tests.test_overlay" name="test_crs_mismatch[difference]" time="0.016" /><testcase classname="geopandas.tests.test_overlay" name="test_crs_mismatch[symmetric_difference]" time="0.029" /><testcase classname="geopandas.tests.test_overlay" name="test_crs_mismatch[identity]" time="0.039" /><testcase classname="geopandas.tests.test_overlay" name="test_empty_intersection" time="0.014" /><testcase classname="geopandas.tests.test_overlay" name="test_correct_index" time="0.021" /><testcase classname="geopandas.tests.test_overlay" name="test_warn_on_keep_geom_type" time="0.017" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_strict[union-True-polys]" time="0.046" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_strict[union-True-poly_line]" time="0.046" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_strict[union-True-poly_point]" time="0.044" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_strict[union-True-line_poly]" time="0.046" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_strict[union-True-point_poly]" time="0.045" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_strict[union-False-polys]" time="0.045" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_strict[union-False-poly_line]" time="0.049" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_strict[union-False-poly_point]" time="0.043" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_strict[union-False-line_poly]" time="0.046" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_strict[union-False-point_poly]" time="0.043" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_strict[intersection-True-polys]" time="0.029" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_strict[intersection-True-poly_line]" time="0.018" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_strict[intersection-True-poly_point]" time="0.018" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_strict[intersection-True-line_poly]" time="0.029" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_strict[intersection-True-point_poly]" time="0.029" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_strict[intersection-False-polys]" time="0.029" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_strict[intersection-False-poly_line]" time="0.028" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_strict[intersection-False-poly_point]" time="0.026" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_strict[intersection-False-line_poly]" time="0.027" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_strict[intersection-False-point_poly]" time="0.027" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_strict[difference-True-polys]" time="0.015" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_strict[difference-True-poly_line]" time="0.024" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_strict[difference-True-poly_point]" time="0.023" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_strict[difference-True-line_poly]" time="0.022" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_strict[difference-True-point_poly]" time="0.013" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_strict[difference-False-polys]" time="0.014" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_strict[difference-False-poly_line]" time="0.023" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_strict[difference-False-poly_point]" time="0.022" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_strict[difference-False-line_poly]" time="0.022" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_strict[difference-False-point_poly]" time="0.013" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_strict[symmetric_difference-True-polys]" time="0.039" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_strict[symmetric_difference-True-poly_line]" time="0.042" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_strict[symmetric_difference-True-poly_point]" time="0.040" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_strict[symmetric_difference-True-line_poly]" time="0.039" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_strict[symmetric_difference-True-point_poly]" time="0.026" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_strict[symmetric_difference-False-polys]" time="0.036" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_strict[symmetric_difference-False-poly_line]" time="0.036" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_strict[symmetric_difference-False-poly_point]" time="0.034" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_strict[symmetric_difference-False-line_poly]" time="0.037" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_strict[symmetric_difference-False-point_poly]" time="0.035" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_strict[identity-True-polys]" time="0.046" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_strict[identity-True-poly_line]" time="0.048" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_strict[identity-True-poly_point]" time="0.045" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_strict[identity-True-line_poly]" time="0.048" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_strict[identity-True-point_poly]" time="0.045" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_strict[identity-False-polys]" time="0.046" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_strict[identity-False-poly_line]" time="0.047" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_strict[identity-False-poly_point]" time="0.045" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_strict[identity-False-line_poly]" time="0.047" /><testcase classname="geopandas.tests.test_overlay" name="test_overlay_strict[identity-False-point_poly]" time="0.044" /><testcase classname="geopandas.tests.test_overlay" name="test_mixed_geom_error" time="0.004" /><testcase classname="geopandas.tests.test_overlay" name="test_keep_geom_type_error" time="0.016" /><testcase classname="geopandas.tests.test_overlay" name="test_keep_geom_type_geometry_collection" time="0.082" /><testcase classname="geopandas.tests.test_overlay" name="test_keep_geom_type_geometry_collection2" time="0.045" /><testcase classname="geopandas.tests.test_overlay" name="test_keep_geom_type_geomcoll_different_types" time="0.046" /><testcase classname="geopandas.tests.test_overlay" name="test_keep_geom_type_geometry_collection_difference" time="0.027" /><testcase classname="geopandas.tests.test_overlay" name="test_overlap_make_valid[True]" time="0.017" /><testcase classname="geopandas.tests.test_overlay" name="test_overlap_make_valid[False]" time="0.007" /><testcase classname="geopandas.tests.test_overlay" name="test_empty_overlay_return_non_duplicated_columns" time="0.238" /><testcase classname="geopandas.tests.test_overlay" name="test_non_overlapping[union]" time="0.035" /><testcase classname="geopandas.tests.test_overlay" name="test_non_overlapping[intersection]" time="0.011"><failure message="AssertionError: GeoDataFrame.index are different&#10;&#10;Attribute &quot;inferred_type&quot; are different&#10;[left]:  integer&#10;[right]: empty">Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    result: Optional[TResult] = func()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 262, in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 177, in pytest_runtest_call
    raise e
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 169, in pytest_runtest_call
    item.runtest()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 1792, in runtest
    self.ihook.pytest_pyfunc_call(pyfuncitem=self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 113, in _multicall
    raise exception.with_traceback(exception.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 194, in pytest_pyfunc_call
    result = testfunction(**testargs)
  File "/workdir/geopandas-0.12.1/geopandas/tests/test_overlay.py", line 798, in test_non_overlapping
    assert_geodataframe_equal(result, expected)
  File "/workdir/geopandas-0.12.1/geopandas/testing.py", line 334, in assert_geodataframe_equal
    assert_frame_equal(
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/_testing/asserters.py", line 1156, in assert_frame_equal
    assert_index_equal(
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/_testing/asserters.py", line 260, in assert_index_equal
    _check_types(left, right, obj=obj)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/_testing/asserters.py", line 236, in _check_types
    assert_attr_equal("inferred_type", left, right, obj=obj)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/_testing/asserters.py", line 414, in assert_attr_equal
    raise_assert_detail(obj, msg, left_attr, right_attr)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/_testing/asserters.py", line 598, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: GeoDataFrame.index are different

Attribute "inferred_type" are different
[left]:  integer
[right]: empty</failure></testcase><testcase classname="geopandas.tests.test_overlay" name="test_non_overlapping[difference]" time="0.014" /><testcase classname="geopandas.tests.test_overlay" name="test_non_overlapping[symmetric_difference]" time="0.028" /><testcase classname="geopandas.tests.test_overlay" name="test_non_overlapping[identity]" time="0.037" /><testcase classname="geopandas.tests.test_overlay" name="test_no_intersection" time="0.020" /><testcase classname="geopandas.tests.test_overlay.TestOverlayWikiExample" name="test_intersection" time="0.025" /><testcase classname="geopandas.tests.test_overlay.TestOverlayWikiExample" name="test_union" time="0.042" /><testcase classname="geopandas.tests.test_overlay.TestOverlayWikiExample" name="test_a_difference_b" time="0.022" /><testcase classname="geopandas.tests.test_overlay.TestOverlayWikiExample" name="test_b_difference_a" time="0.023" /><testcase classname="geopandas.tests.test_overlay.TestOverlayWikiExample" name="test_symmetric_difference" time="0.035" /><testcase classname="geopandas.tests.test_overlay.TestOverlayWikiExample" name="test_a_identity_b" time="0.044" /><testcase classname="geopandas.tests.test_overlay.TestOverlayWikiExample" name="test_b_identity_a" time="0.043" /><testcase classname="geopandas.tests.test_pandas_methods" name="test_repr" time="0.008" /><testcase classname="geopandas.tests.test_pandas_methods" name="test_repr_boxed_display_precision" time="0.007" /><testcase classname="geopandas.tests.test_pandas_methods" name="test_repr_all_missing" time="0.006" /><testcase classname="geopandas.tests.test_pandas_methods" name="test_repr_empty" time="0.003" /><testcase classname="geopandas.tests.test_pandas_methods" name="test_indexing" time="0.013" /><testcase classname="geopandas.tests.test_pandas_methods" name="test_reindex" time="0.009" /><testcase classname="geopandas.tests.test_pandas_methods" name="test_take" time="0.013" /><testcase classname="geopandas.tests.test_pandas_methods" name="test_take_empty" time="0.005" /><testcase classname="geopandas.tests.test_pandas_methods" name="test_assignment" time="0.008" /><testcase classname="geopandas.tests.test_pandas_methods" name="test_assign" time="0.004" /><testcase classname="geopandas.tests.test_pandas_methods" name="test_astype" time="0.007" /><testcase classname="geopandas.tests.test_pandas_methods" name="test_astype_invalid_geodataframe" time="0.001" /><testcase classname="geopandas.tests.test_pandas_methods" name="test_convert_dtypes" time="0.027" /><testcase classname="geopandas.tests.test_pandas_methods" name="test_to_csv" time="0.004" /><testcase classname="geopandas.tests.test_pandas_methods" name="test_numerical_operations" time="0.002"><failure message="TypeError: cannot perform sum with type geometry">Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    result: Optional[TResult] = func()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 262, in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 177, in pytest_runtest_call
    raise e
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 169, in pytest_runtest_call
    item.runtest()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 1792, in runtest
    self.ihook.pytest_pyfunc_call(pyfuncitem=self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 113, in _multicall
    raise exception.with_traceback(exception.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 194, in pytest_pyfunc_call
    result = testfunction(**testargs)
  File "/workdir/geopandas-0.12.1/geopandas/tests/test_pandas_methods.py", line 311, in test_numerical_operations
    assert_series_equal(df.sum(), exp)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/frame.py", line 11312, in sum
    result = super().sum(axis, skipna, numeric_only, min_count, **kwargs)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/generic.py", line 12070, in sum
    return self._min_count_stat_function(
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/generic.py", line 12053, in _min_count_stat_function
    return self._reduce(
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/frame.py", line 11204, in _reduce
    res = df._mgr.reduce(blk_func)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/internals/managers.py", line 1459, in reduce
    nbs = blk.reduce(func)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/internals/blocks.py", line 377, in reduce
    result = func(self.values)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/frame.py", line 11133, in blk_func
    result = values._reduce(name, skipna=skipna, **kwds)
  File "/workdir/geopandas-0.12.1/geopandas/array.py", line 1331, in _reduce
    raise TypeError(
TypeError: cannot perform sum with type geometry</failure></testcase><testcase classname="geopandas.tests.test_pandas_methods" name="test_where" time="0.002" /><testcase classname="geopandas.tests.test_pandas_methods" name="test_select_dtypes" time="0.003" /><testcase classname="geopandas.tests.test_pandas_methods" name="test_equals" time="0.005" /><testcase classname="geopandas.tests.test_pandas_methods" name="test_fillna" time="0.013" /><testcase classname="geopandas.tests.test_pandas_methods" name="test_dropna" time="0.002" /><testcase classname="geopandas.tests.test_pandas_methods" name="test_isna[None]" time="0.002" /><testcase classname="geopandas.tests.test_pandas_methods" name="test_isna[nan]" time="0.002" /><testcase classname="geopandas.tests.test_pandas_methods" name="test_any_all" time="0.001" /><testcase classname="geopandas.tests.test_pandas_methods" name="test_unique" time="0.001" /><testcase classname="geopandas.tests.test_pandas_methods" name="test_value_counts" time="0.002"><failure message="AssertionError: Series are different&#10;&#10;Attribute &quot;name&quot; are different&#10;[left]:  count&#10;[right]: None">Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    result: Optional[TResult] = func()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 262, in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 177, in pytest_runtest_call
    raise e
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 169, in pytest_runtest_call
    item.runtest()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 1792, in runtest
    self.ihook.pytest_pyfunc_call(pyfuncitem=self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 113, in _multicall
    raise exception.with_traceback(exception.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 194, in pytest_pyfunc_call
    result = testfunction(**testargs)
  File "/workdir/geopandas-0.12.1/geopandas/tests/test_pandas_methods.py", line 458, in test_value_counts
    assert_series_equal(res, exp)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/_testing/asserters.py", line 1017, in assert_series_equal
    assert_attr_equal("name", left, right, obj=obj)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/_testing/asserters.py", line 414, in assert_attr_equal
    raise_assert_detail(obj, msg, left_attr, right_attr)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/_testing/asserters.py", line 598, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: Series are different

Attribute "name" are different
[left]:  count
[right]: None</failure></testcase><testcase classname="geopandas.tests.test_pandas_methods" name="test_drop_duplicates_series" time="0.001" /><testcase classname="geopandas.tests.test_pandas_methods" name="test_drop_duplicates_frame" time="0.005" /><testcase classname="geopandas.tests.test_pandas_methods" name="test_groupby" time="0.006"><failure message="TypeError: agg function failed [how-&gt;sum,dtype-&gt;geometry]">Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/groupby/groupby.py", line 1874, in _agg_py_fallback
    res_values = self.grouper.agg_series(ser, alt, preserve_dtype=True)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/groupby/ops.py", line 850, in agg_series
    result = self._aggregate_series_pure_python(obj, func)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/groupby/ops.py", line 871, in _aggregate_series_pure_python
    res = func(group)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/numpy/core/fromnumeric.py", line 2313, in sum
    return _wrapreduction(a, np.add, 'sum', axis, dtype, out, keepdims=keepdims,
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/numpy/core/fromnumeric.py", line 86, in _wrapreduction
    return reduction(axis=axis, out=out, **passkwargs)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/series.py", line 6200, in sum
    return NDFrame.sum(self, axis, skipna, numeric_only, min_count, **kwargs)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/generic.py", line 12070, in sum
    return self._min_count_stat_function(
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/generic.py", line 12053, in _min_count_stat_function
    return self._reduce(
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/series.py", line 6115, in _reduce
    return delegate._reduce(name, skipna=skipna, **kwds)
  File "/workdir/geopandas-0.12.1/geopandas/array.py", line 1331, in _reduce
    raise TypeError(
TypeError: cannot perform sum with type geometry

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    result: Optional[TResult] = func()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 262, in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 177, in pytest_runtest_call
    raise e
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 169, in pytest_runtest_call
    item.runtest()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 1792, in runtest
    self.ihook.pytest_pyfunc_call(pyfuncitem=self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 113, in _multicall
    raise exception.with_traceback(exception.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 194, in pytest_pyfunc_call
    result = testfunction(**testargs)
  File "/workdir/geopandas-0.12.1/geopandas/tests/test_pandas_methods.py", line 521, in test_groupby
    res = df.groupby("value2").sum()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/groupby/groupby.py", line 3063, in sum
    result = self._agg_general(
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/groupby/groupby.py", line 1839, in _agg_general
    result = self._cython_agg_general(
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/groupby/groupby.py", line 1929, in _cython_agg_general
    new_mgr = data.grouped_reduce(array_func)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/internals/managers.py", line 1431, in grouped_reduce
    applied = blk.apply(func)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/internals/blocks.py", line 366, in apply
    result = func(self.values, **kwargs)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/groupby/groupby.py", line 1926, in array_func
    result = self._agg_py_fallback(how, values, ndim=data.ndim, alt=alt)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pandas/core/groupby/groupby.py", line 1878, in _agg_py_fallback
    raise type(err)(msg) from err
TypeError: agg function failed [how-&gt;sum,dtype-&gt;geometry]</failure></testcase><testcase classname="geopandas.tests.test_pandas_methods" name="test_groupby_groups" time="0.005" /><testcase classname="geopandas.tests.test_pandas_methods" name="test_groupby_metadata[None]" time="0.040" /><testcase classname="geopandas.tests.test_pandas_methods" name="test_groupby_metadata[EPSG:4326]" time="0.045" /><testcase classname="geopandas.tests.test_pandas_methods" name="test_apply" time="0.003" /><testcase classname="geopandas.tests.test_pandas_methods" name="test_apply_loc_len1" time="0.003" /><testcase classname="geopandas.tests.test_pandas_methods" name="test_apply_convert_dtypes_keyword" time="0.002" /><testcase classname="geopandas.tests.test_pandas_methods" name="test_apply_no_geometry_result[None]" time="0.006" /><testcase classname="geopandas.tests.test_pandas_methods" name="test_apply_no_geometry_result[EPSG:4326]" time="0.009" /><testcase classname="geopandas.tests.test_pandas_methods" name="test_apply_preserves_geom_col_name" time="0.004" /><testcase classname="geopandas.tests.test_pandas_methods" name="test_df_apply_returning_series" time="0.004" /><testcase classname="geopandas.tests.test_pandas_methods" name="test_df_apply_geometry_dtypes" time="0.002" /><testcase classname="geopandas.tests.test_pandas_methods" name="test_pivot" time="0.008" /><testcase classname="geopandas.tests.test_pandas_methods" name="test_preserve_attrs" time="0.011" /><testcase classname="geopandas.tests.test_pandas_methods" name="test_preserve_flags" time="0.018" /><testcase classname="geopandas.tests.test_plotting.TestPointPlotting" name="test_figsize" time="0.072" /><testcase classname="geopandas.tests.test_plotting.TestPointPlotting" name="test_default_colors" time="0.140" /><testcase classname="geopandas.tests.test_plotting.TestPointPlotting" name="test_series_color_no_index" time="0.091" /><testcase classname="geopandas.tests.test_plotting.TestPointPlotting" name="test_series_color_index" time="0.097" /><testcase classname="geopandas.tests.test_plotting.TestPointPlotting" name="test_colormap" time="0.213" /><testcase classname="geopandas.tests.test_plotting.TestPointPlotting" name="test_single_color" time="0.243" /><testcase classname="geopandas.tests.test_plotting.TestPointPlotting" name="test_markersize" time="0.384" /><testcase classname="geopandas.tests.test_plotting.TestPointPlotting" name="test_markerstyle" time="0.045" /><testcase classname="geopandas.tests.test_plotting.TestPointPlotting" name="test_style_kwargs" time="0.044" /><testcase classname="geopandas.tests.test_plotting.TestPointPlotting" name="test_style_kwargs_alpha" time="0.048" /><testcase classname="geopandas.tests.test_plotting.TestPointPlotting" name="test_legend" time="0.430" /><testcase classname="geopandas.tests.test_plotting.TestPointPlotting" name="test_subplots_norm" time="0.089" /><testcase classname="geopandas.tests.test_plotting.TestPointPlotting" name="test_empty_plot" time="0.035" /><testcase classname="geopandas.tests.test_plotting.TestPointPlotting" name="test_empty_geometry" time="0.095" /><testcase classname="geopandas.tests.test_plotting.TestPointPlotting" name="test_multipoints" time="0.137" /><testcase classname="geopandas.tests.test_plotting.TestPointPlotting" name="test_multipoints_alpha" time="0.112" /><testcase classname="geopandas.tests.test_plotting.TestPointPlotting" name="test_categories" time="0.845" /><testcase classname="geopandas.tests.test_plotting.TestPointPlotting" name="test_missing" time="0.215" /><testcase classname="geopandas.tests.test_plotting.TestPointPlotting" name="test_no_missing_and_missing_kwds" time="0.078" /><testcase classname="geopandas.tests.test_plotting.TestPointZPlotting" name="test_plot" time="0.045" /><testcase classname="geopandas.tests.test_plotting.TestLineStringPlotting" name="test_single_color" time="0.287" /><testcase classname="geopandas.tests.test_plotting.TestLineStringPlotting" name="test_style_kwargs_linestyle" time="0.317" /><testcase classname="geopandas.tests.test_plotting.TestLineStringPlotting" name="test_style_kwargs_linewidth" time="0.292" /><testcase classname="geopandas.tests.test_plotting.TestLineStringPlotting" name="test_style_kwargs_alpha" time="0.305" /><testcase classname="geopandas.tests.test_plotting.TestLineStringPlotting" name="test_style_kwargs_path_effects" time="0.047" /><testcase classname="geopandas.tests.test_plotting.TestLineStringPlotting" name="test_subplots_norm" time="0.088" /><testcase classname="geopandas.tests.test_plotting.TestLineStringPlotting" name="test_multilinestrings" time="0.115" /><testcase classname="geopandas.tests.test_plotting.TestPolygonPlotting" name="test_single_color" time="0.248" /><testcase classname="geopandas.tests.test_plotting.TestPolygonPlotting" name="test_vmin_vmax" time="0.150" /><testcase classname="geopandas.tests.test_plotting.TestPolygonPlotting" name="test_style_kwargs_color" time="0.335" /><testcase classname="geopandas.tests.test_plotting.TestPolygonPlotting" name="test_style_kwargs_linestyle" time="0.207" /><testcase classname="geopandas.tests.test_plotting.TestPolygonPlotting" name="test_style_kwargs_linewidth" time="0.475" /><testcase classname="geopandas.tests.test_plotting.TestPolygonPlotting" name="test_legend_kwargs" time="0.095" /><testcase classname="geopandas.tests.test_plotting.TestPolygonPlotting" name="test_colorbar_kwargs" time="0.183" /><testcase classname="geopandas.tests.test_plotting.TestPolygonPlotting" name="test_fmt_ignore" time="0.152" /><testcase classname="geopandas.tests.test_plotting.TestPolygonPlotting" name="test_multipolygons_color" time="0.158" /><testcase classname="geopandas.tests.test_plotting.TestPolygonPlotting" name="test_multipolygons_linestyle" time="0.209" /><testcase classname="geopandas.tests.test_plotting.TestPolygonPlotting" name="test_multipolygons_linewidth" time="0.160" /><testcase classname="geopandas.tests.test_plotting.TestPolygonPlotting" name="test_multipolygons_alpha" time="0.111" /><testcase classname="geopandas.tests.test_plotting.TestPolygonPlotting" name="test_subplots_norm" time="0.104" /><testcase classname="geopandas.tests.test_plotting.TestPolygonZPlotting" name="test_plot" time="0.055" /><testcase classname="geopandas.tests.test_plotting.TestColorParamArray" name="test_color_single" time="0.061" /><testcase classname="geopandas.tests.test_plotting.TestColorParamArray" name="test_color_multi" time="0.058" /><testcase classname="geopandas.tests.test_plotting.TestGeometryCollectionPlotting" name="test_colors" time="0.057" /><testcase classname="geopandas.tests.test_plotting.TestGeometryCollectionPlotting" name="test_values" time="0.058" /><testcase classname="geopandas.tests.test_plotting.TestNonuniformGeometryPlotting" name="test_colors" time="0.112" /><testcase classname="geopandas.tests.test_plotting.TestNonuniformGeometryPlotting" name="test_style_kwargs" time="0.341" /><testcase classname="geopandas.tests.test_plotting.TestNonuniformGeometryPlotting" name="test_style_kwargs_linestyle" time="0.270" /><testcase classname="geopandas.tests.test_plotting.TestNonuniformGeometryPlotting" name="test_style_kwargs_linestyle_listlike" time="0.001"><skipped type="pytest.skip" message="array-like style_kwds not supported for mixed geometry types (#1379)">/workdir/geopandas-0.12.1/geopandas/tests/test_plotting.py:1002: array-like style_kwds not supported for mixed geometry types (#1379)</skipped></testcase><testcase classname="geopandas.tests.test_plotting.TestNonuniformGeometryPlotting" name="test_style_kwargs_linewidth" time="0.063" /><testcase classname="geopandas.tests.test_plotting.TestNonuniformGeometryPlotting" name="test_style_kwargs_linewidth_listlike" time="0.000"><skipped type="pytest.skip" message="array-like style_kwds not supported for mixed geometry types (#1379)">/workdir/geopandas-0.12.1/geopandas/tests/test_plotting.py:1021: array-like style_kwds not supported for mixed geometry types (#1379)</skipped></testcase><testcase classname="geopandas.tests.test_plotting.TestNonuniformGeometryPlotting" name="test_style_kwargs_alpha" time="0.063" /><testcase classname="geopandas.tests.test_plotting.TestGeographicAspect" name="test_auto" time="0.430" /><testcase classname="geopandas.tests.test_plotting.TestGeographicAspect" name="test_manual" time="0.738" /><testcase classname="geopandas.tests.test_plotting.TestMapclassifyPlotting" name="test_legend" time="0.562" /><testcase classname="geopandas.tests.test_plotting.TestMapclassifyPlotting" name="test_bin_labels" time="0.112" /><testcase classname="geopandas.tests.test_plotting.TestMapclassifyPlotting" name="test_invalid_labels_length" time="0.016" /><testcase classname="geopandas.tests.test_plotting.TestMapclassifyPlotting" name="test_negative_legend" time="0.151" /><testcase classname="geopandas.tests.test_plotting.TestMapclassifyPlotting" name="test_fmt" time="0.149" /><testcase classname="geopandas.tests.test_plotting.TestMapclassifyPlotting" name="test_interval" time="0.150" /><testcase classname="geopandas.tests.test_plotting.TestMapclassifyPlotting" name="test_scheme_name_compat[FISHER_JENKS]" time="0.148" /><testcase classname="geopandas.tests.test_plotting.TestMapclassifyPlotting" name="test_scheme_name_compat[FISHERJENKS]" time="0.167" /><testcase classname="geopandas.tests.test_plotting.TestMapclassifyPlotting" name="test_schemes" time="2.347" /><testcase classname="geopandas.tests.test_plotting.TestMapclassifyPlotting" name="test_classification_kwds" time="0.106" /><testcase classname="geopandas.tests.test_plotting.TestMapclassifyPlotting" name="test_invalid_scheme" time="0.014" /><testcase classname="geopandas.tests.test_plotting.TestMapclassifyPlotting" name="test_cax_legend_passing" time="0.029" /><testcase classname="geopandas.tests.test_plotting.TestMapclassifyPlotting" name="test_cax_legend_height" time="0.244" /><testcase classname="geopandas.tests.test_plotting.TestMapclassifyPlotting" name="test_empty_bins" time="0.445" /><testcase classname="geopandas.tests.test_plotting.TestMapclassifyPlotting" name="test_equally_formatted_bins" time="0.496" /><testcase classname="geopandas.tests.test_plotting.TestPlotCollections" name="test_points" time="0.078" /><testcase classname="geopandas.tests.test_plotting.TestPlotCollections" name="test_points_values" time="0.052" /><testcase classname="geopandas.tests.test_plotting.TestPlotCollections" name="test_linestrings" time="0.099" /><testcase classname="geopandas.tests.test_plotting.TestPlotCollections" name="test_linestrings_values" time="0.132" /><testcase classname="geopandas.tests.test_plotting.TestPlotCollections" name="test_polygons" time="0.098" /><testcase classname="geopandas.tests.test_plotting.TestPlotCollections" name="test_polygons_values" time="0.167" /><testcase classname="geopandas.tests.test_plotting.TestGeoplotAccessor" name="test_pandas_kind[png-line]" time="0.264" /><testcase classname="geopandas.tests.test_plotting.TestGeoplotAccessor" name="test_pandas_kind[png-bar]" time="0.253" /><testcase classname="geopandas.tests.test_plotting.TestGeoplotAccessor" name="test_pandas_kind[png-barh]" time="0.253" /><testcase classname="geopandas.tests.test_plotting.TestGeoplotAccessor" name="test_pandas_kind[png-kde]" time="0.244" /><testcase classname="geopandas.tests.test_plotting.TestGeoplotAccessor" name="test_pandas_kind[png-density]" time="0.536" /><testcase classname="geopandas.tests.test_plotting.TestGeoplotAccessor" name="test_pandas_kind[png-area]" time="0.241" /><testcase classname="geopandas.tests.test_plotting.TestGeoplotAccessor" name="test_pandas_kind[png-hist]" time="0.333" /><testcase classname="geopandas.tests.test_plotting.TestGeoplotAccessor" name="test_pandas_kind[png-box]" time="0.203" /><testcase classname="geopandas.tests.test_plotting.TestGeoplotAccessor" name="test_pandas_kind[png-pie]" time="0.152" /><testcase classname="geopandas.tests.test_plotting.TestGeoplotAccessor" name="test_pandas_kind[png-scatter]" time="0.220" /><testcase classname="geopandas.tests.test_plotting.TestGeoplotAccessor" name="test_pandas_kind[png-hexbin]" time="0.358" /><testcase classname="geopandas.tests.test_plotting.TestGeoplotAccessor" name="test_pandas_kind[pdf-line]" time="0.698" /><testcase classname="geopandas.tests.test_plotting.TestGeoplotAccessor" name="test_pandas_kind[pdf-bar]" time="0.275" /><testcase classname="geopandas.tests.test_plotting.TestGeoplotAccessor" name="test_pandas_kind[pdf-barh]" time="0.282" /><testcase classname="geopandas.tests.test_plotting.TestGeoplotAccessor" name="test_pandas_kind[pdf-kde]" time="0.268" /><testcase classname="geopandas.tests.test_plotting.TestGeoplotAccessor" name="test_pandas_kind[pdf-density]" time="0.395" /><testcase classname="geopandas.tests.test_plotting.TestGeoplotAccessor" name="test_pandas_kind[pdf-area]" time="0.280" /><testcase classname="geopandas.tests.test_plotting.TestGeoplotAccessor" name="test_pandas_kind[pdf-hist]" time="0.657" /><testcase classname="geopandas.tests.test_plotting.TestGeoplotAccessor" name="test_pandas_kind[pdf-box]" time="0.223" /><testcase classname="geopandas.tests.test_plotting.TestGeoplotAccessor" name="test_pandas_kind[pdf-pie]" time="0.142" /><testcase classname="geopandas.tests.test_plotting.TestGeoplotAccessor" name="test_pandas_kind[pdf-scatter]" time="0.272" /><testcase classname="geopandas.tests.test_plotting.TestGeoplotAccessor" name="test_pandas_kind[pdf-hexbin]" time="0.432" /><testcase classname="geopandas.tests.test_plotting.TestGeoplotAccessor" name="test_geo_kind[png]" time="0.148" /><testcase classname="geopandas.tests.test_plotting.TestGeoplotAccessor" name="test_geo_kind[pdf]" time="0.148" /><testcase classname="geopandas.tests.test_plotting.TestGeoplotAccessor" name="test_invalid_kind" time="0.007" /><testcase classname="geopandas.tests.test_plotting" name="test_column_values" time="0.598" /><testcase classname="geopandas.tests.test_plotting" name="test_polygon_patch" time="0.002" /><testcase classname="geopandas.tests.test_show_versions" name="test_get_sys_info" time="0.002" /><testcase classname="geopandas.tests.test_show_versions" name="test_get_c_info" time="0.001" /><testcase classname="geopandas.tests.test_show_versions" name="test_get_deps_info" time="0.001" /><testcase classname="geopandas.tests.test_show_versions" name="test_show_versions" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestSeriesSindex" name="test_has_sindex" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestSeriesSindex" name="test_empty_geoseries" time="0.001" /><testcase classname="geopandas.tests.test_sindex.TestSeriesSindex" name="test_point" time="0.001" /><testcase classname="geopandas.tests.test_sindex.TestSeriesSindex" name="test_empty_point" time="0.001" /><testcase classname="geopandas.tests.test_sindex.TestSeriesSindex" name="test_polygons" time="0.001" /><testcase classname="geopandas.tests.test_sindex.TestSeriesSindex" name="test_polygons_append" time="0.002"><failure message="AttributeError: 'super' object has no attribute 'append'">Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    result: Optional[TResult] = func()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 262, in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 177, in pytest_runtest_call
    raise e
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 169, in pytest_runtest_call
    item.runtest()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 1792, in runtest
    self.ihook.pytest_pyfunc_call(pyfuncitem=self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 113, in _multicall
    raise exception.with_traceback(exception.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 194, in pytest_pyfunc_call
    result = testfunction(**testargs)
  File "/workdir/geopandas-0.12.1/geopandas/tests/test_sindex.py", line 85, in test_polygons_append
    s = s.append(t)
  File "/workdir/geopandas-0.12.1/geopandas/geoseries.py", line 235, in append
    return self._wrapped_pandas_method("append", *args, **kwargs)
  File "/workdir/geopandas-0.12.1/geopandas/geoseries.py", line 622, in _wrapped_pandas_method
    val = getattr(super(), mtd)(*args, **kwargs)
AttributeError: 'super' object has no attribute 'append'</failure></testcase><testcase classname="geopandas.tests.test_sindex.TestSeriesSindex" name="test_lazy_build" time="0.001" /><testcase classname="geopandas.tests.test_sindex.TestSeriesSindex" name="test_rebuild_on_item_change" time="0.001" /><testcase classname="geopandas.tests.test_sindex.TestSeriesSindex" name="test_rebuild_on_slice" time="0.001" /><testcase classname="geopandas.tests.test_sindex.TestFrameSindex" name="test_sindex" time="0.004" /><testcase classname="geopandas.tests.test_sindex.TestFrameSindex" name="test_lazy_build" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestFrameSindex" name="test_sindex_rebuild_on_set_geometry" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestFrameSindex" name="test_rebuild_on_row_slice" time="0.003" /><testcase classname="geopandas.tests.test_sindex.TestFrameSindex" name="test_rebuild_on_single_col_selection" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestFrameSindex" name="test_rebuild_on_multiple_col_selection" time="0.006"><failure message="assert &lt;geopandas.sindex.PyGEOSSTRTreeIndex object at 0x7f9feff76bc0&gt; is &lt;geopandas.sindex.PyGEOSSTRTreeIndex object at 0x7f9fefd0c700&gt;&#10; +  where &lt;geopandas.sindex.PyGEOSSTRTreeIndex object at 0x7f9feff76bc0&gt; =                               geom  A\n0  POINT (0.000000000 0.000000000)  0\n1  POINT (1.000000000 1.000000000)  1\n2  POINT (2.000000000 2.000000000)  2\n3  POINT (3.000000000 3.000000000)  3\n4  POINT (4.000000000 4.000000000)  4.sindex">Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    result: Optional[TResult] = func()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 262, in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 177, in pytest_runtest_call
    raise e
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 169, in pytest_runtest_call
    item.runtest()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 1792, in runtest
    self.ihook.pytest_pyfunc_call(pyfuncitem=self)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 113, in _multicall
    raise exception.with_traceback(exception.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 194, in pytest_pyfunc_call
    result = testfunction(**testargs)
  File "/workdir/geopandas-0.12.1/geopandas/tests/test_sindex.py", line 176, in test_rebuild_on_multiple_col_selection
    assert subset1.sindex is original_index
AssertionError: assert &lt;geopandas.sindex.PyGEOSSTRTreeIndex object at 0x7f9feff76bc0&gt; is &lt;geopandas.sindex.PyGEOSSTRTreeIndex object at 0x7f9fefd0c700&gt;
 +  where &lt;geopandas.sindex.PyGEOSSTRTreeIndex object at 0x7f9feff76bc0&gt; =                               geom  A\n0  POINT (0.000000000 0.000000000)  0\n1  POINT (1.000000000 1.000000000)  1\n2  POINT (2.000000000 2.000000000)  2\n3  POINT (3.000000000 3.000000000)  3\n4  POINT (4.000000000 4.000000000)  4.sindex</failure></testcase><testcase classname="geopandas.tests.test_sindex.TestFrameSindex" name="test_rebuild_on_update_inplace" time="0.003" /><testcase classname="geopandas.tests.test_sindex.TestFrameSindex" name="test_update_inplace_no_rebuild" time="0.003" /><testcase classname="geopandas.tests.test_sindex.TestJoinSindex" name="test_merge_geo" time="0.000"><skipped type="pytest.skip" message="unconditional skip">/workdir/geopandas-0.12.1/geopandas/tests/test_sindex.py:213: unconditional skip</skipped></testcase><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_intersection_bounds_tuple[test_geom0-expected0]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_intersection_bounds_tuple[test_geom1-expected1]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_intersection_bounds_tuple[test_geom2-expected2]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_intersection_bounds_tuple[test_geom3-expected3]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_intersection_invalid_bounds_tuple[test_geom0]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_intersection_invalid_bounds_tuple[-0.5]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_intersection_invalid_bounds_tuple[None]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_intersection_invalid_bounds_tuple[test_geom3]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query[None-test_geom0-expected0]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query[None-test_geom1-expected1]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query[None-test_geom2-expected2]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query[None-test_geom3-expected3]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query[intersects-test_geom4-expected4]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query[intersects-test_geom5-expected5]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query[intersects-test_geom6-expected6]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query[intersects-test_geom7-expected7]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query[within-test_geom8-expected8]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query[within-test_geom9-expected9]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query[within-test_geom10-expected10]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query[within-test_geom11-expected11]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query[contains-test_geom12-expected12]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query[contains-test_geom13-expected13]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query[contains-test_geom14-expected14]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query[contains-test_geom15-expected15]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query[contains-test_geom16-expected16]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query[touches-test_geom17-expected17]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query[touches-test_geom18-expected18]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query[contains-test_geom19-expected19]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query[covers-test_geom20-expected20]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query[covers-test_geom21-expected21]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query[covers-test_geom22-expected22]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query[contains_properly-test_geom23-expected23]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query[contains_properly-test_geom24-expected24]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query[contains_properly-test_geom25-expected25]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query[contains_properly-test_geom26-expected26]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query[contains_properly-test_geom27-expected27]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query[contains_properly-test_geom28-expected28]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query_invalid_geometry" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query_empty_geometry[None-expected_value0]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query_empty_geometry[test_geom1-expected_value1]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query_empty_geometry[test_geom2-expected_value2]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query_empty_geometry[test_geom3-expected_value3]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query_empty_geometry[test_geom4-expected_value4]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query_invalid_predicate" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query_sorting[True-expected0]" time="0.005" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query_sorting[False-expected1]" time="0.007"><skipped type="pytest.xfail" message="rtree results are known to be unordered, see https://github.com/geopandas/geopandas/issues/1337&#10;Expected:&#10; [0, 1, 2]&#10;Got:&#10; [1, 0, 2]&#10;" /></testcase><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query_bulk[None-test_geom0-expected0]" time="0.003" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query_bulk[None-test_geom1-expected1]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query_bulk[None-test_geom2-expected2]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query_bulk[intersects-test_geom3-expected3]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query_bulk[intersects-test_geom4-expected4]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query_bulk[intersects-test_geom5-expected5]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query_bulk[intersects-test_geom6-expected6]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query_bulk[intersects-test_geom7-expected7]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query_bulk[within-test_geom8-expected8]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query_bulk[within-test_geom9-expected9]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query_bulk[within-test_geom10-expected10]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query_bulk[contains-test_geom11-expected11]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query_bulk[contains-test_geom12-expected12]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query_bulk[contains-test_geom13-expected13]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query_bulk[contains-test_geom14-expected14]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query_bulk[contains-test_geom15-expected15]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query_bulk[contains-test_geom16-expected16]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query_bulk[touches-test_geom17-expected17]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query_bulk[touches-test_geom18-expected18]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query_bulk[covers-test_geom19-expected19]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query_bulk[covers-test_geom20-expected20]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query_bulk[covers-test_geom21-expected21]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query_bulk[contains_properly-test_geom22-expected22]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query_bulk[contains_properly-test_geom23-expected23]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query_bulk[contains_properly-test_geom24-expected24]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query_bulk[contains_properly-test_geom25-expected25]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query_bulk[contains_properly-test_geom26-expected26]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query_bulk[contains_properly-test_geom27-expected27]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query_bulk_empty_geometry[test_geoms0-expected_value0]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query_bulk_empty_geometry[test_geoms1-expected_value1]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query_bulk_empty_geometry[test_geoms2-expected_value2]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query_bulk_empty_geometry[test_geoms3-expected_value3]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query_bulk_empty_input_array" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query_bulk_invalid_input_geometry" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query_bulk_invalid_predicate" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query_bulk_input_type[None-test_geom0-expected0]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query_bulk_input_type[intersects-test_geom1-expected1]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query_bulk_input_type[contains-test_geom2-expected2]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query_bulk_sorting[True-expected0]" time="0.005" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_query_bulk_sorting[False-expected1]" time="0.005"><skipped type="pytest.xfail" message="rtree results are known to be unordered, see https://github.com/geopandas/geopandas/issues/1337&#10;Expected:&#10; [[0, 0, 0], [0, 1, 2]]&#10;Got:&#10; [[0, 0, 0], [1, 0, 2]]&#10;" /></testcase><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_rtree_nearest_warns" time="0.000"><skipped type="pytest.skip" message="RTree supports sindex.nearest with different behaviour">/workdir/geopandas-0.12.1/geopandas/tests/test_sindex.py:703: RTree supports sindex.nearest with different behaviour</skipped></testcase><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_pygeos_error" time="0.000"><skipped type="pytest.skip" message="PyGEOS &lt; 0.10 does not support sindex.nearest">/workdir/geopandas-0.12.1/geopandas/tests/test_sindex.py:714: PyGEOS &lt; 0.10 does not support sindex.nearest</skipped></testcase><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_nearest_single[geometry0-expected0-True]" time="0.003" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_nearest_single[geometry0-expected0-False]" time="0.003" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_nearest_single[geometry1-expected1-True]" time="0.003" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_nearest_single[geometry1-expected1-False]" time="0.003" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_nearest_multi[geometry0-expected0-True]" time="0.003" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_nearest_multi[geometry0-expected0-False]" time="0.003" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_nearest_multi[geometry1-expected1-True]" time="0.003" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_nearest_multi[geometry1-expected1-False]" time="0.003" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_nearest_none[None-expected0-True]" time="0.003" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_nearest_none[None-expected0-False]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_nearest_none[geometry1-expected1-True]" time="0.003" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_nearest_none[geometry1-expected1-False]" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_nearest_max_distance[True-None-expected0-True]" time="0.003" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_nearest_max_distance[True-None-expected0-False]" time="0.003" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_nearest_max_distance[False-None-expected1-True]" time="0.003" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_nearest_max_distance[False-None-expected1-False]" time="0.003" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_nearest_max_distance[True-1-expected2-True]" time="0.003" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_nearest_max_distance[True-1-expected2-False]" time="0.003" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_nearest_max_distance[False-1-expected3-True]" time="0.003" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_nearest_max_distance[False-1-expected3-False]" time="0.003" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_empty_tree_geometries" time="0.003" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_size" time="0.001" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_len" time="0.001" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_is_empty" time="0.002" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_integration_natural_earth[None-expected_shape0]" time="0.070" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_integration_natural_earth[intersects-expected_shape1]" time="0.068" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_integration_natural_earth[within-expected_shape2]" time="0.083" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_integration_natural_earth[contains-expected_shape3]" time="0.068" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_integration_natural_earth[overlaps-expected_shape4]" time="0.084" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_integration_natural_earth[crosses-expected_shape5]" time="0.090" /><testcase classname="geopandas.tests.test_sindex.TestPygeosInterface" name="test_integration_natural_earth[touches-expected_shape6]" time="0.106" /><testcase classname="geopandas.tests.test_sindex" name="test_old_spatial_index_deprecated" time="0.002" /><testcase classname="geopandas.tests.test_testing" name="test_geoseries" time="0.008" /><testcase classname="geopandas.tests.test_testing" name="test_geodataframe" time="0.030" /><testcase classname="geopandas.tests.test_testing" name="test_equal_nans" time="0.003" /><testcase classname="geopandas.tests.test_testing" name="test_no_crs" time="0.005" /><testcase classname="geopandas.tests.test_testing" name="test_ignore_crs_mismatch" time="0.012" /><testcase classname="geopandas.tests.test_testing" name="test_almost_equal_but_not_equal" time="0.004" /><testcase classname="geopandas.tests.test_types.TestSeries" name="test_slice" time="0.002" /><testcase classname="geopandas.tests.test_types.TestSeries" name="test_head" time="0.002" /><testcase classname="geopandas.tests.test_types.TestSeries" name="test_tail" time="0.002" /><testcase classname="geopandas.tests.test_types.TestSeries" name="test_sort_index" time="0.002" /><testcase classname="geopandas.tests.test_types.TestSeries" name="test_loc" time="0.002" /><testcase classname="geopandas.tests.test_types.TestSeries" name="test_iloc" time="0.002" /><testcase classname="geopandas.tests.test_types.TestSeries" name="test_fancy" time="0.002" /><testcase classname="geopandas.tests.test_types.TestSeries" name="test_take" time="0.002" /><testcase classname="geopandas.tests.test_types.TestSeries" name="test_groupby" time="0.003" /><testcase classname="geopandas.tests.test_types.TestDataFrame" name="test_geometry" time="0.003" /><testcase classname="geopandas.tests.test_types.TestDataFrame" name="test_nongeometry" time="0.002" /><testcase classname="geopandas.tests.test_types.TestDataFrame" name="test_geometry_multiple" time="0.004" /><testcase classname="geopandas.tests.test_types.TestDataFrame" name="test_nongeometry_multiple" time="0.004" /><testcase classname="geopandas.tests.test_types.TestDataFrame" name="test_slice" time="0.005" /><testcase classname="geopandas.tests.test_types.TestDataFrame" name="test_fancy" time="0.004" /><testcase classname="geopandas.tools.tests.test_clip" name="test_not_gdf" time="0.006" /><testcase classname="geopandas.tools.tests.test_clip" name="test_non_overlapping_geoms" time="0.012" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_returns_gdf[single_rectangle_gdf]" time="0.012" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_returns_gdf[single_rectangle_gdf_list_bounds]" time="0.011" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_returns_gdf[single_rectangle_gdf_tuple_bounds]" time="0.011" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_returns_gdf[single_rectangle_gdf_array_bounds]" time="0.012" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_returns_series[single_rectangle_gdf]" time="0.011" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_returns_series[single_rectangle_gdf_list_bounds]" time="0.010" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_returns_series[single_rectangle_gdf_tuple_bounds]" time="0.009" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_returns_series[single_rectangle_gdf_array_bounds]" time="0.009" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_clip_points[single_rectangle_gdf]" time="0.016" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_clip_points[single_rectangle_gdf_list_bounds]" time="0.016" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_clip_points[single_rectangle_gdf_tuple_bounds]" time="0.016" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_clip_points[single_rectangle_gdf_array_bounds]" time="0.018" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_clip_points_geom_col_rename[single_rectangle_gdf]" time="0.016" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_clip_points_geom_col_rename[single_rectangle_gdf_list_bounds]" time="0.016" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_clip_points_geom_col_rename[single_rectangle_gdf_tuple_bounds]" time="0.016" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_clip_points_geom_col_rename[single_rectangle_gdf_array_bounds]" time="0.015" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_clip_poly[single_rectangle_gdf]" time="0.013" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_clip_poly[single_rectangle_gdf_list_bounds]" time="0.014" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_clip_poly[single_rectangle_gdf_tuple_bounds]" time="0.013" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_clip_poly[single_rectangle_gdf_array_bounds]" time="0.014" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_clip_poly_geom_col_rename[single_rectangle_gdf]" time="0.013" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_clip_poly_geom_col_rename[single_rectangle_gdf_list_bounds]" time="0.015" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_clip_poly_geom_col_rename[single_rectangle_gdf_tuple_bounds]" time="0.015" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_clip_poly_geom_col_rename[single_rectangle_gdf_array_bounds]" time="0.015" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_clip_poly_series[single_rectangle_gdf]" time="0.013" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_clip_poly_series[single_rectangle_gdf_list_bounds]" time="0.013" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_clip_poly_series[single_rectangle_gdf_tuple_bounds]" time="0.012" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_clip_poly_series[single_rectangle_gdf_array_bounds]" time="0.012" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_clip_multipoly_keep_geom_type[single_rectangle_gdf]" time="0.046" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_clip_multipoly_keep_geom_type[single_rectangle_gdf_list_bounds]" time="0.043" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_clip_multipoly_keep_geom_type[single_rectangle_gdf_tuple_bounds]" time="0.047" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_clip_multipoly_keep_geom_type[single_rectangle_gdf_array_bounds]" time="0.046" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_clip_multiline[single_rectangle_gdf]" time="0.014" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_clip_multiline[single_rectangle_gdf_list_bounds]" time="0.015" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_clip_multiline[single_rectangle_gdf_tuple_bounds]" time="0.015" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_clip_multiline[single_rectangle_gdf_array_bounds]" time="0.015" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_clip_multipoint[single_rectangle_gdf]" time="0.016" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_clip_multipoint[single_rectangle_gdf_list_bounds]" time="0.017" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_clip_multipoint[single_rectangle_gdf_tuple_bounds]" time="0.017" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_clip_multipoint[single_rectangle_gdf_array_bounds]" time="0.017" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_clip_lines[single_rectangle_gdf]" time="0.010" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_clip_lines[single_rectangle_gdf_list_bounds]" time="0.011" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_clip_lines[single_rectangle_gdf_tuple_bounds]" time="0.012" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_clip_lines[single_rectangle_gdf_array_bounds]" time="0.012" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_mixed_geom[single_rectangle_gdf]" time="0.001"><error message="failed on setup with &quot;ValueError: Point() takes only scalar or 1-size vector arguments, got ([(2, 3), (11, 4), (7, 2), (8, 9), (1, 13)],)&quot;">Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    result: Optional[TResult] = func()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 262, in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 157, in pytest_runtest_setup
    item.session._setupstate.setup(item)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 497, in setup
    raise exc
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 494, in setup
    col.setup()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 1795, in setup
    self._request._fillfixtures()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 566, in _fillfixtures
    item.funcargs[argname] = self.getfixturevalue(argname)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 585, in getfixturevalue
    fixturedef = self._get_active_fixturedef(argname)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 607, in _get_active_fixturedef
    self._compute_fixture_value(fixturedef)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 693, in _compute_fixture_value
    fixturedef.execute(request=subrequest)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 1069, in execute
    result = ihook.pytest_fixture_setup(fixturedef=self, request=request)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 1123, in pytest_fixture_setup
    result = call_fixture_func(fixturefunc, request, kwargs)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 902, in call_fixture_func
    fixture_result = fixturefunc(**kwargs)
  File "/workdir/geopandas-0.12.1/geopandas/tools/tests/test_clip.py", line 179, in mixed_gdf
    point = Point([(2, 3), (11, 4), (7, 2), (8, 9), (1, 13)])
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/shapely/geometry/point.py", line 73, in __new__
    raise ValueError(
ValueError: Point() takes only scalar or 1-size vector arguments, got ([(2, 3), (11, 4), (7, 2), (8, 9), (1, 13)],)</error></testcase><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_mixed_geom[single_rectangle_gdf_list_bounds]" time="0.000"><error message="failed on setup with &quot;ValueError: Point() takes only scalar or 1-size vector arguments, got ([(2, 3), (11, 4), (7, 2), (8, 9), (1, 13)],)&quot;">Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    result: Optional[TResult] = func()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 262, in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 157, in pytest_runtest_setup
    item.session._setupstate.setup(item)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 497, in setup
    raise exc
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 494, in setup
    col.setup()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 1795, in setup
    self._request._fillfixtures()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 566, in _fillfixtures
    item.funcargs[argname] = self.getfixturevalue(argname)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 585, in getfixturevalue
    fixturedef = self._get_active_fixturedef(argname)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 607, in _get_active_fixturedef
    self._compute_fixture_value(fixturedef)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 693, in _compute_fixture_value
    fixturedef.execute(request=subrequest)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 1069, in execute
    result = ihook.pytest_fixture_setup(fixturedef=self, request=request)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 1123, in pytest_fixture_setup
    result = call_fixture_func(fixturefunc, request, kwargs)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 902, in call_fixture_func
    fixture_result = fixturefunc(**kwargs)
  File "/workdir/geopandas-0.12.1/geopandas/tools/tests/test_clip.py", line 179, in mixed_gdf
    point = Point([(2, 3), (11, 4), (7, 2), (8, 9), (1, 13)])
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/shapely/geometry/point.py", line 73, in __new__
    raise ValueError(
ValueError: Point() takes only scalar or 1-size vector arguments, got ([(2, 3), (11, 4), (7, 2), (8, 9), (1, 13)],)</error></testcase><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_mixed_geom[single_rectangle_gdf_tuple_bounds]" time="0.000"><error message="failed on setup with &quot;ValueError: Point() takes only scalar or 1-size vector arguments, got ([(2, 3), (11, 4), (7, 2), (8, 9), (1, 13)],)&quot;">Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    result: Optional[TResult] = func()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 262, in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 157, in pytest_runtest_setup
    item.session._setupstate.setup(item)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 497, in setup
    raise exc
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 494, in setup
    col.setup()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 1795, in setup
    self._request._fillfixtures()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 566, in _fillfixtures
    item.funcargs[argname] = self.getfixturevalue(argname)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 585, in getfixturevalue
    fixturedef = self._get_active_fixturedef(argname)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 607, in _get_active_fixturedef
    self._compute_fixture_value(fixturedef)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 693, in _compute_fixture_value
    fixturedef.execute(request=subrequest)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 1069, in execute
    result = ihook.pytest_fixture_setup(fixturedef=self, request=request)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 1123, in pytest_fixture_setup
    result = call_fixture_func(fixturefunc, request, kwargs)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 902, in call_fixture_func
    fixture_result = fixturefunc(**kwargs)
  File "/workdir/geopandas-0.12.1/geopandas/tools/tests/test_clip.py", line 179, in mixed_gdf
    point = Point([(2, 3), (11, 4), (7, 2), (8, 9), (1, 13)])
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/shapely/geometry/point.py", line 73, in __new__
    raise ValueError(
ValueError: Point() takes only scalar or 1-size vector arguments, got ([(2, 3), (11, 4), (7, 2), (8, 9), (1, 13)],)</error></testcase><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_mixed_geom[single_rectangle_gdf_array_bounds]" time="0.001"><error message="failed on setup with &quot;ValueError: Point() takes only scalar or 1-size vector arguments, got ([(2, 3), (11, 4), (7, 2), (8, 9), (1, 13)],)&quot;">Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    result: Optional[TResult] = func()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 262, in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 157, in pytest_runtest_setup
    item.session._setupstate.setup(item)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 497, in setup
    raise exc
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 494, in setup
    col.setup()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 1795, in setup
    self._request._fillfixtures()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 566, in _fillfixtures
    item.funcargs[argname] = self.getfixturevalue(argname)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 585, in getfixturevalue
    fixturedef = self._get_active_fixturedef(argname)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 607, in _get_active_fixturedef
    self._compute_fixture_value(fixturedef)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 693, in _compute_fixture_value
    fixturedef.execute(request=subrequest)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 1069, in execute
    result = ihook.pytest_fixture_setup(fixturedef=self, request=request)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 1123, in pytest_fixture_setup
    result = call_fixture_func(fixturefunc, request, kwargs)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 902, in call_fixture_func
    fixture_result = fixturefunc(**kwargs)
  File "/workdir/geopandas-0.12.1/geopandas/tools/tests/test_clip.py", line 179, in mixed_gdf
    point = Point([(2, 3), (11, 4), (7, 2), (8, 9), (1, 13)])
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/shapely/geometry/point.py", line 73, in __new__
    raise ValueError(
ValueError: Point() takes only scalar or 1-size vector arguments, got ([(2, 3), (11, 4), (7, 2), (8, 9), (1, 13)],)</error></testcase><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_mixed_series[single_rectangle_gdf]" time="0.001"><error message="failed on setup with &quot;ValueError: Point() takes only scalar or 1-size vector arguments, got ([(2, 3), (11, 4), (7, 2), (8, 9), (1, 13)],)&quot;">Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    result: Optional[TResult] = func()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 262, in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 157, in pytest_runtest_setup
    item.session._setupstate.setup(item)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 497, in setup
    raise exc
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 494, in setup
    col.setup()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 1795, in setup
    self._request._fillfixtures()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 566, in _fillfixtures
    item.funcargs[argname] = self.getfixturevalue(argname)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 585, in getfixturevalue
    fixturedef = self._get_active_fixturedef(argname)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 607, in _get_active_fixturedef
    self._compute_fixture_value(fixturedef)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 693, in _compute_fixture_value
    fixturedef.execute(request=subrequest)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 1069, in execute
    result = ihook.pytest_fixture_setup(fixturedef=self, request=request)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 1123, in pytest_fixture_setup
    result = call_fixture_func(fixturefunc, request, kwargs)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 902, in call_fixture_func
    fixture_result = fixturefunc(**kwargs)
  File "/workdir/geopandas-0.12.1/geopandas/tools/tests/test_clip.py", line 179, in mixed_gdf
    point = Point([(2, 3), (11, 4), (7, 2), (8, 9), (1, 13)])
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/shapely/geometry/point.py", line 73, in __new__
    raise ValueError(
ValueError: Point() takes only scalar or 1-size vector arguments, got ([(2, 3), (11, 4), (7, 2), (8, 9), (1, 13)],)</error></testcase><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_mixed_series[single_rectangle_gdf_list_bounds]" time="0.001"><error message="failed on setup with &quot;ValueError: Point() takes only scalar or 1-size vector arguments, got ([(2, 3), (11, 4), (7, 2), (8, 9), (1, 13)],)&quot;">Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    result: Optional[TResult] = func()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 262, in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 157, in pytest_runtest_setup
    item.session._setupstate.setup(item)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 497, in setup
    raise exc
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 494, in setup
    col.setup()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 1795, in setup
    self._request._fillfixtures()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 566, in _fillfixtures
    item.funcargs[argname] = self.getfixturevalue(argname)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 585, in getfixturevalue
    fixturedef = self._get_active_fixturedef(argname)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 607, in _get_active_fixturedef
    self._compute_fixture_value(fixturedef)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 693, in _compute_fixture_value
    fixturedef.execute(request=subrequest)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 1069, in execute
    result = ihook.pytest_fixture_setup(fixturedef=self, request=request)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 1123, in pytest_fixture_setup
    result = call_fixture_func(fixturefunc, request, kwargs)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 902, in call_fixture_func
    fixture_result = fixturefunc(**kwargs)
  File "/workdir/geopandas-0.12.1/geopandas/tools/tests/test_clip.py", line 179, in mixed_gdf
    point = Point([(2, 3), (11, 4), (7, 2), (8, 9), (1, 13)])
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/shapely/geometry/point.py", line 73, in __new__
    raise ValueError(
ValueError: Point() takes only scalar or 1-size vector arguments, got ([(2, 3), (11, 4), (7, 2), (8, 9), (1, 13)],)</error></testcase><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_mixed_series[single_rectangle_gdf_tuple_bounds]" time="0.001"><error message="failed on setup with &quot;ValueError: Point() takes only scalar or 1-size vector arguments, got ([(2, 3), (11, 4), (7, 2), (8, 9), (1, 13)],)&quot;">Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    result: Optional[TResult] = func()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 262, in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 157, in pytest_runtest_setup
    item.session._setupstate.setup(item)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 497, in setup
    raise exc
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 494, in setup
    col.setup()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 1795, in setup
    self._request._fillfixtures()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 566, in _fillfixtures
    item.funcargs[argname] = self.getfixturevalue(argname)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 585, in getfixturevalue
    fixturedef = self._get_active_fixturedef(argname)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 607, in _get_active_fixturedef
    self._compute_fixture_value(fixturedef)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 693, in _compute_fixture_value
    fixturedef.execute(request=subrequest)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 1069, in execute
    result = ihook.pytest_fixture_setup(fixturedef=self, request=request)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 1123, in pytest_fixture_setup
    result = call_fixture_func(fixturefunc, request, kwargs)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 902, in call_fixture_func
    fixture_result = fixturefunc(**kwargs)
  File "/workdir/geopandas-0.12.1/geopandas/tools/tests/test_clip.py", line 179, in mixed_gdf
    point = Point([(2, 3), (11, 4), (7, 2), (8, 9), (1, 13)])
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/shapely/geometry/point.py", line 73, in __new__
    raise ValueError(
ValueError: Point() takes only scalar or 1-size vector arguments, got ([(2, 3), (11, 4), (7, 2), (8, 9), (1, 13)],)</error></testcase><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_mixed_series[single_rectangle_gdf_array_bounds]" time="0.000"><error message="failed on setup with &quot;ValueError: Point() takes only scalar or 1-size vector arguments, got ([(2, 3), (11, 4), (7, 2), (8, 9), (1, 13)],)&quot;">Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    result: Optional[TResult] = func()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 262, in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 157, in pytest_runtest_setup
    item.session._setupstate.setup(item)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 497, in setup
    raise exc
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 494, in setup
    col.setup()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 1795, in setup
    self._request._fillfixtures()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 566, in _fillfixtures
    item.funcargs[argname] = self.getfixturevalue(argname)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 585, in getfixturevalue
    fixturedef = self._get_active_fixturedef(argname)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 607, in _get_active_fixturedef
    self._compute_fixture_value(fixturedef)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 693, in _compute_fixture_value
    fixturedef.execute(request=subrequest)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 1069, in execute
    result = ihook.pytest_fixture_setup(fixturedef=self, request=request)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 1123, in pytest_fixture_setup
    result = call_fixture_func(fixturefunc, request, kwargs)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 902, in call_fixture_func
    fixture_result = fixturefunc(**kwargs)
  File "/workdir/geopandas-0.12.1/geopandas/tools/tests/test_clip.py", line 179, in mixed_gdf
    point = Point([(2, 3), (11, 4), (7, 2), (8, 9), (1, 13)])
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/shapely/geometry/point.py", line 73, in __new__
    raise ValueError(
ValueError: Point() takes only scalar or 1-size vector arguments, got ([(2, 3), (11, 4), (7, 2), (8, 9), (1, 13)],)</error></testcase><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_clip_warning_no_extra_geoms[single_rectangle_gdf]" time="0.015" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_clip_warning_no_extra_geoms[single_rectangle_gdf_list_bounds]" time="0.015" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_clip_warning_no_extra_geoms[single_rectangle_gdf_tuple_bounds]" time="0.015" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_clip_warning_no_extra_geoms[single_rectangle_gdf_array_bounds]" time="0.015" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_clip_with_line_extra_geom[single_rectangle_gdf]" time="0.013" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_clip_with_line_extra_geom[single_rectangle_gdf_list_bounds]" time="0.013" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_clip_with_line_extra_geom[single_rectangle_gdf_tuple_bounds]" time="0.013" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_clip_with_line_extra_geom[single_rectangle_gdf_array_bounds]" time="0.013" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_clip_no_box_overlap[single_rectangle_gdf]" time="0.010" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_clip_no_box_overlap[single_rectangle_gdf_list_bounds]" time="0.010" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_clip_no_box_overlap[single_rectangle_gdf_tuple_bounds]" time="0.010" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_clip_no_box_overlap[single_rectangle_gdf_array_bounds]" time="0.009" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_clip_box_overlap[single_rectangle_gdf]" time="0.010" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_clip_box_overlap[single_rectangle_gdf_list_bounds]" time="0.010" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_clip_box_overlap[single_rectangle_gdf_tuple_bounds]" time="0.010" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_clip_box_overlap[single_rectangle_gdf_array_bounds]" time="0.010" /><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_warning_extra_geoms_mixed[single_rectangle_gdf]" time="0.001"><error message="failed on setup with &quot;ValueError: Point() takes only scalar or 1-size vector arguments, got ([(2, 3), (11, 4), (7, 2), (8, 9), (1, 13)],)&quot;">Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    result: Optional[TResult] = func()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 262, in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 157, in pytest_runtest_setup
    item.session._setupstate.setup(item)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 497, in setup
    raise exc
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 494, in setup
    col.setup()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 1795, in setup
    self._request._fillfixtures()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 566, in _fillfixtures
    item.funcargs[argname] = self.getfixturevalue(argname)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 585, in getfixturevalue
    fixturedef = self._get_active_fixturedef(argname)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 607, in _get_active_fixturedef
    self._compute_fixture_value(fixturedef)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 693, in _compute_fixture_value
    fixturedef.execute(request=subrequest)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 1069, in execute
    result = ihook.pytest_fixture_setup(fixturedef=self, request=request)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 1123, in pytest_fixture_setup
    result = call_fixture_func(fixturefunc, request, kwargs)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 902, in call_fixture_func
    fixture_result = fixturefunc(**kwargs)
  File "/workdir/geopandas-0.12.1/geopandas/tools/tests/test_clip.py", line 179, in mixed_gdf
    point = Point([(2, 3), (11, 4), (7, 2), (8, 9), (1, 13)])
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/shapely/geometry/point.py", line 73, in __new__
    raise ValueError(
ValueError: Point() takes only scalar or 1-size vector arguments, got ([(2, 3), (11, 4), (7, 2), (8, 9), (1, 13)],)</error></testcase><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_warning_extra_geoms_mixed[single_rectangle_gdf_list_bounds]" time="0.001"><error message="failed on setup with &quot;ValueError: Point() takes only scalar or 1-size vector arguments, got ([(2, 3), (11, 4), (7, 2), (8, 9), (1, 13)],)&quot;">Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    result: Optional[TResult] = func()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 262, in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 157, in pytest_runtest_setup
    item.session._setupstate.setup(item)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 497, in setup
    raise exc
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 494, in setup
    col.setup()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 1795, in setup
    self._request._fillfixtures()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 566, in _fillfixtures
    item.funcargs[argname] = self.getfixturevalue(argname)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 585, in getfixturevalue
    fixturedef = self._get_active_fixturedef(argname)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 607, in _get_active_fixturedef
    self._compute_fixture_value(fixturedef)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 693, in _compute_fixture_value
    fixturedef.execute(request=subrequest)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 1069, in execute
    result = ihook.pytest_fixture_setup(fixturedef=self, request=request)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 1123, in pytest_fixture_setup
    result = call_fixture_func(fixturefunc, request, kwargs)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 902, in call_fixture_func
    fixture_result = fixturefunc(**kwargs)
  File "/workdir/geopandas-0.12.1/geopandas/tools/tests/test_clip.py", line 179, in mixed_gdf
    point = Point([(2, 3), (11, 4), (7, 2), (8, 9), (1, 13)])
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/shapely/geometry/point.py", line 73, in __new__
    raise ValueError(
ValueError: Point() takes only scalar or 1-size vector arguments, got ([(2, 3), (11, 4), (7, 2), (8, 9), (1, 13)],)</error></testcase><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_warning_extra_geoms_mixed[single_rectangle_gdf_tuple_bounds]" time="0.000"><error message="failed on setup with &quot;ValueError: Point() takes only scalar or 1-size vector arguments, got ([(2, 3), (11, 4), (7, 2), (8, 9), (1, 13)],)&quot;">Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    result: Optional[TResult] = func()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 262, in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 157, in pytest_runtest_setup
    item.session._setupstate.setup(item)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 497, in setup
    raise exc
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 494, in setup
    col.setup()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 1795, in setup
    self._request._fillfixtures()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 566, in _fillfixtures
    item.funcargs[argname] = self.getfixturevalue(argname)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 585, in getfixturevalue
    fixturedef = self._get_active_fixturedef(argname)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 607, in _get_active_fixturedef
    self._compute_fixture_value(fixturedef)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 693, in _compute_fixture_value
    fixturedef.execute(request=subrequest)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 1069, in execute
    result = ihook.pytest_fixture_setup(fixturedef=self, request=request)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 1123, in pytest_fixture_setup
    result = call_fixture_func(fixturefunc, request, kwargs)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 902, in call_fixture_func
    fixture_result = fixturefunc(**kwargs)
  File "/workdir/geopandas-0.12.1/geopandas/tools/tests/test_clip.py", line 179, in mixed_gdf
    point = Point([(2, 3), (11, 4), (7, 2), (8, 9), (1, 13)])
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/shapely/geometry/point.py", line 73, in __new__
    raise ValueError(
ValueError: Point() takes only scalar or 1-size vector arguments, got ([(2, 3), (11, 4), (7, 2), (8, 9), (1, 13)],)</error></testcase><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_warning_extra_geoms_mixed[single_rectangle_gdf_array_bounds]" time="0.000"><error message="failed on setup with &quot;ValueError: Point() takes only scalar or 1-size vector arguments, got ([(2, 3), (11, 4), (7, 2), (8, 9), (1, 13)],)&quot;">Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    result: Optional[TResult] = func()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 262, in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 157, in pytest_runtest_setup
    item.session._setupstate.setup(item)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 497, in setup
    raise exc
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 494, in setup
    col.setup()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 1795, in setup
    self._request._fillfixtures()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 566, in _fillfixtures
    item.funcargs[argname] = self.getfixturevalue(argname)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 585, in getfixturevalue
    fixturedef = self._get_active_fixturedef(argname)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 607, in _get_active_fixturedef
    self._compute_fixture_value(fixturedef)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 693, in _compute_fixture_value
    fixturedef.execute(request=subrequest)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 1069, in execute
    result = ihook.pytest_fixture_setup(fixturedef=self, request=request)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 1123, in pytest_fixture_setup
    result = call_fixture_func(fixturefunc, request, kwargs)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 902, in call_fixture_func
    fixture_result = fixturefunc(**kwargs)
  File "/workdir/geopandas-0.12.1/geopandas/tools/tests/test_clip.py", line 179, in mixed_gdf
    point = Point([(2, 3), (11, 4), (7, 2), (8, 9), (1, 13)])
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/shapely/geometry/point.py", line 73, in __new__
    raise ValueError(
ValueError: Point() takes only scalar or 1-size vector arguments, got ([(2, 3), (11, 4), (7, 2), (8, 9), (1, 13)],)</error></testcase><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_warning_geomcoll[single_rectangle_gdf]" time="0.000"><error message="failed on setup with &quot;ValueError: Point() takes only scalar or 1-size vector arguments, got ([(2, 3), (11, 4), (7, 2), (8, 9), (1, 13)],)&quot;">Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    result: Optional[TResult] = func()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 262, in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 157, in pytest_runtest_setup
    item.session._setupstate.setup(item)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 497, in setup
    raise exc
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 494, in setup
    col.setup()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 1795, in setup
    self._request._fillfixtures()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 566, in _fillfixtures
    item.funcargs[argname] = self.getfixturevalue(argname)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 585, in getfixturevalue
    fixturedef = self._get_active_fixturedef(argname)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 607, in _get_active_fixturedef
    self._compute_fixture_value(fixturedef)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 693, in _compute_fixture_value
    fixturedef.execute(request=subrequest)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 1069, in execute
    result = ihook.pytest_fixture_setup(fixturedef=self, request=request)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 1123, in pytest_fixture_setup
    result = call_fixture_func(fixturefunc, request, kwargs)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 902, in call_fixture_func
    fixture_result = fixturefunc(**kwargs)
  File "/workdir/geopandas-0.12.1/geopandas/tools/tests/test_clip.py", line 192, in geomcol_gdf
    point = Point([(2, 3), (11, 4), (7, 2), (8, 9), (1, 13)])
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/shapely/geometry/point.py", line 73, in __new__
    raise ValueError(
ValueError: Point() takes only scalar or 1-size vector arguments, got ([(2, 3), (11, 4), (7, 2), (8, 9), (1, 13)],)</error></testcase><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_warning_geomcoll[single_rectangle_gdf_list_bounds]" time="0.000"><error message="failed on setup with &quot;ValueError: Point() takes only scalar or 1-size vector arguments, got ([(2, 3), (11, 4), (7, 2), (8, 9), (1, 13)],)&quot;">Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    result: Optional[TResult] = func()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 262, in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 157, in pytest_runtest_setup
    item.session._setupstate.setup(item)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 497, in setup
    raise exc
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 494, in setup
    col.setup()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 1795, in setup
    self._request._fillfixtures()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 566, in _fillfixtures
    item.funcargs[argname] = self.getfixturevalue(argname)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 585, in getfixturevalue
    fixturedef = self._get_active_fixturedef(argname)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 607, in _get_active_fixturedef
    self._compute_fixture_value(fixturedef)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 693, in _compute_fixture_value
    fixturedef.execute(request=subrequest)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 1069, in execute
    result = ihook.pytest_fixture_setup(fixturedef=self, request=request)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 1123, in pytest_fixture_setup
    result = call_fixture_func(fixturefunc, request, kwargs)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 902, in call_fixture_func
    fixture_result = fixturefunc(**kwargs)
  File "/workdir/geopandas-0.12.1/geopandas/tools/tests/test_clip.py", line 192, in geomcol_gdf
    point = Point([(2, 3), (11, 4), (7, 2), (8, 9), (1, 13)])
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/shapely/geometry/point.py", line 73, in __new__
    raise ValueError(
ValueError: Point() takes only scalar or 1-size vector arguments, got ([(2, 3), (11, 4), (7, 2), (8, 9), (1, 13)],)</error></testcase><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_warning_geomcoll[single_rectangle_gdf_tuple_bounds]" time="0.000"><error message="failed on setup with &quot;ValueError: Point() takes only scalar or 1-size vector arguments, got ([(2, 3), (11, 4), (7, 2), (8, 9), (1, 13)],)&quot;">Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    result: Optional[TResult] = func()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 262, in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 157, in pytest_runtest_setup
    item.session._setupstate.setup(item)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 497, in setup
    raise exc
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 494, in setup
    col.setup()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 1795, in setup
    self._request._fillfixtures()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 566, in _fillfixtures
    item.funcargs[argname] = self.getfixturevalue(argname)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 585, in getfixturevalue
    fixturedef = self._get_active_fixturedef(argname)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 607, in _get_active_fixturedef
    self._compute_fixture_value(fixturedef)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 693, in _compute_fixture_value
    fixturedef.execute(request=subrequest)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 1069, in execute
    result = ihook.pytest_fixture_setup(fixturedef=self, request=request)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 1123, in pytest_fixture_setup
    result = call_fixture_func(fixturefunc, request, kwargs)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 902, in call_fixture_func
    fixture_result = fixturefunc(**kwargs)
  File "/workdir/geopandas-0.12.1/geopandas/tools/tests/test_clip.py", line 192, in geomcol_gdf
    point = Point([(2, 3), (11, 4), (7, 2), (8, 9), (1, 13)])
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/shapely/geometry/point.py", line 73, in __new__
    raise ValueError(
ValueError: Point() takes only scalar or 1-size vector arguments, got ([(2, 3), (11, 4), (7, 2), (8, 9), (1, 13)],)</error></testcase><testcase classname="geopandas.tools.tests.test_clip.TestClipWithSingleRectangleGdf" name="test_warning_geomcoll[single_rectangle_gdf_array_bounds]" time="0.000"><error message="failed on setup with &quot;ValueError: Point() takes only scalar or 1-size vector arguments, got ([(2, 3), (11, 4), (7, 2), (8, 9), (1, 13)],)&quot;">Traceback (most recent call last):
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    result: Optional[TResult] = func()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 262, in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 157, in pytest_runtest_setup
    item.session._setupstate.setup(item)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 497, in setup
    raise exc
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 494, in setup
    col.setup()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 1795, in setup
    self._request._fillfixtures()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 566, in _fillfixtures
    item.funcargs[argname] = self.getfixturevalue(argname)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 585, in getfixturevalue
    fixturedef = self._get_active_fixturedef(argname)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 607, in _get_active_fixturedef
    self._compute_fixture_value(fixturedef)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 693, in _compute_fixture_value
    fixturedef.execute(request=subrequest)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 1069, in execute
    result = ihook.pytest_fixture_setup(fixturedef=self, request=request)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 1123, in pytest_fixture_setup
    result = call_fixture_func(fixturefunc, request, kwargs)
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/fixtures.py", line 902, in call_fixture_func
    fixture_result = fixturefunc(**kwargs)
  File "/workdir/geopandas-0.12.1/geopandas/tools/tests/test_clip.py", line 192, in geomcol_gdf
    point = Point([(2, 3), (11, 4), (7, 2), (8, 9), (1, 13)])
  File "/workdir/geopandas-0.12.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/shapely/geometry/point.py", line 73, in __new__
    raise ValueError(
ValueError: Point() takes only scalar or 1-size vector arguments, got ([(2, 3), (11, 4), (7, 2), (8, 9), (1, 13)],)</error></testcase><testcase classname="geopandas.tools.tests.test_clip" name="test_clip_line_keep_slivers" time="0.011" /><testcase classname="geopandas.tools.tests.test_clip" name="test_clip_multipoly_keep_slivers" time="0.040" /><testcase classname="geopandas.tools.tests.test_clip" name="test_warning_crs_mismatch" time="0.014" /><testcase classname="geopandas.tools.tests.test_clip" name="test_clip_with_polygon" time="0.013" /><testcase classname="geopandas.tools.tests.test_clip" name="test_clip_with_multipolygon" time="0.018" /><testcase classname="geopandas.tools.tests.test_clip" name="test_clip_single_multipoly_no_extra_geoms[larger_single_rectangle_gdf]" time="0.017" /><testcase classname="geopandas.tools.tests.test_clip" name="test_clip_single_multipoly_no_extra_geoms[larger_single_rectangle_gdf_bounds]" time="0.019" /><testcase classname="geopandas.tools.tests.test_clip" name="test_clip_empty_mask[mask0]" time="0.016" /><testcase classname="geopandas.tools.tests.test_clip" name="test_clip_empty_mask[mask1]" time="0.017" /><testcase classname="geopandas.tools.tests.test_clip" name="test_clip_empty_mask[mask2]" time="0.016" /><testcase classname="geopandas.tools.tests.test_clip" name="test_clip_empty_mask[mask3]" time="0.016" /><testcase classname="geopandas.tools.tests.test_clip" name="test_clip_empty_mask[mask4]" time="0.016" /><testcase classname="geopandas.tools.tests.test_clip" name="test_clip_empty_mask[mask5]" time="0.017" /><testcase classname="geopandas.tools.tests.test_clip" name="test_clip_empty_mask[mask6]" time="0.016" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_suffixes[left-left-right-expected_cols0]" time="0.014" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_suffixes[inner-left-right-expected_cols1]" time="0.013" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_suffixes[right-left-right-expected_cols2]" time="0.011" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_suffixes[left-lft-rgt-expected_cols3]" time="0.013" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_suffixes[inner-lft-rgt-expected_cols4]" time="0.013" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_suffixes[right-lft-rgt-expected_cols5]" time="0.011" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_crs_mismatch[default-index]" time="0.046" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_crs_mismatch[string-index]" time="0.045" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_deprecated_op_param[intersects-default-index]" time="0.043" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_deprecated_op_param[contains-default-index]" time="0.047" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_deprecated_op_param[within-default-index]" time="0.043" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_deprecated_op_param_nondefault_predicate[contains-intersects-default-index]" time="0.042" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_deprecated_op_param_nondefault_predicate[contains-contains-default-index]" time="0.043" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_deprecated_op_param_nondefault_predicate[contains-within-default-index]" time="0.043" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_deprecated_op_param_nondefault_predicate[within-intersects-default-index]" time="0.051" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_deprecated_op_param_nondefault_predicate[within-contains-default-index]" time="0.131" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_deprecated_op_param_nondefault_predicate[within-within-default-index]" time="0.053" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_unknown_kwargs[default-index]" time="0.033" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_inner[predicate-intersects-default-index]" time="0.051" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_inner[predicate-intersects-string-index]" time="0.049" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_inner[predicate-intersects-named-index]" time="0.050" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_inner[predicate-intersects-multi-index]" time="0.057" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_inner[predicate-intersects-named-multi-index]" time="0.057" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_inner[predicate-contains-default-index]" time="0.048" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_inner[predicate-contains-string-index]" time="0.048" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_inner[predicate-contains-named-index]" time="0.051" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_inner[predicate-contains-multi-index]" time="0.059" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_inner[predicate-contains-named-multi-index]" time="0.056" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_inner[predicate-within-default-index]" time="0.051" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_inner[predicate-within-string-index]" time="0.052" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_inner[predicate-within-named-index]" time="0.054" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_inner[predicate-within-multi-index]" time="0.057" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_inner[predicate-within-named-multi-index]" time="0.057" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_inner[op-intersects-default-index]" time="0.049" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_inner[op-intersects-string-index]" time="0.050" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_inner[op-intersects-named-index]" time="0.051" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_inner[op-intersects-multi-index]" time="0.057" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_inner[op-intersects-named-multi-index]" time="0.056" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_inner[op-contains-default-index]" time="0.049" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_inner[op-contains-string-index]" time="0.048" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_inner[op-contains-named-index]" time="0.049" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_inner[op-contains-multi-index]" time="0.056" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_inner[op-contains-named-multi-index]" time="0.056" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_inner[op-within-default-index]" time="0.048" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_inner[op-within-string-index]" time="0.053" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_inner[op-within-named-index]" time="0.052" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_inner[op-within-multi-index]" time="0.058" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_inner[op-within-named-multi-index]" time="0.057" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_left[intersects-default-index]" time="0.048" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_left[intersects-string-index]" time="0.048" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_left[intersects-named-index]" time="0.051" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_left[intersects-multi-index]" time="0.057" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_left[intersects-named-multi-index]" time="0.057" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_left[contains-default-index]" time="0.047" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_left[contains-string-index]" time="0.047" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_left[contains-named-index]" time="0.047" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_left[contains-multi-index]" time="0.055" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_left[contains-named-multi-index]" time="0.055" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_left[within-default-index]" time="0.048" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_left[within-string-index]" time="0.047" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_left[within-named-index]" time="0.050" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_left[within-multi-index]" time="0.055" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_left[within-named-multi-index]" time="0.055" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_empty_join" time="0.034" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_join_with_empty[empty0-contains]" time="0.034" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_join_with_empty[empty0-contains_properly]" time="0.032" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_join_with_empty[empty0-covered_by]" time="0.031" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_join_with_empty[empty0-covers]" time="0.031" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_join_with_empty[empty0-crosses]" time="0.031" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_join_with_empty[empty0-intersects]" time="0.031" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_join_with_empty[empty0-touches]" time="0.031" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_join_with_empty[empty0-within]" time="0.034" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_join_with_empty[empty1-contains]" time="0.033" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_join_with_empty[empty1-contains_properly]" time="0.034" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_join_with_empty[empty1-covered_by]" time="0.031" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_join_with_empty[empty1-covers]" time="0.030" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_join_with_empty[empty1-crosses]" time="0.030" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_join_with_empty[empty1-intersects]" time="0.030" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_join_with_empty[empty1-touches]" time="0.030" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_join_with_empty[empty1-within]" time="0.031" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_sjoin_invalid_args[default-index]" time="0.032" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_sjoin_invalid_args[string-index]" time="0.033" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_right[intersects-default-index]" time="0.047" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_right[intersects-string-index]" time="0.047" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_right[intersects-named-index]" time="0.048" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_right[intersects-multi-index]" time="0.054" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_right[intersects-named-multi-index]" time="0.054" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_right[contains-default-index]" time="0.047" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_right[contains-string-index]" time="0.049" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_right[contains-named-index]" time="0.047" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_right[contains-multi-index]" time="0.056" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_right[contains-named-multi-index]" time="0.053" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_right[within-default-index]" time="0.047" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_right[within-string-index]" time="0.048" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_right[within-named-index]" time="0.048" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_right[within-multi-index]" time="0.055" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoin" name="test_right[within-named-multi-index]" time="0.068" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoinNYBB" name="test_geometry_name" time="0.116" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoinNYBB" name="test_sjoin_left" time="0.130" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoinNYBB" name="test_sjoin_right" time="0.320" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoinNYBB" name="test_sjoin_inner" time="0.103" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoinNYBB" name="test_sjoin_predicate" time="0.116" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoinNYBB" name="test_sjoin_bad_predicate" time="0.284" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoinNYBB" name="test_sjoin_duplicate_column_name" time="0.102" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoinNYBB" name="test_sjoin_named_index[left]" time="0.292" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoinNYBB" name="test_sjoin_named_index[right]" time="0.102" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoinNYBB" name="test_sjoin_named_index[inner]" time="0.103" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoinNYBB" name="test_sjoin_values" time="0.119" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoinNYBB" name="test_no_overlapping_geometry" time="1.262"><skipped type="pytest.xfail" message="" /></testcase><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoinNYBB" name="test_sjoin_outer" time="0.000"><skipped type="pytest.skip" message="Not implemented">/workdir/geopandas-0.12.1/geopandas/tools/tests/test_sjoin.py:526: Not implemented</skipped></testcase><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoinNYBB" name="test_sjoin_empty_geometries" time="0.126" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoinNYBB" name="test_sjoin_no_valid_geoms[intersects]" time="0.310" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoinNYBB" name="test_sjoin_no_valid_geoms[within]" time="0.120" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoinNYBB" name="test_sjoin_no_valid_geoms[contains]" time="0.124" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoinNYBB" name="test_empty_sjoin_return_duplicated_columns" time="0.373" /><testcase classname="geopandas.tools.tests.test_sjoin.TestSpatialJoinNaturalEarth" name="test_sjoin_inner" time="0.080" /><testcase classname="geopandas.tools.tests.test_sjoin" name="test_no_nearest_all" time="0.000"><skipped type="pytest.skip" message="This test can only be run _without_ PyGEOS &gt;= 0.10 installed">/workdir/geopandas-0.12.1/geopandas/tools/tests/test_sjoin.py:577: This test can only be run _without_ PyGEOS &gt;= 0.10 installed</skipped></testcase><testcase classname="geopandas.tools.tests.test_sjoin.TestNearest" name="test_allowed_hows[how_kwargs0]" time="0.012" /><testcase classname="geopandas.tools.tests.test_sjoin.TestNearest" name="test_allowed_hows[how_kwargs1]" time="0.013" /><testcase classname="geopandas.tools.tests.test_sjoin.TestNearest" name="test_allowed_hows[how_kwargs2]" time="0.013" /><testcase classname="geopandas.tools.tests.test_sjoin.TestNearest" name="test_allowed_hows[how_kwargs3]" time="0.010" /><testcase classname="geopandas.tools.tests.test_sjoin.TestNearest" name="test_invalid_hows[outer]" time="0.002" /><testcase classname="geopandas.tools.tests.test_sjoin.TestNearest" name="test_invalid_hows[abcde]" time="0.002" /><testcase classname="geopandas.tools.tests.test_sjoin.TestNearest" name="test_empty_right_df_how_left[None]" time="0.014" /><testcase classname="geopandas.tools.tests.test_sjoin.TestNearest" name="test_empty_right_df_how_left[distance]" time="0.015" /><testcase classname="geopandas.tools.tests.test_sjoin.TestNearest" name="test_empty_right_df_how_right[None]" time="0.011" /><testcase classname="geopandas.tools.tests.test_sjoin.TestNearest" name="test_empty_right_df_how_right[distance]" time="0.012" /><testcase classname="geopandas.tools.tests.test_sjoin.TestNearest" name="test_empty_left_df[None-inner]" time="0.013" /><testcase classname="geopandas.tools.tests.test_sjoin.TestNearest" name="test_empty_left_df[None-left]" time="0.012" /><testcase classname="geopandas.tools.tests.test_sjoin.TestNearest" name="test_empty_left_df[distance-inner]" time="0.013" /><testcase classname="geopandas.tools.tests.test_sjoin.TestNearest" name="test_empty_left_df[distance-left]" time="0.014" /><testcase classname="geopandas.tools.tests.test_sjoin.TestNearest" name="test_empty_left_df_how_right[None]" time="0.012" /><testcase classname="geopandas.tools.tests.test_sjoin.TestNearest" name="test_empty_left_df_how_right[distance]" time="0.013" /><testcase classname="geopandas.tools.tests.test_sjoin.TestNearest" name="test_empty_join_due_to_max_distance[inner]" time="0.019" /><testcase classname="geopandas.tools.tests.test_sjoin.TestNearest" name="test_empty_join_due_to_max_distance[left]" time="0.017" /><testcase classname="geopandas.tools.tests.test_sjoin.TestNearest" name="test_empty_join_due_to_max_distance_how_right" time="0.016" /><testcase classname="geopandas.tools.tests.test_sjoin.TestNearest" name="test_max_distance[inner]" time="0.019" /><testcase classname="geopandas.tools.tests.test_sjoin.TestNearest" name="test_max_distance[left]" time="0.016" /><testcase classname="geopandas.tools.tests.test_sjoin.TestNearest" name="test_max_distance_how_right" time="0.017" /><testcase classname="geopandas.tools.tests.test_sjoin.TestNearest" name="test_sjoin_nearest_left[geo_left0-geo_right0-expected_left0-expected_right0-distances0-inner]" time="0.031" /><testcase classname="geopandas.tools.tests.test_sjoin.TestNearest" name="test_sjoin_nearest_left[geo_left0-geo_right0-expected_left0-expected_right0-distances0-left]" time="0.030" /><testcase classname="geopandas.tools.tests.test_sjoin.TestNearest" name="test_sjoin_nearest_left[geo_left1-geo_right1-expected_left1-expected_right1-distances1-inner]" time="0.031" /><testcase classname="geopandas.tools.tests.test_sjoin.TestNearest" name="test_sjoin_nearest_left[geo_left1-geo_right1-expected_left1-expected_right1-distances1-left]" time="0.029" /><testcase classname="geopandas.tools.tests.test_sjoin.TestNearest" name="test_sjoin_nearest_left[geo_left2-geo_right2-expected_left2-expected_right2-distances2-inner]" time="0.031" /><testcase classname="geopandas.tools.tests.test_sjoin.TestNearest" name="test_sjoin_nearest_left[geo_left2-geo_right2-expected_left2-expected_right2-distances2-left]" time="0.030" /><testcase classname="geopandas.tools.tests.test_sjoin.TestNearest" name="test_sjoin_nearest_left[geo_left3-geo_right3-expected_left3-expected_right3-distances3-inner]" time="0.033" /><testcase classname="geopandas.tools.tests.test_sjoin.TestNearest" name="test_sjoin_nearest_left[geo_left3-geo_right3-expected_left3-expected_right3-distances3-left]" time="0.032" /><testcase classname="geopandas.tools.tests.test_sjoin.TestNearest" name="test_sjoin_nearest_left[geo_left4-geo_right4-expected_left4-expected_right4-distances4-inner]" time="0.035" /><testcase classname="geopandas.tools.tests.test_sjoin.TestNearest" name="test_sjoin_nearest_left[geo_left4-geo_right4-expected_left4-expected_right4-distances4-left]" time="0.034" /><testcase classname="geopandas.tools.tests.test_sjoin.TestNearest" name="test_sjoin_nearest_left[geo_left5-geo_right5-expected_left5-expected_right5-distances5-inner]" time="0.034" /><testcase classname="geopandas.tools.tests.test_sjoin.TestNearest" name="test_sjoin_nearest_left[geo_left5-geo_right5-expected_left5-expected_right5-distances5-left]" time="0.029" /><testcase classname="geopandas.tools.tests.test_sjoin.TestNearest" name="test_sjoin_nearest_left[geo_left6-geo_right6-expected_left6-expected_right6-distances6-inner]" time="0.031" /><testcase classname="geopandas.tools.tests.test_sjoin.TestNearest" name="test_sjoin_nearest_left[geo_left6-geo_right6-expected_left6-expected_right6-distances6-left]" time="0.029" /><testcase classname="geopandas.tools.tests.test_sjoin.TestNearest" name="test_sjoin_nearest_left[geo_left7-geo_right7-expected_left7-expected_right7-distances7-inner]" time="0.033" /><testcase classname="geopandas.tools.tests.test_sjoin.TestNearest" name="test_sjoin_nearest_left[geo_left7-geo_right7-expected_left7-expected_right7-distances7-left]" time="0.030" /><testcase classname="geopandas.tools.tests.test_sjoin.TestNearest" name="test_sjoin_nearest_right[geo_left0-geo_right0-expected_left0-expected_right0-distances0]" time="0.027" /><testcase classname="geopandas.tools.tests.test_sjoin.TestNearest" name="test_sjoin_nearest_right[geo_left1-geo_right1-expected_left1-expected_right1-distances1]" time="0.027" /><testcase classname="geopandas.tools.tests.test_sjoin.TestNearest" name="test_sjoin_nearest_right[geo_left2-geo_right2-expected_left2-expected_right2-distances2]" time="0.026" /><testcase classname="geopandas.tools.tests.test_sjoin.TestNearest" name="test_sjoin_nearest_right[geo_left3-geo_right3-expected_left3-expected_right3-distances3]" time="0.027" /><testcase classname="geopandas.tools.tests.test_sjoin.TestNearest" name="test_sjoin_nearest_right[geo_left4-geo_right4-expected_left4-expected_right4-distances4]" time="0.029" /><testcase classname="geopandas.tools.tests.test_sjoin.TestNearest" name="test_sjoin_nearest_right[geo_left5-geo_right5-expected_left5-expected_right5-distances5]" time="0.030" /><testcase classname="geopandas.tools.tests.test_sjoin.TestNearest" name="test_sjoin_nearest_right[geo_left6-geo_right6-expected_left6-expected_right6-distances6]" time="0.028" /><testcase classname="geopandas.tools.tests.test_sjoin.TestNearest" name="test_sjoin_nearest_right[geo_left7-geo_right7-expected_left7-expected_right7-distances7]" time="0.029" /><testcase classname="geopandas.tools.tests.test_sjoin.TestNearest" name="test_sjoin_nearest_inner" time="0.207" /><testcase classname="geopandas.tools.tests.test_tools.TestTools" name="test_collect_single" time="0.001" /><testcase classname="geopandas.tools.tests.test_tools.TestTools" name="test_collect_single_force_multi" time="0.001" /><testcase classname="geopandas.tools.tests.test_tools.TestTools" name="test_collect_multi" time="0.001" /><testcase classname="geopandas.tools.tests.test_tools.TestTools" name="test_collect_multi_force_multi" time="0.001" /><testcase classname="geopandas.tools.tests.test_tools.TestTools" name="test_collect_list" time="0.001" /><testcase classname="geopandas.tools.tests.test_tools.TestTools" name="test_collect_GeoSeries" time="0.001" /><testcase classname="geopandas.tools.tests.test_tools.TestTools" name="test_collect_mixed_types" time="0.001" /><testcase classname="geopandas.tools.tests.test_tools.TestTools" name="test_collect_mixed_multi" time="0.040" /></testsuite></testsuites>