<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="8" skipped="1" tests="448" time="83.503" timestamp="2023-11-30T21:46:10.425473" hostname="be2d8ee410eb"><testcase classname="tests.test_auto_detection" name="test_loop_auto" time="0.003" /><testcase classname="tests.test_auto_detection" name="test_http_auto" time="0.066" /><testcase classname="tests.test_auto_detection" name="test_websocket_auto" time="0.004" /><testcase classname="tests.test_cli" name="test_cli_print_version" time="0.004" /><testcase classname="tests.test_cli" name="test_cli_headers" time="0.006" /><testcase classname="tests.test_cli" name="test_cli_call_server_run" time="0.005" /><testcase classname="tests.test_cli" name="test_cli_call_change_reload_run" time="0.008" /><testcase classname="tests.test_cli" name="test_cli_call_multiprocess_run" time="0.006" /><testcase classname="tests.test_cli" name="test_cli_uds[True]" time="0.011" /><testcase classname="tests.test_cli" name="test_cli_uds[False]" time="0.008" /><testcase classname="tests.test_cli" name="test_cli_incomplete_app_parameter" time="0.008" /><testcase classname="tests.test_cli" name="test_cli_event_size" time="0.005" /><testcase classname="tests.test_cli" name="test_env_variables" time="0.006" /><testcase classname="tests.test_cli" name="test_mistmatch_env_variables" time="0.005" /><testcase classname="tests.test_cli" name="test_app_dir" time="0.009" /><testcase classname="tests.test_config" name="test_config_should_reload_is_set[asgi_app-False]" time="0.002" /><testcase classname="tests.test_config" name="test_config_should_reload_is_set[tests.test_config:asgi_app-True]" time="0.002" /><testcase classname="tests.test_config" name="test_should_warn_on_invalid_reload_configuration" time="0.007" /><testcase classname="tests.test_config" name="test_reload_dir_is_set" time="0.010" /><testcase classname="tests.test_config" name="test_non_existant_reload_dir_is_not_set" time="0.003" /><testcase classname="tests.test_config" name="test_reload_subdir_removal" time="0.003" /><testcase classname="tests.test_config" name="test_reload_included_dir_is_added_to_reload_dirs" time="0.003" /><testcase classname="tests.test_config" name="test_reload_dir_subdirectories_are_removed" time="0.006" /><testcase classname="tests.test_config" name="test_reload_excluded_subdirectories_are_removed" time="0.003" /><testcase classname="tests.test_config" name="test_reload_includes_exclude_dir_patterns_are_matched" time="0.005" /><testcase classname="tests.test_config" name="test_wsgi_app" time="0.002" /><testcase classname="tests.test_config" name="test_proxy_headers" time="0.002" /><testcase classname="tests.test_config" name="test_app_unimportable_module" time="0.003" /><testcase classname="tests.test_config" name="test_app_unimportable_other" time="0.002" /><testcase classname="tests.test_config" name="test_app_factory" time="0.004" /><testcase classname="tests.test_config" name="test_concrete_http_class" time="0.002" /><testcase classname="tests.test_config" name="test_socket_bind" time="0.002" /><testcase classname="tests.test_config" name="test_ssl_config" time="0.414" /><testcase classname="tests.test_config" name="test_ssl_config_combined" time="0.778" /><testcase classname="tests.test_config" name="test_asgi_version[asgi_app-3.0]" time="0.005" /><testcase classname="tests.test_config" name="test_asgi_version[asgi2_app-2.0]" time="0.003" /><testcase classname="tests.test_config" name="test_log_config_default[use_colors_not_provided]" time="0.007" /><testcase classname="tests.test_config" name="test_log_config_default[use_colors_invalid_value]" time="0.007" /><testcase classname="tests.test_config" name="test_log_config_default[use_colors_enabled]" time="0.006" /><testcase classname="tests.test_config" name="test_log_config_default[use_colors_disabled]" time="0.006" /><testcase classname="tests.test_config" name="test_log_config_json" time="0.023" /><testcase classname="tests.test_config" name="test_log_config_yaml[log_config.yml]" time="0.022" /><testcase classname="tests.test_config" name="test_log_config_yaml[log_config.yaml]" time="0.019" /><testcase classname="tests.test_config" name="test_log_config_file" time="0.006" /><testcase classname="tests.test_config" name="test_env_file[0-127.0.0.1]" time="0.011" /><testcase classname="tests.test_config" name="test_env_file[0-127.0.0.2]" time="0.004" /><testcase classname="tests.test_config" name="test_env_file[1-127.0.0.1]" time="0.008" /><testcase classname="tests.test_config" name="test_env_file[1-127.0.0.2]" time="0.004" /><testcase classname="tests.test_config" name="test_config_access_log[access log enabled should have single handler]" time="0.002" /><testcase classname="tests.test_config" name="test_config_access_log[access log disabled shouldn't have handlers]" time="0.002" /><testcase classname="tests.test_config" name="test_config_log_level[5]" time="0.003" /><testcase classname="tests.test_config" name="test_config_log_level[10]" time="0.003" /><testcase classname="tests.test_config" name="test_config_log_level[20]" time="0.002" /><testcase classname="tests.test_config" name="test_config_log_level[30]" time="0.003" /><testcase classname="tests.test_config" name="test_config_log_level[40]" time="0.003" /><testcase classname="tests.test_config" name="test_config_log_level[50]" time="0.002" /><testcase classname="tests.test_config" name="test_ws_max_size" time="0.002" /><testcase classname="tests.test_config" name="test_bind_unix_socket_works_with_reload_or_workers[--reload=True --workers=1]" time="0.006" /><testcase classname="tests.test_config" name="test_bind_unix_socket_works_with_reload_or_workers[--reload=False --workers=2]" time="0.005" /><testcase classname="tests.test_config" name="test_bind_fd_works_with_reload_or_workers[--reload=True --workers=1]" time="0.003" /><testcase classname="tests.test_config" name="test_bind_fd_works_with_reload_or_workers[--reload=False --workers=2]" time="0.003" /><testcase classname="tests.test_config" name="test_config_use_subprocess[--reload=True --workers=1]" time="0.002" /><testcase classname="tests.test_config" name="test_config_use_subprocess[--reload=False --workers=2]" time="0.002" /><testcase classname="tests.test_config" name="test_config_use_subprocess[--reload=False --workers=1]" time="0.002" /><testcase classname="tests.test_config" name="test_warn_when_using_reload_and_workers" time="0.002" /><testcase classname="tests.test_default_headers" name="test_default_default_headers" time="0.230" /><testcase classname="tests.test_default_headers" name="test_override_server_header" time="0.225" /><testcase classname="tests.test_default_headers" name="test_disable_default_server_header" time="0.222" /><testcase classname="tests.test_default_headers" name="test_override_server_header_multiple_times" time="0.219" /><testcase classname="tests.test_default_headers" name="test_add_additional_header" time="0.243" /><testcase classname="tests.test_default_headers" name="test_disable_default_date_header" time="0.222" /><testcase classname="tests.test_lifespan" name="test_lifespan_on" time="0.004" /><testcase classname="tests.test_lifespan" name="test_lifespan_off" time="0.002" /><testcase classname="tests.test_lifespan" name="test_lifespan_auto" time="0.003" /><testcase classname="tests.test_lifespan" name="test_lifespan_auto_with_error" time="0.004" /><testcase classname="tests.test_lifespan" name="test_lifespan_on_with_error" time="0.004" /><testcase classname="tests.test_lifespan" name="test_lifespan_with_failed_startup[True-auto]" time="0.004" /><testcase classname="tests.test_lifespan" name="test_lifespan_with_failed_startup[True-on]" time="0.004" /><testcase classname="tests.test_lifespan" name="test_lifespan_with_failed_startup[False-auto]" time="0.005" /><testcase classname="tests.test_lifespan" name="test_lifespan_with_failed_startup[False-on]" time="0.005" /><testcase classname="tests.test_lifespan" name="test_lifespan_scope_asgi3app" time="0.005" /><testcase classname="tests.test_lifespan" name="test_lifespan_scope_asgi2app" time="0.008" /><testcase classname="tests.test_lifespan" name="test_lifespan_with_failed_shutdown[True-auto]" time="0.005" /><testcase classname="tests.test_lifespan" name="test_lifespan_with_failed_shutdown[True-on]" time="0.005" /><testcase classname="tests.test_lifespan" name="test_lifespan_with_failed_shutdown[False-auto]" time="0.005" /><testcase classname="tests.test_lifespan" name="test_lifespan_with_failed_shutdown[False-on]" time="0.006" /><testcase classname="tests.test_main" name="test_return_close_header" time="0.009"><failure message="SystemExit: 1">Traceback (most recent call last):
  File "/workdir/uvicorn-0.20.0/uvicorn/server.py", line 151, in startup
    server = await loop.create_server(
  File "uvloop/loop.pyx", line 1790, in create_server
OSError: [Errno 99] error while attempting to bind on address ('::1', 8000, 0, 0): cannot assign requested address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workdir/uvicorn-0.20.0/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/anyio/pytest_plugin.py", line 117, in pytest_pyfunc_call
    runner.run_test(pyfuncitem.obj, testargs)
  File "/workdir/uvicorn-0.20.0/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/anyio/_backends/_asyncio.py", line 2113, in run_test
    self._loop.run_until_complete(test_func(**kwargs))
  File "uvloop/loop.pyx", line 1511, in uvloop.loop.Loop.run_until_complete
  File "uvloop/loop.pyx", line 1504, in uvloop.loop.Loop.run_until_complete
  File "uvloop/loop.pyx", line 1377, in uvloop.loop.Loop.run_forever
  File "uvloop/loop.pyx", line 555, in uvloop.loop.Loop._run
  File "uvloop/loop.pyx", line 474, in uvloop.loop.Loop._on_idle
  File "uvloop/cbhandles.pyx", line 83, in uvloop.loop.Handle._run
  File "uvloop/cbhandles.pyx", line 63, in uvloop.loop.Handle._run
  File "/workdir/uvicorn-0.20.0/uvicorn/server.py", line 77, in serve
    await self.startup(sockets=sockets)
  File "/workdir/uvicorn-0.20.0/uvicorn/server.py", line 161, in startup
    sys.exit(1)
SystemExit: 1</failure></testcase><testcase classname="tests.test_main" name="test_run[default]" time="0.223" /><testcase classname="tests.test_main" name="test_run[hostname]" time="0.007"><failure message="SystemExit: 1">Traceback (most recent call last):
  File "/workdir/uvicorn-0.20.0/uvicorn/server.py", line 151, in startup
    server = await loop.create_server(
  File "uvloop/loop.pyx", line 1790, in create_server
OSError: [Errno 99] error while attempting to bind on address ('::1', 8000, 0, 0): cannot assign requested address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workdir/uvicorn-0.20.0/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/anyio/pytest_plugin.py", line 117, in pytest_pyfunc_call
    runner.run_test(pyfuncitem.obj, testargs)
  File "/workdir/uvicorn-0.20.0/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/anyio/_backends/_asyncio.py", line 2113, in run_test
    self._loop.run_until_complete(test_func(**kwargs))
  File "uvloop/loop.pyx", line 1511, in uvloop.loop.Loop.run_until_complete
  File "uvloop/loop.pyx", line 1504, in uvloop.loop.Loop.run_until_complete
  File "uvloop/loop.pyx", line 1377, in uvloop.loop.Loop.run_forever
  File "uvloop/loop.pyx", line 555, in uvloop.loop.Loop._run
  File "uvloop/loop.pyx", line 474, in uvloop.loop.Loop._on_idle
  File "uvloop/cbhandles.pyx", line 83, in uvloop.loop.Handle._run
  File "uvloop/cbhandles.pyx", line 63, in uvloop.loop.Handle._run
  File "/workdir/uvicorn-0.20.0/uvicorn/server.py", line 77, in serve
    await self.startup(sockets=sockets)
  File "/workdir/uvicorn-0.20.0/uvicorn/server.py", line 161, in startup
    sys.exit(1)
SystemExit: 1</failure></testcase><testcase classname="tests.test_main" name="test_run[ipv6]" time="0.001"><skipped type="pytest.skip" message="IPV6 not enabled">/workdir/uvicorn-0.20.0/tests/test_main.py:49: IPV6 not enabled</skipped></testcase><testcase classname="tests.test_main" name="test_run_multiprocess" time="0.231" /><testcase classname="tests.test_main" name="test_run_reload" time="0.217" /><testcase classname="tests.test_main" name="test_run_invalid_app_config_combination" time="0.002" /><testcase classname="tests.test_main" name="test_run_startup_failure" time="0.005" /><testcase classname="tests.test_main" name="test_run_match_config_params" time="0.004" /><testcase classname="tests.test_ssl" name="test_run" time="1.097" /><testcase classname="tests.test_ssl" name="test_run_chain" time="1.162" /><testcase classname="tests.test_ssl" name="test_run_chain_only" time="0.757" /><testcase classname="tests.test_ssl" name="test_run_password" time="1.155" /><testcase classname="tests.test_subprocess" name="test_get_subprocess" time="0.002" /><testcase classname="tests.test_subprocess" name="test_subprocess_started" time="0.007" /><testcase classname="tests.importer.test_importer" name="test_invalid_format" time="0.002" /><testcase classname="tests.importer.test_importer" name="test_invalid_module" time="0.002" /><testcase classname="tests.importer.test_importer" name="test_invalid_attr" time="0.001" /><testcase classname="tests.importer.test_importer" name="test_internal_import_error" time="0.003" /><testcase classname="tests.importer.test_importer" name="test_valid_import" time="0.002" /><testcase classname="tests.importer.test_importer" name="test_no_import_needed" time="0.001" /><testcase classname="tests.middleware.test_logging" name="test_trace_logging" time="0.225" /><testcase classname="tests.middleware.test_logging" name="test_trace_logging_on_http_protocol[H11Protocol]" time="0.226" /><testcase classname="tests.middleware.test_logging" name="test_trace_logging_on_http_protocol[HttpToolsProtocol]" time="0.229" /><testcase classname="tests.middleware.test_logging" name="test_trace_logging_on_ws_protocol[websockets]" time="0.213" /><testcase classname="tests.middleware.test_logging" name="test_trace_logging_on_ws_protocol[wsproto]" time="0.210" /><testcase classname="tests.middleware.test_logging" name="test_access_logging[True]" time="0.228" /><testcase classname="tests.middleware.test_logging" name="test_access_logging[False]" time="0.224" /><testcase classname="tests.middleware.test_logging" name="test_access_logging[None]" time="0.236" /><testcase classname="tests.middleware.test_logging" name="test_default_logging[True]" time="0.227" /><testcase classname="tests.middleware.test_logging" name="test_default_logging[False]" time="0.226" /><testcase classname="tests.middleware.test_logging" name="test_running_log_using_uds" time="0.208" /><testcase classname="tests.middleware.test_logging" name="test_running_log_using_fd" time="0.205" /><testcase classname="tests.middleware.test_logging" name="test_unknown_status_code" time="0.219" /><testcase classname="tests.middleware.test_logging" name="test_server_start_with_port_zero" time="0.205" /><testcase classname="tests.middleware.test_message_logger" name="test_message_logger" time="0.006" /><testcase classname="tests.middleware.test_message_logger" name="test_message_logger_exc" time="0.004" /><testcase classname="tests.middleware.test_proxy_headers" name="test_proxy_headers_trusted_hosts[*-Remote: https://1.2.3.4:0]" time="0.004" /><testcase classname="tests.middleware.test_proxy_headers" name="test_proxy_headers_trusted_hosts[127.0.0.1-Remote: https://1.2.3.4:0]" time="0.004" /><testcase classname="tests.middleware.test_proxy_headers" name="test_proxy_headers_trusted_hosts[trusted_hosts2-Remote: https://1.2.3.4:0]" time="0.005" /><testcase classname="tests.middleware.test_proxy_headers" name="test_proxy_headers_trusted_hosts[trusted_hosts3-Remote: https://1.2.3.4:0]" time="0.005" /><testcase classname="tests.middleware.test_proxy_headers" name="test_proxy_headers_trusted_hosts[127.0.0.1, 10.0.0.1-Remote: https://1.2.3.4:0]" time="0.005" /><testcase classname="tests.middleware.test_proxy_headers" name="test_proxy_headers_trusted_hosts[192.168.0.1-Remote: http://127.0.0.1:123]" time="0.005" /><testcase classname="tests.middleware.test_proxy_headers" name="test_proxy_headers_multiple_proxies[*-Remote: https://1.2.3.4:0]" time="0.004" /><testcase classname="tests.middleware.test_proxy_headers" name="test_proxy_headers_multiple_proxies[trusted_hosts1-Remote: https://1.2.3.4:0]" time="0.005" /><testcase classname="tests.middleware.test_proxy_headers" name="test_proxy_headers_multiple_proxies[trusted_hosts2-Remote: https://1.2.3.4:0]" time="0.004" /><testcase classname="tests.middleware.test_proxy_headers" name="test_proxy_headers_multiple_proxies[trusted_hosts3-Remote: https://10.0.2.1:0]" time="0.011" /><testcase classname="tests.middleware.test_proxy_headers" name="test_proxy_headers_invalid_x_forwarded_for" time="0.005" /><testcase classname="tests.middleware.test_wsgi" name="test_wsgi_get" time="0.005" /><testcase classname="tests.middleware.test_wsgi" name="test_wsgi_post" time="0.005" /><testcase classname="tests.middleware.test_wsgi" name="test_wsgi_put_more_body" time="0.009" /><testcase classname="tests.middleware.test_wsgi" name="test_wsgi_exception" time="0.004" /><testcase classname="tests.middleware.test_wsgi" name="test_wsgi_exc_info" time="0.008" /><testcase classname="tests.middleware.test_wsgi" name="test_build_environ_encoding" time="0.001" /><testcase classname="tests.protocols.test_http" name="test_get_request[H11Protocol]" time="0.005" /><testcase classname="tests.protocols.test_http" name="test_get_request[HttpToolsProtocol]" time="0.003" /><testcase classname="tests.protocols.test_http" name="test_request_logging[H11Protocol-/]" time="0.004" /><testcase classname="tests.protocols.test_http" name="test_request_logging[H11Protocol-/?foo]" time="0.004" /><testcase classname="tests.protocols.test_http" name="test_request_logging[H11Protocol-/?foo=bar]" time="0.004" /><testcase classname="tests.protocols.test_http" name="test_request_logging[H11Protocol-/?foo=bar&amp;baz=1]" time="0.004" /><testcase classname="tests.protocols.test_http" name="test_request_logging[HttpToolsProtocol-/]" time="0.007" /><testcase classname="tests.protocols.test_http" name="test_request_logging[HttpToolsProtocol-/?foo]" time="0.004" /><testcase classname="tests.protocols.test_http" name="test_request_logging[HttpToolsProtocol-/?foo=bar]" time="0.004" /><testcase classname="tests.protocols.test_http" name="test_request_logging[HttpToolsProtocol-/?foo=bar&amp;baz=1]" time="0.005" /><testcase classname="tests.protocols.test_http" name="test_head_request[H11Protocol]" time="0.015" /><testcase classname="tests.protocols.test_http" name="test_head_request[HttpToolsProtocol]" time="0.005" /><testcase classname="tests.protocols.test_http" name="test_post_request[H11Protocol]" time="0.004" /><testcase classname="tests.protocols.test_http" name="test_post_request[HttpToolsProtocol]" time="0.004" /><testcase classname="tests.protocols.test_http" name="test_keepalive[H11Protocol]" time="0.003" /><testcase classname="tests.protocols.test_http" name="test_keepalive[HttpToolsProtocol]" time="0.003" /><testcase classname="tests.protocols.test_http" name="test_keepalive_timeout[H11Protocol]" time="0.003" /><testcase classname="tests.protocols.test_http" name="test_keepalive_timeout[HttpToolsProtocol]" time="0.006" /><testcase classname="tests.protocols.test_http" name="test_close[H11Protocol]" time="0.005" /><testcase classname="tests.protocols.test_http" name="test_close[HttpToolsProtocol]" time="0.005" /><testcase classname="tests.protocols.test_http" name="test_chunked_encoding[H11Protocol]" time="0.009" /><testcase classname="tests.protocols.test_http" name="test_chunked_encoding[HttpToolsProtocol]" time="0.004" /><testcase classname="tests.protocols.test_http" name="test_chunked_encoding_empty_body[H11Protocol]" time="0.004" /><testcase classname="tests.protocols.test_http" name="test_chunked_encoding_empty_body[HttpToolsProtocol]" time="0.004" /><testcase classname="tests.protocols.test_http" name="test_chunked_encoding_head_request[H11Protocol]" time="0.006" /><testcase classname="tests.protocols.test_http" name="test_chunked_encoding_head_request[HttpToolsProtocol]" time="0.006" /><testcase classname="tests.protocols.test_http" name="test_pipelined_requests[H11Protocol]" time="0.006" /><testcase classname="tests.protocols.test_http" name="test_pipelined_requests[HttpToolsProtocol]" time="0.006" /><testcase classname="tests.protocols.test_http" name="test_undersized_request[H11Protocol]" time="0.023" /><testcase classname="tests.protocols.test_http" name="test_undersized_request[HttpToolsProtocol]" time="0.006" /><testcase classname="tests.protocols.test_http" name="test_oversized_request[H11Protocol]" time="0.006" /><testcase classname="tests.protocols.test_http" name="test_oversized_request[HttpToolsProtocol]" time="0.043" /><testcase classname="tests.protocols.test_http" name="test_large_post_request[H11Protocol]" time="0.008" /><testcase classname="tests.protocols.test_http" name="test_large_post_request[HttpToolsProtocol]" time="0.004" /><testcase classname="tests.protocols.test_http" name="test_invalid_http[H11Protocol]" time="0.006" /><testcase classname="tests.protocols.test_http" name="test_invalid_http[HttpToolsProtocol]" time="0.004" /><testcase classname="tests.protocols.test_http" name="test_app_exception[H11Protocol]" time="0.006" /><testcase classname="tests.protocols.test_http" name="test_app_exception[HttpToolsProtocol]" time="0.004" /><testcase classname="tests.protocols.test_http" name="test_exception_during_response[H11Protocol]" time="0.006" /><testcase classname="tests.protocols.test_http" name="test_exception_during_response[HttpToolsProtocol]" time="0.042" /><testcase classname="tests.protocols.test_http" name="test_no_response_returned[H11Protocol]" time="0.005" /><testcase classname="tests.protocols.test_http" name="test_no_response_returned[HttpToolsProtocol]" time="0.012" /><testcase classname="tests.protocols.test_http" name="test_partial_response_returned[H11Protocol]" time="0.007" /><testcase classname="tests.protocols.test_http" name="test_partial_response_returned[HttpToolsProtocol]" time="0.018" /><testcase classname="tests.protocols.test_http" name="test_duplicate_start_message[H11Protocol]" time="0.019" /><testcase classname="tests.protocols.test_http" name="test_duplicate_start_message[HttpToolsProtocol]" time="0.009" /><testcase classname="tests.protocols.test_http" name="test_missing_start_message[H11Protocol]" time="0.007" /><testcase classname="tests.protocols.test_http" name="test_missing_start_message[HttpToolsProtocol]" time="0.005" /><testcase classname="tests.protocols.test_http" name="test_message_after_body_complete[H11Protocol]" time="0.004" /><testcase classname="tests.protocols.test_http" name="test_message_after_body_complete[HttpToolsProtocol]" time="0.004" /><testcase classname="tests.protocols.test_http" name="test_value_returned[H11Protocol]" time="0.005" /><testcase classname="tests.protocols.test_http" name="test_value_returned[HttpToolsProtocol]" time="0.004" /><testcase classname="tests.protocols.test_http" name="test_early_disconnect[H11Protocol]" time="0.003" /><testcase classname="tests.protocols.test_http" name="test_early_disconnect[HttpToolsProtocol]" time="0.004" /><testcase classname="tests.protocols.test_http" name="test_early_response[H11Protocol]" time="0.004" /><testcase classname="tests.protocols.test_http" name="test_early_response[HttpToolsProtocol]" time="0.004" /><testcase classname="tests.protocols.test_http" name="test_read_after_response[H11Protocol]" time="0.004" /><testcase classname="tests.protocols.test_http" name="test_read_after_response[HttpToolsProtocol]" time="0.003" /><testcase classname="tests.protocols.test_http" name="test_http10_request[H11Protocol]" time="0.004" /><testcase classname="tests.protocols.test_http" name="test_http10_request[HttpToolsProtocol]" time="0.003" /><testcase classname="tests.protocols.test_http" name="test_root_path[H11Protocol]" time="0.004" /><testcase classname="tests.protocols.test_http" name="test_root_path[HttpToolsProtocol]" time="0.003" /><testcase classname="tests.protocols.test_http" name="test_raw_path[H11Protocol]" time="0.004" /><testcase classname="tests.protocols.test_http" name="test_raw_path[HttpToolsProtocol]" time="0.004" /><testcase classname="tests.protocols.test_http" name="test_max_concurrency[H11Protocol]" time="0.004" /><testcase classname="tests.protocols.test_http" name="test_max_concurrency[HttpToolsProtocol]" time="0.004" /><testcase classname="tests.protocols.test_http" name="test_shutdown_during_request[H11Protocol]" time="0.005" /><testcase classname="tests.protocols.test_http" name="test_shutdown_during_request[HttpToolsProtocol]" time="0.004" /><testcase classname="tests.protocols.test_http" name="test_shutdown_during_idle[H11Protocol]" time="0.003" /><testcase classname="tests.protocols.test_http" name="test_shutdown_during_idle[HttpToolsProtocol]" time="0.003" /><testcase classname="tests.protocols.test_http" name="test_100_continue_sent_when_body_consumed[H11Protocol]" time="0.004" /><testcase classname="tests.protocols.test_http" name="test_100_continue_sent_when_body_consumed[HttpToolsProtocol]" time="0.003" /><testcase classname="tests.protocols.test_http" name="test_100_continue_not_sent_when_body_not_consumed[H11Protocol]" time="0.005" /><testcase classname="tests.protocols.test_http" name="test_100_continue_not_sent_when_body_not_consumed[HttpToolsProtocol]" time="0.006" /><testcase classname="tests.protocols.test_http" name="test_supported_upgrade_request[H11Protocol]" time="0.004" /><testcase classname="tests.protocols.test_http" name="test_supported_upgrade_request[HttpToolsProtocol]" time="0.004" /><testcase classname="tests.protocols.test_http" name="test_unsupported_ws_upgrade_request[H11Protocol]" time="0.003" /><testcase classname="tests.protocols.test_http" name="test_unsupported_ws_upgrade_request[HttpToolsProtocol]" time="0.004" /><testcase classname="tests.protocols.test_http" name="test_unsupported_ws_upgrade_request_warn_on_auto[H11Protocol]" time="0.004" /><testcase classname="tests.protocols.test_http" name="test_unsupported_ws_upgrade_request_warn_on_auto[HttpToolsProtocol]" time="0.022" /><testcase classname="tests.protocols.test_http" name="test_http2_upgrade_request[auto-H11Protocol]" time="0.004" /><testcase classname="tests.protocols.test_http" name="test_http2_upgrade_request[auto-HttpToolsProtocol]" time="0.005" /><testcase classname="tests.protocols.test_http" name="test_http2_upgrade_request[none-H11Protocol]" time="0.004" /><testcase classname="tests.protocols.test_http" name="test_http2_upgrade_request[none-HttpToolsProtocol]" time="0.004" /><testcase classname="tests.protocols.test_http" name="test_http2_upgrade_request[websockets-H11Protocol]" time="0.003" /><testcase classname="tests.protocols.test_http" name="test_http2_upgrade_request[websockets-HttpToolsProtocol]" time="0.003" /><testcase classname="tests.protocols.test_http" name="test_http2_upgrade_request[wsproto-H11Protocol]" time="0.004" /><testcase classname="tests.protocols.test_http" name="test_http2_upgrade_request[wsproto-HttpToolsProtocol]" time="0.003" /><testcase classname="tests.protocols.test_http" name="test_scopes[H11Protocol-asgi3app-expected_scopes0]" time="0.004" /><testcase classname="tests.protocols.test_http" name="test_scopes[H11Protocol-asgi2app-expected_scopes1]" time="0.004" /><testcase classname="tests.protocols.test_http" name="test_scopes[HttpToolsProtocol-asgi3app-expected_scopes0]" time="0.003" /><testcase classname="tests.protocols.test_http" name="test_scopes[HttpToolsProtocol-asgi2app-expected_scopes1]" time="0.003" /><testcase classname="tests.protocols.test_http" name="test_invalid_http_request[H11Protocol-invalid-method]" time="0.004" /><testcase classname="tests.protocols.test_http" name="test_invalid_http_request[H11Protocol-invalid-path]" time="0.006" /><testcase classname="tests.protocols.test_http" name="test_invalid_http_request[H11Protocol-invalid-http-version]" time="0.005" /><testcase classname="tests.protocols.test_http" name="test_invalid_http_request[HttpToolsProtocol-invalid-method]" time="0.004" /><testcase classname="tests.protocols.test_http" name="test_invalid_http_request[HttpToolsProtocol-invalid-path]" time="0.004" /><testcase classname="tests.protocols.test_http" name="test_invalid_http_request[HttpToolsProtocol-invalid-http-version]" time="0.004" /><testcase classname="tests.protocols.test_http" name="test_fragmentation" time="1.214" /><testcase classname="tests.protocols.test_http" name="test_huge_headers_h11protocol_failure" time="0.004" /><testcase classname="tests.protocols.test_http" name="test_huge_headers_httptools_will_pass" time="0.010" /><testcase classname="tests.protocols.test_http" name="test_huge_headers_h11protocol_failure_with_setting" time="0.005" /><testcase classname="tests.protocols.test_http" name="test_huge_headers_httptools" time="0.005" /><testcase classname="tests.protocols.test_http" name="test_huge_headers_h11_max_incomplete" time="0.007" /><testcase classname="tests.protocols.test_utils" name="test_get_local_addr_with_socket" time="0.001" /><testcase classname="tests.protocols.test_utils" name="test_get_remote_addr_with_socket" time="0.001" /><testcase classname="tests.protocols.test_utils" name="test_get_local_addr" time="0.001" /><testcase classname="tests.protocols.test_utils" name="test_get_remote_addr" time="0.002" /><testcase classname="tests.protocols.test_utils" name="test_get_client_addr[ip:port client]" time="0.002" /><testcase classname="tests.protocols.test_utils" name="test_get_client_addr[None client]" time="0.001" /><testcase classname="tests.protocols.test_websocket" name="test_invalid_upgrade[H11Protocol-WSProtocol]" time="0.222" /><testcase classname="tests.protocols.test_websocket" name="test_invalid_upgrade[H11Protocol-WebSocketProtocol]" time="0.222" /><testcase classname="tests.protocols.test_websocket" name="test_invalid_upgrade[HttpToolsProtocol-WSProtocol]" time="0.220" /><testcase classname="tests.protocols.test_websocket" name="test_invalid_upgrade[HttpToolsProtocol-WebSocketProtocol]" time="0.229" /><testcase classname="tests.protocols.test_websocket" name="test_accept_connection[H11Protocol-WSProtocol]" time="0.212" /><testcase classname="tests.protocols.test_websocket" name="test_accept_connection[H11Protocol-WebSocketProtocol]" time="0.211" /><testcase classname="tests.protocols.test_websocket" name="test_accept_connection[HttpToolsProtocol-WSProtocol]" time="0.214" /><testcase classname="tests.protocols.test_websocket" name="test_accept_connection[HttpToolsProtocol-WebSocketProtocol]" time="0.210" /><testcase classname="tests.protocols.test_websocket" name="test_supports_permessage_deflate_extension[H11Protocol-WSProtocol]" time="0.210" /><testcase classname="tests.protocols.test_websocket" name="test_supports_permessage_deflate_extension[H11Protocol-WebSocketProtocol]" time="0.212" /><testcase classname="tests.protocols.test_websocket" name="test_supports_permessage_deflate_extension[HttpToolsProtocol-WSProtocol]" time="0.208" /><testcase classname="tests.protocols.test_websocket" name="test_supports_permessage_deflate_extension[HttpToolsProtocol-WebSocketProtocol]" time="0.208" /><testcase classname="tests.protocols.test_websocket" name="test_can_disable_permessage_deflate_extension[H11Protocol-WSProtocol]" time="0.209" /><testcase classname="tests.protocols.test_websocket" name="test_can_disable_permessage_deflate_extension[H11Protocol-WebSocketProtocol]" time="0.207" /><testcase classname="tests.protocols.test_websocket" name="test_can_disable_permessage_deflate_extension[HttpToolsProtocol-WSProtocol]" time="0.208" /><testcase classname="tests.protocols.test_websocket" name="test_can_disable_permessage_deflate_extension[HttpToolsProtocol-WebSocketProtocol]" time="0.212" /><testcase classname="tests.protocols.test_websocket" name="test_close_connection[H11Protocol-WSProtocol]" time="0.209" /><testcase classname="tests.protocols.test_websocket" name="test_close_connection[H11Protocol-WebSocketProtocol]" time="0.210" /><testcase classname="tests.protocols.test_websocket" name="test_close_connection[HttpToolsProtocol-WSProtocol]" time="0.208" /><testcase classname="tests.protocols.test_websocket" name="test_close_connection[HttpToolsProtocol-WebSocketProtocol]" time="0.213" /><testcase classname="tests.protocols.test_websocket" name="test_headers[H11Protocol-WSProtocol]" time="0.212" /><testcase classname="tests.protocols.test_websocket" name="test_headers[H11Protocol-WebSocketProtocol]" time="0.210" /><testcase classname="tests.protocols.test_websocket" name="test_headers[HttpToolsProtocol-WSProtocol]" time="0.255" /><testcase classname="tests.protocols.test_websocket" name="test_headers[HttpToolsProtocol-WebSocketProtocol]" time="0.210" /><testcase classname="tests.protocols.test_websocket" name="test_extra_headers[H11Protocol-WSProtocol]" time="0.210" /><testcase classname="tests.protocols.test_websocket" name="test_extra_headers[H11Protocol-WebSocketProtocol]" time="0.209" /><testcase classname="tests.protocols.test_websocket" name="test_extra_headers[HttpToolsProtocol-WSProtocol]" time="0.213" /><testcase classname="tests.protocols.test_websocket" name="test_extra_headers[HttpToolsProtocol-WebSocketProtocol]" time="0.211" /><testcase classname="tests.protocols.test_websocket" name="test_path_and_raw_path[H11Protocol-WSProtocol]" time="0.210" /><testcase classname="tests.protocols.test_websocket" name="test_path_and_raw_path[H11Protocol-WebSocketProtocol]" time="0.210" /><testcase classname="tests.protocols.test_websocket" name="test_path_and_raw_path[HttpToolsProtocol-WSProtocol]" time="0.211" /><testcase classname="tests.protocols.test_websocket" name="test_path_and_raw_path[HttpToolsProtocol-WebSocketProtocol]" time="0.210" /><testcase classname="tests.protocols.test_websocket" name="test_send_text_data_to_client[H11Protocol-WSProtocol]" time="0.209" /><testcase classname="tests.protocols.test_websocket" name="test_send_text_data_to_client[H11Protocol-WebSocketProtocol]" time="0.210" /><testcase classname="tests.protocols.test_websocket" name="test_send_text_data_to_client[HttpToolsProtocol-WSProtocol]" time="0.208" /><testcase classname="tests.protocols.test_websocket" name="test_send_text_data_to_client[HttpToolsProtocol-WebSocketProtocol]" time="0.208" /><testcase classname="tests.protocols.test_websocket" name="test_send_binary_data_to_client[H11Protocol-WSProtocol]" time="0.210" /><testcase classname="tests.protocols.test_websocket" name="test_send_binary_data_to_client[H11Protocol-WebSocketProtocol]" time="0.210" /><testcase classname="tests.protocols.test_websocket" name="test_send_binary_data_to_client[HttpToolsProtocol-WSProtocol]" time="0.208" /><testcase classname="tests.protocols.test_websocket" name="test_send_binary_data_to_client[HttpToolsProtocol-WebSocketProtocol]" time="0.209" /><testcase classname="tests.protocols.test_websocket" name="test_send_and_close_connection[H11Protocol-WSProtocol]" time="0.208" /><testcase classname="tests.protocols.test_websocket" name="test_send_and_close_connection[H11Protocol-WebSocketProtocol]" time="0.209" /><testcase classname="tests.protocols.test_websocket" name="test_send_and_close_connection[HttpToolsProtocol-WSProtocol]" time="0.210" /><testcase classname="tests.protocols.test_websocket" name="test_send_and_close_connection[HttpToolsProtocol-WebSocketProtocol]" time="0.210" /><testcase classname="tests.protocols.test_websocket" name="test_send_text_data_to_server[H11Protocol-WSProtocol]" time="0.210" /><testcase classname="tests.protocols.test_websocket" name="test_send_text_data_to_server[H11Protocol-WebSocketProtocol]" time="0.209" /><testcase classname="tests.protocols.test_websocket" name="test_send_text_data_to_server[HttpToolsProtocol-WSProtocol]" time="0.207" /><testcase classname="tests.protocols.test_websocket" name="test_send_text_data_to_server[HttpToolsProtocol-WebSocketProtocol]" time="0.214" /><testcase classname="tests.protocols.test_websocket" name="test_send_binary_data_to_server[H11Protocol-WSProtocol]" time="0.209" /><testcase classname="tests.protocols.test_websocket" name="test_send_binary_data_to_server[H11Protocol-WebSocketProtocol]" time="0.210" /><testcase classname="tests.protocols.test_websocket" name="test_send_binary_data_to_server[HttpToolsProtocol-WSProtocol]" time="0.209" /><testcase classname="tests.protocols.test_websocket" name="test_send_binary_data_to_server[HttpToolsProtocol-WebSocketProtocol]" time="0.211" /><testcase classname="tests.protocols.test_websocket" name="test_send_after_protocol_close[H11Protocol-WSProtocol]" time="0.209" /><testcase classname="tests.protocols.test_websocket" name="test_send_after_protocol_close[H11Protocol-WebSocketProtocol]" time="0.209" /><testcase classname="tests.protocols.test_websocket" name="test_send_after_protocol_close[HttpToolsProtocol-WSProtocol]" time="0.211" /><testcase classname="tests.protocols.test_websocket" name="test_send_after_protocol_close[HttpToolsProtocol-WebSocketProtocol]" time="0.209" /><testcase classname="tests.protocols.test_websocket" name="test_missing_handshake[H11Protocol-WSProtocol]" time="0.209" /><testcase classname="tests.protocols.test_websocket" name="test_missing_handshake[H11Protocol-WebSocketProtocol]" time="0.216" /><testcase classname="tests.protocols.test_websocket" name="test_missing_handshake[HttpToolsProtocol-WSProtocol]" time="0.209" /><testcase classname="tests.protocols.test_websocket" name="test_missing_handshake[HttpToolsProtocol-WebSocketProtocol]" time="0.210" /><testcase classname="tests.protocols.test_websocket" name="test_send_before_handshake[H11Protocol-WSProtocol]" time="0.211" /><testcase classname="tests.protocols.test_websocket" name="test_send_before_handshake[H11Protocol-WebSocketProtocol]" time="0.213" /><testcase classname="tests.protocols.test_websocket" name="test_send_before_handshake[HttpToolsProtocol-WSProtocol]" time="0.211" /><testcase classname="tests.protocols.test_websocket" name="test_send_before_handshake[HttpToolsProtocol-WebSocketProtocol]" time="0.210" /><testcase classname="tests.protocols.test_websocket" name="test_duplicate_handshake[H11Protocol-WSProtocol]" time="0.211" /><testcase classname="tests.protocols.test_websocket" name="test_duplicate_handshake[H11Protocol-WebSocketProtocol]" time="0.210" /><testcase classname="tests.protocols.test_websocket" name="test_duplicate_handshake[HttpToolsProtocol-WSProtocol]" time="0.210" /><testcase classname="tests.protocols.test_websocket" name="test_duplicate_handshake[HttpToolsProtocol-WebSocketProtocol]" time="0.209" /><testcase classname="tests.protocols.test_websocket" name="test_asgi_return_value[H11Protocol-WSProtocol]" time="0.207" /><testcase classname="tests.protocols.test_websocket" name="test_asgi_return_value[H11Protocol-WebSocketProtocol]" time="0.210"><failure message="AssertionError: assert 1000 == 1006&#10; +  where 1000 = ConnectionClosedOK(Close(code=1000, reason=''), Close(code=1000, reason=''), True).code&#10; +    where ConnectionClosedOK(Close(code=1000, reason=''), Close(code=1000, reason=''), True) = &lt;ExceptionInfo ConnectionClosedOK(Close(code=1000, reason=''), Close(code=1000, reason=''), True) tblen=4&gt;.value">Traceback (most recent call last):
  File "/workdir/uvicorn-0.20.0/tests/protocols/test_websocket.py", line 451, in test_asgi_return_value
    assert exc_info.value.code == 1006
AssertionError: assert 1000 == 1006
 +  where 1000 = ConnectionClosedOK(Close(code=1000, reason=''), Close(code=1000, reason=''), True).code
 +    where ConnectionClosedOK(Close(code=1000, reason=''), Close(code=1000, reason=''), True) = &lt;ExceptionInfo ConnectionClosedOK(Close(code=1000, reason=''), Close(code=1000, reason=''), True) tblen=4&gt;.value</failure></testcase><testcase classname="tests.protocols.test_websocket" name="test_asgi_return_value[HttpToolsProtocol-WSProtocol]" time="0.208" /><testcase classname="tests.protocols.test_websocket" name="test_asgi_return_value[HttpToolsProtocol-WebSocketProtocol]" time="0.212"><failure message="AssertionError: assert 1000 == 1006&#10; +  where 1000 = ConnectionClosedOK(Close(code=1000, reason=''), Close(code=1000, reason=''), True).code&#10; +    where ConnectionClosedOK(Close(code=1000, reason=''), Close(code=1000, reason=''), True) = &lt;ExceptionInfo ConnectionClosedOK(Close(code=1000, reason=''), Close(code=1000, reason=''), True) tblen=4&gt;.value">Traceback (most recent call last):
  File "/workdir/uvicorn-0.20.0/tests/protocols/test_websocket.py", line 451, in test_asgi_return_value
    assert exc_info.value.code == 1006
AssertionError: assert 1000 == 1006
 +  where 1000 = ConnectionClosedOK(Close(code=1000, reason=''), Close(code=1000, reason=''), True).code
 +    where ConnectionClosedOK(Close(code=1000, reason=''), Close(code=1000, reason=''), True) = &lt;ExceptionInfo ConnectionClosedOK(Close(code=1000, reason=''), Close(code=1000, reason=''), True) tblen=4&gt;.value</failure></testcase><testcase classname="tests.protocols.test_websocket" name="test_app_close[none_as_reason-None-H11Protocol-WSProtocol]" time="0.213" /><testcase classname="tests.protocols.test_websocket" name="test_app_close[none_as_reason-None-H11Protocol-WebSocketProtocol]" time="0.210" /><testcase classname="tests.protocols.test_websocket" name="test_app_close[none_as_reason-None-HttpToolsProtocol-WSProtocol]" time="0.211" /><testcase classname="tests.protocols.test_websocket" name="test_app_close[none_as_reason-None-HttpToolsProtocol-WebSocketProtocol]" time="0.212" /><testcase classname="tests.protocols.test_websocket" name="test_app_close[none_as_reason-1000-H11Protocol-WSProtocol]" time="0.218" /><testcase classname="tests.protocols.test_websocket" name="test_app_close[none_as_reason-1000-H11Protocol-WebSocketProtocol]" time="0.209" /><testcase classname="tests.protocols.test_websocket" name="test_app_close[none_as_reason-1000-HttpToolsProtocol-WSProtocol]" time="0.210" /><testcase classname="tests.protocols.test_websocket" name="test_app_close[none_as_reason-1000-HttpToolsProtocol-WebSocketProtocol]" time="0.209" /><testcase classname="tests.protocols.test_websocket" name="test_app_close[none_as_reason-1001-H11Protocol-WSProtocol]" time="0.211" /><testcase classname="tests.protocols.test_websocket" name="test_app_close[none_as_reason-1001-H11Protocol-WebSocketProtocol]" time="0.210" /><testcase classname="tests.protocols.test_websocket" name="test_app_close[none_as_reason-1001-HttpToolsProtocol-WSProtocol]" time="0.209" /><testcase classname="tests.protocols.test_websocket" name="test_app_close[none_as_reason-1001-HttpToolsProtocol-WebSocketProtocol]" time="0.211" /><testcase classname="tests.protocols.test_websocket" name="test_app_close[normal_reason-None-H11Protocol-WSProtocol]" time="0.210" /><testcase classname="tests.protocols.test_websocket" name="test_app_close[normal_reason-None-H11Protocol-WebSocketProtocol]" time="0.210" /><testcase classname="tests.protocols.test_websocket" name="test_app_close[normal_reason-None-HttpToolsProtocol-WSProtocol]" time="0.210" /><testcase classname="tests.protocols.test_websocket" name="test_app_close[normal_reason-None-HttpToolsProtocol-WebSocketProtocol]" time="0.211" /><testcase classname="tests.protocols.test_websocket" name="test_app_close[normal_reason-1000-H11Protocol-WSProtocol]" time="0.210" /><testcase classname="tests.protocols.test_websocket" name="test_app_close[normal_reason-1000-H11Protocol-WebSocketProtocol]" time="0.210" /><testcase classname="tests.protocols.test_websocket" name="test_app_close[normal_reason-1000-HttpToolsProtocol-WSProtocol]" time="0.212" /><testcase classname="tests.protocols.test_websocket" name="test_app_close[normal_reason-1000-HttpToolsProtocol-WebSocketProtocol]" time="0.212" /><testcase classname="tests.protocols.test_websocket" name="test_app_close[normal_reason-1001-H11Protocol-WSProtocol]" time="0.211" /><testcase classname="tests.protocols.test_websocket" name="test_app_close[normal_reason-1001-H11Protocol-WebSocketProtocol]" time="0.211" /><testcase classname="tests.protocols.test_websocket" name="test_app_close[normal_reason-1001-HttpToolsProtocol-WSProtocol]" time="0.224" /><testcase classname="tests.protocols.test_websocket" name="test_app_close[normal_reason-1001-HttpToolsProtocol-WebSocketProtocol]" time="0.211" /><testcase classname="tests.protocols.test_websocket" name="test_app_close[without_reason-None-H11Protocol-WSProtocol]" time="0.211" /><testcase classname="tests.protocols.test_websocket" name="test_app_close[without_reason-None-H11Protocol-WebSocketProtocol]" time="0.210" /><testcase classname="tests.protocols.test_websocket" name="test_app_close[without_reason-None-HttpToolsProtocol-WSProtocol]" time="0.209" /><testcase classname="tests.protocols.test_websocket" name="test_app_close[without_reason-None-HttpToolsProtocol-WebSocketProtocol]" time="0.211" /><testcase classname="tests.protocols.test_websocket" name="test_app_close[without_reason-1000-H11Protocol-WSProtocol]" time="0.209" /><testcase classname="tests.protocols.test_websocket" name="test_app_close[without_reason-1000-H11Protocol-WebSocketProtocol]" time="0.211" /><testcase classname="tests.protocols.test_websocket" name="test_app_close[without_reason-1000-HttpToolsProtocol-WSProtocol]" time="0.209" /><testcase classname="tests.protocols.test_websocket" name="test_app_close[without_reason-1000-HttpToolsProtocol-WebSocketProtocol]" time="0.212" /><testcase classname="tests.protocols.test_websocket" name="test_app_close[without_reason-1001-H11Protocol-WSProtocol]" time="0.220" /><testcase classname="tests.protocols.test_websocket" name="test_app_close[without_reason-1001-H11Protocol-WebSocketProtocol]" time="0.212" /><testcase classname="tests.protocols.test_websocket" name="test_app_close[without_reason-1001-HttpToolsProtocol-WSProtocol]" time="0.209" /><testcase classname="tests.protocols.test_websocket" name="test_app_close[without_reason-1001-HttpToolsProtocol-WebSocketProtocol]" time="0.211" /><testcase classname="tests.protocols.test_websocket" name="test_client_close[H11Protocol-WSProtocol]" time="0.212" /><testcase classname="tests.protocols.test_websocket" name="test_client_close[H11Protocol-WebSocketProtocol]" time="0.211" /><testcase classname="tests.protocols.test_websocket" name="test_client_close[HttpToolsProtocol-WSProtocol]" time="0.212" /><testcase classname="tests.protocols.test_websocket" name="test_client_close[HttpToolsProtocol-WebSocketProtocol]" time="0.211" /><testcase classname="tests.protocols.test_websocket" name="test_client_connection_lost[H11Protocol-WSProtocol]" time="0.310" /><testcase classname="tests.protocols.test_websocket" name="test_client_connection_lost[H11Protocol-WebSocketProtocol]" time="0.311" /><testcase classname="tests.protocols.test_websocket" name="test_client_connection_lost[HttpToolsProtocol-WSProtocol]" time="0.313" /><testcase classname="tests.protocols.test_websocket" name="test_client_connection_lost[HttpToolsProtocol-WebSocketProtocol]" time="0.310" /><testcase classname="tests.protocols.test_websocket" name="test_connection_lost_before_handshake_complete[H11Protocol-WSProtocol]" time="0.306" /><testcase classname="tests.protocols.test_websocket" name="test_connection_lost_before_handshake_complete[H11Protocol-WebSocketProtocol]" time="0.306" /><testcase classname="tests.protocols.test_websocket" name="test_connection_lost_before_handshake_complete[HttpToolsProtocol-WSProtocol]" time="0.308" /><testcase classname="tests.protocols.test_websocket" name="test_connection_lost_before_handshake_complete[HttpToolsProtocol-WebSocketProtocol]" time="0.306" /><testcase classname="tests.protocols.test_websocket" name="test_send_close_on_server_shutdown[H11Protocol-WSProtocol]" time="0.305" /><testcase classname="tests.protocols.test_websocket" name="test_send_close_on_server_shutdown[H11Protocol-WebSocketProtocol]" time="0.305" /><testcase classname="tests.protocols.test_websocket" name="test_send_close_on_server_shutdown[HttpToolsProtocol-WSProtocol]" time="0.308" /><testcase classname="tests.protocols.test_websocket" name="test_send_close_on_server_shutdown[HttpToolsProtocol-WebSocketProtocol]" time="0.306" /><testcase classname="tests.protocols.test_websocket" name="test_subprotocols[proto1-H11Protocol-WSProtocol]" time="0.210" /><testcase classname="tests.protocols.test_websocket" name="test_subprotocols[proto1-H11Protocol-WebSocketProtocol]" time="0.212" /><testcase classname="tests.protocols.test_websocket" name="test_subprotocols[proto1-HttpToolsProtocol-WSProtocol]" time="0.213" /><testcase classname="tests.protocols.test_websocket" name="test_subprotocols[proto1-HttpToolsProtocol-WebSocketProtocol]" time="0.213" /><testcase classname="tests.protocols.test_websocket" name="test_subprotocols[proto2-H11Protocol-WSProtocol]" time="0.213" /><testcase classname="tests.protocols.test_websocket" name="test_subprotocols[proto2-H11Protocol-WebSocketProtocol]" time="0.212" /><testcase classname="tests.protocols.test_websocket" name="test_subprotocols[proto2-HttpToolsProtocol-WSProtocol]" time="0.208" /><testcase classname="tests.protocols.test_websocket" name="test_subprotocols[proto2-HttpToolsProtocol-WebSocketProtocol]" time="0.210" /><testcase classname="tests.protocols.test_websocket" name="test_send_binary_data_to_server_bigger_than_default[max=defaults sent=defaults-H11Protocol-WebSocketProtocol]" time="0.653" /><testcase classname="tests.protocols.test_websocket" name="test_send_binary_data_to_server_bigger_than_default[max=defaults sent=defaults-HttpToolsProtocol-WebSocketProtocol]" time="0.626" /><testcase classname="tests.protocols.test_websocket" name="test_send_binary_data_to_server_bigger_than_default[max=defaults sent=defaults+1-H11Protocol-WebSocketProtocol]" time="0.417" /><testcase classname="tests.protocols.test_websocket" name="test_send_binary_data_to_server_bigger_than_default[max=defaults sent=defaults+1-HttpToolsProtocol-WebSocketProtocol]" time="0.411" /><testcase classname="tests.protocols.test_websocket" name="test_send_binary_data_to_server_bigger_than_default[max=10 sent=10-H11Protocol-WebSocketProtocol]" time="0.211" /><testcase classname="tests.protocols.test_websocket" name="test_send_binary_data_to_server_bigger_than_default[max=10 sent=10-HttpToolsProtocol-WebSocketProtocol]" time="0.210" /><testcase classname="tests.protocols.test_websocket" name="test_send_binary_data_to_server_bigger_than_default[max=10 sent=11-H11Protocol-WebSocketProtocol]" time="0.211" /><testcase classname="tests.protocols.test_websocket" name="test_send_binary_data_to_server_bigger_than_default[max=10 sent=11-HttpToolsProtocol-WebSocketProtocol]" time="0.211" /><testcase classname="tests.protocols.test_websocket" name="test_server_reject_connection[H11Protocol-WSProtocol]" time="0.210" /><testcase classname="tests.protocols.test_websocket" name="test_server_reject_connection[H11Protocol-WebSocketProtocol]" time="0.209" /><testcase classname="tests.protocols.test_websocket" name="test_server_reject_connection[HttpToolsProtocol-WSProtocol]" time="0.206" /><testcase classname="tests.protocols.test_websocket" name="test_server_reject_connection[HttpToolsProtocol-WebSocketProtocol]" time="0.210" /><testcase classname="tests.protocols.test_websocket" name="test_server_can_read_messages_in_buffer_after_close[H11Protocol-WSProtocol]" time="0.407" /><testcase classname="tests.protocols.test_websocket" name="test_server_can_read_messages_in_buffer_after_close[H11Protocol-WebSocketProtocol]" time="0.316" /><testcase classname="tests.protocols.test_websocket" name="test_server_can_read_messages_in_buffer_after_close[HttpToolsProtocol-WSProtocol]" time="0.313" /><testcase classname="tests.protocols.test_websocket" name="test_server_can_read_messages_in_buffer_after_close[HttpToolsProtocol-WebSocketProtocol]" time="0.316" /><testcase classname="tests.protocols.test_websocket" name="test_default_server_headers[H11Protocol-WSProtocol]" time="0.210" /><testcase classname="tests.protocols.test_websocket" name="test_default_server_headers[H11Protocol-WebSocketProtocol]" time="0.210" /><testcase classname="tests.protocols.test_websocket" name="test_default_server_headers[HttpToolsProtocol-WSProtocol]" time="0.210" /><testcase classname="tests.protocols.test_websocket" name="test_default_server_headers[HttpToolsProtocol-WebSocketProtocol]" time="0.208" /><testcase classname="tests.protocols.test_websocket" name="test_no_server_headers[H11Protocol-WSProtocol]" time="0.207" /><testcase classname="tests.protocols.test_websocket" name="test_no_server_headers[H11Protocol-WebSocketProtocol]" time="0.210" /><testcase classname="tests.protocols.test_websocket" name="test_no_server_headers[HttpToolsProtocol-WSProtocol]" time="0.209" /><testcase classname="tests.protocols.test_websocket" name="test_no_server_headers[HttpToolsProtocol-WebSocketProtocol]" time="0.208" /><testcase classname="tests.protocols.test_websocket" name="test_no_date_header[H11Protocol-WSProtocol]" time="0.209" /><testcase classname="tests.protocols.test_websocket" name="test_no_date_header[HttpToolsProtocol-WSProtocol]" time="0.209" /><testcase classname="tests.protocols.test_websocket" name="test_multiple_server_header[H11Protocol-WSProtocol]" time="0.210" /><testcase classname="tests.protocols.test_websocket" name="test_multiple_server_header[H11Protocol-WebSocketProtocol]" time="0.212" /><testcase classname="tests.protocols.test_websocket" name="test_multiple_server_header[HttpToolsProtocol-WSProtocol]" time="0.210" /><testcase classname="tests.protocols.test_websocket" name="test_multiple_server_header[HttpToolsProtocol-WebSocketProtocol]" time="0.210" /><testcase classname="tests.supervisors.test_multiprocess" name="test_multiprocess_run" time="0.025" /><testcase classname="tests.supervisors.test_reload.TestBaseReload" name="test_reloader_should_initialize[StatReload]" time="0.016" /><testcase classname="tests.supervisors.test_reload.TestBaseReload" name="test_reloader_should_initialize[WatchGodReload]" time="0.019" /><testcase classname="tests.supervisors.test_reload.TestBaseReload" name="test_reloader_should_initialize[WatchFilesReload]" time="0.006" /><testcase classname="tests.supervisors.test_reload.TestBaseReload" name="test_reload_when_python_file_is_changed[StatReload]" time="0.111" /><testcase classname="tests.supervisors.test_reload.TestBaseReload" name="test_reload_when_python_file_is_changed[WatchGodReload]" time="0.112" /><testcase classname="tests.supervisors.test_reload.TestBaseReload" name="test_reload_when_python_file_is_changed[WatchFilesReload]" time="0.414" /><testcase classname="tests.supervisors.test_reload.TestBaseReload" name="test_should_reload_when_python_file_in_subdir_is_changed[StatReload]" time="0.114" /><testcase classname="tests.supervisors.test_reload.TestBaseReload" name="test_should_reload_when_python_file_in_subdir_is_changed[WatchGodReload]" time="0.114" /><testcase classname="tests.supervisors.test_reload.TestBaseReload" name="test_should_reload_when_python_file_in_subdir_is_changed[WatchFilesReload]" time="5.032"><failure message="AssertionError: assert None&#10; +  where None = &lt;bound method TestBaseReload._reload_tester of &lt;test_reload.TestBaseReload object at 0x7f7d8a5ab2b0&gt;&gt;(&lt;function touch_soon.&lt;locals&gt;.start at 0x7f7d871ecd30&gt;, &lt;uvicorn.supervisors.watchfilesreload.WatchFilesReload object at 0x7f7d8a9220e0&gt;, PosixPath('/tmp/pytest-of-tester/pytest-20/reload_directory1/app/sub/sub.py'))&#10; +    where &lt;bound method TestBaseReload._reload_tester of &lt;test_reload.TestBaseReload object at 0x7f7d8a5ab2b0&gt;&gt; = &lt;test_reload.TestBaseReload object at 0x7f7d8a5ab2b0&gt;._reload_tester">Traceback (most recent call last):
  File "/workdir/uvicorn-0.20.0/tests/supervisors/test_reload.py", line 108, in test_should_reload_when_python_file_in_subdir_is_changed
    assert self._reload_tester(touch_soon, reloader, file)
AssertionError: assert None
 +  where None = &lt;bound method TestBaseReload._reload_tester of &lt;test_reload.TestBaseReload object at 0x7f7d8a5ab2b0&gt;&gt;(&lt;function touch_soon.&lt;locals&gt;.start at 0x7f7d871ecd30&gt;, &lt;uvicorn.supervisors.watchfilesreload.WatchFilesReload object at 0x7f7d8a9220e0&gt;, PosixPath('/tmp/pytest-of-tester/pytest-20/reload_directory1/app/sub/sub.py'))
 +    where &lt;bound method TestBaseReload._reload_tester of &lt;test_reload.TestBaseReload object at 0x7f7d8a5ab2b0&gt;&gt; = &lt;test_reload.TestBaseReload object at 0x7f7d8a5ab2b0&gt;._reload_tester</failure></testcase><testcase classname="tests.supervisors.test_reload.TestBaseReload" name="test_should_not_reload_when_python_file_in_excluded_subdir_is_changed[WatchFilesReload]" time="0.364" /><testcase classname="tests.supervisors.test_reload.TestBaseReload" name="test_should_not_reload_when_python_file_in_excluded_subdir_is_changed[WatchGodReload]" time="0.120" /><testcase classname="tests.supervisors.test_reload.TestBaseReload" name="test_reload_when_pattern_matched_file_is_changed[StatReload-False]" time="0.114" /><testcase classname="tests.supervisors.test_reload.TestBaseReload" name="test_reload_when_pattern_matched_file_is_changed[WatchFilesReload-True]" time="5.038"><failure message="AssertionError: assert False == True&#10; +  where False = bool(None)&#10; +    where None = &lt;bound method TestBaseReload._reload_tester of &lt;test_reload.TestBaseReload object at 0x7f7d8a5aa7d0&gt;&gt;(&lt;function touch_soon.&lt;locals&gt;.start at 0x7f7d8721ca60&gt;, &lt;uvicorn.supervisors.watchfilesreload.WatchFilesReload object at 0x7f7d8ac32a10&gt;, PosixPath('/tmp/pytest-of-tester/pytest-20/reload_directory1/app/js/main.js'))&#10; +      where &lt;bound method TestBaseReload._reload_tester of &lt;test_reload.TestBaseReload object at 0x7f7d8a5aa7d0&gt;&gt; = &lt;test_reload.TestBaseReload object at 0x7f7d8a5aa7d0&gt;._reload_tester">Traceback (most recent call last):
  File "/workdir/uvicorn-0.20.0/tests/supervisors/test_reload.py", line 145, in test_reload_when_pattern_matched_file_is_changed
    assert bool(self._reload_tester(touch_soon, reloader, file)) == result
AssertionError: assert False == True
 +  where False = bool(None)
 +    where None = &lt;bound method TestBaseReload._reload_tester of &lt;test_reload.TestBaseReload object at 0x7f7d8a5aa7d0&gt;&gt;(&lt;function touch_soon.&lt;locals&gt;.start at 0x7f7d8721ca60&gt;, &lt;uvicorn.supervisors.watchfilesreload.WatchFilesReload object at 0x7f7d8ac32a10&gt;, PosixPath('/tmp/pytest-of-tester/pytest-20/reload_directory1/app/js/main.js'))
 +      where &lt;bound method TestBaseReload._reload_tester of &lt;test_reload.TestBaseReload object at 0x7f7d8a5aa7d0&gt;&gt; = &lt;test_reload.TestBaseReload object at 0x7f7d8a5aa7d0&gt;._reload_tester</failure></testcase><testcase classname="tests.supervisors.test_reload.TestBaseReload" name="test_should_not_reload_when_exclude_pattern_match_file_is_changed[WatchFilesReload]" time="0.975" /><testcase classname="tests.supervisors.test_reload.TestBaseReload" name="test_should_not_reload_when_exclude_pattern_match_file_is_changed[WatchGodReload]" time="0.328" /><testcase classname="tests.supervisors.test_reload.TestBaseReload" name="test_should_not_reload_when_dot_file_is_changed[StatReload]" time="0.114" /><testcase classname="tests.supervisors.test_reload.TestBaseReload" name="test_should_not_reload_when_dot_file_is_changed[WatchGodReload]" time="0.114" /><testcase classname="tests.supervisors.test_reload.TestBaseReload" name="test_should_not_reload_when_dot_file_is_changed[WatchFilesReload]" time="5.025" /><testcase classname="tests.supervisors.test_reload.TestBaseReload" name="test_should_reload_when_directories_have_same_prefix[StatReload]" time="0.216" /><testcase classname="tests.supervisors.test_reload.TestBaseReload" name="test_should_reload_when_directories_have_same_prefix[WatchGodReload]" time="0.214" /><testcase classname="tests.supervisors.test_reload.TestBaseReload" name="test_should_reload_when_directories_have_same_prefix[WatchFilesReload]" time="5.048"><failure message="AssertionError: assert None&#10; +  where None = &lt;bound method TestBaseReload._reload_tester of &lt;test_reload.TestBaseReload object at 0x7f7d8a5aa260&gt;&gt;(&lt;function touch_soon.&lt;locals&gt;.start at 0x7f7d8721d750&gt;, &lt;uvicorn.supervisors.watchfilesreload.WatchFilesReload object at 0x7f7d8a3ce6e0&gt;, PosixPath('/tmp/pytest-of-tester/pytest-20/reload_directory1/app/src/main.py'))&#10; +    where &lt;bound method TestBaseReload._reload_tester of &lt;test_reload.TestBaseReload object at 0x7f7d8a5aa260&gt;&gt; = &lt;test_reload.TestBaseReload object at 0x7f7d8a5aa260&gt;._reload_tester">Traceback (most recent call last):
  File "/workdir/uvicorn-0.20.0/tests/supervisors/test_reload.py", line 203, in test_should_reload_when_directories_have_same_prefix
    assert self._reload_tester(touch_soon, reloader, app_file)
AssertionError: assert None
 +  where None = &lt;bound method TestBaseReload._reload_tester of &lt;test_reload.TestBaseReload object at 0x7f7d8a5aa260&gt;&gt;(&lt;function touch_soon.&lt;locals&gt;.start at 0x7f7d8721d750&gt;, &lt;uvicorn.supervisors.watchfilesreload.WatchFilesReload object at 0x7f7d8a3ce6e0&gt;, PosixPath('/tmp/pytest-of-tester/pytest-20/reload_directory1/app/src/main.py'))
 +    where &lt;bound method TestBaseReload._reload_tester of &lt;test_reload.TestBaseReload object at 0x7f7d8a5aa260&gt;&gt; = &lt;test_reload.TestBaseReload object at 0x7f7d8a5aa260&gt;._reload_tester</failure></testcase><testcase classname="tests.supervisors.test_reload.TestBaseReload" name="test_should_not_reload_when_only_subdirectory_is_watched[StatReload]" time="0.214" /><testcase classname="tests.supervisors.test_reload.TestBaseReload" name="test_should_not_reload_when_only_subdirectory_is_watched[WatchGodReload]" time="0.215" /><testcase classname="tests.supervisors.test_reload.TestBaseReload" name="test_should_not_reload_when_only_subdirectory_is_watched[WatchFilesReload]" time="5.192"><failure message="AssertionError: assert None&#10; +  where None = &lt;bound method TestBaseReload._reload_tester of &lt;test_reload.TestBaseReload object at 0x7f7d8a5a82e0&gt;&gt;(&lt;function touch_soon.&lt;locals&gt;.start at 0x7f7d8721dfc0&gt;, &lt;uvicorn.supervisors.watchfilesreload.WatchFilesReload object at 0x7f7d8a9237f0&gt;, PosixPath('/tmp/pytest-of-tester/pytest-20/reload_directory1/app/src/main.py'))&#10; +    where &lt;bound method TestBaseReload._reload_tester of &lt;test_reload.TestBaseReload object at 0x7f7d8a5a82e0&gt;&gt; = &lt;test_reload.TestBaseReload object at 0x7f7d8a5a82e0&gt;._reload_tester">Traceback (most recent call last):
  File "/workdir/uvicorn-0.20.0/tests/supervisors/test_reload.py", line 225, in test_should_not_reload_when_only_subdirectory_is_watched
    assert self._reload_tester(touch_soon, reloader, app_dir_file)
AssertionError: assert None
 +  where None = &lt;bound method TestBaseReload._reload_tester of &lt;test_reload.TestBaseReload object at 0x7f7d8a5a82e0&gt;&gt;(&lt;function touch_soon.&lt;locals&gt;.start at 0x7f7d8721dfc0&gt;, &lt;uvicorn.supervisors.watchfilesreload.WatchFilesReload object at 0x7f7d8a9237f0&gt;, PosixPath('/tmp/pytest-of-tester/pytest-20/reload_directory1/app/src/main.py'))
 +    where &lt;bound method TestBaseReload._reload_tester of &lt;test_reload.TestBaseReload object at 0x7f7d8a5a82e0&gt;&gt; = &lt;test_reload.TestBaseReload object at 0x7f7d8a5a82e0&gt;._reload_tester</failure></testcase><testcase classname="tests.supervisors.test_reload.TestBaseReload" name="test_override_defaults[WatchFilesReload]" time="0.981" /><testcase classname="tests.supervisors.test_reload.TestBaseReload" name="test_override_defaults[WatchGodReload]" time="0.324" /><testcase classname="tests.supervisors.test_reload.TestBaseReload" name="test_watchfiles_no_changes[WatchFilesReload]" time="0.108" /><testcase classname="tests.supervisors.test_reload.TestBaseReload" name="test_should_detect_new_reload_dirs[WatchGodReload]" time="0.234" /><testcase classname="tests.supervisors.test_reload" name="test_should_watch_one_dir_cwd" time="0.006" /><testcase classname="tests.supervisors.test_reload" name="test_should_watch_separate_dirs_outside_cwd" time="0.007" /><testcase classname="tests.supervisors.test_reload" name="test_display_path_relative" time="0.004" /><testcase classname="tests.supervisors.test_reload" name="test_display_path_non_relative" time="0.001" /><testcase classname="tests.supervisors.test_reload" name="test_base_reloader_run" time="0.005" /><testcase classname="tests.supervisors.test_reload" name="test_base_reloader_should_exit" time="0.255" /><testcase classname="tests.supervisors.test_reload" name="test_base_reloader_closes_sockets_on_shutdown" time="0.016" /></testsuite></testsuites>