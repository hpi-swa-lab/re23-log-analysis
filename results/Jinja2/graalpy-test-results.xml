<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="7" skipped="0" tests="842" time="27.826" timestamp="2023-11-22T04:50:36.138000" hostname="80ac3eb7f7f2"><testcase classname="tests.test_api.TestExtendedAPI" name="test_item_and_attribute" time="0.124" /><testcase classname="tests.test_api.TestExtendedAPI" name="test_finalize" time="0.019" /><testcase classname="tests.test_api.TestExtendedAPI" name="test_finalize_constant_expression" time="0.014" /><testcase classname="tests.test_api.TestExtendedAPI" name="test_no_finalize_template_data" time="0.012" /><testcase classname="tests.test_api.TestExtendedAPI" name="test_context_finalize" time="0.010" /><testcase classname="tests.test_api.TestExtendedAPI" name="test_eval_finalize" time="0.010" /><testcase classname="tests.test_api.TestExtendedAPI" name="test_env_autoescape" time="0.013" /><testcase classname="tests.test_api.TestExtendedAPI" name="test_cycler" time="0.011" /><testcase classname="tests.test_api.TestExtendedAPI" name="test_expressions" time="0.022" /><testcase classname="tests.test_api.TestExtendedAPI" name="test_template_passthrough" time="0.008" /><testcase classname="tests.test_api.TestExtendedAPI" name="test_get_template_undefined" time="0.009" /><testcase classname="tests.test_api.TestExtendedAPI" name="test_autoescape_autoselect" time="0.020" /><testcase classname="tests.test_api.TestExtendedAPI" name="test_sandbox_max_range" time="0.022" /><testcase classname="tests.test_api.TestMeta" name="test_find_undeclared_variables" time="0.274" /><testcase classname="tests.test_api.TestMeta" name="test_find_refererenced_templates" time="0.019" /><testcase classname="tests.test_api.TestMeta" name="test_find_included_templates" time="0.021" /><testcase classname="tests.test_api.TestStreaming" name="test_basic_streaming" time="0.022" /><testcase classname="tests.test_api.TestStreaming" name="test_buffered_streaming" time="0.019" /><testcase classname="tests.test_api.TestStreaming" name="test_streaming_behavior" time="0.007" /><testcase classname="tests.test_api.TestStreaming" name="test_dump_stream" time="0.012" /><testcase classname="tests.test_api.TestUndefined" name="test_stopiteration_is_undefined" time="0.023" /><testcase classname="tests.test_api.TestUndefined" name="test_undefined_and_special_attributes" time="0.004" /><testcase classname="tests.test_api.TestUndefined" name="test_undefined_attribute_error" time="0.005" /><testcase classname="tests.test_api.TestUndefined" name="test_logging_undefined" time="0.043" /><testcase classname="tests.test_api.TestUndefined" name="test_default_undefined" time="0.104" /><testcase classname="tests.test_api.TestUndefined" name="test_chainable_undefined" time="0.075" /><testcase classname="tests.test_api.TestUndefined" name="test_debug_undefined" time="0.036" /><testcase classname="tests.test_api.TestUndefined" name="test_strict_undefined" time="0.064" /><testcase classname="tests.test_api.TestUndefined" name="test_indexing_gives_undefined" time="0.015" /><testcase classname="tests.test_api.TestUndefined" name="test_none_gives_proper_error" time="0.005" /><testcase classname="tests.test_api.TestUndefined" name="test_object_repr" time="0.005" /><testcase classname="tests.test_api.TestLowLevel" name="test_custom_code_generator" time="0.013" /><testcase classname="tests.test_api.TestLowLevel" name="test_custom_context" time="0.010" /><testcase classname="tests.test_async" name="test_basic_async" time="0.053" /><testcase classname="tests.test_async" name="test_await_on_calls" time="0.021" /><testcase classname="tests.test_async" name="test_await_on_calls_normal_render" time="0.015" /><testcase classname="tests.test_async" name="test_await_and_macros" time="0.026" /><testcase classname="tests.test_async" name="test_async_blocks" time="0.020" /><testcase classname="tests.test_async" name="test_async_generate" time="0.020" /><testcase classname="tests.test_async" name="test_async_iteration_in_templates" time="0.017" /><testcase classname="tests.test_async" name="test_async_iteration_in_templates_extended" time="0.020" /><testcase classname="tests.test_async.TestAsyncImports" name="test_context_imports" time="0.031"><failure message="RuntimeError: async generator raised StopAsyncIteration">Traceback (most recent call last):
  File "&lt;template&gt;", line 12, in root
  File "/workdir/Jinja2-3.1.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/jinja2/environment.py", line 1460, in _get_default_module_async
    self._module = await self.make_module_async()
  File "/workdir/Jinja2-3.1.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/jinja2/environment.py", line 1420, in make_module_async
    self, ctx, [x async for x in self.root_render_func(ctx)]  # type: ignore
  File "/workdir/Jinja2-3.1.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/jinja2/environment.py", line 1420, in &lt;listcomp&gt;
    self, ctx, [x async for x in self.root_render_func(ctx)]  # type: ignore
StopAsyncIteration

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/workdir/Jinja2-3.1.2/tests/test_async.py", line 132, in test_context_imports
    assert t.render(foo=42) == "[|23]"
  File "/workdir/Jinja2-3.1.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/jinja2/environment.py", line 1291, in render
    return loop.run_until_complete(self.render_async(*args, **kwargs))
  File "/opt/graalpy/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/graalpy/lib/python3.10/asyncio/futures.py", line 201, in result
    raise self._exception.with_traceback(self._exception_tb)
  File "/opt/graalpy/lib/python3.10/asyncio/tasks.py", line 232, in __step
    result = coro.send(None)
  File "/workdir/Jinja2-3.1.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/jinja2/environment.py", line 1324, in render_async
    return self.environment.handle_exception()
  File "/workdir/Jinja2-3.1.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/jinja2/environment.py", line 936, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/workdir/Jinja2-3.1.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/jinja2/environment.py", line 1321, in &lt;listcomp&gt;
    [n async for n in self.root_render_func(ctx)]  # type: ignore
RuntimeError: async generator raised StopAsyncIteration</failure></testcase><testcase classname="tests.test_async.TestAsyncImports" name="test_trailing_comma" time="0.066" /><testcase classname="tests.test_async.TestAsyncImports" name="test_exports" time="0.036" /><testcase classname="tests.test_async.TestAsyncImports" name="test_import_with_globals" time="0.042" /><testcase classname="tests.test_async.TestAsyncImports" name="test_import_with_globals_override" time="0.030" /><testcase classname="tests.test_async.TestAsyncImports" name="test_from_import_with_globals" time="0.026" /><testcase classname="tests.test_async.TestAsyncIncludes" name="test_context_include" time="0.035" /><testcase classname="tests.test_async.TestAsyncIncludes" name="test_choice_includes" time="0.120" /><testcase classname="tests.test_async.TestAsyncIncludes" name="test_include_ignoring_missing" time="0.040" /><testcase classname="tests.test_async.TestAsyncIncludes" name="test_context_include_with_overrides" time="0.023" /><testcase classname="tests.test_async.TestAsyncIncludes" name="test_unoptimized_scopes" time="0.038" /><testcase classname="tests.test_async.TestAsyncIncludes" name="test_unoptimized_scopes_autoescape" time="0.039" /><testcase classname="tests.test_async.TestAsyncForLoop" name="test_simple" time="0.017" /><testcase classname="tests.test_async.TestAsyncForLoop" name="test_else" time="0.018"><failure message="RuntimeError: async generator raised StopAsyncIteration">Traceback (most recent call last):
  File "&lt;template&gt;", line 13, in root
StopAsyncIteration

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/workdir/Jinja2-3.1.2/tests/test_async.py", line 306, in test_else
    assert tmpl.render() == "..."
  File "/workdir/Jinja2-3.1.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/jinja2/environment.py", line 1291, in render
    return loop.run_until_complete(self.render_async(*args, **kwargs))
  File "/opt/graalpy/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/graalpy/lib/python3.10/asyncio/futures.py", line 201, in result
    raise self._exception.with_traceback(self._exception_tb)
  File "/opt/graalpy/lib/python3.10/asyncio/tasks.py", line 232, in __step
    result = coro.send(None)
  File "/workdir/Jinja2-3.1.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/jinja2/environment.py", line 1324, in render_async
    return self.environment.handle_exception()
  File "/workdir/Jinja2-3.1.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/jinja2/environment.py", line 936, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/workdir/Jinja2-3.1.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/jinja2/environment.py", line 1321, in &lt;listcomp&gt;
    [n async for n in self.root_render_func(ctx)]  # type: ignore
RuntimeError: async generator raised StopAsyncIteration</failure></testcase><testcase classname="tests.test_async.TestAsyncForLoop" name="test_empty_blocks" time="0.017" /><testcase classname="tests.test_async.TestAsyncForLoop" name="test_context_vars[&lt;lambda&gt;0]" time="0.060" /><testcase classname="tests.test_async.TestAsyncForLoop" name="test_context_vars[iter]" time="0.031" /><testcase classname="tests.test_async.TestAsyncForLoop" name="test_context_vars[reversed]" time="0.031" /><testcase classname="tests.test_async.TestAsyncForLoop" name="test_context_vars[&lt;lambda&gt;1]" time="0.029" /><testcase classname="tests.test_async.TestAsyncForLoop" name="test_context_vars[auto_aiter]" time="0.029" /><testcase classname="tests.test_async.TestAsyncForLoop" name="test_cycling" time="0.030" /><testcase classname="tests.test_async.TestAsyncForLoop" name="test_lookaround" time="0.029" /><testcase classname="tests.test_async.TestAsyncForLoop" name="test_changed" time="0.022" /><testcase classname="tests.test_async.TestAsyncForLoop" name="test_scope" time="0.049" /><testcase classname="tests.test_async.TestAsyncForLoop" name="test_varlen" time="0.016" /><testcase classname="tests.test_async.TestAsyncForLoop" name="test_noniter" time="0.018" /><testcase classname="tests.test_async.TestAsyncForLoop" name="test_recursive" time="0.031" /><testcase classname="tests.test_async.TestAsyncForLoop" name="test_recursive_lookaround" time="0.052" /><testcase classname="tests.test_async.TestAsyncForLoop" name="test_recursive_depth0" time="0.032" /><testcase classname="tests.test_async.TestAsyncForLoop" name="test_recursive_depth" time="0.031" /><testcase classname="tests.test_async.TestAsyncForLoop" name="test_looploop" time="0.061" /><testcase classname="tests.test_async.TestAsyncForLoop" name="test_reversed_bug" time="0.021" /><testcase classname="tests.test_async.TestAsyncForLoop" name="test_loop_errors" time="0.035"><failure message="RuntimeError: async generator raised StopAsyncIteration">Traceback (most recent call last):
  File "&lt;template&gt;", line 12, in root
StopAsyncIteration

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/workdir/Jinja2-3.1.2/tests/test_async.py", line 470, in test_loop_errors
    assert tmpl.render() == ""
  File "/workdir/Jinja2-3.1.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/jinja2/environment.py", line 1291, in render
    return loop.run_until_complete(self.render_async(*args, **kwargs))
  File "/opt/graalpy/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/graalpy/lib/python3.10/asyncio/futures.py", line 201, in result
    raise self._exception.with_traceback(self._exception_tb)
  File "/opt/graalpy/lib/python3.10/asyncio/tasks.py", line 232, in __step
    result = coro.send(None)
  File "/workdir/Jinja2-3.1.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/jinja2/environment.py", line 1324, in render_async
    return self.environment.handle_exception()
  File "/workdir/Jinja2-3.1.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/jinja2/environment.py", line 936, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/workdir/Jinja2-3.1.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/jinja2/environment.py", line 1321, in &lt;listcomp&gt;
    [n async for n in self.root_render_func(ctx)]  # type: ignore
RuntimeError: async generator raised StopAsyncIteration</failure></testcase><testcase classname="tests.test_async.TestAsyncForLoop" name="test_loop_filter" time="0.044" /><testcase classname="tests.test_async.TestAsyncForLoop" name="test_scoped_special_var" time="0.025" /><testcase classname="tests.test_async.TestAsyncForLoop" name="test_scoped_loop_var" time="0.038" /><testcase classname="tests.test_async.TestAsyncForLoop" name="test_recursive_empty_loop_iter" time="0.017"><failure message="RuntimeError: async generator raised StopAsyncIteration">Traceback (most recent call last):
  File "&lt;template&gt;", line 19, in root
  File "&lt;template&gt;", line 15, in loop
  File "/workdir/Jinja2-3.1.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/jinja2/runtime.py", line 647, in __anext__
    rv = await self._iterator.__anext__()
StopAsyncIteration

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/workdir/Jinja2-3.1.2/tests/test_async.py", line 509, in test_recursive_empty_loop_iter
    assert t.render(dict(foo=[])) == ""
  File "/workdir/Jinja2-3.1.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/jinja2/environment.py", line 1291, in render
    return loop.run_until_complete(self.render_async(*args, **kwargs))
  File "/opt/graalpy/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/graalpy/lib/python3.10/asyncio/futures.py", line 201, in result
    raise self._exception.with_traceback(self._exception_tb)
  File "/opt/graalpy/lib/python3.10/asyncio/tasks.py", line 232, in __step
    result = coro.send(None)
  File "/workdir/Jinja2-3.1.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/jinja2/environment.py", line 1324, in render_async
    return self.environment.handle_exception()
  File "/workdir/Jinja2-3.1.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/jinja2/environment.py", line 936, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/workdir/Jinja2-3.1.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/jinja2/environment.py", line 1321, in &lt;listcomp&gt;
    [n async for n in self.root_render_func(ctx)]  # type: ignore
RuntimeError: async generator raised StopAsyncIteration</failure></testcase><testcase classname="tests.test_async.TestAsyncForLoop" name="test_call_in_loop" time="0.031" /><testcase classname="tests.test_async.TestAsyncForLoop" name="test_scoping_bug" time="0.025" /><testcase classname="tests.test_async.TestAsyncForLoop" name="test_unpacking" time="0.023" /><testcase classname="tests.test_async.TestAsyncForLoop" name="test_recursive_loop_filter" time="0.030" /><testcase classname="tests.test_async.TestAsyncForLoop" name="test_nonrecursive_loop_filter" time="0.026" /><testcase classname="tests.test_async.TestAsyncForLoop" name="test_bare_async" time="0.019" /><testcase classname="tests.test_async.TestAsyncForLoop" name="test_awaitable_property_slicing" time="0.020" /><testcase classname="tests.test_async" name="test_namespace_awaitable" time="0.022" /><testcase classname="tests.test_async" name="test_chainable_undefined_aiter" time="0.282"><failure message="RuntimeError: async generator raised StopAsyncIteration">Traceback (most recent call last):
  File "&lt;template&gt;", line 12, in root
StopAsyncIteration

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/workdir/Jinja2-3.1.2/tests/test_async.py", line 621, in test_chainable_undefined_aiter
    asyncio.run(_test())
  File "/opt/graalpy/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/opt/graalpy/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/graalpy/lib/python3.10/asyncio/futures.py", line 201, in result
    raise self._exception.with_traceback(self._exception_tb)
  File "/opt/graalpy/lib/python3.10/asyncio/tasks.py", line 232, in __step
    result = coro.send(None)
  File "/workdir/Jinja2-3.1.2/tests/test_async.py", line 618, in _test
    rv = await t.render_async(a={})
  File "/workdir/Jinja2-3.1.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/jinja2/environment.py", line 1324, in render_async
    return self.environment.handle_exception()
  File "/workdir/Jinja2-3.1.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/jinja2/environment.py", line 936, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/workdir/Jinja2-3.1.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/jinja2/environment.py", line 1321, in &lt;listcomp&gt;
    [n async for n in self.root_render_func(ctx)]  # type: ignore
RuntimeError: async generator raised StopAsyncIteration</failure></testcase><testcase classname="tests.test_async" name="test_native_async" time="0.016" /><testcase classname="tests.test_async" name="test_native_list_async" time="0.015" /><testcase classname="tests.test_async" name="test_getitem_after_filter" time="0.018" /><testcase classname="tests.test_async" name="test_getitem_after_call" time="0.017" /><testcase classname="tests.test_async_filters" name="test_first[&lt;lambda&gt;0]" time="0.026" /><testcase classname="tests.test_async_filters" name="test_first[&lt;lambda&gt;1]" time="0.025" /><testcase classname="tests.test_async_filters" name="test_groupby[&lt;lambda&gt;0]" time="0.032" /><testcase classname="tests.test_async_filters" name="test_groupby[&lt;lambda&gt;1]" time="0.028" /><testcase classname="tests.test_async_filters" name="test_groupby_case[False-a: 1, 3\nb: 2\n]" time="0.029" /><testcase classname="tests.test_async_filters" name="test_groupby_case[True-A: 3\na: 1\nb: 2\n]" time="0.083" /><testcase classname="tests.test_async_filters" name="test_groupby_tuple_index[&lt;lambda&gt;0]" time="0.027" /><testcase classname="tests.test_async_filters" name="test_groupby_tuple_index[&lt;lambda&gt;1]" time="0.026" /><testcase classname="tests.test_async_filters" name="test_groupby_multidot[&lt;lambda&gt;0]" time="0.029" /><testcase classname="tests.test_async_filters" name="test_groupby_multidot[&lt;lambda&gt;1]" time="0.027" /><testcase classname="tests.test_async_filters" name="test_join_env_int[&lt;lambda&gt;0]" time="0.019" /><testcase classname="tests.test_async_filters" name="test_join_env_int[&lt;lambda&gt;1]" time="0.019" /><testcase classname="tests.test_async_filters" name="test_join_string_list[&lt;lambda&gt;0]" time="0.019" /><testcase classname="tests.test_async_filters" name="test_join_string_list[&lt;lambda&gt;1]" time="0.018" /><testcase classname="tests.test_async_filters" name="test_join_attribute[&lt;lambda&gt;0]" time="0.020" /><testcase classname="tests.test_async_filters" name="test_join_attribute[&lt;lambda&gt;1]" time="0.029" /><testcase classname="tests.test_async_filters" name="test_simple_reject[&lt;lambda&gt;0]" time="0.020" /><testcase classname="tests.test_async_filters" name="test_simple_reject[&lt;lambda&gt;1]" time="0.018" /><testcase classname="tests.test_async_filters" name="test_bool_reject[&lt;lambda&gt;0]" time="0.020" /><testcase classname="tests.test_async_filters" name="test_bool_reject[&lt;lambda&gt;1]" time="0.019" /><testcase classname="tests.test_async_filters" name="test_simple_select[&lt;lambda&gt;0]" time="0.021" /><testcase classname="tests.test_async_filters" name="test_simple_select[&lt;lambda&gt;1]" time="0.021" /><testcase classname="tests.test_async_filters" name="test_bool_select[&lt;lambda&gt;0]" time="0.020" /><testcase classname="tests.test_async_filters" name="test_bool_select[&lt;lambda&gt;1]" time="0.020" /><testcase classname="tests.test_async_filters" name="test_simple_select_attr[&lt;lambda&gt;0]" time="0.027" /><testcase classname="tests.test_async_filters" name="test_simple_select_attr[&lt;lambda&gt;1]" time="0.025" /><testcase classname="tests.test_async_filters" name="test_simple_map[&lt;lambda&gt;0]" time="0.037" /><testcase classname="tests.test_async_filters" name="test_simple_map[&lt;lambda&gt;1]" time="0.056" /><testcase classname="tests.test_async_filters" name="test_map_sum" time="0.085" /><testcase classname="tests.test_async_filters" name="test_attribute_map[&lt;lambda&gt;0]" time="0.022" /><testcase classname="tests.test_async_filters" name="test_attribute_map[&lt;lambda&gt;1]" time="0.022" /><testcase classname="tests.test_async_filters" name="test_empty_map" time="0.018" /><testcase classname="tests.test_async_filters" name="test_sum[&lt;lambda&gt;0]" time="0.016" /><testcase classname="tests.test_async_filters" name="test_sum[&lt;lambda&gt;1]" time="0.016" /><testcase classname="tests.test_async_filters" name="test_sum_attributes[&lt;lambda&gt;0]" time="0.018" /><testcase classname="tests.test_async_filters" name="test_sum_attributes[&lt;lambda&gt;1]" time="0.028" /><testcase classname="tests.test_async_filters" name="test_sum_attributes_nested" time="0.018" /><testcase classname="tests.test_async_filters" name="test_sum_attributes_tuple" time="0.018" /><testcase classname="tests.test_async_filters" name="test_slice[&lt;lambda&gt;0]" time="0.022" /><testcase classname="tests.test_async_filters" name="test_slice[&lt;lambda&gt;1]" time="0.020" /><testcase classname="tests.test_async_filters" name="test_custom_async_filter" time="0.015" /><testcase classname="tests.test_async_filters" name="test_custom_async_iteratable_filter[&lt;lambda&gt;0]" time="0.034" /><testcase classname="tests.test_async_filters" name="test_custom_async_iteratable_filter[&lt;lambda&gt;1]" time="0.019" /><testcase classname="tests.test_bytecode_cache.TestByteCodeCache" name="test_simple" time="0.035" /><testcase classname="tests.test_bytecode_cache.TestMemcachedBytecodeCache" name="test_dump_load" time="0.006" /><testcase classname="tests.test_bytecode_cache.TestMemcachedBytecodeCache" name="test_exception" time="0.006" /><testcase classname="tests.test_compile" name="test_filters_deterministic" time="0.029" /><testcase classname="tests.test_compile" name="test_import_as_with_context_deterministic" time="0.035" /><testcase classname="tests.test_core_tags.TestForLoop" name="test_simple" time="0.014" /><testcase classname="tests.test_core_tags.TestForLoop" name="test_else" time="0.014" /><testcase classname="tests.test_core_tags.TestForLoop" name="test_else_scoping_item" time="0.014" /><testcase classname="tests.test_core_tags.TestForLoop" name="test_empty_blocks" time="0.014" /><testcase classname="tests.test_core_tags.TestForLoop" name="test_context_vars" time="0.093" /><testcase classname="tests.test_core_tags.TestForLoop" name="test_cycling" time="0.024" /><testcase classname="tests.test_core_tags.TestForLoop" name="test_lookaround" time="0.022" /><testcase classname="tests.test_core_tags.TestForLoop" name="test_changed" time="0.017" /><testcase classname="tests.test_core_tags.TestForLoop" name="test_scope" time="0.014" /><testcase classname="tests.test_core_tags.TestForLoop" name="test_varlen" time="0.014" /><testcase classname="tests.test_core_tags.TestForLoop" name="test_noniter" time="0.020" /><testcase classname="tests.test_core_tags.TestForLoop" name="test_recursive" time="0.019" /><testcase classname="tests.test_core_tags.TestForLoop" name="test_recursive_lookaround" time="0.055" /><testcase classname="tests.test_core_tags.TestForLoop" name="test_recursive_depth0" time="0.021" /><testcase classname="tests.test_core_tags.TestForLoop" name="test_recursive_depth" time="0.022" /><testcase classname="tests.test_core_tags.TestForLoop" name="test_looploop" time="0.020" /><testcase classname="tests.test_core_tags.TestForLoop" name="test_reversed_bug" time="0.016" /><testcase classname="tests.test_core_tags.TestForLoop" name="test_loop_errors" time="0.027" /><testcase classname="tests.test_core_tags.TestForLoop" name="test_loop_filter" time="0.033" /><testcase classname="tests.test_core_tags.TestForLoop" name="test_loop_unassignable" time="0.013" /><testcase classname="tests.test_core_tags.TestForLoop" name="test_scoped_special_var" time="0.041" /><testcase classname="tests.test_core_tags.TestForLoop" name="test_scoped_loop_var" time="0.029" /><testcase classname="tests.test_core_tags.TestForLoop" name="test_recursive_empty_loop_iter" time="0.013" /><testcase classname="tests.test_core_tags.TestForLoop" name="test_call_in_loop" time="0.024" /><testcase classname="tests.test_core_tags.TestForLoop" name="test_scoping_bug" time="0.020" /><testcase classname="tests.test_core_tags.TestForLoop" name="test_unpacking" time="0.020" /><testcase classname="tests.test_core_tags.TestForLoop" name="test_intended_scoping_with_set" time="0.029" /><testcase classname="tests.test_core_tags.TestIfCondition" name="test_simple" time="0.012" /><testcase classname="tests.test_core_tags.TestIfCondition" name="test_elif" time="0.015" /><testcase classname="tests.test_core_tags.TestIfCondition" name="test_elif_deep" time="2.407" /><testcase classname="tests.test_core_tags.TestIfCondition" name="test_else" time="0.012" /><testcase classname="tests.test_core_tags.TestIfCondition" name="test_empty" time="0.012" /><testcase classname="tests.test_core_tags.TestIfCondition" name="test_complete" time="0.016" /><testcase classname="tests.test_core_tags.TestIfCondition" name="test_no_scope" time="0.021" /><testcase classname="tests.test_core_tags.TestMacros" name="test_simple" time="0.019" /><testcase classname="tests.test_core_tags.TestMacros" name="test_scoping" time="0.021" /><testcase classname="tests.test_core_tags.TestMacros" name="test_arguments" time="0.026" /><testcase classname="tests.test_core_tags.TestMacros" name="test_arguments_defaults_nonsense" time="0.010" /><testcase classname="tests.test_core_tags.TestMacros" name="test_caller_defaults_nonsense" time="0.010" /><testcase classname="tests.test_core_tags.TestMacros" name="test_varargs" time="0.015" /><testcase classname="tests.test_core_tags.TestMacros" name="test_simple_call" time="0.015" /><testcase classname="tests.test_core_tags.TestMacros" name="test_complex_call" time="0.016" /><testcase classname="tests.test_core_tags.TestMacros" name="test_caller_undefined" time="0.015" /><testcase classname="tests.test_core_tags.TestMacros" name="test_include" time="0.020" /><testcase classname="tests.test_core_tags.TestMacros" name="test_macro_api" time="0.017" /><testcase classname="tests.test_core_tags.TestMacros" name="test_callself" time="0.019" /><testcase classname="tests.test_core_tags.TestMacros" name="test_macro_defaults_self_ref" time="0.030" /><testcase classname="tests.test_core_tags.TestSet" name="test_normal" time="0.012" /><testcase classname="tests.test_core_tags.TestSet" name="test_block" time="0.012" /><testcase classname="tests.test_core_tags.TestSet" name="test_block_escaping" time="0.013" /><testcase classname="tests.test_core_tags.TestSet" name="test_set_invalid" time="0.015" /><testcase classname="tests.test_core_tags.TestSet" name="test_namespace_redefined" time="0.015" /><testcase classname="tests.test_core_tags.TestSet" name="test_namespace" time="0.014" /><testcase classname="tests.test_core_tags.TestSet" name="test_namespace_block" time="0.014" /><testcase classname="tests.test_core_tags.TestSet" name="test_init_namespace" time="0.017" /><testcase classname="tests.test_core_tags.TestSet" name="test_namespace_loop" time="0.020" /><testcase classname="tests.test_core_tags.TestSet" name="test_namespace_macro" time="0.018" /><testcase classname="tests.test_core_tags.TestSet" name="test_block_escaping_filtered" time="0.013" /><testcase classname="tests.test_core_tags.TestSet" name="test_block_filtered" time="0.016" /><testcase classname="tests.test_core_tags.TestSet" name="test_block_filtered_set" time="0.021" /><testcase classname="tests.test_core_tags.TestWith" name="test_with" time="0.016" /><testcase classname="tests.test_core_tags.TestWith" name="test_with_argument_scoping" time="0.018" /><testcase classname="tests.test_debug.TestDebug" name="test_runtime_error" time="0.024"><failure message="AssertionError: Traceback did not match:&#10;&#10;Traceback (most recent call last):&#10;  File &quot;/workdir/Jinja2-3.1.2/tests/test_debug.py&quot;, line 22, in assert_traceback_matches&#10;    callback()&#10;  File &quot;/workdir/Jinja2-3.1.2/tests/test_debug.py&quot;, line 32, in test&#10;    tmpl.render(fail=lambda: 1 / 0)&#10;  File &quot;/workdir/Jinja2-3.1.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/jinja2/environment.py&quot;, line 1301, in render&#10;    self.environment.handle_exception()&#10;  File &quot;/workdir/Jinja2-3.1.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/jinja2/environment.py&quot;, line 936, in handle_exception&#10;    raise rewrite_traceback_stack(source=source)&#10;  File &quot;&quot;, line 2, in &lt;module&gt;&#10;  File &quot;/workdir/Jinja2-3.1.2/tests/test_debug.py&quot;, line 32, in &lt;lambda&gt;&#10;    tmpl.render(fail=lambda: 1 / 0)&#10;ZeroDivisionError: division by zero&#10;&#10;expected:&#10;&#10;  File &quot;.*?broken.html&quot;, line 2, in (top-level template code|&lt;module&gt;)&#10;    \{\{ fail\(\) \}\}(&#10;    \^{12})?&#10;  File &quot;.*debug?.pyc?&quot;, line \d+, in &lt;lambda&gt;&#10;    tmpl\.render\(fail=lambda: 1 / 0\)(&#10;                             ~~\^~~)?&#10;ZeroDivisionError: (int(eger)? )?division (or modulo )?by zero">Traceback (most recent call last):
  File "/workdir/Jinja2-3.1.2/tests/test_debug.py", line 35, in test_runtime_error
    self.assert_traceback_matches(
  File "/workdir/Jinja2-3.1.2/tests/test_debug.py", line 26, in assert_traceback_matches
    assert (
AssertionError: Traceback did not match:

Traceback (most recent call last):
  File "/workdir/Jinja2-3.1.2/tests/test_debug.py", line 22, in assert_traceback_matches
    callback()
  File "/workdir/Jinja2-3.1.2/tests/test_debug.py", line 32, in test
    tmpl.render(fail=lambda: 1 / 0)
  File "/workdir/Jinja2-3.1.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/jinja2/environment.py", line 1301, in render
    self.environment.handle_exception()
  File "/workdir/Jinja2-3.1.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/jinja2/environment.py", line 936, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "", line 2, in &lt;module&gt;
  File "/workdir/Jinja2-3.1.2/tests/test_debug.py", line 32, in &lt;lambda&gt;
    tmpl.render(fail=lambda: 1 / 0)
ZeroDivisionError: division by zero

expected:

  File ".*?broken.html", line 2, in (top-level template code|&lt;module&gt;)
    \{\{ fail\(\) \}\}(
    \^{12})?
  File ".*debug?.pyc?", line \d+, in &lt;lambda&gt;
    tmpl\.render\(fail=lambda: 1 / 0\)(
                             ~~\^~~)?
ZeroDivisionError: (int(eger)? )?division (or modulo )?by zero</failure></testcase><testcase classname="tests.test_debug.TestDebug" name="test_syntax_error" time="0.020"><failure message="AssertionError: Traceback did not match:&#10;&#10;Traceback (most recent call last):&#10;  File &quot;/workdir/Jinja2-3.1.2/tests/test_debug.py&quot;, line 22, in assert_traceback_matches&#10;    callback()&#10;  File &quot;/workdir/Jinja2-3.1.2/tests/test_debug.py&quot;, line 53, in &lt;lambda&gt;&#10;    lambda: fs_env.get_template(&quot;syntaxerror.html&quot;),&#10;  File &quot;/workdir/Jinja2-3.1.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/jinja2/environment.py&quot;, line 1010, in get_template&#10;    return self._load_template(name, globals)&#10;  File &quot;/workdir/Jinja2-3.1.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/jinja2/environment.py&quot;, line 969, in _load_template&#10;    template = self.loader.load(self, name, self.make_globals(globals))&#10;  File &quot;/workdir/Jinja2-3.1.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/jinja2/loaders.py&quot;, line 138, in load&#10;    code = environment.compile(source, name, filename)&#10;  File &quot;/workdir/Jinja2-3.1.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/jinja2/environment.py&quot;, line 768, in compile&#10;    self.handle_exception(source=source_hint)&#10;  File &quot;/workdir/Jinja2-3.1.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/jinja2/environment.py&quot;, line 936, in handle_exception&#10;    raise rewrite_traceback_stack(source=source)&#10;  File &quot;&quot;, line 4, in &lt;module&gt;&#10;jinja2.exceptions.TemplateSyntaxError: Encountered unknown tag 'endif'. Jinja was looking for the following tags: 'endfor' or 'else'. The innermost block that needs to be closed is 'for'.&#10;&#10;expected:&#10;(?sm)&#10;  File &quot;.*?syntaxerror.html&quot;, line 4, in (template|&lt;module&gt;)&#10;    \{% endif %\}.*?&#10;(jinja2\.exceptions\.)?TemplateSyntaxError: Encountered unknown tag 'endif'. Jinja was looking for the following tags: 'endfor' or 'else'. The innermost block that needs to be closed is 'for'.">Traceback (most recent call last):
  File "/workdir/Jinja2-3.1.2/tests/test_debug.py", line 52, in test_syntax_error
    self.assert_traceback_matches(
  File "/workdir/Jinja2-3.1.2/tests/test_debug.py", line 26, in assert_traceback_matches
    assert (
AssertionError: Traceback did not match:

Traceback (most recent call last):
  File "/workdir/Jinja2-3.1.2/tests/test_debug.py", line 22, in assert_traceback_matches
    callback()
  File "/workdir/Jinja2-3.1.2/tests/test_debug.py", line 53, in &lt;lambda&gt;
    lambda: fs_env.get_template("syntaxerror.html"),
  File "/workdir/Jinja2-3.1.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/jinja2/environment.py", line 1010, in get_template
    return self._load_template(name, globals)
  File "/workdir/Jinja2-3.1.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/jinja2/environment.py", line 969, in _load_template
    template = self.loader.load(self, name, self.make_globals(globals))
  File "/workdir/Jinja2-3.1.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/jinja2/loaders.py", line 138, in load
    code = environment.compile(source, name, filename)
  File "/workdir/Jinja2-3.1.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/jinja2/environment.py", line 768, in compile
    self.handle_exception(source=source_hint)
  File "/workdir/Jinja2-3.1.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/jinja2/environment.py", line 936, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "", line 4, in &lt;module&gt;
jinja2.exceptions.TemplateSyntaxError: Encountered unknown tag 'endif'. Jinja was looking for the following tags: 'endfor' or 'else'. The innermost block that needs to be closed is 'for'.

expected:
(?sm)
  File ".*?syntaxerror.html", line 4, in (template|&lt;module&gt;)
    \{% endif %\}.*?
(jinja2\.exceptions\.)?TemplateSyntaxError: Encountered unknown tag 'endif'. Jinja was looking for the following tags: 'endfor' or 'else'. The innermost block that needs to be closed is 'for'.</failure></testcase><testcase classname="tests.test_debug.TestDebug" name="test_regular_syntax_error" time="0.010" /><testcase classname="tests.test_debug.TestDebug" name="test_pickleable_syntax_error" time="0.013" /><testcase classname="tests.test_debug.TestDebug" name="test_include_syntax_error_source" time="0.020" /><testcase classname="tests.test_debug.TestDebug" name="test_local_extraction" time="0.004" /><testcase classname="tests.test_debug.TestDebug" name="test_get_corresponding_lineno_traceback" time="0.011" /><testcase classname="tests.test_ext.TestExtensions" name="test_extend_late" time="0.014" /><testcase classname="tests.test_ext.TestExtensions" name="test_loop_controls" time="0.034" /><testcase classname="tests.test_ext.TestExtensions" name="test_do" time="0.022" /><testcase classname="tests.test_ext.TestExtensions" name="test_extension_nodes" time="0.012" /><testcase classname="tests.test_ext.TestExtensions" name="test_contextreference_node_passes_context" time="0.013" /><testcase classname="tests.test_ext.TestExtensions" name="test_contextreference_node_can_pass_locals" time="0.015" /><testcase classname="tests.test_ext.TestExtensions" name="test_identifier" time="0.005" /><testcase classname="tests.test_ext.TestExtensions" name="test_rebinding" time="0.005" /><testcase classname="tests.test_ext.TestExtensions" name="test_preprocessor_extension" time="0.009" /><testcase classname="tests.test_ext.TestExtensions" name="test_streamfilter_extension" time="0.012" /><testcase classname="tests.test_ext.TestExtensions" name="test_extension_ordering" time="0.005" /><testcase classname="tests.test_ext.TestExtensions" name="test_debug" time="0.015" /><testcase classname="tests.test_ext.TestInternationalization" name="test_trans" time="0.051" /><testcase classname="tests.test_ext.TestInternationalization" name="test_trans_plural" time="0.016" /><testcase classname="tests.test_ext.TestInternationalization" name="test_trans_plural_with_functions" time="0.018" /><testcase classname="tests.test_ext.TestInternationalization" name="test_complex_plural" time="0.019" /><testcase classname="tests.test_ext.TestInternationalization" name="test_trans_stringformatting" time="0.014" /><testcase classname="tests.test_ext.TestInternationalization" name="test_trimmed" time="0.012" /><testcase classname="tests.test_ext.TestInternationalization" name="test_trimmed_policy" time="0.015" /><testcase classname="tests.test_ext.TestInternationalization" name="test_trimmed_policy_override" time="0.010" /><testcase classname="tests.test_ext.TestInternationalization" name="test_trimmed_vars" time="0.013" /><testcase classname="tests.test_ext.TestInternationalization" name="test_trimmed_varname_trimmed" time="0.013" /><testcase classname="tests.test_ext.TestInternationalization" name="test_extract" time="0.014" /><testcase classname="tests.test_ext.TestInternationalization" name="test_extract_trimmed" time="0.014" /><testcase classname="tests.test_ext.TestInternationalization" name="test_extract_trimmed_option" time="0.012" /><testcase classname="tests.test_ext.TestInternationalization" name="test_comment_extract" time="0.014" /><testcase classname="tests.test_ext.TestInternationalization" name="test_extract_context" time="0.010" /><testcase classname="tests.test_ext.TestScope" name="test_basic_scope_behavior" time="0.019" /><testcase classname="tests.test_ext.TestNewstyleInternationalization" name="test_trans" time="0.024" /><testcase classname="tests.test_ext.TestNewstyleInternationalization" name="test_trans_plural" time="0.012" /><testcase classname="tests.test_ext.TestNewstyleInternationalization" name="test_complex_plural" time="0.041" /><testcase classname="tests.test_ext.TestNewstyleInternationalization" name="test_trans_stringformatting" time="0.011" /><testcase classname="tests.test_ext.TestNewstyleInternationalization" name="test_newstyle_plural" time="0.011" /><testcase classname="tests.test_ext.TestNewstyleInternationalization" name="test_autoescape_support" time="0.016" /><testcase classname="tests.test_ext.TestNewstyleInternationalization" name="test_autoescape_macros" time="0.016" /><testcase classname="tests.test_ext.TestNewstyleInternationalization" name="test_num_used_twice" time="0.013" /><testcase classname="tests.test_ext.TestNewstyleInternationalization" name="test_num_called_num" time="0.013" /><testcase classname="tests.test_ext.TestNewstyleInternationalization" name="test_trans_vars" time="0.023" /><testcase classname="tests.test_ext.TestNewstyleInternationalization" name="test_novars_vars_escaping" time="0.022" /><testcase classname="tests.test_ext.TestNewstyleInternationalization" name="test_context" time="0.011" /><testcase classname="tests.test_ext.TestNewstyleInternationalization" name="test_context_plural" time="0.013" /><testcase classname="tests.test_ext.TestNewstyleInternationalization" name="test_context_block" time="0.012" /><testcase classname="tests.test_ext.TestNewstyleInternationalization" name="test_context_plural_block" time="0.013" /><testcase classname="tests.test_ext.TestAutoEscape" name="test_scoped_setting" time="0.025" /><testcase classname="tests.test_ext.TestAutoEscape" name="test_nonvolatile" time="0.025" /><testcase classname="tests.test_ext.TestAutoEscape" name="test_volatile" time="0.017" /><testcase classname="tests.test_ext.TestAutoEscape" name="test_scoping" time="0.015" /><testcase classname="tests.test_ext.TestAutoEscape" name="test_volatile_scoping" time="0.075" /><testcase classname="tests.test_ext.TestAutoEscape" name="test_overlay_scopes" time="0.035" /><testcase classname="tests.test_filters.TestFilter" name="test_filter_calling" time="0.010" /><testcase classname="tests.test_filters.TestFilter" name="test_capitalize" time="0.048" /><testcase classname="tests.test_filters.TestFilter" name="test_center" time="0.019" /><testcase classname="tests.test_filters.TestFilter" name="test_default" time="0.022" /><testcase classname="tests.test_filters.TestFilter" name="test_dictsort[-[('aa', 0), ('AB', 3), ('b', 1), ('c', 2)]]" time="0.016" /><testcase classname="tests.test_filters.TestFilter" name="test_dictsort[true-[('AB', 3), ('aa', 0), ('b', 1), ('c', 2)]]" time="0.016" /><testcase classname="tests.test_filters.TestFilter" name="test_dictsort[by=&quot;value&quot;-[('aa', 0), ('b', 1), ('c', 2), ('AB', 3)]]" time="0.017" /><testcase classname="tests.test_filters.TestFilter" name="test_dictsort[reverse=true-[('c', 2), ('b', 1), ('AB', 3), ('aa', 0)]]" time="0.015" /><testcase classname="tests.test_filters.TestFilter" name="test_batch" time="0.020" /><testcase classname="tests.test_filters.TestFilter" name="test_slice" time="0.029" /><testcase classname="tests.test_filters.TestFilter" name="test_escape" time="0.014" /><testcase classname="tests.test_filters.TestFilter" name="test_trim[None-..stays..]" time="0.015" /><testcase classname="tests.test_filters.TestFilter" name="test_trim[.-  ..stays]" time="0.012" /><testcase classname="tests.test_filters.TestFilter" name="test_trim[ .-stays]" time="0.013" /><testcase classname="tests.test_filters.TestFilter" name="test_striptags" time="0.018" /><testcase classname="tests.test_filters.TestFilter" name="test_filesizeformat" time="0.020" /><testcase classname="tests.test_filters.TestFilter" name="test_filesizeformat_issue59" time="0.040" /><testcase classname="tests.test_filters.TestFilter" name="test_first" time="0.012" /><testcase classname="tests.test_filters.TestFilter" name="test_float[42-42.0]" time="0.012" /><testcase classname="tests.test_filters.TestFilter" name="test_float[abc-0.0]" time="0.011" /><testcase classname="tests.test_filters.TestFilter" name="test_float[32.32-32.32]" time="0.012" /><testcase classname="tests.test_filters.TestFilter" name="test_float_default" time="0.014" /><testcase classname="tests.test_filters.TestFilter" name="test_format" time="0.012" /><testcase classname="tests.test_filters.TestFilter" name="test_indent" time="0.048" /><testcase classname="tests.test_filters.TestFilter" name="test_indent_markup_input" time="0.036" /><testcase classname="tests.test_filters.TestFilter" name="test_indent_width_string" time="0.012" /><testcase classname="tests.test_filters.TestFilter" name="test_int[42-42]" time="0.013" /><testcase classname="tests.test_filters.TestFilter" name="test_int[abc-0]" time="0.013" /><testcase classname="tests.test_filters.TestFilter" name="test_int[32.32-32]" time="0.013" /><testcase classname="tests.test_filters.TestFilter" name="test_int[12345678901234567890-12345678901234567890]" time="0.013" /><testcase classname="tests.test_filters.TestFilter" name="test_int_base[0x4d32-16-19762]" time="0.014" /><testcase classname="tests.test_filters.TestFilter" name="test_int_base[011-8-9]" time="0.014" /><testcase classname="tests.test_filters.TestFilter" name="test_int_base[0x33Z-16-0]" time="0.014" /><testcase classname="tests.test_filters.TestFilter" name="test_int_default" time="0.012" /><testcase classname="tests.test_filters.TestFilter" name="test_int_special_method" time="0.011" /><testcase classname="tests.test_filters.TestFilter" name="test_join" time="0.033" /><testcase classname="tests.test_filters.TestFilter" name="test_join_attribute" time="0.014" /><testcase classname="tests.test_filters.TestFilter" name="test_last" time="0.012" /><testcase classname="tests.test_filters.TestFilter" name="test_length" time="0.010" /><testcase classname="tests.test_filters.TestFilter" name="test_lower" time="0.010" /><testcase classname="tests.test_filters.TestFilter" name="test_items" time="0.013" /><testcase classname="tests.test_filters.TestFilter" name="test_items_undefined" time="0.011" /><testcase classname="tests.test_filters.TestFilter" name="test_pprint" time="0.042" /><testcase classname="tests.test_filters.TestFilter" name="test_random" time="0.015" /><testcase classname="tests.test_filters.TestFilter" name="test_reverse" time="0.014" /><testcase classname="tests.test_filters.TestFilter" name="test_string" time="0.011" /><testcase classname="tests.test_filters.TestFilter" name="test_title" time="0.056" /><testcase classname="tests.test_filters.TestFilter" name="test_truncate" time="0.018" /><testcase classname="tests.test_filters.TestFilter" name="test_truncate_very_short" time="0.025" /><testcase classname="tests.test_filters.TestFilter" name="test_truncate_end_length" time="0.011" /><testcase classname="tests.test_filters.TestFilter" name="test_upper" time="0.010" /><testcase classname="tests.test_filters.TestFilter" name="test_urlize" time="0.031" /><testcase classname="tests.test_filters.TestFilter" name="test_urlize_rel_policy" time="0.010" /><testcase classname="tests.test_filters.TestFilter" name="test_urlize_target_parameter" time="0.013" /><testcase classname="tests.test_filters.TestFilter" name="test_urlize_extra_schemes_parameter" time="0.013" /><testcase classname="tests.test_filters.TestFilter" name="test_wordcount" time="0.018" /><testcase classname="tests.test_filters.TestFilter" name="test_block" time="0.012" /><testcase classname="tests.test_filters.TestFilter" name="test_chaining" time="0.012" /><testcase classname="tests.test_filters.TestFilter" name="test_sum" time="0.013" /><testcase classname="tests.test_filters.TestFilter" name="test_sum_attributes" time="0.013" /><testcase classname="tests.test_filters.TestFilter" name="test_sum_attributes_nested" time="0.012" /><testcase classname="tests.test_filters.TestFilter" name="test_sum_attributes_tuple" time="0.014" /><testcase classname="tests.test_filters.TestFilter" name="test_abs" time="0.012" /><testcase classname="tests.test_filters.TestFilter" name="test_round_positive" time="0.016" /><testcase classname="tests.test_filters.TestFilter" name="test_round_negative" time="0.016" /><testcase classname="tests.test_filters.TestFilter" name="test_xmlattr" time="0.018" /><testcase classname="tests.test_filters.TestFilter" name="test_sort1" time="0.013" /><testcase classname="tests.test_filters.TestFilter" name="test_sort2" time="0.016" /><testcase classname="tests.test_filters.TestFilter" name="test_sort3" time="0.011" /><testcase classname="tests.test_filters.TestFilter" name="test_sort4" time="0.015" /><testcase classname="tests.test_filters.TestFilter" name="test_sort5" time="0.014" /><testcase classname="tests.test_filters.TestFilter" name="test_sort6" time="0.015" /><testcase classname="tests.test_filters.TestFilter" name="test_sort7" time="0.014" /><testcase classname="tests.test_filters.TestFilter" name="test_sort8" time="0.014" /><testcase classname="tests.test_filters.TestFilter" name="test_unique" time="0.016" /><testcase classname="tests.test_filters.TestFilter" name="test_unique_case_sensitive" time="0.016" /><testcase classname="tests.test_filters.TestFilter" name="test_unique_attribute" time="0.014" /><testcase classname="tests.test_filters.TestFilter" name="test_min_max[{{ [&quot;a&quot;, &quot;B&quot;]|min }}-a]" time="0.013" /><testcase classname="tests.test_filters.TestFilter" name="test_min_max[{{ [&quot;a&quot;, &quot;B&quot;]|min(case_sensitive=true) }}-B]" time="0.014" /><testcase classname="tests.test_filters.TestFilter" name="test_min_max[{{ []|min }}-]" time="0.012" /><testcase classname="tests.test_filters.TestFilter" name="test_min_max[{{ [&quot;a&quot;, &quot;B&quot;]|max }}-B]" time="0.013" /><testcase classname="tests.test_filters.TestFilter" name="test_min_max[{{ [&quot;a&quot;, &quot;B&quot;]|max(case_sensitive=true) }}-a]" time="0.014" /><testcase classname="tests.test_filters.TestFilter" name="test_min_max[{{ []|max }}-]" time="0.012" /><testcase classname="tests.test_filters.TestFilter" name="test_min_max_attribute[min-1]" time="0.015" /><testcase classname="tests.test_filters.TestFilter" name="test_min_max_attribute[max-9]" time="0.015" /><testcase classname="tests.test_filters.TestFilter" name="test_groupby" time="0.047" /><testcase classname="tests.test_filters.TestFilter" name="test_groupby_tuple_index" time="0.023" /><testcase classname="tests.test_filters.TestFilter" name="test_groupby_multidot" time="0.021" /><testcase classname="tests.test_filters.TestFilter" name="test_groupby_default" time="0.023" /><testcase classname="tests.test_filters.TestFilter" name="test_groupby_case[False-a: 1, 3\nb: 2\n]" time="0.022" /><testcase classname="tests.test_filters.TestFilter" name="test_groupby_case[True-A: 3\na: 1\nb: 2\n]" time="0.020" /><testcase classname="tests.test_filters.TestFilter" name="test_filtertag" time="0.014" /><testcase classname="tests.test_filters.TestFilter" name="test_replace" time="0.034" /><testcase classname="tests.test_filters.TestFilter" name="test_forceescape" time="0.012" /><testcase classname="tests.test_filters.TestFilter" name="test_safe" time="0.014" /><testcase classname="tests.test_filters.TestFilter" name="test_urlencode[Hello, world!-Hello%2C%20world%21]" time="0.013" /><testcase classname="tests.test_filters.TestFilter" name="test_urlencode[Hello, world\u203d-Hello%2C%20world%E2%80%BD]" time="0.012" /><testcase classname="tests.test_filters.TestFilter" name="test_urlencode[value2-f=1]" time="0.014" /><testcase classname="tests.test_filters.TestFilter" name="test_urlencode[value3-f=1&amp;amp;z=2]" time="0.013" /><testcase classname="tests.test_filters.TestFilter" name="test_urlencode[value4-%E2%80%BD=1]" time="0.013" /><testcase classname="tests.test_filters.TestFilter" name="test_urlencode[value5-0=1]" time="0.012" /><testcase classname="tests.test_filters.TestFilter" name="test_urlencode[value6-a+b%2Fc=a+b%2Fc]" time="0.011" /><testcase classname="tests.test_filters.TestFilter" name="test_urlencode[a b/c-a%20b/c]" time="0.011" /><testcase classname="tests.test_filters.TestFilter" name="test_simple_map" time="0.014" /><testcase classname="tests.test_filters.TestFilter" name="test_map_sum" time="0.015" /><testcase classname="tests.test_filters.TestFilter" name="test_attribute_map" time="0.015" /><testcase classname="tests.test_filters.TestFilter" name="test_empty_map" time="0.013" /><testcase classname="tests.test_filters.TestFilter" name="test_map_default" time="0.035" /><testcase classname="tests.test_filters.TestFilter" name="test_simple_select" time="0.016" /><testcase classname="tests.test_filters.TestFilter" name="test_bool_select" time="0.016" /><testcase classname="tests.test_filters.TestFilter" name="test_simple_reject" time="0.015" /><testcase classname="tests.test_filters.TestFilter" name="test_bool_reject" time="0.016" /><testcase classname="tests.test_filters.TestFilter" name="test_simple_select_attr" time="0.017" /><testcase classname="tests.test_filters.TestFilter" name="test_simple_reject_attr" time="0.016" /><testcase classname="tests.test_filters.TestFilter" name="test_func_select_attr" time="0.017" /><testcase classname="tests.test_filters.TestFilter" name="test_func_reject_attr" time="0.017" /><testcase classname="tests.test_filters.TestFilter" name="test_json_dump" time="0.012" /><testcase classname="tests.test_filters.TestFilter" name="test_wordwrap" time="0.031" /><testcase classname="tests.test_filters.TestFilter" name="test_filter_undefined" time="0.033" /><testcase classname="tests.test_filters.TestFilter" name="test_filter_undefined_in_if" time="0.017" /><testcase classname="tests.test_filters.TestFilter" name="test_filter_undefined_in_elif" time="0.020" /><testcase classname="tests.test_filters.TestFilter" name="test_filter_undefined_in_else" time="0.018" /><testcase classname="tests.test_filters.TestFilter" name="test_filter_undefined_in_nested_if" time="0.020" /><testcase classname="tests.test_filters.TestFilter" name="test_filter_undefined_in_condexpr" time="0.025" /><testcase classname="tests.test_idtracking" name="test_basics" time="0.005" /><testcase classname="tests.test_idtracking" name="test_complex" time="0.007" /><testcase classname="tests.test_idtracking" name="test_if_branching_stores" time="0.005" /><testcase classname="tests.test_idtracking" name="test_if_branching_stores_undefined" time="0.005" /><testcase classname="tests.test_idtracking" name="test_if_branching_multi_scope" time="0.005" /><testcase classname="tests.test_imports.TestImports" name="test_context_imports" time="0.055" /><testcase classname="tests.test_imports.TestImports" name="test_import_needs_name" time="0.018" /><testcase classname="tests.test_imports.TestImports" name="test_no_trailing_comma" time="0.015" /><testcase classname="tests.test_imports.TestImports" name="test_trailing_comma_with_context" time="0.032" /><testcase classname="tests.test_imports.TestImports" name="test_exports" time="0.046" /><testcase classname="tests.test_imports.TestImports" name="test_not_exported" time="0.023" /><testcase classname="tests.test_imports.TestImports" name="test_import_with_globals" time="0.025" /><testcase classname="tests.test_imports.TestImports" name="test_import_with_globals_override" time="0.021" /><testcase classname="tests.test_imports.TestImports" name="test_from_import_with_globals" time="0.018" /><testcase classname="tests.test_imports.TestIncludes" name="test_context_include" time="0.021" /><testcase classname="tests.test_imports.TestIncludes" name="test_choice_includes" time="0.050" /><testcase classname="tests.test_imports.TestIncludes" name="test_include_ignoring_missing" time="0.026" /><testcase classname="tests.test_imports.TestIncludes" name="test_context_include_with_overrides" time="0.018" /><testcase classname="tests.test_imports.TestIncludes" name="test_unoptimized_scopes" time="0.022" /><testcase classname="tests.test_imports.TestIncludes" name="test_import_from_with_context" time="0.017" /><testcase classname="tests.test_inheritance.TestInheritance" name="test_layout" time="0.016" /><testcase classname="tests.test_inheritance.TestInheritance" name="test_level1" time="0.019" /><testcase classname="tests.test_inheritance.TestInheritance" name="test_level2" time="0.316" /><testcase classname="tests.test_inheritance.TestInheritance" name="test_level3" time="0.027" /><testcase classname="tests.test_inheritance.TestInheritance" name="test_level4" time="0.028" /><testcase classname="tests.test_inheritance.TestInheritance" name="test_super" time="0.029" /><testcase classname="tests.test_inheritance.TestInheritance" name="test_working" time="0.015" /><testcase classname="tests.test_inheritance.TestInheritance" name="test_reuse_blocks" time="0.015" /><testcase classname="tests.test_inheritance.TestInheritance" name="test_preserve_blocks" time="0.020" /><testcase classname="tests.test_inheritance.TestInheritance" name="test_dynamic_inheritance" time="0.019" /><testcase classname="tests.test_inheritance.TestInheritance" name="test_multi_inheritance" time="0.021" /><testcase classname="tests.test_inheritance.TestInheritance" name="test_scoped_block" time="0.020" /><testcase classname="tests.test_inheritance.TestInheritance" name="test_super_in_scoped_block" time="0.027" /><testcase classname="tests.test_inheritance.TestInheritance" name="test_scoped_block_after_inheritance" time="0.038" /><testcase classname="tests.test_inheritance.TestInheritance" name="test_level1_required" time="0.083" /><testcase classname="tests.test_inheritance.TestInheritance" name="test_level2_required" time="0.019" /><testcase classname="tests.test_inheritance.TestInheritance" name="test_level3_required" time="0.023" /><testcase classname="tests.test_inheritance.TestInheritance" name="test_invalid_required" time="0.019" /><testcase classname="tests.test_inheritance.TestInheritance" name="test_required_with_scope" time="0.031" /><testcase classname="tests.test_inheritance.TestInheritance" name="test_duplicate_required_or_scoped" time="0.019" /><testcase classname="tests.test_inheritance.TestBugFix" name="test_fixed_macro_scoping_bug" time="0.032" /><testcase classname="tests.test_inheritance.TestBugFix" name="test_double_extends" time="0.025" /><testcase classname="tests.test_lexnparse.TestTokenStream" name="test_simple" time="0.006" /><testcase classname="tests.test_lexnparse.TestTokenStream" name="test_iter" time="0.006" /><testcase classname="tests.test_lexnparse.TestLexer" name="test_raw1" time="0.010" /><testcase classname="tests.test_lexnparse.TestLexer" name="test_raw2" time="0.009" /><testcase classname="tests.test_lexnparse.TestLexer" name="test_raw3" time="0.011" /><testcase classname="tests.test_lexnparse.TestLexer" name="test_raw4" time="0.009" /><testcase classname="tests.test_lexnparse.TestLexer" name="test_balancing" time="0.017" /><testcase classname="tests.test_lexnparse.TestLexer" name="test_comments" time="0.016" /><testcase classname="tests.test_lexnparse.TestLexer" name="test_string_escapes" time="0.045" /><testcase classname="tests.test_lexnparse.TestLexer" name="test_bytefallback" time="0.012" /><testcase classname="tests.test_lexnparse.TestLexer" name="test_operators" time="0.012" /><testcase classname="tests.test_lexnparse.TestLexer" name="test_normalizing" time="0.018" /><testcase classname="tests.test_lexnparse.TestLexer" name="test_trailing_newline" time="0.026" /><testcase classname="tests.test_lexnparse.TestLexer" name="test_name[foo-True]" time="0.010" /><testcase classname="tests.test_lexnparse.TestLexer" name="test_name[f\xf6\xf6-True]" time="0.010" /><testcase classname="tests.test_lexnparse.TestLexer" name="test_name[\u304d-True]" time="0.011" /><testcase classname="tests.test_lexnparse.TestLexer" name="test_name[_-True]" time="0.011" /><testcase classname="tests.test_lexnparse.TestLexer" name="test_name[1a-False]" time="0.010" /><testcase classname="tests.test_lexnparse.TestLexer" name="test_name[a--False]" time="0.008" /><testcase classname="tests.test_lexnparse.TestLexer" name="test_name[\U0001f40da-False]" time="0.009" /><testcase classname="tests.test_lexnparse.TestLexer" name="test_name[a\U0001f40d\U0001f40d-False]" time="0.008" /><testcase classname="tests.test_lexnparse.TestLexer" name="test_name[\u1885-True]" time="0.011" /><testcase classname="tests.test_lexnparse.TestLexer" name="test_name[\u1886-True]" time="0.011" /><testcase classname="tests.test_lexnparse.TestLexer" name="test_name[\u2118-True]" time="0.011" /><testcase classname="tests.test_lexnparse.TestLexer" name="test_name[\u212e-True]" time="0.010" /><testcase classname="tests.test_lexnparse.TestLexer" name="test_name[\xb7-False]" time="0.009" /><testcase classname="tests.test_lexnparse.TestLexer" name="test_name[a\xb7-True]" time="0.011" /><testcase classname="tests.test_lexnparse.TestLexer" name="test_lineno_with_strip" time="0.006" /><testcase classname="tests.test_lexnparse.TestParser" name="test_php_syntax" time="0.017" /><testcase classname="tests.test_lexnparse.TestParser" name="test_erb_syntax" time="0.017" /><testcase classname="tests.test_lexnparse.TestParser" name="test_comment_syntax" time="0.014" /><testcase classname="tests.test_lexnparse.TestParser" name="test_balancing" time="0.011" /><testcase classname="tests.test_lexnparse.TestParser" name="test_start_comment" time="0.015" /><testcase classname="tests.test_lexnparse.TestParser" name="test_line_syntax" time="0.027" /><testcase classname="tests.test_lexnparse.TestParser" name="test_line_syntax_priority" time="0.024" /><testcase classname="tests.test_lexnparse.TestParser" name="test_error_messages" time="0.028" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_call" time="0.019" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_slicing" time="0.021" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_attr" time="0.013" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_subscript" time="0.014" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_tuple" time="0.013" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_math" time="0.012" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_div" time="0.013" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_unary" time="0.012" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_concat" time="0.012" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_compare[1-&gt;-0]" time="0.012" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_compare[1-&gt;=-1]" time="0.013" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_compare[2-&lt;-3]" time="0.012" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_compare[3-&lt;=-4]" time="0.012" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_compare[4-==-4]" time="0.012" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_compare[4-!=-5]" time="0.011" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_compare_parens" time="0.011" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_compare_compound[{{ 4 &lt; 2 &lt; 3 }}-False]" time="0.010" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_compare_compound[{{ a &lt; b &lt; c }}-False]" time="0.013" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_compare_compound[{{ 4 &gt; 2 &gt; 3 }}-False]" time="0.012" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_compare_compound[{{ a &gt; b &gt; c }}-False]" time="0.013" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_compare_compound[{{ 4 &gt; 2 &lt; 3 }}-True]" time="0.012" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_compare_compound[{{ a &gt; b &lt; c }}-True]" time="0.013" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_inop" time="0.014" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_collection_literal[[]]" time="0.010" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_collection_literal[{}]" time="0.010" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_collection_literal[()]" time="0.033" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_numeric_literal[1-1]" time="0.010" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_numeric_literal[123-123]" time="0.011" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_numeric_literal[12_34_56-123456]" time="0.010" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_numeric_literal[1.2-1.2]" time="0.011" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_numeric_literal[34.56-34.56]" time="0.010" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_numeric_literal[3_4.5_6-34.56]" time="0.010" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_numeric_literal[1e0-1.0]" time="0.010" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_numeric_literal[10e1-100.0]" time="0.010" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_numeric_literal[2.5e100-2.5e+100]" time="0.011" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_numeric_literal[2.5e+100-2.5e+100]" time="0.010" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_numeric_literal[25.6e-10-2.56e-09]" time="0.011" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_numeric_literal[1_2.3_4e5_6-1.234e+57]" time="0.010" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_numeric_literal[0-0]" time="0.010" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_numeric_literal[0_00-0]" time="0.009" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_numeric_literal[0b1001_1111-159]" time="0.011" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_numeric_literal[0o123-83]" time="0.010" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_numeric_literal[0o1_23-83]" time="0.012" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_numeric_literal[0x123abc-1194684]" time="0.012" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_numeric_literal[0x12_3abc-1194684]" time="0.021" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_bool" time="0.047" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_grouping" time="0.024" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_django_attr" time="0.048" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_conditional_expression" time="0.018" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_short_conditional_expression" time="0.026" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_filter_priority" time="0.013" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_function_calls" time="0.049" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_tuple_expr" time="0.046" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_trailing_comma" time="0.014" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_block_end_name" time="0.040" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_constant_casing" time="0.022" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_test_chaining" time="0.014" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_string_concatenation" time="0.009" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_notin" time="0.011" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_operator_precedence" time="0.010" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_implicit_subscribed_tuple" time="0.011" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_raw2" time="0.007" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_const" time="0.012" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_neg_filter_priority" time="0.008" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_const_assign" time="0.009" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_localset" time="0.014" /><testcase classname="tests.test_lexnparse.TestSyntax" name="test_parse_unary" time="0.018" /><testcase classname="tests.test_lexnparse.TestLstripBlocks" name="test_lstrip" time="0.011" /><testcase classname="tests.test_lexnparse.TestLstripBlocks" name="test_lstrip_trim" time="0.011" /><testcase classname="tests.test_lexnparse.TestLstripBlocks" name="test_no_lstrip" time="0.011" /><testcase classname="tests.test_lexnparse.TestLstripBlocks" name="test_lstrip_blocks_false_with_no_lstrip" time="0.014" /><testcase classname="tests.test_lexnparse.TestLstripBlocks" name="test_lstrip_endline" time="0.011" /><testcase classname="tests.test_lexnparse.TestLstripBlocks" name="test_lstrip_inline" time="0.010" /><testcase classname="tests.test_lexnparse.TestLstripBlocks" name="test_lstrip_nested" time="0.013" /><testcase classname="tests.test_lexnparse.TestLstripBlocks" name="test_lstrip_left_chars" time="0.010" /><testcase classname="tests.test_lexnparse.TestLstripBlocks" name="test_lstrip_embeded_strings" time="0.010" /><testcase classname="tests.test_lexnparse.TestLstripBlocks" name="test_lstrip_preserve_leading_newlines" time="0.010" /><testcase classname="tests.test_lexnparse.TestLstripBlocks" name="test_lstrip_comment" time="0.008" /><testcase classname="tests.test_lexnparse.TestLstripBlocks" name="test_lstrip_angle_bracket_simple" time="0.011" /><testcase classname="tests.test_lexnparse.TestLstripBlocks" name="test_lstrip_angle_bracket_comment" time="0.010" /><testcase classname="tests.test_lexnparse.TestLstripBlocks" name="test_lstrip_angle_bracket" time="0.013" /><testcase classname="tests.test_lexnparse.TestLstripBlocks" name="test_lstrip_angle_bracket_compact" time="0.012" /><testcase classname="tests.test_lexnparse.TestLstripBlocks" name="test_lstrip_blocks_outside_with_new_line" time="0.015" /><testcase classname="tests.test_lexnparse.TestLstripBlocks" name="test_lstrip_trim_blocks_outside_with_new_line" time="0.016" /><testcase classname="tests.test_lexnparse.TestLstripBlocks" name="test_lstrip_blocks_inside_with_new_line" time="0.015" /><testcase classname="tests.test_lexnparse.TestLstripBlocks" name="test_lstrip_trim_blocks_inside_with_new_line" time="0.015" /><testcase classname="tests.test_lexnparse.TestLstripBlocks" name="test_lstrip_blocks_without_new_line" time="0.041" /><testcase classname="tests.test_lexnparse.TestLstripBlocks" name="test_lstrip_trim_blocks_without_new_line" time="0.013" /><testcase classname="tests.test_lexnparse.TestLstripBlocks" name="test_lstrip_blocks_consume_after_without_new_line" time="0.014" /><testcase classname="tests.test_lexnparse.TestLstripBlocks" name="test_lstrip_trim_blocks_consume_before_without_new_line" time="0.014" /><testcase classname="tests.test_lexnparse.TestLstripBlocks" name="test_lstrip_trim_blocks_comment" time="0.010" /><testcase classname="tests.test_lexnparse.TestLstripBlocks" name="test_lstrip_trim_blocks_raw" time="0.011" /><testcase classname="tests.test_lexnparse.TestLstripBlocks" name="test_php_syntax_with_manual" time="0.015" /><testcase classname="tests.test_lexnparse.TestLstripBlocks" name="test_php_syntax" time="0.015" /><testcase classname="tests.test_lexnparse.TestLstripBlocks" name="test_php_syntax_compact" time="0.013" /><testcase classname="tests.test_lexnparse.TestLstripBlocks" name="test_erb_syntax" time="0.013" /><testcase classname="tests.test_lexnparse.TestLstripBlocks" name="test_erb_syntax_with_manual" time="0.012" /><testcase classname="tests.test_lexnparse.TestLstripBlocks" name="test_erb_syntax_no_lstrip" time="0.013" /><testcase classname="tests.test_lexnparse.TestLstripBlocks" name="test_comment_syntax" time="0.014" /><testcase classname="tests.test_lexnparse.TestTrimBlocks" name="test_trim" time="0.012" /><testcase classname="tests.test_lexnparse.TestTrimBlocks" name="test_no_trim" time="0.012" /><testcase classname="tests.test_lexnparse.TestTrimBlocks" name="test_no_trim_outer" time="0.011" /><testcase classname="tests.test_lexnparse.TestTrimBlocks" name="test_lstrip_no_trim" time="0.012" /><testcase classname="tests.test_lexnparse.TestTrimBlocks" name="test_trim_blocks_false_with_no_trim" time="0.029" /><testcase classname="tests.test_lexnparse.TestTrimBlocks" name="test_trim_nested" time="0.013" /><testcase classname="tests.test_lexnparse.TestTrimBlocks" name="test_no_trim_nested" time="0.014" /><testcase classname="tests.test_lexnparse.TestTrimBlocks" name="test_comment_trim" time="0.009" /><testcase classname="tests.test_lexnparse.TestTrimBlocks" name="test_comment_no_trim" time="0.009" /><testcase classname="tests.test_lexnparse.TestTrimBlocks" name="test_multiple_comment_trim_lstrip" time="0.010" /><testcase classname="tests.test_lexnparse.TestTrimBlocks" name="test_multiple_comment_no_trim_lstrip" time="0.010" /><testcase classname="tests.test_lexnparse.TestTrimBlocks" name="test_raw_trim_lstrip" time="0.010" /><testcase classname="tests.test_lexnparse.TestTrimBlocks" name="test_raw_no_trim_lstrip" time="0.014" /><testcase classname="tests.test_lexnparse.TestTrimBlocks" name="test_no_trim_angle_bracket" time="0.014" /><testcase classname="tests.test_lexnparse.TestTrimBlocks" name="test_no_trim_php_syntax" time="0.016" /><testcase classname="tests.test_loader.TestLoaders" name="test_dict_loader" time="0.012" /><testcase classname="tests.test_loader.TestLoaders" name="test_package_loader" time="0.013" /><testcase classname="tests.test_loader.TestLoaders" name="test_filesystem_loader_overlapping_names" time="0.013" /><testcase classname="tests.test_loader.TestLoaders" name="test_choice_loader" time="0.016" /><testcase classname="tests.test_loader.TestLoaders" name="test_function_loader" time="0.010" /><testcase classname="tests.test_loader.TestLoaders" name="test_prefix_loader" time="0.013" /><testcase classname="tests.test_loader.TestLoaders" name="test_caching" time="0.009" /><testcase classname="tests.test_loader.TestLoaders" name="test_no_cache" time="0.037" /><testcase classname="tests.test_loader.TestLoaders" name="test_limited_size_cache" time="0.012" /><testcase classname="tests.test_loader.TestLoaders" name="test_cache_loader_change" time="0.010" /><testcase classname="tests.test_loader.TestLoaders" name="test_dict_loader_cache_invalidates" time="0.009" /><testcase classname="tests.test_loader.TestLoaders" name="test_split_template_path" time="0.005" /><testcase classname="tests.test_loader.TestFileSystemLoader" name="test_searchpath_as_str" time="0.013" /><testcase classname="tests.test_loader.TestFileSystemLoader" name="test_searchpath_as_pathlib" time="0.012" /><testcase classname="tests.test_loader.TestFileSystemLoader" name="test_searchpath_as_list_including_pathlib" time="0.012" /><testcase classname="tests.test_loader.TestFileSystemLoader" name="test_caches_template_based_on_mtime" time="0.010" /><testcase classname="tests.test_loader.TestFileSystemLoader" name="test_uses_specified_encoding[utf-8-\u6587\u5b57\u5316\u3051]" time="0.010" /><testcase classname="tests.test_loader.TestFileSystemLoader" name="test_uses_specified_encoding[iso-8859-1-\xe6\x96\x87\xe5\xad\x97\xe5\x8c\x96\xe3\x81\x91]" time="0.011" /><testcase classname="tests.test_loader.TestFileSystemLoader" name="test_filename_normpath" time="0.008" /><testcase classname="tests.test_loader.TestModuleLoader" name="test_log" time="0.040" /><testcase classname="tests.test_loader.TestModuleLoader" name="test_deflated_zip_compile" time="0.045" /><testcase classname="tests.test_loader.TestModuleLoader" name="test_stored_zip_compile" time="0.042" /><testcase classname="tests.test_loader.TestModuleLoader" name="test_filesystem_compile" time="0.044" /><testcase classname="tests.test_loader.TestModuleLoader" name="test_weak_references" time="0.372" /><testcase classname="tests.test_loader.TestModuleLoader" name="test_choice_loader" time="0.038" /><testcase classname="tests.test_loader.TestModuleLoader" name="test_prefix_loader" time="0.035" /><testcase classname="tests.test_loader.TestModuleLoader" name="test_path_as_pathlib" time="0.040" /><testcase classname="tests.test_loader.TestModuleLoader" name="test_supports_pathlib_in_list_of_paths" time="0.043" /><testcase classname="tests.test_loader" name="test_package_dir_source[foo/test.html-FOO]" time="0.010" /><testcase classname="tests.test_loader" name="test_package_dir_source[test.html-BAR]" time="0.010" /><testcase classname="tests.test_loader" name="test_package_dir_list" time="0.008" /><testcase classname="tests.test_loader" name="test_package_file_source[foo/test.html-FOO]" time="0.010" /><testcase classname="tests.test_loader" name="test_package_file_source[test.html-BAR]" time="0.010" /><testcase classname="tests.test_loader" name="test_package_file_list" time="0.008" /><testcase classname="tests.test_loader" name="test_package_zip_source[foo/test.html-FOO]" time="0.012" /><testcase classname="tests.test_loader" name="test_package_zip_source[test.html-BAR]" time="0.010" /><testcase classname="tests.test_loader" name="test_package_zip_list" time="0.009" /><testcase classname="tests.test_loader" name="test_package_zip_omit_curdir[]" time="0.009" /><testcase classname="tests.test_loader" name="test_package_zip_omit_curdir[.]" time="0.008" /><testcase classname="tests.test_loader" name="test_package_zip_omit_curdir[./]" time="0.011" /><testcase classname="tests.test_loader" name="test_pep_451_import_hook" time="0.005" /><testcase classname="tests.test_nativetypes" name="test_is_defined_native_return" time="0.010" /><testcase classname="tests.test_nativetypes" name="test_undefined_native_return" time="0.010" /><testcase classname="tests.test_nativetypes" name="test_adding_undefined_native_return" time="0.012" /><testcase classname="tests.test_nativetypes" name="test_cast_int" time="0.011" /><testcase classname="tests.test_nativetypes" name="test_list_add" time="0.010" /><testcase classname="tests.test_nativetypes" name="test_multi_expression_add" time="0.011" /><testcase classname="tests.test_nativetypes" name="test_loops" time="0.012" /><testcase classname="tests.test_nativetypes" name="test_loops_with_ints" time="0.011" /><testcase classname="tests.test_nativetypes" name="test_loop_look_alike" time="0.011" /><testcase classname="tests.test_nativetypes" name="test_booleans[{{ value }}-True]" time="0.011" /><testcase classname="tests.test_nativetypes" name="test_booleans[{{ value }}-False]" time="0.012" /><testcase classname="tests.test_nativetypes" name="test_booleans[{{ 1 == 1 }}-True]" time="0.012" /><testcase classname="tests.test_nativetypes" name="test_booleans[{{ 2 + 2 == 5 }}-False]" time="0.012" /><testcase classname="tests.test_nativetypes" name="test_booleans[{{ None is none }}-True]" time="0.011" /><testcase classname="tests.test_nativetypes" name="test_booleans[{{ '' == None }}-False]" time="0.012" /><testcase classname="tests.test_nativetypes" name="test_variable_dunder" time="0.010" /><testcase classname="tests.test_nativetypes" name="test_constant_dunder" time="0.010" /><testcase classname="tests.test_nativetypes" name="test_constant_dunder_to_string" time="0.012" /><testcase classname="tests.test_nativetypes" name="test_string_literal_var" time="0.011" /><testcase classname="tests.test_nativetypes" name="test_string_top_level" time="0.009" /><testcase classname="tests.test_nativetypes" name="test_tuple_of_variable_strings" time="0.013" /><testcase classname="tests.test_nativetypes" name="test_concat_strings_with_quotes" time="0.011" /><testcase classname="tests.test_nativetypes" name="test_no_intermediate_eval" time="0.010" /><testcase classname="tests.test_nativetypes" name="test_spontaneous_env" time="0.009" /><testcase classname="tests.test_nativetypes" name="test_leading_spaces" time="0.010" /><testcase classname="tests.test_nativetypes" name="test_macro" time="0.016" /><testcase classname="tests.test_nodes" name="test_template_hash" time="0.006" /><testcase classname="tests.test_pickle" name="test_environment" time="0.074" /><testcase classname="tests.test_regression.TestCorner" name="test_assigned_scoping" time="0.037" /><testcase classname="tests.test_regression.TestCorner" name="test_closure_scoping" time="0.044" /><testcase classname="tests.test_regression.TestBug" name="test_keyword_folding" time="0.011" /><testcase classname="tests.test_regression.TestBug" name="test_extends_output_bugs" time="0.023" /><testcase classname="tests.test_regression.TestBug" name="test_urlize_filter_escaping" time="0.010" /><testcase classname="tests.test_regression.TestBug" name="test_urlize_filter_closing_punctuation" time="0.012" /><testcase classname="tests.test_regression.TestBug" name="test_loop_call_loop" time="0.026" /><testcase classname="tests.test_regression.TestBug" name="test_weird_inline_comment" time="0.011" /><testcase classname="tests.test_regression.TestBug" name="test_old_macro_loop_scoping_bug" time="0.018" /><testcase classname="tests.test_regression.TestBug" name="test_partial_conditional_assignments" time="0.014" /><testcase classname="tests.test_regression.TestBug" name="test_stacked_locals_scoping_bug" time="0.057" /><testcase classname="tests.test_regression.TestBug" name="test_stacked_locals_scoping_bug_twoframe" time="0.021" /><testcase classname="tests.test_regression.TestBug" name="test_call_with_args" time="0.032" /><testcase classname="tests.test_regression.TestBug" name="test_empty_if_condition_fails" time="0.013" /><testcase classname="tests.test_regression.TestBug" name="test_recursive_loop_compile" time="0.043" /><testcase classname="tests.test_regression.TestBug" name="test_else_loop_bug" time="0.020" /><testcase classname="tests.test_regression.TestBug" name="test_correct_prefix_loader_name" time="0.006" /><testcase classname="tests.test_regression.TestBug" name="test_pass_context_callable_class" time="0.011" /><testcase classname="tests.test_regression.TestBug" name="test_block_set_with_extends" time="0.018" /><testcase classname="tests.test_regression.TestBug" name="test_nested_for_else" time="0.017" /><testcase classname="tests.test_regression.TestBug" name="test_macro_var_bug" time="0.020" /><testcase classname="tests.test_regression.TestBug" name="test_macro_var_bug_advanced" time="0.023" /><testcase classname="tests.test_regression.TestBug" name="test_callable_defaults" time="0.021" /><testcase classname="tests.test_regression.TestBug" name="test_macro_escaping" time="0.013" /><testcase classname="tests.test_regression.TestBug" name="test_macro_scoping" time="0.031" /><testcase classname="tests.test_regression.TestBug" name="test_scopes_and_blocks" time="0.033" /><testcase classname="tests.test_regression.TestBug" name="test_scopes_and_include" time="0.016" /><testcase classname="tests.test_regression.TestBug" name="test_caller_scoping" time="0.030" /><testcase classname="tests.test_regression.TestBug" name="test_variable_reuse" time="0.027" /><testcase classname="tests.test_regression.TestBug" name="test_double_caller" time="0.039" /><testcase classname="tests.test_regression.TestBug" name="test_double_caller_no_default" time="0.026" /><testcase classname="tests.test_regression.TestBug" name="test_macro_blocks" time="0.014" /><testcase classname="tests.test_regression.TestBug" name="test_scoped_block" time="0.015" /><testcase classname="tests.test_regression.TestBug" name="test_recursive_loop_filter" time="0.020" /><testcase classname="tests.test_regression.TestBug" name="test_empty_if" time="0.012" /><testcase classname="tests.test_regression.TestBug" name="test_subproperty_if" time="0.015" /><testcase classname="tests.test_regression.TestBug" name="test_set_and_include" time="0.017" /><testcase classname="tests.test_regression.TestBug" name="test_loop_include" time="0.018" /><testcase classname="tests.test_regression.TestBug" name="test_grouper_repr" time="0.004" /><testcase classname="tests.test_regression.TestBug" name="test_custom_context" time="0.016" /><testcase classname="tests.test_regression.TestBug" name="test_recursive_loop_bug" time="0.015" /><testcase classname="tests.test_regression.TestBug" name="test_markup_and_chainable_undefined" time="0.004" /><testcase classname="tests.test_regression.TestBug" name="test_scoped_block_loop_vars" time="0.023" /><testcase classname="tests.test_regression.TestBug" name="test_pass_context_loop_vars" time="0.025" /><testcase classname="tests.test_regression.TestBug" name="test_pass_context_scoped_loop_vars" time="0.023" /><testcase classname="tests.test_regression.TestBug" name="test_pass_context_in_blocks" time="0.015" /><testcase classname="tests.test_regression.TestBug" name="test_pass_context_block_and_loop" time="0.025" /><testcase classname="tests.test_regression.TestBug" name="test_cached_extends[extends]" time="0.018" /><testcase classname="tests.test_regression.TestBug" name="test_cached_extends[include]" time="0.016" /><testcase classname="tests.test_regression.TestBug" name="test_nested_loop_scoping" time="0.014" /><testcase classname="tests.test_regression" name="test_unicode_whitespace[\x0c]" time="0.009" /><testcase classname="tests.test_regression" name="test_unicode_whitespace[\x85]" time="0.010" /><testcase classname="tests.test_runtime" name="test_loop_idx" time="0.017" /><testcase classname="tests.test_runtime" name="test_loop_idx0" time="0.017" /><testcase classname="tests.test_runtime" name="test_loopcontext0" time="0.004" /><testcase classname="tests.test_runtime" name="test_loopcontext1" time="0.004" /><testcase classname="tests.test_runtime" name="test_loopcontext2" time="0.004" /><testcase classname="tests.test_runtime" name="test_iterator_not_advanced_early" time="0.015" /><testcase classname="tests.test_runtime" name="test_mock_not_pass_arg_marker" time="0.010" /><testcase classname="tests.test_security.TestSandbox" name="test_unsafe" time="0.073" /><testcase classname="tests.test_security.TestSandbox" name="test_immutable_environment" time="0.023" /><testcase classname="tests.test_security.TestSandbox" name="test_restricted" time="0.011" /><testcase classname="tests.test_security.TestSandbox" name="test_template_data" time="0.017" /><testcase classname="tests.test_security.TestSandbox" name="test_attr_filter" time="0.016" /><testcase classname="tests.test_security.TestSandbox" name="test_binary_operator_intercepting" time="0.029" /><testcase classname="tests.test_security.TestSandbox" name="test_unary_operator_intercepting" time="0.025" /><testcase classname="tests.test_security.TestStringFormat" name="test_basic_format_safety" time="0.011" /><testcase classname="tests.test_security.TestStringFormat" name="test_basic_format_all_okay" time="0.013" /><testcase classname="tests.test_security.TestStringFormat" name="test_safe_format_safety" time="0.014" /><testcase classname="tests.test_security.TestStringFormat" name="test_safe_format_all_okay" time="0.014" /><testcase classname="tests.test_security.TestStringFormat" name="test_empty_braces_format" time="0.020" /><testcase classname="tests.test_security.TestStringFormatMap" name="test_basic_format_safety" time="0.012" /><testcase classname="tests.test_security.TestStringFormatMap" name="test_basic_format_all_okay" time="0.013" /><testcase classname="tests.test_security.TestStringFormatMap" name="test_safe_format_all_okay" time="0.016" /><testcase classname="tests.test_tests.TestTestsCase" name="test_defined" time="0.013" /><testcase classname="tests.test_tests.TestTestsCase" name="test_even" time="0.012" /><testcase classname="tests.test_tests.TestTestsCase" name="test_odd" time="0.012" /><testcase classname="tests.test_tests.TestTestsCase" name="test_lower" time="0.013" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[none is none-True]" time="0.012" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[false is none-False]" time="0.014" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[true is none-False]" time="0.013" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[42 is none-False]" time="0.012" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[none is true-False]" time="0.011" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[false is true-False]" time="0.011" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[true is true-True]" time="0.011" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[0 is true-False]" time="0.010" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[1 is true-False]" time="0.011" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[42 is true-False]" time="0.011" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[none is false-False]" time="0.011" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[false is false-True]" time="0.011" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[true is false-False]" time="0.010" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[0 is false-False]" time="0.011" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[1 is false-False]" time="0.010" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[42 is false-False]" time="0.009" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[none is boolean-False]" time="0.011" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[false is boolean-True]" time="0.011" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[true is boolean-True]" time="0.011" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[0 is boolean-False]" time="0.011" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[1 is boolean-False]" time="0.010" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[42 is boolean-False]" time="0.040" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[0.0 is boolean-False]" time="0.011" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[1.0 is boolean-False]" time="0.011" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[3.14159 is boolean-False]" time="0.009" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[none is integer-False]" time="0.011" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[false is integer-False]" time="0.010" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[true is integer-False]" time="0.010" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[42 is integer-True]" time="0.010" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[3.14159 is integer-False]" time="0.010" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[(10 ** 100) is integer-True]" time="0.012" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[none is float-False]" time="0.011" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[false is float-False]" time="0.010" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[true is float-False]" time="0.010" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[42 is float-False]" time="0.010" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[4.2 is float-True]" time="0.010" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[(10 ** 100) is float-False]" time="0.011" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[none is number-False]" time="0.010" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[false is number-True]" time="0.011" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[true is number-True]" time="0.010" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[42 is number-True]" time="0.010" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[3.14159 is number-True]" time="0.011" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[complex is number-True]" time="0.016" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[(10 ** 100) is number-True]" time="0.028" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[none is string-False]" time="0.017" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[false is string-False]" time="0.027" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[true is string-False]" time="0.046" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[42 is string-False]" time="0.021" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[&quot;foo&quot; is string-True]" time="0.016" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[none is sequence-False]" time="0.013" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[false is sequence-False]" time="0.015" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[42 is sequence-False]" time="0.022" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[&quot;foo&quot; is sequence-True]" time="0.017" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[[] is sequence-True]" time="0.018" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[[1, 2, 3] is sequence-True]" time="0.015" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[{} is sequence-True]" time="0.011" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[none is mapping-False]" time="0.011" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[false is mapping-False]" time="0.011" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[42 is mapping-False]" time="0.011" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[&quot;foo&quot; is mapping-False]" time="0.011" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[[] is mapping-False]" time="0.010" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[{} is mapping-True]" time="0.011" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[mydict is mapping-True]" time="0.012" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[none is iterable-False]" time="0.011" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[false is iterable-False]" time="0.011" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[42 is iterable-False]" time="0.010" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[&quot;foo&quot; is iterable-True]" time="0.011" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[[] is iterable-True]" time="0.009" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[{} is iterable-True]" time="0.009" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[range(5) is iterable-True]" time="0.013" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[none is callable-False]" time="0.010" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[false is callable-False]" time="0.010" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[42 is callable-False]" time="0.011" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[&quot;foo&quot; is callable-False]" time="0.011" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[[] is callable-False]" time="0.010" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[{} is callable-False]" time="0.010" /><testcase classname="tests.test_tests.TestTestsCase" name="test_types[range is callable-True]" time="0.011" /><testcase classname="tests.test_tests.TestTestsCase" name="test_upper" time="0.011" /><testcase classname="tests.test_tests.TestTestsCase" name="test_equalto" time="0.059" /><testcase classname="tests.test_tests.TestTestsCase" name="test_compare_aliases[eq 2-True]" time="0.011" /><testcase classname="tests.test_tests.TestTestsCase" name="test_compare_aliases[eq 3-False]" time="0.011" /><testcase classname="tests.test_tests.TestTestsCase" name="test_compare_aliases[ne 3-True]" time="0.011" /><testcase classname="tests.test_tests.TestTestsCase" name="test_compare_aliases[ne 2-False]" time="0.011" /><testcase classname="tests.test_tests.TestTestsCase" name="test_compare_aliases[lt 3-True]" time="0.011" /><testcase classname="tests.test_tests.TestTestsCase" name="test_compare_aliases[lt 2-False]" time="0.010" /><testcase classname="tests.test_tests.TestTestsCase" name="test_compare_aliases[le 2-True]" time="0.011" /><testcase classname="tests.test_tests.TestTestsCase" name="test_compare_aliases[le 1-False]" time="0.010" /><testcase classname="tests.test_tests.TestTestsCase" name="test_compare_aliases[gt 1-True]" time="0.010" /><testcase classname="tests.test_tests.TestTestsCase" name="test_compare_aliases[gt 2-False]" time="0.010" /><testcase classname="tests.test_tests.TestTestsCase" name="test_compare_aliases[ge 2-True]" time="0.013" /><testcase classname="tests.test_tests.TestTestsCase" name="test_compare_aliases[ge 3-False]" time="0.010" /><testcase classname="tests.test_tests.TestTestsCase" name="test_sameas" time="0.012" /><testcase classname="tests.test_tests.TestTestsCase" name="test_no_paren_for_arg1" time="0.011" /><testcase classname="tests.test_tests.TestTestsCase" name="test_escaped" time="0.012" /><testcase classname="tests.test_tests.TestTestsCase" name="test_greaterthan" time="0.011" /><testcase classname="tests.test_tests.TestTestsCase" name="test_lessthan" time="0.011" /><testcase classname="tests.test_tests.TestTestsCase" name="test_multiple_tests" time="0.010" /><testcase classname="tests.test_tests.TestTestsCase" name="test_in" time="0.022" /><testcase classname="tests.test_tests" name="test_name_undefined" time="0.010" /><testcase classname="tests.test_tests" name="test_name_undefined_in_if" time="0.016" /><testcase classname="tests.test_tests" name="test_is_filter" time="0.004" /><testcase classname="tests.test_tests" name="test_is_test" time="0.005" /><testcase classname="tests.test_utils.TestLRUCache" name="test_simple" time="0.004" /><testcase classname="tests.test_utils.TestLRUCache" name="test_values" time="0.004" /><testcase classname="tests.test_utils.TestLRUCache" name="test_values_empty" time="0.004" /><testcase classname="tests.test_utils.TestLRUCache" name="test_pickleable" time="0.022" /><testcase classname="tests.test_utils.TestLRUCache" name="test_copy[copy0]" time="0.005" /><testcase classname="tests.test_utils.TestLRUCache" name="test_copy[copy1]" time="0.005" /><testcase classname="tests.test_utils.TestLRUCache" name="test_clear" time="0.004" /><testcase classname="tests.test_utils.TestLRUCache" name="test_repr" time="0.004" /><testcase classname="tests.test_utils.TestLRUCache" name="test_items" time="0.006" /><testcase classname="tests.test_utils.TestLRUCache" name="test_setdefault" time="0.004" /><testcase classname="tests.test_utils.TestHelpers" name="test_object_type_repr" time="0.004" /><testcase classname="tests.test_utils.TestHelpers" name="test_autoescape_select" time="0.004" /><testcase classname="tests.test_utils.TestEscapeUrlizeTarget" name="test_escape_urlize_target" time="0.005" /><testcase classname="tests.test_utils.TestLoremIpsum" name="test_lorem_ipsum_markup" time="0.013" /><testcase classname="tests.test_utils.TestLoremIpsum" name="test_lorem_ipsum_html" time="0.009" /><testcase classname="tests.test_utils.TestLoremIpsum" name="test_lorem_ipsum_n" time="1.090" /><testcase classname="tests.test_utils.TestLoremIpsum" name="test_lorem_ipsum_min" time="0.105" /><testcase classname="tests.test_utils.TestLoremIpsum" name="test_lorem_ipsum_max" time="0.036" /><testcase classname="tests.test_utils" name="test_missing" time="0.004" /><testcase classname="tests.test_utils" name="test_consume" time="0.006" /></testsuite></testsuites>