<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="1" skipped="5" tests="123" time="1.095" timestamp="2023-11-21T21:03:10.642604" hostname="80ac3eb7f7f2"><testcase classname="tests.test_asyncio" name="test_time_freeze_coroutine" time="0.019" /><testcase classname="tests.test_asyncio" name="test_time_freeze_async_def" time="0.004" /><testcase classname="tests.test_class_import" name="test_import_datetime_works" time="0.004" /><testcase classname="tests.test_class_import" name="test_import_date_works" time="0.003" /><testcase classname="tests.test_class_import" name="test_import_time" time="0.004" /><testcase classname="tests.test_class_import" name="test_start_and_stop_works" time="0.003" /><testcase classname="tests.test_class_import" name="test_isinstance_works" time="0.003" /><testcase classname="tests.test_class_import" name="test_issubclass_works" time="0.003" /><testcase classname="tests.test_class_import" name="test_fake_uses_real_when_ignored" time="0.003" /><testcase classname="tests.test_class_import" name="test_can_ignore_email_module" time="0.006" /><testcase classname="tests.test_class_import" name="test_avoid_replacing_equal_to_anything" time="0.003" /><testcase classname="tests.test_class_import" name="test_import_localtime" time="0.003" /><testcase classname="tests.test_class_import" name="test_fake_gmtime_function" time="0.003" /><testcase classname="tests.test_class_import" name="test_fake_strftime_function" time="0.003" /><testcase classname="tests.test_class_import" name="test_import_after_start" time="0.004" /><testcase classname="tests.test_class_import" name="test_none_as_initial" time="0.003" /><testcase classname="tests.test_configure" name="test_default_ignore_list_is_overridden" time="0.001" /><testcase classname="tests.test_configure" name="test_extend_default_ignore_list" time="0.001" /><testcase classname="tests.test_datetimes" name="test_simple_api" time="0.006" /><testcase classname="tests.test_datetimes" name="test_tz_offset" time="0.003" /><testcase classname="tests.test_datetimes" name="test_timedelta_tz_offset" time="0.003" /><testcase classname="tests.test_datetimes" name="test_tz_offset_with_today" time="0.003" /><testcase classname="tests.test_datetimes" name="test_zero_tz_offset_with_time" time="0.003" /><testcase classname="tests.test_datetimes" name="test_tz_offset_with_time" time="0.003" /><testcase classname="tests.test_datetimes" name="test_time_with_microseconds" time="0.003" /><testcase classname="tests.test_datetimes" name="test_time_with_dst" time="0.003" /><testcase classname="tests.test_datetimes" name="test_manual_increment" time="0.003" /><testcase classname="tests.test_datetimes" name="test_manual_increment_seconds" time="0.003" /><testcase classname="tests.test_datetimes" name="test_move_to" time="0.003" /><testcase classname="tests.test_datetimes" name="test_bad_time_argument" time="0.000" /><testcase classname="tests.test_datetimes" name="test_time_monotonic[monotonic-True-1.0]" time="0.003" /><testcase classname="tests.test_datetimes" name="test_time_monotonic[monotonic_ns-True-1000000000]" time="0.003" /><testcase classname="tests.test_datetimes" name="test_time_monotonic[perf_counter-True-1.0]" time="0.003" /><testcase classname="tests.test_datetimes" name="test_time_monotonic[perf_counter_ns-True-1000000000]" time="0.003" /><testcase classname="tests.test_datetimes" name="test_time_gmtime" time="0.003" /><testcase classname="tests.test_datetimes" name="test_time_clock" time="0.000"><skipped type="pytest.skip" message="time.clock was removed in Python 3.8">/workdir/freezegun-1.2.1/tests/test_datetimes.py:252: time.clock was removed in Python 3.8</skipped></testcase><testcase classname="tests.test_datetimes" name="test_time_localtime" time="0.003" /><testcase classname="tests.test_datetimes" name="test_strftime" time="0.003" /><testcase classname="tests.test_datetimes" name="test_real_strftime_fall_through" time="0.003" /><testcase classname="tests.test_datetimes" name="test_date_object" time="0.000" /><testcase classname="tests.test_datetimes" name="test_old_date_object" time="0.003" /><testcase classname="tests.test_datetimes" name="test_date_with_locale" time="0.000"><skipped type="pytest.skip" message="could not set locale to any of: da_DK.UTF-8, de_DE.UTF-8, fr_FR.UTF-8">/workdir/freezegun-1.2.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/unittest.py:371: could not set locale to any of: da_DK.UTF-8, de_DE.UTF-8, fr_FR.UTF-8</skipped></testcase><testcase classname="tests.test_datetimes" name="test_invalid_type" time="0.000" /><testcase classname="tests.test_datetimes" name="test_datetime_object" time="0.000" /><testcase classname="tests.test_datetimes" name="test_function_object" time="0.003" /><testcase classname="tests.test_datetimes" name="test_lambda_object" time="0.003" /><testcase classname="tests.test_datetimes" name="test_generator_object" time="0.006" /><testcase classname="tests.test_datetimes" name="test_maya_datetimes" time="0.037" /><testcase classname="tests.test_datetimes" name="test_old_datetime_object" time="0.003" /><testcase classname="tests.test_datetimes" name="test_datetime_with_locale" time="0.000"><skipped type="pytest.skip" message="could not set locale to any of: da_DK.UTF-8, de_DE.UTF-8, fr_FR.UTF-8">/workdir/freezegun-1.2.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/unittest.py:371: could not set locale to any of: da_DK.UTF-8, de_DE.UTF-8, fr_FR.UTF-8</skipped></testcase><testcase classname="tests.test_datetimes" name="test_decorator" time="0.003" /><testcase classname="tests.test_datetimes" name="test_decorator_wrapped_attribute" time="0.000" /><testcase classname="tests.test_datetimes.Tester" name="test_the_class" time="0.003" /><testcase classname="tests.test_datetimes.Tester" name="test_still_the_same" time="0.003" /><testcase classname="tests.test_datetimes.Tester" name="test_class_name_preserved_by_decorator" time="0.003" /><testcase classname="tests.test_datetimes.Tester" name="test_class_decorator_ignores_nested_class" time="0.003" /><testcase classname="tests.test_datetimes.Tester" name="test_class_decorator_wraps_callable_object_py3" time="0.003" /><testcase classname="tests.test_datetimes.Tester" name="test_class_decorator_respects_staticmethod" time="0.003"><failure message="TypeError: Tester.helper() takes 0 positional arguments but 1 was given">Traceback (most recent call last):
  File "/workdir/freezegun-1.2.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    result: Optional[TResult] = func()
  File "/workdir/freezegun-1.2.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 262, in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/workdir/freezegun-1.2.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/freezegun-1.2.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/freezegun-1.2.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/freezegun-1.2.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/freezegun-1.2.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/freezegun-1.2.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 177, in pytest_runtest_call
    raise e
  File "/workdir/freezegun-1.2.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 169, in pytest_runtest_call
    item.runtest()
  File "/workdir/freezegun-1.2.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 1792, in runtest
    self.ihook.pytest_pyfunc_call(pyfuncitem=self)
  File "/workdir/freezegun-1.2.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/freezegun-1.2.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/freezegun-1.2.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 113, in _multicall
    raise exception.with_traceback(exception.__traceback__)
  File "/workdir/freezegun-1.2.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/freezegun-1.2.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 194, in pytest_pyfunc_call
    result = testfunction(**testargs)
  File "/workdir/freezegun-1.2.1/freezegun/api.py", line 789, in wrapper
    result = func(*args, **kwargs)
  File "/workdir/freezegun-1.2.1/tests/test_datetimes.py", line 453, in test_class_decorator_respects_staticmethod
    assert self.helper() == datetime.date(2012, 1, 14)
  File "/workdir/freezegun-1.2.1/freezegun/api.py", line 789, in wrapper
    result = func(*args, **kwargs)
TypeError: Tester.helper() takes 0 positional arguments but 1 was given</failure></testcase><testcase classname="tests.test_datetimes" name="test_nice_datetime" time="0.003" /><testcase classname="tests.test_datetimes" name="test_datetime_date_method" time="0.003" /><testcase classname="tests.test_datetimes" name="test_context_manager" time="0.003" /><testcase classname="tests.test_datetimes" name="test_nested_context_manager" time="0.003" /><testcase classname="tests.test_datetimes" name="test_nested_context_manager_with_tz_offsets" time="0.003" /><testcase classname="tests.test_datetimes" name="test_isinstance_with_active" time="0.003" /><testcase classname="tests.test_datetimes" name="test_isinstance_without_active" time="0.000" /><testcase classname="tests.test_datetimes.TestUnitTestMethodDecorator" name="test_method_decorator_works_on_unittest" time="0.003" /><testcase classname="tests.test_datetimes.TestUnitTestMethodDecorator" name="test_method_decorator_works_on_unittest_kwarg_frozen_time" time="0.003" /><testcase classname="tests.test_datetimes.TestUnitTestMethodDecorator" name="test_method_decorator_works_on_unittest_kwarg_hello" time="0.003" /><testcase classname="tests.test_datetimes.TestUnitTestClassDecorator" name="test_class_decorator_works_on_unittest" time="1365450466.058" /><testcase classname="tests.test_datetimes.TestUnitTestClassDecorator" name="test_class_name_preserved_by_decorator" time="-1365450466.053" /><testcase classname="tests.test_datetimes.TestUnitTestClassDecoratorWithNoSetUpOrTearDown" name="test_class_decorator_works_on_unittest" time="0.004" /><testcase classname="tests.test_datetimes.TestUnitTestClassDecoratorSubclass" name="test_class_decorator_works_on_unittest" time="1365450466.049" /><testcase classname="tests.test_datetimes.TestUnitTestClassDecoratorSubclass" name="test_class_name_preserved_by_decorator" time="-1365450466.045" /><testcase classname="tests.test_datetimes.UnfrozenInheritedTests" name="test_time_is_not_frozen" time="0.000" /><testcase classname="tests.test_datetimes.FrozenInheritedTests" name="test_time_is_frozen" time="0.004" /><testcase classname="tests.test_datetimes.TestOldStyleClasses" name="test_direct_method" time="0.003" /><testcase classname="tests.test_datetimes.TestOldStyleClasses" name="test_inherited_method" time="0.003" /><testcase classname="tests.test_datetimes" name="test_min_and_max" time="0.003" /><testcase classname="tests.test_datetimes" name="test_freeze_with_timezone_aware_datetime_in_utc" time="0.003" /><testcase classname="tests.test_datetimes" name="test_freeze_with_timezone_aware_datetime_in_non_utc" time="0.003" /><testcase classname="tests.test_datetimes" name="test_time_with_nested" time="0.003" /><testcase classname="tests.test_datetimes" name="test_monotonic_with_nested[monotonic]" time="0.003" /><testcase classname="tests.test_datetimes" name="test_monotonic_with_nested[perf_counter]" time="0.003" /><testcase classname="tests.test_datetimes" name="test_should_use_real_time" time="0.005" /><testcase classname="tests.test_datetimes" name="test_time_ns" time="0.003" /><testcase classname="tests.test_datetimes" name="test_compare_datetime_and_time_with_timezone" time="0.004" /><testcase classname="tests.test_datetimes" name="test_timestamp_with_tzoffset" time="0.004" /><testcase classname="tests.test_datetimes" name="test_datetime_in_timezone" time="0.000"><skipped type="pytest.skip" message="timezone handling is currently incorrect">/workdir/freezegun-1.2.1/tests/test_datetimes.py:788: timezone handling is currently incorrect</skipped></testcase><testcase classname="tests.test_errors" name="test_ignore_errors_in_start[ImportError]" time="0.003" /><testcase classname="tests.test_errors" name="test_ignore_errors_in_start[TypeError]" time="0.003" /><testcase classname="tests.test_import_alias" name="test_datetime_alias" time="0.003" /><testcase classname="tests.test_import_alias" name="test_time_alias" time="0.003" /><testcase classname="tests.test_import_alias.TestCallOtherFuncInTestClassDecoratorWithAlias" name="test_calls_other_method" time="0.003" /><testcase classname="tests.test_operations" name="test_addition" time="0.003" /><testcase classname="tests.test_operations" name="test_subtraction" time="0.003" /><testcase classname="tests.test_operations" name="test_datetime_timezone_none" time="0.003" /><testcase classname="tests.test_operations" name="test_datetime_timezone_real" time="0.003" /><testcase classname="tests.test_operations" name="test_datetime_timezone_real_with_offset" time="0.003" /><testcase classname="tests.test_operations" name="test_astimezone" time="0.003" /><testcase classname="tests.test_operations" name="test_astimezone_tz_none" time="0.003" /><testcase classname="tests.test_operations" name="test_replace" time="0.003" /><testcase classname="tests.test_operations" name="test_auto_tick" time="0.003" /><testcase classname="tests.test_pickle" name="test_pickle" time="0.003" /><testcase classname="tests.test_pickle" name="test_pickle_real_datetime" time="0.003" /><testcase classname="tests.test_pickle" name="test_pickle_real_date" time="0.003" /><testcase classname="tests.test_sqlite3" name="test_fake_datetime_select" time="0.005" /><testcase classname="tests.test_sqlite3" name="test_fake_date_select" time="0.003" /><testcase classname="tests.test_ticking" name="test_ticking_datetime" time="0.004" /><testcase classname="tests.test_ticking" name="test_ticking_time_clock" time="0.000"><skipped type="pytest.skip" message="time.clock was removed in Python 3.8">/workdir/freezegun-1.2.1/tests/test_ticking.py:18: time.clock was removed in Python 3.8</skipped></testcase><testcase classname="tests.test_ticking" name="test_ticking_date" time="0.004" /><testcase classname="tests.test_ticking" name="test_ticking_time" time="0.004" /><testcase classname="tests.test_ticking" name="test_ticking_monotonic[monotonic]" time="0.005" /><testcase classname="tests.test_ticking" name="test_ticking_monotonic[monotonic_ns]" time="0.004" /><testcase classname="tests.test_ticking" name="test_ticking_monotonic[perf_counter]" time="0.004" /><testcase classname="tests.test_ticking" name="test_ticking_monotonic[perf_counter_ns]" time="0.005" /><testcase classname="tests.test_ticking" name="test_pypy_compat" time="0.000" /><testcase classname="tests.test_ticking" name="test_non_pypy_compat" time="0.000" /><testcase classname="tests.test_utils" name="test_should_not_skip_cpython" time="0.002" /><testcase classname="tests.test_utils" name="test_should_skip_non_cpython" time="0.001" /><testcase classname="tests.test_uuid" name="test_uuid1_future" time="0.020" /><testcase classname="tests.test_uuid" name="test_uuid1_past" time="0.006" /><testcase classname="tests.test_warnings" name="test_ignore_warnings_in_start" time="0.003" /><testcase classname="tests.test_warnings" name="test_ignore_warnings_in_stop" time="0.003" /></testsuite></testsuites>