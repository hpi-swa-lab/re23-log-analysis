.package create: /workdir/flake8-comprehensions-3.11.1/.tox/.package
.package installdeps: setuptools
/workdir/flake8-comprehensions-3.11.1/.tox/.package/lib/python3.10/site-packages/setuptools/config/setupcfg.py:463: SetuptoolsDeprecationWarning: The license_file parameter is deprecated, use license_files instead.
  warnings.warn(msg, warning_class)
/workdir/flake8-comprehensions-3.11.1/.tox/.package/lib/python3.10/site-packages/setuptools/config/setupcfg.py:463: SetuptoolsDeprecationWarning: The license_file parameter is deprecated, use license_files instead.
  warnings.warn(msg, warning_class)
cpythonlibtest-unit-test-tests create: /workdir/flake8-comprehensions-3.11.1/.tox/cpythonlibtest-unit-test-tests
cpythonlibtest-unit-test-tests installdeps: mock, pytest
cpythonlibtest-unit-test-tests inst: /workdir/flake8-comprehensions-3.11.1/.tox/.tmp/package/1/flake8_comprehensions-3.11.1.tar.gz
cpythonlibtest-unit-test-tests installed: exceptiongroup==1.2.0,flake8==6.1.0,flake8-comprehensions @ file:///workdir/flake8-comprehensions-3.11.1/.tox/.tmp/package/1/flake8_comprehensions-3.11.1.tar.gz#sha256=454aac3ec9bfec53ab1f76e3a3b172db8f34396e16df950b8ea2bc422958c6f0,iniconfig==2.0.0,mccabe==0.7.0,mock==5.1.0,packaging==23.2,pluggy==1.3.0,pycodestyle==2.11.1,pyflakes==3.1.0,pytest==7.4.3,tomli==2.0.1
cpythonlibtest-unit-test-tests run-test-pre: PYTHONHASHSEED='4127201296'
cpythonlibtest-unit-test-tests run-test: commands[0] | pytest -v --tb=native --junitxml /workdir/results/flake8-comprehensions/3.11.1/1/cpython-test-results.xml
============================= test session starts ==============================
platform linux -- Python 3.10.8, pytest-7.4.3, pluggy-1.3.0 -- /workdir/flake8-comprehensions-3.11.1/.tox/cpythonlibtest-unit-test-tests/bin/python
cachedir: .tox/cpythonlibtest-unit-test-tests/.pytest_cache
rootdir: /workdir/flake8-comprehensions-3.11.1
configfile: pyproject.toml
collecting ... collected 129 items

tests/test_flake8_comprehensions.py::test_version ERROR                  [  0%]
tests/test_flake8_comprehensions.py::test_C400_pass[foo = [x + 1 for x in range(10)]] ERROR [  1%]
tests/test_flake8_comprehensions.py::test_C400_fail[foo = list(x + 1 for x in range(10))-failures0] ERROR [  2%]
tests/test_flake8_comprehensions.py::test_C400_fail[            foobar = list(\n                str(x)\n                for x\n                in range(10)\n            )\n            -failures1] ERROR [  3%]
tests/test_flake8_comprehensions.py::test_C401_pass[foo = {x + 1 for x in range(10)}] ERROR [  3%]
tests/test_flake8_comprehensions.py::test_C401_fail[foo = set(x + 1 for x in range(10))-failures0] ERROR [  4%]
tests/test_flake8_comprehensions.py::test_C401_fail[            foobar = set(\n                str(x) for x\n                in range(10)\n            )\n            -failures1] ERROR [  5%]
tests/test_flake8_comprehensions.py::test_C402_pass[foo = {x: str(x) for x in range(10)}] ERROR [  6%]
tests/test_flake8_comprehensions.py::test_C402_pass[        foo = ['a=1', 'b=2', 'c=3']\n        dict(pair.split('=') for pair in foo)\n        ] ERROR [  6%]
tests/test_flake8_comprehensions.py::test_C402_pass[        foo = [('a', 1), ('b', 2), ('c', 3)]\n        dict(pair for pair in foo if pair[1] % 2 == 0)\n        ] ERROR [  7%]
tests/test_flake8_comprehensions.py::test_C402_pass[dict(((x, str(x)) for x in range(10)), c=1)] ERROR [  8%]
tests/test_flake8_comprehensions.py::test_C402_fail[foo = dict((x, str(x)) for x in range(10))-failures0] ERROR [  9%]
tests/test_flake8_comprehensions.py::test_C402_fail[            foobar = dict(\n                (x, str(x))\n                for x\n                in range(10)\n            )\n            -failures1] ERROR [ 10%]
tests/test_flake8_comprehensions.py::test_C403_pass[foo = {x + 1 for x in range(10)}] ERROR [ 10%]
tests/test_flake8_comprehensions.py::test_C403_fail[foo = set([x + 1 for x in range(10)])-failures0] ERROR [ 11%]
tests/test_flake8_comprehensions.py::test_C404_pass[foo = {x: x for x in range(10)}] ERROR [ 12%]
tests/test_flake8_comprehensions.py::test_C404_pass[foo = dict([x.split('=') for x in ['a=1', 'b=2']])] ERROR [ 13%]
tests/test_flake8_comprehensions.py::test_C404_pass[dict([(x, x) for x in range(10)], y=2)] ERROR [ 13%]
tests/test_flake8_comprehensions.py::test_C404_fail[foo = dict([(x, x) for x in range(10)])-failures0] ERROR [ 14%]
tests/test_flake8_comprehensions.py::test_C405_pass[foo = set(range)] ERROR [ 15%]
tests/test_flake8_comprehensions.py::test_C405_fail[foo = set([])-failures0] ERROR [ 16%]
tests/test_flake8_comprehensions.py::test_C405_fail[foo = set([1])-failures1] ERROR [ 17%]
tests/test_flake8_comprehensions.py::test_C405_fail[foo = set(())-failures2] ERROR [ 17%]
tests/test_flake8_comprehensions.py::test_C405_fail[foo = set((1,))-failures3] ERROR [ 18%]
tests/test_flake8_comprehensions.py::test_C406_pass[foo = dict(range)] ERROR [ 19%]
tests/test_flake8_comprehensions.py::test_C406_pass[something = (1, 2); dict([something])] ERROR [ 20%]
tests/test_flake8_comprehensions.py::test_C406_pass[dict([(1,)])] ERROR  [ 20%]
tests/test_flake8_comprehensions.py::test_C406_fail[foo = dict([])-failures0] ERROR [ 21%]
tests/test_flake8_comprehensions.py::test_C406_fail[foo = dict([(1, 2)])-failures1] ERROR [ 22%]
tests/test_flake8_comprehensions.py::test_C406_fail[foo = dict(())-failures2] ERROR [ 23%]
tests/test_flake8_comprehensions.py::test_C406_fail[foo = dict(((1, 2),))-failures3] ERROR [ 24%]
tests/test_flake8_comprehensions.py::test_C408_pass[()] ERROR            [ 24%]
tests/test_flake8_comprehensions.py::test_C408_pass[[]] ERROR            [ 25%]
tests/test_flake8_comprehensions.py::test_C408_pass[{}] ERROR            [ 26%]
tests/test_flake8_comprehensions.py::test_C408_pass[set()] ERROR         [ 27%]
tests/test_flake8_comprehensions.py::test_C408_pass[        foo = [('foo', 2)]\n        dict(foo)\n        ] ERROR [ 27%]
tests/test_flake8_comprehensions.py::test_C408_pass[        foo = {}\n        dict(bar=1, **foo)\n        ] ERROR [ 28%]
tests/test_flake8_comprehensions.py::test_C408_pass[        foo = [1, 2]\n        list(foo)\n        ] ERROR [ 29%]
tests/test_flake8_comprehensions.py::test_C408_pass[        foo = [1, 2]\n        list(*foo)\n        ] ERROR [ 30%]
tests/test_flake8_comprehensions.py::test_C408_fail[tuple()-failures0] ERROR [ 31%]
tests/test_flake8_comprehensions.py::test_C408_fail[list()-failures1] ERROR [ 31%]
tests/test_flake8_comprehensions.py::test_C408_fail[dict()-failures2] ERROR [ 32%]
tests/test_flake8_comprehensions.py::test_C408_fail[dict(a=1)-failures3] ERROR [ 33%]
tests/test_flake8_comprehensions.py::test_C409_pass[foo = tuple(range)] ERROR [ 34%]
tests/test_flake8_comprehensions.py::test_C409_fail[foo = tuple([])-failures0] ERROR [ 34%]
tests/test_flake8_comprehensions.py::test_C409_fail[foo = tuple([1, 2])-failures1] ERROR [ 35%]
tests/test_flake8_comprehensions.py::test_C409_fail[foo = tuple(())-failures2] ERROR [ 36%]
tests/test_flake8_comprehensions.py::test_C409_fail[foo = tuple((1, 2))-failures3] ERROR [ 37%]
tests/test_flake8_comprehensions.py::test_C410_pass[foo = list(range)] ERROR [ 37%]
tests/test_flake8_comprehensions.py::test_C410_fail[foo = list([])-failures0] ERROR [ 38%]
tests/test_flake8_comprehensions.py::test_C410_fail[foo = list([1, 2])-failures1] ERROR [ 39%]
tests/test_flake8_comprehensions.py::test_C410_fail[foo = list(())-failures2] ERROR [ 40%]
tests/test_flake8_comprehensions.py::test_C410_fail[foo = list((1, 2))-failures3] ERROR [ 41%]
tests/test_flake8_comprehensions.py::test_C411_pass[[x + 1 for x in range(10)]] ERROR [ 41%]
tests/test_flake8_comprehensions.py::test_C411_fail[list([x + 1 for x in range(10)])-failures0] ERROR [ 42%]
tests/test_flake8_comprehensions.py::test_C413_pass[sorted([2, 3, 1])] ERROR [ 43%]
tests/test_flake8_comprehensions.py::test_C413_pass[sorted([2, 3, 1], reverse=True)] ERROR [ 44%]
tests/test_flake8_comprehensions.py::test_C413_pass[sorted([2, 3, 1], reverse=False)] ERROR [ 44%]
tests/test_flake8_comprehensions.py::test_C413_pass[sorted([2, 3, 1], reverse=0)] ERROR [ 45%]
tests/test_flake8_comprehensions.py::test_C413_pass[sorted([2, 3, 1], reverse=1)] ERROR [ 46%]
tests/test_flake8_comprehensions.py::test_C413_pass[reversed([2, 3, 1])] ERROR [ 47%]
tests/test_flake8_comprehensions.py::test_C413_fail[list(sorted([2, 3, 1]))-failures0] ERROR [ 48%]
tests/test_flake8_comprehensions.py::test_C413_fail[reversed(sorted([2, 3, 1]))-failures1] ERROR [ 48%]
tests/test_flake8_comprehensions.py::test_C413_fail[reversed(sorted([2, 3, 1], reverse=False))-failures2] ERROR [ 49%]
tests/test_flake8_comprehensions.py::test_C413_fail[reversed(sorted([2, 3, 1], reverse=True))-failures3] ERROR [ 50%]
tests/test_flake8_comprehensions.py::test_C413_fail[reversed(sorted([2, 3, 1], reverse=0))-failures4] ERROR [ 51%]
tests/test_flake8_comprehensions.py::test_C413_fail[reversed(sorted([2, 3, 1], reverse=1))-failures5] ERROR [ 51%]
tests/test_flake8_comprehensions.py::test_C413_fail[reversed(sorted([2, 3, 1], reverse=bool()))-failures6] ERROR [ 52%]
tests/test_flake8_comprehensions.py::test_C413_fail[reversed(sorted([2, 3, 1], reverse=not True))-failures7] ERROR [ 53%]
tests/test_flake8_comprehensions.py::test_C414_pass[list(set(a))] ERROR  [ 54%]
tests/test_flake8_comprehensions.py::test_C414_pass[tuple(set(a))] ERROR [ 55%]
tests/test_flake8_comprehensions.py::test_C414_pass[sorted(set(a))] ERROR [ 55%]
tests/test_flake8_comprehensions.py::test_C414_fail[list(list(a))-failures0] ERROR [ 56%]
tests/test_flake8_comprehensions.py::test_C414_fail[list(tuple(a))-failures1] ERROR [ 57%]
tests/test_flake8_comprehensions.py::test_C414_fail[tuple(list(a))-failures2] ERROR [ 58%]
tests/test_flake8_comprehensions.py::test_C414_fail[tuple(tuple(a))-failures3] ERROR [ 58%]
tests/test_flake8_comprehensions.py::test_C414_fail[set(set(a))-failures4] ERROR [ 59%]
tests/test_flake8_comprehensions.py::test_C414_fail[set(list(a))-failures5] ERROR [ 60%]
tests/test_flake8_comprehensions.py::test_C414_fail[set(tuple(a))-failures6] ERROR [ 61%]
tests/test_flake8_comprehensions.py::test_C414_fail[set(sorted(a))-failures7] ERROR [ 62%]
tests/test_flake8_comprehensions.py::test_C414_fail[set(sorted(a, reverse=True))-failures8] ERROR [ 62%]
tests/test_flake8_comprehensions.py::test_C414_fail[set(reversed(a))-failures9] ERROR [ 63%]
tests/test_flake8_comprehensions.py::test_C414_fail[sorted(list(a))-failures10] ERROR [ 64%]
tests/test_flake8_comprehensions.py::test_C414_fail[sorted(tuple(a))-failures11] ERROR [ 65%]
tests/test_flake8_comprehensions.py::test_C414_fail[sorted(sorted(a))-failures12] ERROR [ 65%]
tests/test_flake8_comprehensions.py::test_C414_fail[sorted(sorted(a), reverse=True)-failures13] ERROR [ 66%]
tests/test_flake8_comprehensions.py::test_C414_fail[sorted(sorted(a, reverse=True))-failures14] ERROR [ 67%]
tests/test_flake8_comprehensions.py::test_C414_fail[sorted(sorted(a, reverse=True), reverse=True)-failures15] ERROR [ 68%]
tests/test_flake8_comprehensions.py::test_C414_fail[sorted(reversed(a))-failures16] ERROR [ 68%]
tests/test_flake8_comprehensions.py::test_C414_fail[sorted(reversed(a), reverse=True)-failures17] ERROR [ 69%]
tests/test_flake8_comprehensions.py::test_C415_pass[set([2, 3, 1][::1])] ERROR [ 70%]
tests/test_flake8_comprehensions.py::test_C415_pass[sorted([2, 3, 1][::1])] ERROR [ 71%]
tests/test_flake8_comprehensions.py::test_C415_pass[reversed([2, 3, 1][::1])] ERROR [ 72%]
tests/test_flake8_comprehensions.py::test_C415_fail[set([2, 3, 1][::-1])-failures0] ERROR [ 72%]
tests/test_flake8_comprehensions.py::test_C415_fail[sorted([2, 3, 1][::-1])-failures1] ERROR [ 73%]
tests/test_flake8_comprehensions.py::test_C415_fail[sorted([2, 3, 1][::-1], reverse=True)-failures2] ERROR [ 74%]
tests/test_flake8_comprehensions.py::test_C415_fail[reversed([2, 3, 1][::-1])-failures3] ERROR [ 75%]
tests/test_flake8_comprehensions.py::test_C416_pass[{x, y for x, y, z in zip('abc', '123', 'def')}] ERROR [ 75%]
tests/test_flake8_comprehensions.py::test_C416_pass[{y: x for x, y in zip('abc', '123')}] ERROR [ 76%]
tests/test_flake8_comprehensions.py::test_C416_pass[{x: y for x, (y,) in zip('a', ('1',))}] ERROR [ 77%]
tests/test_flake8_comprehensions.py::test_C416_pass[{x: z for x, (y,), z in zip('a', ('1',), 'b')}] ERROR [ 78%]
tests/test_flake8_comprehensions.py::test_C416_pass[[str(x) for x in range(5)]] ERROR [ 79%]
tests/test_flake8_comprehensions.py::test_C416_pass[[x + 1 for x in range(5)]] ERROR [ 79%]
tests/test_flake8_comprehensions.py::test_C416_pass[[x for x in range(5) if x % 2]] ERROR [ 80%]
tests/test_flake8_comprehensions.py::test_C416_pass[{str(x) for x in range(5)}] ERROR [ 81%]
tests/test_flake8_comprehensions.py::test_C416_pass[{x + 1 for x in range(5)}] ERROR [ 82%]
tests/test_flake8_comprehensions.py::test_C416_pass[{x for x in range(5) if x % 2}] ERROR [ 82%]
tests/test_flake8_comprehensions.py::test_C416_pass[        async def foo():\n            [x async for x in range(5)]\n        ] ERROR [ 83%]
tests/test_flake8_comprehensions.py::test_C416_pass[        async def foo():\n            return {x async for x in range(5)}\n        ] ERROR [ 84%]
tests/test_flake8_comprehensions.py::test_C416_pass[[(x, y, 1) for x, y in []]] ERROR [ 85%]
tests/test_flake8_comprehensions.py::test_C416_pass[[(x, y) for x, y in zip('abc', '123')]] ERROR [ 86%]
tests/test_flake8_comprehensions.py::test_C416_pass[[(x, y) for (x, y) in zip('abc', '123')]] ERROR [ 86%]
tests/test_flake8_comprehensions.py::test_C416_pass[{(x, y) for x, y in zip('abc', '123')}] ERROR [ 87%]
tests/test_flake8_comprehensions.py::test_C416_pass[{(x, y) for (x, y) in zip('abc', '123')}] ERROR [ 88%]
tests/test_flake8_comprehensions.py::test_C416_fail[{x: y for x, y in zip(range(5), range(5))}-failures0] ERROR [ 89%]
tests/test_flake8_comprehensions.py::test_C416_fail[{x: y for (x, y) in zip(range(5), range(5))}-failures1] ERROR [ 89%]
tests/test_flake8_comprehensions.py::test_C416_fail[[x for x in range(5)]-failures2] ERROR [ 90%]
tests/test_flake8_comprehensions.py::test_C416_fail[{x for x in range(5)}-failures3] ERROR [ 91%]
tests/test_flake8_comprehensions.py::test_C417_pass[map()] ERROR         [ 92%]
tests/test_flake8_comprehensions.py::test_C417_pass[map(str, numbers)] ERROR [ 93%]
tests/test_flake8_comprehensions.py::test_C417_pass[list(map())] ERROR   [ 93%]
tests/test_flake8_comprehensions.py::test_C417_pass[list(map(str, numbers))] ERROR [ 94%]
tests/test_flake8_comprehensions.py::test_C417_pass[set(map(f, items))] ERROR [ 95%]
tests/test_flake8_comprehensions.py::test_C417_pass[dict(map(enumerate, values))] ERROR [ 96%]
tests/test_flake8_comprehensions.py::test_C417_pass[dict(map(lambda v: data[v], values))] ERROR [ 96%]
tests/test_flake8_comprehensions.py::test_C417_fail[map(lambda x: x * 2, iterable)-failures0] ERROR [ 97%]
tests/test_flake8_comprehensions.py::test_C417_fail[list(map(lambda x: x * 2, iterable))-failures1] ERROR [ 98%]
tests/test_flake8_comprehensions.py::test_C417_fail[set(map(lambda num: num % 2 == 0, nums))-failures2] ERROR [ 99%]
tests/test_flake8_comprehensions.py::test_C417_fail[dict(map(lambda v: (v, v ** 2), values))-failures3] ERROR [100%]

==================================== ERRORS ====================================
________________________ ERROR at setup of test_version ________________________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 28
  def test_version(flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
______ ERROR at setup of test_C400_pass[foo = [x + 1 for x in range(10)]] ______
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 35
  @pytest.mark.parametrize(
      "code",
      [
          "foo = [x + 1 for x in range(10)]",
      ],
  )
  def test_C400_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_ ERROR at setup of test_C400_fail[foo = list(x + 1 for x in range(10))-failures0] _
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 47
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "foo = list(x + 1 for x in range(10))",
              [
                  "./example.py:1:7: C400 Unnecessary generator - rewrite as a list "
                  + "comprehension."
              ],
          ),
          (
              """\
              foobar = list(
                  str(x)
                  for x
                  in range(10)
              )
              """,
              [
                  "./example.py:1:10: C400 Unnecessary generator - rewrite as a list "
                  + "comprehension."
              ],
          ),
      ],
  )
  def test_C400_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_ ERROR at setup of test_C400_fail[            foobar = list(\n                str(x)\n                for x\n                in range(10)\n            )\n            -failures1] _
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 47
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "foo = list(x + 1 for x in range(10))",
              [
                  "./example.py:1:7: C400 Unnecessary generator - rewrite as a list "
                  + "comprehension."
              ],
          ),
          (
              """\
              foobar = list(
                  str(x)
                  for x
                  in range(10)
              )
              """,
              [
                  "./example.py:1:10: C400 Unnecessary generator - rewrite as a list "
                  + "comprehension."
              ],
          ),
      ],
  )
  def test_C400_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
______ ERROR at setup of test_C401_pass[foo = {x + 1 for x in range(10)}] ______
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 78
  @pytest.mark.parametrize(
      "code",
      [
          "foo = {x + 1 for x in range(10)}",
      ],
  )
  def test_C401_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_ ERROR at setup of test_C401_fail[foo = set(x + 1 for x in range(10))-failures0] _
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 90
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "foo = set(x + 1 for x in range(10))",
              [
                  "./example.py:1:7: C401 Unnecessary generator - rewrite as a set "
                  + "comprehension."
              ],
          ),
          (
              """\
              foobar = set(
                  str(x) for x
                  in range(10)
              )
              """,
              [
                  "./example.py:1:10: C401 Unnecessary generator - rewrite as a set "
                  + "comprehension."
              ],
          ),
      ],
  )
  def test_C401_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_ ERROR at setup of test_C401_fail[            foobar = set(\n                str(x) for x\n                in range(10)\n            )\n            -failures1] _
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 90
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "foo = set(x + 1 for x in range(10))",
              [
                  "./example.py:1:7: C401 Unnecessary generator - rewrite as a set "
                  + "comprehension."
              ],
          ),
          (
              """\
              foobar = set(
                  str(x) for x
                  in range(10)
              )
              """,
              [
                  "./example.py:1:10: C401 Unnecessary generator - rewrite as a set "
                  + "comprehension."
              ],
          ),
      ],
  )
  def test_C401_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
____ ERROR at setup of test_C402_pass[foo = {x: str(x) for x in range(10)}] ____
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 120
  @pytest.mark.parametrize(
      "code",
      [
          "foo = {x: str(x) for x in range(10)}",
          """\
          foo = ['a=1', 'b=2', 'c=3']
          dict(pair.split('=') for pair in foo)
          """,
          """\
          foo = [('a', 1), ('b', 2), ('c', 3)]
          dict(pair for pair in foo if pair[1] % 2 == 0)
          """,
          # Previously a false positive:
          "dict(((x, str(x)) for x in range(10)), c=1)",
      ],
  )
  def test_C402_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_ ERROR at setup of test_C402_pass[        foo = ['a=1', 'b=2', 'c=3']\n        dict(pair.split('=') for pair in foo)\n        ] _
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 120
  @pytest.mark.parametrize(
      "code",
      [
          "foo = {x: str(x) for x in range(10)}",
          """\
          foo = ['a=1', 'b=2', 'c=3']
          dict(pair.split('=') for pair in foo)
          """,
          """\
          foo = [('a', 1), ('b', 2), ('c', 3)]
          dict(pair for pair in foo if pair[1] % 2 == 0)
          """,
          # Previously a false positive:
          "dict(((x, str(x)) for x in range(10)), c=1)",
      ],
  )
  def test_C402_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_ ERROR at setup of test_C402_pass[        foo = [('a', 1), ('b', 2), ('c', 3)]\n        dict(pair for pair in foo if pair[1] % 2 == 0)\n        ] _
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 120
  @pytest.mark.parametrize(
      "code",
      [
          "foo = {x: str(x) for x in range(10)}",
          """\
          foo = ['a=1', 'b=2', 'c=3']
          dict(pair.split('=') for pair in foo)
          """,
          """\
          foo = [('a', 1), ('b', 2), ('c', 3)]
          dict(pair for pair in foo if pair[1] % 2 == 0)
          """,
          # Previously a false positive:
          "dict(((x, str(x)) for x in range(10)), c=1)",
      ],
  )
  def test_C402_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_ ERROR at setup of test_C402_pass[dict(((x, str(x)) for x in range(10)), c=1)] _
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 120
  @pytest.mark.parametrize(
      "code",
      [
          "foo = {x: str(x) for x in range(10)}",
          """\
          foo = ['a=1', 'b=2', 'c=3']
          dict(pair.split('=') for pair in foo)
          """,
          """\
          foo = [('a', 1), ('b', 2), ('c', 3)]
          dict(pair for pair in foo if pair[1] % 2 == 0)
          """,
          # Previously a false positive:
          "dict(((x, str(x)) for x in range(10)), c=1)",
      ],
  )
  def test_C402_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_ ERROR at setup of test_C402_fail[foo = dict((x, str(x)) for x in range(10))-failures0] _
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 142
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "foo = dict((x, str(x)) for x in range(10))",
              [
                  "./example.py:1:7: C402 Unnecessary generator - rewrite as a dict "
                  + "comprehension."
              ],
          ),
          (
              """\
              foobar = dict(
                  (x, str(x))
                  for x
                  in range(10)
              )
              """,
              [
                  "./example.py:1:10: C402 Unnecessary generator - rewrite as a dict "
                  + "comprehension."
              ],
          ),
      ],
  )
  def test_C402_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_ ERROR at setup of test_C402_fail[            foobar = dict(\n                (x, str(x))\n                for x\n                in range(10)\n            )\n            -failures1] _
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 142
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "foo = dict((x, str(x)) for x in range(10))",
              [
                  "./example.py:1:7: C402 Unnecessary generator - rewrite as a dict "
                  + "comprehension."
              ],
          ),
          (
              """\
              foobar = dict(
                  (x, str(x))
                  for x
                  in range(10)
              )
              """,
              [
                  "./example.py:1:10: C402 Unnecessary generator - rewrite as a dict "
                  + "comprehension."
              ],
          ),
      ],
  )
  def test_C402_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
______ ERROR at setup of test_C403_pass[foo = {x + 1 for x in range(10)}] ______
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 173
  @pytest.mark.parametrize(
      "code",
      [
          "foo = {x + 1 for x in range(10)}",
      ],
  )
  def test_C403_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_ ERROR at setup of test_C403_fail[foo = set([x + 1 for x in range(10)])-failures0] _
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 185
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "foo = set([x + 1 for x in range(10)])",
              [
                  "./example.py:1:7: C403 Unnecessary list comprehension - rewrite as a "
                  + "set comprehension."
              ],
          ),
      ],
  )
  def test_C403_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
______ ERROR at setup of test_C404_pass[foo = {x: x for x in range(10)}] _______
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 203
  @pytest.mark.parametrize(
      "code",
      [
          "foo = {x: x for x in range(10)}",
          # Previously a false positive:
          "foo = dict([x.split('=') for x in ['a=1', 'b=2']])",
          # Previously a false positive:
          "dict([(x, x) for x in range(10)], y=2)",
      ],
  )
  def test_C404_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_ ERROR at setup of test_C404_pass[foo = dict([x.split('=') for x in ['a=1', 'b=2']])] _
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 203
  @pytest.mark.parametrize(
      "code",
      [
          "foo = {x: x for x in range(10)}",
          # Previously a false positive:
          "foo = dict([x.split('=') for x in ['a=1', 'b=2']])",
          # Previously a false positive:
          "dict([(x, x) for x in range(10)], y=2)",
      ],
  )
  def test_C404_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
___ ERROR at setup of test_C404_pass[dict([(x, x) for x in range(10)], y=2)] ___
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 203
  @pytest.mark.parametrize(
      "code",
      [
          "foo = {x: x for x in range(10)}",
          # Previously a false positive:
          "foo = dict([x.split('=') for x in ['a=1', 'b=2']])",
          # Previously a false positive:
          "dict([(x, x) for x in range(10)], y=2)",
      ],
  )
  def test_C404_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_ ERROR at setup of test_C404_fail[foo = dict([(x, x) for x in range(10)])-failures0] _
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 219
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "foo = dict([(x, x) for x in range(10)])",
              [
                  "./example.py:1:7: C404 Unnecessary list comprehension - rewrite as a "
                  + "dict comprehension."
              ],
          ),
      ],
  )
  def test_C404_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
______________ ERROR at setup of test_C405_pass[foo = set(range)] ______________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 237
  @pytest.mark.parametrize(
      "code",
      [
          "foo = set(range)",
      ],
  )
  def test_C405_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
__________ ERROR at setup of test_C405_fail[foo = set([])-failures0] ___________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 249
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "foo = set([])",
              [
                  "./example.py:1:7: C405 Unnecessary list literal - rewrite as a set "
                  + "literal."
              ],
          ),
          (
              "foo = set([1])",
              [
                  "./example.py:1:7: C405 Unnecessary list literal - rewrite as a set "
                  + "literal."
              ],
          ),
          (
              "foo = set(())",
              [
                  "./example.py:1:7: C405 Unnecessary tuple literal - rewrite as a set "
                  + "literal."
              ],
          ),
          (
              "foo = set((1,))",
              [
                  "./example.py:1:7: C405 Unnecessary tuple literal - rewrite as a set "
                  + "literal."
              ],
          ),
      ],
  )
  def test_C405_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
__________ ERROR at setup of test_C405_fail[foo = set([1])-failures1] __________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 249
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "foo = set([])",
              [
                  "./example.py:1:7: C405 Unnecessary list literal - rewrite as a set "
                  + "literal."
              ],
          ),
          (
              "foo = set([1])",
              [
                  "./example.py:1:7: C405 Unnecessary list literal - rewrite as a set "
                  + "literal."
              ],
          ),
          (
              "foo = set(())",
              [
                  "./example.py:1:7: C405 Unnecessary tuple literal - rewrite as a set "
                  + "literal."
              ],
          ),
          (
              "foo = set((1,))",
              [
                  "./example.py:1:7: C405 Unnecessary tuple literal - rewrite as a set "
                  + "literal."
              ],
          ),
      ],
  )
  def test_C405_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
__________ ERROR at setup of test_C405_fail[foo = set(())-failures2] ___________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 249
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "foo = set([])",
              [
                  "./example.py:1:7: C405 Unnecessary list literal - rewrite as a set "
                  + "literal."
              ],
          ),
          (
              "foo = set([1])",
              [
                  "./example.py:1:7: C405 Unnecessary list literal - rewrite as a set "
                  + "literal."
              ],
          ),
          (
              "foo = set(())",
              [
                  "./example.py:1:7: C405 Unnecessary tuple literal - rewrite as a set "
                  + "literal."
              ],
          ),
          (
              "foo = set((1,))",
              [
                  "./example.py:1:7: C405 Unnecessary tuple literal - rewrite as a set "
                  + "literal."
              ],
          ),
      ],
  )
  def test_C405_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_________ ERROR at setup of test_C405_fail[foo = set((1,))-failures3] __________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 249
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "foo = set([])",
              [
                  "./example.py:1:7: C405 Unnecessary list literal - rewrite as a set "
                  + "literal."
              ],
          ),
          (
              "foo = set([1])",
              [
                  "./example.py:1:7: C405 Unnecessary list literal - rewrite as a set "
                  + "literal."
              ],
          ),
          (
              "foo = set(())",
              [
                  "./example.py:1:7: C405 Unnecessary tuple literal - rewrite as a set "
                  + "literal."
              ],
          ),
          (
              "foo = set((1,))",
              [
                  "./example.py:1:7: C405 Unnecessary tuple literal - rewrite as a set "
                  + "literal."
              ],
          ),
      ],
  )
  def test_C405_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_____________ ERROR at setup of test_C406_pass[foo = dict(range)] ______________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 288
  @pytest.mark.parametrize(
      "code",
      [
          "foo = dict(range)",
          "something = (1, 2); dict([something])",
          "dict([(1,)])",
      ],
  )
  def test_C406_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
___ ERROR at setup of test_C406_pass[something = (1, 2); dict([something])] ____
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 288
  @pytest.mark.parametrize(
      "code",
      [
          "foo = dict(range)",
          "something = (1, 2); dict([something])",
          "dict([(1,)])",
      ],
  )
  def test_C406_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
________________ ERROR at setup of test_C406_pass[dict([(1,)])] ________________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 288
  @pytest.mark.parametrize(
      "code",
      [
          "foo = dict(range)",
          "something = (1, 2); dict([something])",
          "dict([(1,)])",
      ],
  )
  def test_C406_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
__________ ERROR at setup of test_C406_fail[foo = dict([])-failures0] __________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 302
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "foo = dict([])",
              [
                  "./example.py:1:7: C406 Unnecessary list literal - rewrite as a dict "
                  + "literal."
              ],
          ),
          (
              "foo = dict([(1, 2)])",
              [
                  "./example.py:1:7: C406 Unnecessary list literal - rewrite as a dict "
                  + "literal."
              ],
          ),
          (
              "foo = dict(())",
              [
                  "./example.py:1:7: C406 Unnecessary tuple literal - rewrite as a dict "
                  + "literal."
              ],
          ),
          (
              "foo = dict(((1, 2),))",
              [
                  "./example.py:1:7: C406 Unnecessary tuple literal - rewrite as a dict "
                  + "literal."
              ],
          ),
      ],
  )
  def test_C406_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_______ ERROR at setup of test_C406_fail[foo = dict([(1, 2)])-failures1] _______
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 302
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "foo = dict([])",
              [
                  "./example.py:1:7: C406 Unnecessary list literal - rewrite as a dict "
                  + "literal."
              ],
          ),
          (
              "foo = dict([(1, 2)])",
              [
                  "./example.py:1:7: C406 Unnecessary list literal - rewrite as a dict "
                  + "literal."
              ],
          ),
          (
              "foo = dict(())",
              [
                  "./example.py:1:7: C406 Unnecessary tuple literal - rewrite as a dict "
                  + "literal."
              ],
          ),
          (
              "foo = dict(((1, 2),))",
              [
                  "./example.py:1:7: C406 Unnecessary tuple literal - rewrite as a dict "
                  + "literal."
              ],
          ),
      ],
  )
  def test_C406_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
__________ ERROR at setup of test_C406_fail[foo = dict(())-failures2] __________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 302
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "foo = dict([])",
              [
                  "./example.py:1:7: C406 Unnecessary list literal - rewrite as a dict "
                  + "literal."
              ],
          ),
          (
              "foo = dict([(1, 2)])",
              [
                  "./example.py:1:7: C406 Unnecessary list literal - rewrite as a dict "
                  + "literal."
              ],
          ),
          (
              "foo = dict(())",
              [
                  "./example.py:1:7: C406 Unnecessary tuple literal - rewrite as a dict "
                  + "literal."
              ],
          ),
          (
              "foo = dict(((1, 2),))",
              [
                  "./example.py:1:7: C406 Unnecessary tuple literal - rewrite as a dict "
                  + "literal."
              ],
          ),
      ],
  )
  def test_C406_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
______ ERROR at setup of test_C406_fail[foo = dict(((1, 2),))-failures3] _______
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 302
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "foo = dict([])",
              [
                  "./example.py:1:7: C406 Unnecessary list literal - rewrite as a dict "
                  + "literal."
              ],
          ),
          (
              "foo = dict([(1, 2)])",
              [
                  "./example.py:1:7: C406 Unnecessary list literal - rewrite as a dict "
                  + "literal."
              ],
          ),
          (
              "foo = dict(())",
              [
                  "./example.py:1:7: C406 Unnecessary tuple literal - rewrite as a dict "
                  + "literal."
              ],
          ),
          (
              "foo = dict(((1, 2),))",
              [
                  "./example.py:1:7: C406 Unnecessary tuple literal - rewrite as a dict "
                  + "literal."
              ],
          ),
      ],
  )
  def test_C406_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_____________________ ERROR at setup of test_C408_pass[()] _____________________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 341
  @pytest.mark.parametrize(
      "code",
      [
          "()",
          "[]",
          "{}",
          "set()",
          """\
          foo = [('foo', 2)]
          dict(foo)
          """,
          """\
          foo = {}
          dict(bar=1, **foo)
          """,
          """\
          foo = [1, 2]
          list(foo)
          """,
          """\
          foo = [1, 2]
          list(*foo)
          """,
      ],
  )
  def test_C408_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_____________________ ERROR at setup of test_C408_pass[[]] _____________________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 341
  @pytest.mark.parametrize(
      "code",
      [
          "()",
          "[]",
          "{}",
          "set()",
          """\
          foo = [('foo', 2)]
          dict(foo)
          """,
          """\
          foo = {}
          dict(bar=1, **foo)
          """,
          """\
          foo = [1, 2]
          list(foo)
          """,
          """\
          foo = [1, 2]
          list(*foo)
          """,
      ],
  )
  def test_C408_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_____________________ ERROR at setup of test_C408_pass[{}] _____________________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 341
  @pytest.mark.parametrize(
      "code",
      [
          "()",
          "[]",
          "{}",
          "set()",
          """\
          foo = [('foo', 2)]
          dict(foo)
          """,
          """\
          foo = {}
          dict(bar=1, **foo)
          """,
          """\
          foo = [1, 2]
          list(foo)
          """,
          """\
          foo = [1, 2]
          list(*foo)
          """,
      ],
  )
  def test_C408_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
___________________ ERROR at setup of test_C408_pass[set()] ____________________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 341
  @pytest.mark.parametrize(
      "code",
      [
          "()",
          "[]",
          "{}",
          "set()",
          """\
          foo = [('foo', 2)]
          dict(foo)
          """,
          """\
          foo = {}
          dict(bar=1, **foo)
          """,
          """\
          foo = [1, 2]
          list(foo)
          """,
          """\
          foo = [1, 2]
          list(*foo)
          """,
      ],
  )
  def test_C408_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_ ERROR at setup of test_C408_pass[        foo = [('foo', 2)]\n        dict(foo)\n        ] _
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 341
  @pytest.mark.parametrize(
      "code",
      [
          "()",
          "[]",
          "{}",
          "set()",
          """\
          foo = [('foo', 2)]
          dict(foo)
          """,
          """\
          foo = {}
          dict(bar=1, **foo)
          """,
          """\
          foo = [1, 2]
          list(foo)
          """,
          """\
          foo = [1, 2]
          list(*foo)
          """,
      ],
  )
  def test_C408_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_ ERROR at setup of test_C408_pass[        foo = {}\n        dict(bar=1, **foo)\n        ] _
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 341
  @pytest.mark.parametrize(
      "code",
      [
          "()",
          "[]",
          "{}",
          "set()",
          """\
          foo = [('foo', 2)]
          dict(foo)
          """,
          """\
          foo = {}
          dict(bar=1, **foo)
          """,
          """\
          foo = [1, 2]
          list(foo)
          """,
          """\
          foo = [1, 2]
          list(*foo)
          """,
      ],
  )
  def test_C408_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_ ERROR at setup of test_C408_pass[        foo = [1, 2]\n        list(foo)\n        ] _
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 341
  @pytest.mark.parametrize(
      "code",
      [
          "()",
          "[]",
          "{}",
          "set()",
          """\
          foo = [('foo', 2)]
          dict(foo)
          """,
          """\
          foo = {}
          dict(bar=1, **foo)
          """,
          """\
          foo = [1, 2]
          list(foo)
          """,
          """\
          foo = [1, 2]
          list(*foo)
          """,
      ],
  )
  def test_C408_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_ ERROR at setup of test_C408_pass[        foo = [1, 2]\n        list(*foo)\n        ] _
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 341
  @pytest.mark.parametrize(
      "code",
      [
          "()",
          "[]",
          "{}",
          "set()",
          """\
          foo = [('foo', 2)]
          dict(foo)
          """,
          """\
          foo = {}
          dict(bar=1, **foo)
          """,
          """\
          foo = [1, 2]
          list(foo)
          """,
          """\
          foo = [1, 2]
          list(*foo)
          """,
      ],
  )
  def test_C408_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_____________ ERROR at setup of test_C408_fail[tuple()-failures0] ______________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 372
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "tuple()",
              ["./example.py:1:1: C408 Unnecessary tuple call - rewrite as a literal."],
          ),
          (
              "list()",
              ["./example.py:1:1: C408 Unnecessary list call - rewrite as a literal."],
          ),
          (
              "dict()",
              ["./example.py:1:1: C408 Unnecessary dict call - rewrite as a literal."],
          ),
          (
              "dict(a=1)",
              ["./example.py:1:1: C408 Unnecessary dict call - rewrite as a literal."],
          ),
      ],
  )
  def test_C408_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
______________ ERROR at setup of test_C408_fail[list()-failures1] ______________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 372
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "tuple()",
              ["./example.py:1:1: C408 Unnecessary tuple call - rewrite as a literal."],
          ),
          (
              "list()",
              ["./example.py:1:1: C408 Unnecessary list call - rewrite as a literal."],
          ),
          (
              "dict()",
              ["./example.py:1:1: C408 Unnecessary dict call - rewrite as a literal."],
          ),
          (
              "dict(a=1)",
              ["./example.py:1:1: C408 Unnecessary dict call - rewrite as a literal."],
          ),
      ],
  )
  def test_C408_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
______________ ERROR at setup of test_C408_fail[dict()-failures2] ______________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 372
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "tuple()",
              ["./example.py:1:1: C408 Unnecessary tuple call - rewrite as a literal."],
          ),
          (
              "list()",
              ["./example.py:1:1: C408 Unnecessary list call - rewrite as a literal."],
          ),
          (
              "dict()",
              ["./example.py:1:1: C408 Unnecessary dict call - rewrite as a literal."],
          ),
          (
              "dict(a=1)",
              ["./example.py:1:1: C408 Unnecessary dict call - rewrite as a literal."],
          ),
      ],
  )
  def test_C408_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
____________ ERROR at setup of test_C408_fail[dict(a=1)-failures3] _____________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 372
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "tuple()",
              ["./example.py:1:1: C408 Unnecessary tuple call - rewrite as a literal."],
          ),
          (
              "list()",
              ["./example.py:1:1: C408 Unnecessary list call - rewrite as a literal."],
          ),
          (
              "dict()",
              ["./example.py:1:1: C408 Unnecessary dict call - rewrite as a literal."],
          ),
          (
              "dict(a=1)",
              ["./example.py:1:1: C408 Unnecessary dict call - rewrite as a literal."],
          ),
      ],
  )
  def test_C408_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_____________ ERROR at setup of test_C409_pass[foo = tuple(range)] _____________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 399
  @pytest.mark.parametrize(
      "code",
      [
          "foo = tuple(range)",
      ],
  )
  def test_C409_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_________ ERROR at setup of test_C409_fail[foo = tuple([])-failures0] __________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 411
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "foo = tuple([])",
              [
                  "./example.py:1:7: C409 Unnecessary list passed to tuple() - "
                  + "rewrite as a tuple literal."
              ],
          ),
          (
              "foo = tuple([1, 2])",
              [
                  "./example.py:1:7: C409 Unnecessary list passed to tuple() - "
                  + "rewrite as a tuple literal."
              ],
          ),
          (
              "foo = tuple(())",
              [
                  "./example.py:1:7: C409 Unnecessary tuple passed to tuple() - remove "
                  + "the outer call to tuple()."
              ],
          ),
          (
              "foo = tuple((1, 2))",
              [
                  "./example.py:1:7: C409 Unnecessary tuple passed to tuple() - remove "
                  + "the outer call to tuple()."
              ],
          ),
      ],
  )
  def test_C409_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_______ ERROR at setup of test_C409_fail[foo = tuple([1, 2])-failures1] ________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 411
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "foo = tuple([])",
              [
                  "./example.py:1:7: C409 Unnecessary list passed to tuple() - "
                  + "rewrite as a tuple literal."
              ],
          ),
          (
              "foo = tuple([1, 2])",
              [
                  "./example.py:1:7: C409 Unnecessary list passed to tuple() - "
                  + "rewrite as a tuple literal."
              ],
          ),
          (
              "foo = tuple(())",
              [
                  "./example.py:1:7: C409 Unnecessary tuple passed to tuple() - remove "
                  + "the outer call to tuple()."
              ],
          ),
          (
              "foo = tuple((1, 2))",
              [
                  "./example.py:1:7: C409 Unnecessary tuple passed to tuple() - remove "
                  + "the outer call to tuple()."
              ],
          ),
      ],
  )
  def test_C409_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_________ ERROR at setup of test_C409_fail[foo = tuple(())-failures2] __________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 411
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "foo = tuple([])",
              [
                  "./example.py:1:7: C409 Unnecessary list passed to tuple() - "
                  + "rewrite as a tuple literal."
              ],
          ),
          (
              "foo = tuple([1, 2])",
              [
                  "./example.py:1:7: C409 Unnecessary list passed to tuple() - "
                  + "rewrite as a tuple literal."
              ],
          ),
          (
              "foo = tuple(())",
              [
                  "./example.py:1:7: C409 Unnecessary tuple passed to tuple() - remove "
                  + "the outer call to tuple()."
              ],
          ),
          (
              "foo = tuple((1, 2))",
              [
                  "./example.py:1:7: C409 Unnecessary tuple passed to tuple() - remove "
                  + "the outer call to tuple()."
              ],
          ),
      ],
  )
  def test_C409_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_______ ERROR at setup of test_C409_fail[foo = tuple((1, 2))-failures3] ________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 411
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "foo = tuple([])",
              [
                  "./example.py:1:7: C409 Unnecessary list passed to tuple() - "
                  + "rewrite as a tuple literal."
              ],
          ),
          (
              "foo = tuple([1, 2])",
              [
                  "./example.py:1:7: C409 Unnecessary list passed to tuple() - "
                  + "rewrite as a tuple literal."
              ],
          ),
          (
              "foo = tuple(())",
              [
                  "./example.py:1:7: C409 Unnecessary tuple passed to tuple() - remove "
                  + "the outer call to tuple()."
              ],
          ),
          (
              "foo = tuple((1, 2))",
              [
                  "./example.py:1:7: C409 Unnecessary tuple passed to tuple() - remove "
                  + "the outer call to tuple()."
              ],
          ),
      ],
  )
  def test_C409_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_____________ ERROR at setup of test_C410_pass[foo = list(range)] ______________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 450
  @pytest.mark.parametrize(
      "code",
      [
          "foo = list(range)",
      ],
  )
  def test_C410_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
__________ ERROR at setup of test_C410_fail[foo = list([])-failures0] __________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 462
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "foo = list([])",
              [
                  "./example.py:1:7: C410 Unnecessary list passed to list() - remove the "
                  + "outer call to list()."
              ],
          ),
          (
              "foo = list([1, 2])",
              [
                  "./example.py:1:7: C410 Unnecessary list passed to list() - remove the "
                  + "outer call to list()."
              ],
          ),
          (
              "foo = list(())",
              [
                  "./example.py:1:7: C410 Unnecessary tuple passed to list() - "
                  + "rewrite as a list literal."
              ],
          ),
          (
              "foo = list((1, 2))",
              [
                  "./example.py:1:7: C410 Unnecessary tuple passed to list() - "
                  + "rewrite as a list literal."
              ],
          ),
      ],
  )
  def test_C410_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
________ ERROR at setup of test_C410_fail[foo = list([1, 2])-failures1] ________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 462
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "foo = list([])",
              [
                  "./example.py:1:7: C410 Unnecessary list passed to list() - remove the "
                  + "outer call to list()."
              ],
          ),
          (
              "foo = list([1, 2])",
              [
                  "./example.py:1:7: C410 Unnecessary list passed to list() - remove the "
                  + "outer call to list()."
              ],
          ),
          (
              "foo = list(())",
              [
                  "./example.py:1:7: C410 Unnecessary tuple passed to list() - "
                  + "rewrite as a list literal."
              ],
          ),
          (
              "foo = list((1, 2))",
              [
                  "./example.py:1:7: C410 Unnecessary tuple passed to list() - "
                  + "rewrite as a list literal."
              ],
          ),
      ],
  )
  def test_C410_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
__________ ERROR at setup of test_C410_fail[foo = list(())-failures2] __________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 462
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "foo = list([])",
              [
                  "./example.py:1:7: C410 Unnecessary list passed to list() - remove the "
                  + "outer call to list()."
              ],
          ),
          (
              "foo = list([1, 2])",
              [
                  "./example.py:1:7: C410 Unnecessary list passed to list() - remove the "
                  + "outer call to list()."
              ],
          ),
          (
              "foo = list(())",
              [
                  "./example.py:1:7: C410 Unnecessary tuple passed to list() - "
                  + "rewrite as a list literal."
              ],
          ),
          (
              "foo = list((1, 2))",
              [
                  "./example.py:1:7: C410 Unnecessary tuple passed to list() - "
                  + "rewrite as a list literal."
              ],
          ),
      ],
  )
  def test_C410_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
________ ERROR at setup of test_C410_fail[foo = list((1, 2))-failures3] ________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 462
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "foo = list([])",
              [
                  "./example.py:1:7: C410 Unnecessary list passed to list() - remove the "
                  + "outer call to list()."
              ],
          ),
          (
              "foo = list([1, 2])",
              [
                  "./example.py:1:7: C410 Unnecessary list passed to list() - remove the "
                  + "outer call to list()."
              ],
          ),
          (
              "foo = list(())",
              [
                  "./example.py:1:7: C410 Unnecessary tuple passed to list() - "
                  + "rewrite as a list literal."
              ],
          ),
          (
              "foo = list((1, 2))",
              [
                  "./example.py:1:7: C410 Unnecessary tuple passed to list() - "
                  + "rewrite as a list literal."
              ],
          ),
      ],
  )
  def test_C410_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_________ ERROR at setup of test_C411_pass[[x + 1 for x in range(10)]] _________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 501
  @pytest.mark.parametrize(
      "code",
      [
          "[x + 1 for x in range(10)]",
      ],
  )
  def test_C411_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_ ERROR at setup of test_C411_fail[list([x + 1 for x in range(10)])-failures0] _
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 513
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "list([x + 1 for x in range(10)])",
              [
                  "./example.py:1:1: C411 Unnecessary list call - remove the outer call "
                  + "to list()."
              ],
          ),
      ],
  )
  def test_C411_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_____________ ERROR at setup of test_C413_pass[sorted([2, 3, 1])] ______________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 531
  @pytest.mark.parametrize(
      "code",
      [
          "sorted([2, 3, 1])",
          "sorted([2, 3, 1], reverse=True)",
          "sorted([2, 3, 1], reverse=False)",
          "sorted([2, 3, 1], reverse=0)",
          "sorted([2, 3, 1], reverse=1)",
          "reversed([2, 3, 1])",
      ],
  )
  def test_C413_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
______ ERROR at setup of test_C413_pass[sorted([2, 3, 1], reverse=True)] _______
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 531
  @pytest.mark.parametrize(
      "code",
      [
          "sorted([2, 3, 1])",
          "sorted([2, 3, 1], reverse=True)",
          "sorted([2, 3, 1], reverse=False)",
          "sorted([2, 3, 1], reverse=0)",
          "sorted([2, 3, 1], reverse=1)",
          "reversed([2, 3, 1])",
      ],
  )
  def test_C413_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
______ ERROR at setup of test_C413_pass[sorted([2, 3, 1], reverse=False)] ______
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 531
  @pytest.mark.parametrize(
      "code",
      [
          "sorted([2, 3, 1])",
          "sorted([2, 3, 1], reverse=True)",
          "sorted([2, 3, 1], reverse=False)",
          "sorted([2, 3, 1], reverse=0)",
          "sorted([2, 3, 1], reverse=1)",
          "reversed([2, 3, 1])",
      ],
  )
  def test_C413_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
________ ERROR at setup of test_C413_pass[sorted([2, 3, 1], reverse=0)] ________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 531
  @pytest.mark.parametrize(
      "code",
      [
          "sorted([2, 3, 1])",
          "sorted([2, 3, 1], reverse=True)",
          "sorted([2, 3, 1], reverse=False)",
          "sorted([2, 3, 1], reverse=0)",
          "sorted([2, 3, 1], reverse=1)",
          "reversed([2, 3, 1])",
      ],
  )
  def test_C413_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
________ ERROR at setup of test_C413_pass[sorted([2, 3, 1], reverse=1)] ________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 531
  @pytest.mark.parametrize(
      "code",
      [
          "sorted([2, 3, 1])",
          "sorted([2, 3, 1], reverse=True)",
          "sorted([2, 3, 1], reverse=False)",
          "sorted([2, 3, 1], reverse=0)",
          "sorted([2, 3, 1], reverse=1)",
          "reversed([2, 3, 1])",
      ],
  )
  def test_C413_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
____________ ERROR at setup of test_C413_pass[reversed([2, 3, 1])] _____________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 531
  @pytest.mark.parametrize(
      "code",
      [
          "sorted([2, 3, 1])",
          "sorted([2, 3, 1], reverse=True)",
          "sorted([2, 3, 1], reverse=False)",
          "sorted([2, 3, 1], reverse=0)",
          "sorted([2, 3, 1], reverse=1)",
          "reversed([2, 3, 1])",
      ],
  )
  def test_C413_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_____ ERROR at setup of test_C413_fail[list(sorted([2, 3, 1]))-failures0] ______
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 548
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "list(sorted([2, 3, 1]))",
              ["./example.py:1:1: C413 Unnecessary list call around sorted()."],
          ),
          (
              "reversed(sorted([2, 3, 1]))",
              [
                  "./example.py:1:1: C413 Unnecessary reversed call around sorted()"
                  + " - use sorted(..., reverse=True)."
              ],
          ),
          (
              "reversed(sorted([2, 3, 1], reverse=False))",
              [
                  "./example.py:1:1: C413 Unnecessary reversed call around sorted()"
                  + " - use sorted(..., reverse=True)."
              ],
          ),
          (
              "reversed(sorted([2, 3, 1], reverse=True))",
              [
                  "./example.py:1:1: C413 Unnecessary reversed call around sorted()"
                  + " - use sorted(..., reverse=False)."
              ],
          ),
          (
              "reversed(sorted([2, 3, 1], reverse=0))",
              [
                  "./example.py:1:1: C413 Unnecessary reversed call around sorted()"
                  + " - use sorted(..., reverse=True)."
              ],
          ),
          (
              "reversed(sorted([2, 3, 1], reverse=1))",
              [
                  "./example.py:1:1: C413 Unnecessary reversed call around sorted()"
                  + " - use sorted(..., reverse=False)."
              ],
          ),
          (
              "reversed(sorted([2, 3, 1], reverse=bool()))",
              [
                  "./example.py:1:1: C413 Unnecessary reversed call around sorted()"
                  + " - toggle reverse argument to sorted()."
              ],
          ),
          (
              "reversed(sorted([2, 3, 1], reverse=not True))",
              [
                  "./example.py:1:1: C413 Unnecessary reversed call around sorted()"
                  + " - toggle reverse argument to sorted()."
              ],
          ),
      ],
  )
  def test_C413_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
___ ERROR at setup of test_C413_fail[reversed(sorted([2, 3, 1]))-failures1] ____
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 548
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "list(sorted([2, 3, 1]))",
              ["./example.py:1:1: C413 Unnecessary list call around sorted()."],
          ),
          (
              "reversed(sorted([2, 3, 1]))",
              [
                  "./example.py:1:1: C413 Unnecessary reversed call around sorted()"
                  + " - use sorted(..., reverse=True)."
              ],
          ),
          (
              "reversed(sorted([2, 3, 1], reverse=False))",
              [
                  "./example.py:1:1: C413 Unnecessary reversed call around sorted()"
                  + " - use sorted(..., reverse=True)."
              ],
          ),
          (
              "reversed(sorted([2, 3, 1], reverse=True))",
              [
                  "./example.py:1:1: C413 Unnecessary reversed call around sorted()"
                  + " - use sorted(..., reverse=False)."
              ],
          ),
          (
              "reversed(sorted([2, 3, 1], reverse=0))",
              [
                  "./example.py:1:1: C413 Unnecessary reversed call around sorted()"
                  + " - use sorted(..., reverse=True)."
              ],
          ),
          (
              "reversed(sorted([2, 3, 1], reverse=1))",
              [
                  "./example.py:1:1: C413 Unnecessary reversed call around sorted()"
                  + " - use sorted(..., reverse=False)."
              ],
          ),
          (
              "reversed(sorted([2, 3, 1], reverse=bool()))",
              [
                  "./example.py:1:1: C413 Unnecessary reversed call around sorted()"
                  + " - toggle reverse argument to sorted()."
              ],
          ),
          (
              "reversed(sorted([2, 3, 1], reverse=not True))",
              [
                  "./example.py:1:1: C413 Unnecessary reversed call around sorted()"
                  + " - toggle reverse argument to sorted()."
              ],
          ),
      ],
  )
  def test_C413_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_ ERROR at setup of test_C413_fail[reversed(sorted([2, 3, 1], reverse=False))-failures2] _
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 548
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "list(sorted([2, 3, 1]))",
              ["./example.py:1:1: C413 Unnecessary list call around sorted()."],
          ),
          (
              "reversed(sorted([2, 3, 1]))",
              [
                  "./example.py:1:1: C413 Unnecessary reversed call around sorted()"
                  + " - use sorted(..., reverse=True)."
              ],
          ),
          (
              "reversed(sorted([2, 3, 1], reverse=False))",
              [
                  "./example.py:1:1: C413 Unnecessary reversed call around sorted()"
                  + " - use sorted(..., reverse=True)."
              ],
          ),
          (
              "reversed(sorted([2, 3, 1], reverse=True))",
              [
                  "./example.py:1:1: C413 Unnecessary reversed call around sorted()"
                  + " - use sorted(..., reverse=False)."
              ],
          ),
          (
              "reversed(sorted([2, 3, 1], reverse=0))",
              [
                  "./example.py:1:1: C413 Unnecessary reversed call around sorted()"
                  + " - use sorted(..., reverse=True)."
              ],
          ),
          (
              "reversed(sorted([2, 3, 1], reverse=1))",
              [
                  "./example.py:1:1: C413 Unnecessary reversed call around sorted()"
                  + " - use sorted(..., reverse=False)."
              ],
          ),
          (
              "reversed(sorted([2, 3, 1], reverse=bool()))",
              [
                  "./example.py:1:1: C413 Unnecessary reversed call around sorted()"
                  + " - toggle reverse argument to sorted()."
              ],
          ),
          (
              "reversed(sorted([2, 3, 1], reverse=not True))",
              [
                  "./example.py:1:1: C413 Unnecessary reversed call around sorted()"
                  + " - toggle reverse argument to sorted()."
              ],
          ),
      ],
  )
  def test_C413_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_ ERROR at setup of test_C413_fail[reversed(sorted([2, 3, 1], reverse=True))-failures3] _
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 548
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "list(sorted([2, 3, 1]))",
              ["./example.py:1:1: C413 Unnecessary list call around sorted()."],
          ),
          (
              "reversed(sorted([2, 3, 1]))",
              [
                  "./example.py:1:1: C413 Unnecessary reversed call around sorted()"
                  + " - use sorted(..., reverse=True)."
              ],
          ),
          (
              "reversed(sorted([2, 3, 1], reverse=False))",
              [
                  "./example.py:1:1: C413 Unnecessary reversed call around sorted()"
                  + " - use sorted(..., reverse=True)."
              ],
          ),
          (
              "reversed(sorted([2, 3, 1], reverse=True))",
              [
                  "./example.py:1:1: C413 Unnecessary reversed call around sorted()"
                  + " - use sorted(..., reverse=False)."
              ],
          ),
          (
              "reversed(sorted([2, 3, 1], reverse=0))",
              [
                  "./example.py:1:1: C413 Unnecessary reversed call around sorted()"
                  + " - use sorted(..., reverse=True)."
              ],
          ),
          (
              "reversed(sorted([2, 3, 1], reverse=1))",
              [
                  "./example.py:1:1: C413 Unnecessary reversed call around sorted()"
                  + " - use sorted(..., reverse=False)."
              ],
          ),
          (
              "reversed(sorted([2, 3, 1], reverse=bool()))",
              [
                  "./example.py:1:1: C413 Unnecessary reversed call around sorted()"
                  + " - toggle reverse argument to sorted()."
              ],
          ),
          (
              "reversed(sorted([2, 3, 1], reverse=not True))",
              [
                  "./example.py:1:1: C413 Unnecessary reversed call around sorted()"
                  + " - toggle reverse argument to sorted()."
              ],
          ),
      ],
  )
  def test_C413_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_ ERROR at setup of test_C413_fail[reversed(sorted([2, 3, 1], reverse=0))-failures4] _
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 548
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "list(sorted([2, 3, 1]))",
              ["./example.py:1:1: C413 Unnecessary list call around sorted()."],
          ),
          (
              "reversed(sorted([2, 3, 1]))",
              [
                  "./example.py:1:1: C413 Unnecessary reversed call around sorted()"
                  + " - use sorted(..., reverse=True)."
              ],
          ),
          (
              "reversed(sorted([2, 3, 1], reverse=False))",
              [
                  "./example.py:1:1: C413 Unnecessary reversed call around sorted()"
                  + " - use sorted(..., reverse=True)."
              ],
          ),
          (
              "reversed(sorted([2, 3, 1], reverse=True))",
              [
                  "./example.py:1:1: C413 Unnecessary reversed call around sorted()"
                  + " - use sorted(..., reverse=False)."
              ],
          ),
          (
              "reversed(sorted([2, 3, 1], reverse=0))",
              [
                  "./example.py:1:1: C413 Unnecessary reversed call around sorted()"
                  + " - use sorted(..., reverse=True)."
              ],
          ),
          (
              "reversed(sorted([2, 3, 1], reverse=1))",
              [
                  "./example.py:1:1: C413 Unnecessary reversed call around sorted()"
                  + " - use sorted(..., reverse=False)."
              ],
          ),
          (
              "reversed(sorted([2, 3, 1], reverse=bool()))",
              [
                  "./example.py:1:1: C413 Unnecessary reversed call around sorted()"
                  + " - toggle reverse argument to sorted()."
              ],
          ),
          (
              "reversed(sorted([2, 3, 1], reverse=not True))",
              [
                  "./example.py:1:1: C413 Unnecessary reversed call around sorted()"
                  + " - toggle reverse argument to sorted()."
              ],
          ),
      ],
  )
  def test_C413_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_ ERROR at setup of test_C413_fail[reversed(sorted([2, 3, 1], reverse=1))-failures5] _
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 548
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "list(sorted([2, 3, 1]))",
              ["./example.py:1:1: C413 Unnecessary list call around sorted()."],
          ),
          (
              "reversed(sorted([2, 3, 1]))",
              [
                  "./example.py:1:1: C413 Unnecessary reversed call around sorted()"
                  + " - use sorted(..., reverse=True)."
              ],
          ),
          (
              "reversed(sorted([2, 3, 1], reverse=False))",
              [
                  "./example.py:1:1: C413 Unnecessary reversed call around sorted()"
                  + " - use sorted(..., reverse=True)."
              ],
          ),
          (
              "reversed(sorted([2, 3, 1], reverse=True))",
              [
                  "./example.py:1:1: C413 Unnecessary reversed call around sorted()"
                  + " - use sorted(..., reverse=False)."
              ],
          ),
          (
              "reversed(sorted([2, 3, 1], reverse=0))",
              [
                  "./example.py:1:1: C413 Unnecessary reversed call around sorted()"
                  + " - use sorted(..., reverse=True)."
              ],
          ),
          (
              "reversed(sorted([2, 3, 1], reverse=1))",
              [
                  "./example.py:1:1: C413 Unnecessary reversed call around sorted()"
                  + " - use sorted(..., reverse=False)."
              ],
          ),
          (
              "reversed(sorted([2, 3, 1], reverse=bool()))",
              [
                  "./example.py:1:1: C413 Unnecessary reversed call around sorted()"
                  + " - toggle reverse argument to sorted()."
              ],
          ),
          (
              "reversed(sorted([2, 3, 1], reverse=not True))",
              [
                  "./example.py:1:1: C413 Unnecessary reversed call around sorted()"
                  + " - toggle reverse argument to sorted()."
              ],
          ),
      ],
  )
  def test_C413_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_ ERROR at setup of test_C413_fail[reversed(sorted([2, 3, 1], reverse=bool()))-failures6] _
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 548
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "list(sorted([2, 3, 1]))",
              ["./example.py:1:1: C413 Unnecessary list call around sorted()."],
          ),
          (
              "reversed(sorted([2, 3, 1]))",
              [
                  "./example.py:1:1: C413 Unnecessary reversed call around sorted()"
                  + " - use sorted(..., reverse=True)."
              ],
          ),
          (
              "reversed(sorted([2, 3, 1], reverse=False))",
              [
                  "./example.py:1:1: C413 Unnecessary reversed call around sorted()"
                  + " - use sorted(..., reverse=True)."
              ],
          ),
          (
              "reversed(sorted([2, 3, 1], reverse=True))",
              [
                  "./example.py:1:1: C413 Unnecessary reversed call around sorted()"
                  + " - use sorted(..., reverse=False)."
              ],
          ),
          (
              "reversed(sorted([2, 3, 1], reverse=0))",
              [
                  "./example.py:1:1: C413 Unnecessary reversed call around sorted()"
                  + " - use sorted(..., reverse=True)."
              ],
          ),
          (
              "reversed(sorted([2, 3, 1], reverse=1))",
              [
                  "./example.py:1:1: C413 Unnecessary reversed call around sorted()"
                  + " - use sorted(..., reverse=False)."
              ],
          ),
          (
              "reversed(sorted([2, 3, 1], reverse=bool()))",
              [
                  "./example.py:1:1: C413 Unnecessary reversed call around sorted()"
                  + " - toggle reverse argument to sorted()."
              ],
          ),
          (
              "reversed(sorted([2, 3, 1], reverse=not True))",
              [
                  "./example.py:1:1: C413 Unnecessary reversed call around sorted()"
                  + " - toggle reverse argument to sorted()."
              ],
          ),
      ],
  )
  def test_C413_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_ ERROR at setup of test_C413_fail[reversed(sorted([2, 3, 1], reverse=not True))-failures7] _
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 548
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "list(sorted([2, 3, 1]))",
              ["./example.py:1:1: C413 Unnecessary list call around sorted()."],
          ),
          (
              "reversed(sorted([2, 3, 1]))",
              [
                  "./example.py:1:1: C413 Unnecessary reversed call around sorted()"
                  + " - use sorted(..., reverse=True)."
              ],
          ),
          (
              "reversed(sorted([2, 3, 1], reverse=False))",
              [
                  "./example.py:1:1: C413 Unnecessary reversed call around sorted()"
                  + " - use sorted(..., reverse=True)."
              ],
          ),
          (
              "reversed(sorted([2, 3, 1], reverse=True))",
              [
                  "./example.py:1:1: C413 Unnecessary reversed call around sorted()"
                  + " - use sorted(..., reverse=False)."
              ],
          ),
          (
              "reversed(sorted([2, 3, 1], reverse=0))",
              [
                  "./example.py:1:1: C413 Unnecessary reversed call around sorted()"
                  + " - use sorted(..., reverse=True)."
              ],
          ),
          (
              "reversed(sorted([2, 3, 1], reverse=1))",
              [
                  "./example.py:1:1: C413 Unnecessary reversed call around sorted()"
                  + " - use sorted(..., reverse=False)."
              ],
          ),
          (
              "reversed(sorted([2, 3, 1], reverse=bool()))",
              [
                  "./example.py:1:1: C413 Unnecessary reversed call around sorted()"
                  + " - toggle reverse argument to sorted()."
              ],
          ),
          (
              "reversed(sorted([2, 3, 1], reverse=not True))",
              [
                  "./example.py:1:1: C413 Unnecessary reversed call around sorted()"
                  + " - toggle reverse argument to sorted()."
              ],
          ),
      ],
  )
  def test_C413_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
________________ ERROR at setup of test_C414_pass[list(set(a))] ________________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 612
  @pytest.mark.parametrize(
      "code",
      [
          "list(set(a))",
          "tuple(set(a))",
          "sorted(set(a))",
      ],
  )
  def test_C414_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_______________ ERROR at setup of test_C414_pass[tuple(set(a))] ________________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 612
  @pytest.mark.parametrize(
      "code",
      [
          "list(set(a))",
          "tuple(set(a))",
          "sorted(set(a))",
      ],
  )
  def test_C414_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_______________ ERROR at setup of test_C414_pass[sorted(set(a))] _______________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 612
  @pytest.mark.parametrize(
      "code",
      [
          "list(set(a))",
          "tuple(set(a))",
          "sorted(set(a))",
      ],
  )
  def test_C414_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
__________ ERROR at setup of test_C414_fail[list(list(a))-failures0] ___________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 626
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "list(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within list()."],
          ),
          (
              "list(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within list()."],
          ),
          (
              "tuple(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within tuple()."],
          ),
          (
              "tuple(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within tuple()."],
          ),
          ("set(set(a))", ["./example.py:1:1: C414 Unnecessary set call within set()."]),
          (
              "set(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within set()."],
          ),
          (
              "set(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within set()."],
          ),
          (
              "set(sorted(a))",
              ["./example.py:1:1: C414 Unnecessary sorted call within set()."],
          ),
          (
              "set(sorted(a, reverse=True))",
              ["./example.py:1:1: C414 Unnecessary sorted call within set()."],
          ),
          (
              "set(reversed(a))",
              ["./example.py:1:1: C414 Unnecessary reversed call within set()."],
          ),
          (
              "sorted(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within sorted()."],
          ),
          (
              "sorted(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within sorted()."],
          ),
          (
              "sorted(sorted(a))",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(sorted(a), reverse=True)",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(sorted(a, reverse=True))",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(sorted(a, reverse=True), reverse=True)",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(reversed(a))",
              ["./example.py:1:1: C414 Unnecessary reversed call within sorted()."],
          ),
          (
              "sorted(reversed(a), reverse=True)",
              ["./example.py:1:1: C414 Unnecessary reversed call within sorted()."],
          ),
      ],
  )
  def test_C414_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
__________ ERROR at setup of test_C414_fail[list(tuple(a))-failures1] __________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 626
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "list(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within list()."],
          ),
          (
              "list(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within list()."],
          ),
          (
              "tuple(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within tuple()."],
          ),
          (
              "tuple(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within tuple()."],
          ),
          ("set(set(a))", ["./example.py:1:1: C414 Unnecessary set call within set()."]),
          (
              "set(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within set()."],
          ),
          (
              "set(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within set()."],
          ),
          (
              "set(sorted(a))",
              ["./example.py:1:1: C414 Unnecessary sorted call within set()."],
          ),
          (
              "set(sorted(a, reverse=True))",
              ["./example.py:1:1: C414 Unnecessary sorted call within set()."],
          ),
          (
              "set(reversed(a))",
              ["./example.py:1:1: C414 Unnecessary reversed call within set()."],
          ),
          (
              "sorted(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within sorted()."],
          ),
          (
              "sorted(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within sorted()."],
          ),
          (
              "sorted(sorted(a))",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(sorted(a), reverse=True)",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(sorted(a, reverse=True))",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(sorted(a, reverse=True), reverse=True)",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(reversed(a))",
              ["./example.py:1:1: C414 Unnecessary reversed call within sorted()."],
          ),
          (
              "sorted(reversed(a), reverse=True)",
              ["./example.py:1:1: C414 Unnecessary reversed call within sorted()."],
          ),
      ],
  )
  def test_C414_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
__________ ERROR at setup of test_C414_fail[tuple(list(a))-failures2] __________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 626
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "list(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within list()."],
          ),
          (
              "list(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within list()."],
          ),
          (
              "tuple(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within tuple()."],
          ),
          (
              "tuple(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within tuple()."],
          ),
          ("set(set(a))", ["./example.py:1:1: C414 Unnecessary set call within set()."]),
          (
              "set(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within set()."],
          ),
          (
              "set(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within set()."],
          ),
          (
              "set(sorted(a))",
              ["./example.py:1:1: C414 Unnecessary sorted call within set()."],
          ),
          (
              "set(sorted(a, reverse=True))",
              ["./example.py:1:1: C414 Unnecessary sorted call within set()."],
          ),
          (
              "set(reversed(a))",
              ["./example.py:1:1: C414 Unnecessary reversed call within set()."],
          ),
          (
              "sorted(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within sorted()."],
          ),
          (
              "sorted(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within sorted()."],
          ),
          (
              "sorted(sorted(a))",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(sorted(a), reverse=True)",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(sorted(a, reverse=True))",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(sorted(a, reverse=True), reverse=True)",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(reversed(a))",
              ["./example.py:1:1: C414 Unnecessary reversed call within sorted()."],
          ),
          (
              "sorted(reversed(a), reverse=True)",
              ["./example.py:1:1: C414 Unnecessary reversed call within sorted()."],
          ),
      ],
  )
  def test_C414_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_________ ERROR at setup of test_C414_fail[tuple(tuple(a))-failures3] __________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 626
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "list(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within list()."],
          ),
          (
              "list(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within list()."],
          ),
          (
              "tuple(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within tuple()."],
          ),
          (
              "tuple(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within tuple()."],
          ),
          ("set(set(a))", ["./example.py:1:1: C414 Unnecessary set call within set()."]),
          (
              "set(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within set()."],
          ),
          (
              "set(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within set()."],
          ),
          (
              "set(sorted(a))",
              ["./example.py:1:1: C414 Unnecessary sorted call within set()."],
          ),
          (
              "set(sorted(a, reverse=True))",
              ["./example.py:1:1: C414 Unnecessary sorted call within set()."],
          ),
          (
              "set(reversed(a))",
              ["./example.py:1:1: C414 Unnecessary reversed call within set()."],
          ),
          (
              "sorted(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within sorted()."],
          ),
          (
              "sorted(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within sorted()."],
          ),
          (
              "sorted(sorted(a))",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(sorted(a), reverse=True)",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(sorted(a, reverse=True))",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(sorted(a, reverse=True), reverse=True)",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(reversed(a))",
              ["./example.py:1:1: C414 Unnecessary reversed call within sorted()."],
          ),
          (
              "sorted(reversed(a), reverse=True)",
              ["./example.py:1:1: C414 Unnecessary reversed call within sorted()."],
          ),
      ],
  )
  def test_C414_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
___________ ERROR at setup of test_C414_fail[set(set(a))-failures4] ____________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 626
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "list(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within list()."],
          ),
          (
              "list(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within list()."],
          ),
          (
              "tuple(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within tuple()."],
          ),
          (
              "tuple(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within tuple()."],
          ),
          ("set(set(a))", ["./example.py:1:1: C414 Unnecessary set call within set()."]),
          (
              "set(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within set()."],
          ),
          (
              "set(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within set()."],
          ),
          (
              "set(sorted(a))",
              ["./example.py:1:1: C414 Unnecessary sorted call within set()."],
          ),
          (
              "set(sorted(a, reverse=True))",
              ["./example.py:1:1: C414 Unnecessary sorted call within set()."],
          ),
          (
              "set(reversed(a))",
              ["./example.py:1:1: C414 Unnecessary reversed call within set()."],
          ),
          (
              "sorted(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within sorted()."],
          ),
          (
              "sorted(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within sorted()."],
          ),
          (
              "sorted(sorted(a))",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(sorted(a), reverse=True)",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(sorted(a, reverse=True))",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(sorted(a, reverse=True), reverse=True)",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(reversed(a))",
              ["./example.py:1:1: C414 Unnecessary reversed call within sorted()."],
          ),
          (
              "sorted(reversed(a), reverse=True)",
              ["./example.py:1:1: C414 Unnecessary reversed call within sorted()."],
          ),
      ],
  )
  def test_C414_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
___________ ERROR at setup of test_C414_fail[set(list(a))-failures5] ___________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 626
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "list(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within list()."],
          ),
          (
              "list(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within list()."],
          ),
          (
              "tuple(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within tuple()."],
          ),
          (
              "tuple(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within tuple()."],
          ),
          ("set(set(a))", ["./example.py:1:1: C414 Unnecessary set call within set()."]),
          (
              "set(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within set()."],
          ),
          (
              "set(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within set()."],
          ),
          (
              "set(sorted(a))",
              ["./example.py:1:1: C414 Unnecessary sorted call within set()."],
          ),
          (
              "set(sorted(a, reverse=True))",
              ["./example.py:1:1: C414 Unnecessary sorted call within set()."],
          ),
          (
              "set(reversed(a))",
              ["./example.py:1:1: C414 Unnecessary reversed call within set()."],
          ),
          (
              "sorted(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within sorted()."],
          ),
          (
              "sorted(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within sorted()."],
          ),
          (
              "sorted(sorted(a))",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(sorted(a), reverse=True)",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(sorted(a, reverse=True))",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(sorted(a, reverse=True), reverse=True)",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(reversed(a))",
              ["./example.py:1:1: C414 Unnecessary reversed call within sorted()."],
          ),
          (
              "sorted(reversed(a), reverse=True)",
              ["./example.py:1:1: C414 Unnecessary reversed call within sorted()."],
          ),
      ],
  )
  def test_C414_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
__________ ERROR at setup of test_C414_fail[set(tuple(a))-failures6] ___________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 626
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "list(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within list()."],
          ),
          (
              "list(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within list()."],
          ),
          (
              "tuple(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within tuple()."],
          ),
          (
              "tuple(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within tuple()."],
          ),
          ("set(set(a))", ["./example.py:1:1: C414 Unnecessary set call within set()."]),
          (
              "set(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within set()."],
          ),
          (
              "set(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within set()."],
          ),
          (
              "set(sorted(a))",
              ["./example.py:1:1: C414 Unnecessary sorted call within set()."],
          ),
          (
              "set(sorted(a, reverse=True))",
              ["./example.py:1:1: C414 Unnecessary sorted call within set()."],
          ),
          (
              "set(reversed(a))",
              ["./example.py:1:1: C414 Unnecessary reversed call within set()."],
          ),
          (
              "sorted(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within sorted()."],
          ),
          (
              "sorted(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within sorted()."],
          ),
          (
              "sorted(sorted(a))",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(sorted(a), reverse=True)",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(sorted(a, reverse=True))",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(sorted(a, reverse=True), reverse=True)",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(reversed(a))",
              ["./example.py:1:1: C414 Unnecessary reversed call within sorted()."],
          ),
          (
              "sorted(reversed(a), reverse=True)",
              ["./example.py:1:1: C414 Unnecessary reversed call within sorted()."],
          ),
      ],
  )
  def test_C414_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
__________ ERROR at setup of test_C414_fail[set(sorted(a))-failures7] __________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 626
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "list(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within list()."],
          ),
          (
              "list(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within list()."],
          ),
          (
              "tuple(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within tuple()."],
          ),
          (
              "tuple(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within tuple()."],
          ),
          ("set(set(a))", ["./example.py:1:1: C414 Unnecessary set call within set()."]),
          (
              "set(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within set()."],
          ),
          (
              "set(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within set()."],
          ),
          (
              "set(sorted(a))",
              ["./example.py:1:1: C414 Unnecessary sorted call within set()."],
          ),
          (
              "set(sorted(a, reverse=True))",
              ["./example.py:1:1: C414 Unnecessary sorted call within set()."],
          ),
          (
              "set(reversed(a))",
              ["./example.py:1:1: C414 Unnecessary reversed call within set()."],
          ),
          (
              "sorted(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within sorted()."],
          ),
          (
              "sorted(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within sorted()."],
          ),
          (
              "sorted(sorted(a))",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(sorted(a), reverse=True)",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(sorted(a, reverse=True))",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(sorted(a, reverse=True), reverse=True)",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(reversed(a))",
              ["./example.py:1:1: C414 Unnecessary reversed call within sorted()."],
          ),
          (
              "sorted(reversed(a), reverse=True)",
              ["./example.py:1:1: C414 Unnecessary reversed call within sorted()."],
          ),
      ],
  )
  def test_C414_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
___ ERROR at setup of test_C414_fail[set(sorted(a, reverse=True))-failures8] ___
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 626
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "list(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within list()."],
          ),
          (
              "list(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within list()."],
          ),
          (
              "tuple(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within tuple()."],
          ),
          (
              "tuple(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within tuple()."],
          ),
          ("set(set(a))", ["./example.py:1:1: C414 Unnecessary set call within set()."]),
          (
              "set(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within set()."],
          ),
          (
              "set(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within set()."],
          ),
          (
              "set(sorted(a))",
              ["./example.py:1:1: C414 Unnecessary sorted call within set()."],
          ),
          (
              "set(sorted(a, reverse=True))",
              ["./example.py:1:1: C414 Unnecessary sorted call within set()."],
          ),
          (
              "set(reversed(a))",
              ["./example.py:1:1: C414 Unnecessary reversed call within set()."],
          ),
          (
              "sorted(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within sorted()."],
          ),
          (
              "sorted(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within sorted()."],
          ),
          (
              "sorted(sorted(a))",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(sorted(a), reverse=True)",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(sorted(a, reverse=True))",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(sorted(a, reverse=True), reverse=True)",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(reversed(a))",
              ["./example.py:1:1: C414 Unnecessary reversed call within sorted()."],
          ),
          (
              "sorted(reversed(a), reverse=True)",
              ["./example.py:1:1: C414 Unnecessary reversed call within sorted()."],
          ),
      ],
  )
  def test_C414_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_________ ERROR at setup of test_C414_fail[set(reversed(a))-failures9] _________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 626
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "list(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within list()."],
          ),
          (
              "list(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within list()."],
          ),
          (
              "tuple(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within tuple()."],
          ),
          (
              "tuple(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within tuple()."],
          ),
          ("set(set(a))", ["./example.py:1:1: C414 Unnecessary set call within set()."]),
          (
              "set(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within set()."],
          ),
          (
              "set(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within set()."],
          ),
          (
              "set(sorted(a))",
              ["./example.py:1:1: C414 Unnecessary sorted call within set()."],
          ),
          (
              "set(sorted(a, reverse=True))",
              ["./example.py:1:1: C414 Unnecessary sorted call within set()."],
          ),
          (
              "set(reversed(a))",
              ["./example.py:1:1: C414 Unnecessary reversed call within set()."],
          ),
          (
              "sorted(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within sorted()."],
          ),
          (
              "sorted(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within sorted()."],
          ),
          (
              "sorted(sorted(a))",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(sorted(a), reverse=True)",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(sorted(a, reverse=True))",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(sorted(a, reverse=True), reverse=True)",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(reversed(a))",
              ["./example.py:1:1: C414 Unnecessary reversed call within sorted()."],
          ),
          (
              "sorted(reversed(a), reverse=True)",
              ["./example.py:1:1: C414 Unnecessary reversed call within sorted()."],
          ),
      ],
  )
  def test_C414_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_________ ERROR at setup of test_C414_fail[sorted(list(a))-failures10] _________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 626
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "list(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within list()."],
          ),
          (
              "list(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within list()."],
          ),
          (
              "tuple(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within tuple()."],
          ),
          (
              "tuple(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within tuple()."],
          ),
          ("set(set(a))", ["./example.py:1:1: C414 Unnecessary set call within set()."]),
          (
              "set(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within set()."],
          ),
          (
              "set(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within set()."],
          ),
          (
              "set(sorted(a))",
              ["./example.py:1:1: C414 Unnecessary sorted call within set()."],
          ),
          (
              "set(sorted(a, reverse=True))",
              ["./example.py:1:1: C414 Unnecessary sorted call within set()."],
          ),
          (
              "set(reversed(a))",
              ["./example.py:1:1: C414 Unnecessary reversed call within set()."],
          ),
          (
              "sorted(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within sorted()."],
          ),
          (
              "sorted(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within sorted()."],
          ),
          (
              "sorted(sorted(a))",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(sorted(a), reverse=True)",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(sorted(a, reverse=True))",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(sorted(a, reverse=True), reverse=True)",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(reversed(a))",
              ["./example.py:1:1: C414 Unnecessary reversed call within sorted()."],
          ),
          (
              "sorted(reversed(a), reverse=True)",
              ["./example.py:1:1: C414 Unnecessary reversed call within sorted()."],
          ),
      ],
  )
  def test_C414_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
________ ERROR at setup of test_C414_fail[sorted(tuple(a))-failures11] _________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 626
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "list(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within list()."],
          ),
          (
              "list(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within list()."],
          ),
          (
              "tuple(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within tuple()."],
          ),
          (
              "tuple(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within tuple()."],
          ),
          ("set(set(a))", ["./example.py:1:1: C414 Unnecessary set call within set()."]),
          (
              "set(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within set()."],
          ),
          (
              "set(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within set()."],
          ),
          (
              "set(sorted(a))",
              ["./example.py:1:1: C414 Unnecessary sorted call within set()."],
          ),
          (
              "set(sorted(a, reverse=True))",
              ["./example.py:1:1: C414 Unnecessary sorted call within set()."],
          ),
          (
              "set(reversed(a))",
              ["./example.py:1:1: C414 Unnecessary reversed call within set()."],
          ),
          (
              "sorted(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within sorted()."],
          ),
          (
              "sorted(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within sorted()."],
          ),
          (
              "sorted(sorted(a))",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(sorted(a), reverse=True)",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(sorted(a, reverse=True))",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(sorted(a, reverse=True), reverse=True)",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(reversed(a))",
              ["./example.py:1:1: C414 Unnecessary reversed call within sorted()."],
          ),
          (
              "sorted(reversed(a), reverse=True)",
              ["./example.py:1:1: C414 Unnecessary reversed call within sorted()."],
          ),
      ],
  )
  def test_C414_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
________ ERROR at setup of test_C414_fail[sorted(sorted(a))-failures12] ________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 626
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "list(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within list()."],
          ),
          (
              "list(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within list()."],
          ),
          (
              "tuple(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within tuple()."],
          ),
          (
              "tuple(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within tuple()."],
          ),
          ("set(set(a))", ["./example.py:1:1: C414 Unnecessary set call within set()."]),
          (
              "set(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within set()."],
          ),
          (
              "set(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within set()."],
          ),
          (
              "set(sorted(a))",
              ["./example.py:1:1: C414 Unnecessary sorted call within set()."],
          ),
          (
              "set(sorted(a, reverse=True))",
              ["./example.py:1:1: C414 Unnecessary sorted call within set()."],
          ),
          (
              "set(reversed(a))",
              ["./example.py:1:1: C414 Unnecessary reversed call within set()."],
          ),
          (
              "sorted(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within sorted()."],
          ),
          (
              "sorted(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within sorted()."],
          ),
          (
              "sorted(sorted(a))",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(sorted(a), reverse=True)",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(sorted(a, reverse=True))",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(sorted(a, reverse=True), reverse=True)",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(reversed(a))",
              ["./example.py:1:1: C414 Unnecessary reversed call within sorted()."],
          ),
          (
              "sorted(reversed(a), reverse=True)",
              ["./example.py:1:1: C414 Unnecessary reversed call within sorted()."],
          ),
      ],
  )
  def test_C414_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_ ERROR at setup of test_C414_fail[sorted(sorted(a), reverse=True)-failures13] _
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 626
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "list(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within list()."],
          ),
          (
              "list(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within list()."],
          ),
          (
              "tuple(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within tuple()."],
          ),
          (
              "tuple(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within tuple()."],
          ),
          ("set(set(a))", ["./example.py:1:1: C414 Unnecessary set call within set()."]),
          (
              "set(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within set()."],
          ),
          (
              "set(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within set()."],
          ),
          (
              "set(sorted(a))",
              ["./example.py:1:1: C414 Unnecessary sorted call within set()."],
          ),
          (
              "set(sorted(a, reverse=True))",
              ["./example.py:1:1: C414 Unnecessary sorted call within set()."],
          ),
          (
              "set(reversed(a))",
              ["./example.py:1:1: C414 Unnecessary reversed call within set()."],
          ),
          (
              "sorted(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within sorted()."],
          ),
          (
              "sorted(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within sorted()."],
          ),
          (
              "sorted(sorted(a))",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(sorted(a), reverse=True)",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(sorted(a, reverse=True))",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(sorted(a, reverse=True), reverse=True)",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(reversed(a))",
              ["./example.py:1:1: C414 Unnecessary reversed call within sorted()."],
          ),
          (
              "sorted(reversed(a), reverse=True)",
              ["./example.py:1:1: C414 Unnecessary reversed call within sorted()."],
          ),
      ],
  )
  def test_C414_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_ ERROR at setup of test_C414_fail[sorted(sorted(a, reverse=True))-failures14] _
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 626
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "list(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within list()."],
          ),
          (
              "list(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within list()."],
          ),
          (
              "tuple(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within tuple()."],
          ),
          (
              "tuple(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within tuple()."],
          ),
          ("set(set(a))", ["./example.py:1:1: C414 Unnecessary set call within set()."]),
          (
              "set(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within set()."],
          ),
          (
              "set(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within set()."],
          ),
          (
              "set(sorted(a))",
              ["./example.py:1:1: C414 Unnecessary sorted call within set()."],
          ),
          (
              "set(sorted(a, reverse=True))",
              ["./example.py:1:1: C414 Unnecessary sorted call within set()."],
          ),
          (
              "set(reversed(a))",
              ["./example.py:1:1: C414 Unnecessary reversed call within set()."],
          ),
          (
              "sorted(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within sorted()."],
          ),
          (
              "sorted(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within sorted()."],
          ),
          (
              "sorted(sorted(a))",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(sorted(a), reverse=True)",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(sorted(a, reverse=True))",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(sorted(a, reverse=True), reverse=True)",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(reversed(a))",
              ["./example.py:1:1: C414 Unnecessary reversed call within sorted()."],
          ),
          (
              "sorted(reversed(a), reverse=True)",
              ["./example.py:1:1: C414 Unnecessary reversed call within sorted()."],
          ),
      ],
  )
  def test_C414_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_ ERROR at setup of test_C414_fail[sorted(sorted(a, reverse=True), reverse=True)-failures15] _
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 626
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "list(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within list()."],
          ),
          (
              "list(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within list()."],
          ),
          (
              "tuple(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within tuple()."],
          ),
          (
              "tuple(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within tuple()."],
          ),
          ("set(set(a))", ["./example.py:1:1: C414 Unnecessary set call within set()."]),
          (
              "set(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within set()."],
          ),
          (
              "set(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within set()."],
          ),
          (
              "set(sorted(a))",
              ["./example.py:1:1: C414 Unnecessary sorted call within set()."],
          ),
          (
              "set(sorted(a, reverse=True))",
              ["./example.py:1:1: C414 Unnecessary sorted call within set()."],
          ),
          (
              "set(reversed(a))",
              ["./example.py:1:1: C414 Unnecessary reversed call within set()."],
          ),
          (
              "sorted(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within sorted()."],
          ),
          (
              "sorted(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within sorted()."],
          ),
          (
              "sorted(sorted(a))",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(sorted(a), reverse=True)",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(sorted(a, reverse=True))",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(sorted(a, reverse=True), reverse=True)",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(reversed(a))",
              ["./example.py:1:1: C414 Unnecessary reversed call within sorted()."],
          ),
          (
              "sorted(reversed(a), reverse=True)",
              ["./example.py:1:1: C414 Unnecessary reversed call within sorted()."],
          ),
      ],
  )
  def test_C414_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_______ ERROR at setup of test_C414_fail[sorted(reversed(a))-failures16] _______
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 626
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "list(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within list()."],
          ),
          (
              "list(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within list()."],
          ),
          (
              "tuple(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within tuple()."],
          ),
          (
              "tuple(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within tuple()."],
          ),
          ("set(set(a))", ["./example.py:1:1: C414 Unnecessary set call within set()."]),
          (
              "set(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within set()."],
          ),
          (
              "set(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within set()."],
          ),
          (
              "set(sorted(a))",
              ["./example.py:1:1: C414 Unnecessary sorted call within set()."],
          ),
          (
              "set(sorted(a, reverse=True))",
              ["./example.py:1:1: C414 Unnecessary sorted call within set()."],
          ),
          (
              "set(reversed(a))",
              ["./example.py:1:1: C414 Unnecessary reversed call within set()."],
          ),
          (
              "sorted(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within sorted()."],
          ),
          (
              "sorted(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within sorted()."],
          ),
          (
              "sorted(sorted(a))",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(sorted(a), reverse=True)",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(sorted(a, reverse=True))",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(sorted(a, reverse=True), reverse=True)",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(reversed(a))",
              ["./example.py:1:1: C414 Unnecessary reversed call within sorted()."],
          ),
          (
              "sorted(reversed(a), reverse=True)",
              ["./example.py:1:1: C414 Unnecessary reversed call within sorted()."],
          ),
      ],
  )
  def test_C414_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_ ERROR at setup of test_C414_fail[sorted(reversed(a), reverse=True)-failures17] _
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 626
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "list(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within list()."],
          ),
          (
              "list(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within list()."],
          ),
          (
              "tuple(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within tuple()."],
          ),
          (
              "tuple(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within tuple()."],
          ),
          ("set(set(a))", ["./example.py:1:1: C414 Unnecessary set call within set()."]),
          (
              "set(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within set()."],
          ),
          (
              "set(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within set()."],
          ),
          (
              "set(sorted(a))",
              ["./example.py:1:1: C414 Unnecessary sorted call within set()."],
          ),
          (
              "set(sorted(a, reverse=True))",
              ["./example.py:1:1: C414 Unnecessary sorted call within set()."],
          ),
          (
              "set(reversed(a))",
              ["./example.py:1:1: C414 Unnecessary reversed call within set()."],
          ),
          (
              "sorted(list(a))",
              ["./example.py:1:1: C414 Unnecessary list call within sorted()."],
          ),
          (
              "sorted(tuple(a))",
              ["./example.py:1:1: C414 Unnecessary tuple call within sorted()."],
          ),
          (
              "sorted(sorted(a))",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(sorted(a), reverse=True)",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(sorted(a, reverse=True))",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(sorted(a, reverse=True), reverse=True)",
              ["./example.py:1:1: C414 Unnecessary sorted call within sorted()."],
          ),
          (
              "sorted(reversed(a))",
              ["./example.py:1:1: C414 Unnecessary reversed call within sorted()."],
          ),
          (
              "sorted(reversed(a), reverse=True)",
              ["./example.py:1:1: C414 Unnecessary reversed call within sorted()."],
          ),
      ],
  )
  def test_C414_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
____________ ERROR at setup of test_C415_pass[set([2, 3, 1][::1])] _____________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 706
  @pytest.mark.parametrize(
      "code",
      [
          "set([2, 3, 1][::1])",
          "sorted([2, 3, 1][::1])",
          "reversed([2, 3, 1][::1])",
      ],
  )
  def test_C415_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
___________ ERROR at setup of test_C415_pass[sorted([2, 3, 1][::1])] ___________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 706
  @pytest.mark.parametrize(
      "code",
      [
          "set([2, 3, 1][::1])",
          "sorted([2, 3, 1][::1])",
          "reversed([2, 3, 1][::1])",
      ],
  )
  def test_C415_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
__________ ERROR at setup of test_C415_pass[reversed([2, 3, 1][::1])] __________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 706
  @pytest.mark.parametrize(
      "code",
      [
          "set([2, 3, 1][::1])",
          "sorted([2, 3, 1][::1])",
          "reversed([2, 3, 1][::1])",
      ],
  )
  def test_C415_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_______ ERROR at setup of test_C415_fail[set([2, 3, 1][::-1])-failures0] _______
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 720
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "set([2, 3, 1][::-1])",
              [
                  "./example.py:1:1: C415 Unnecessary subscript reversal of iterable "
                  + "within set()."
              ],
          ),
          (
              "sorted([2, 3, 1][::-1])",
              [
                  "./example.py:1:1: C415 Unnecessary subscript reversal of iterable "
                  + "within sorted()."
              ],
          ),
          (
              "sorted([2, 3, 1][::-1], reverse=True)",
              [
                  "./example.py:1:1: C415 Unnecessary subscript reversal of iterable "
                  + "within sorted()."
              ],
          ),
          (
              "reversed([2, 3, 1][::-1])",
              [
                  "./example.py:1:1: C415 Unnecessary subscript reversal of iterable "
                  + "within reversed()."
              ],
          ),
      ],
  )
  def test_C415_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_____ ERROR at setup of test_C415_fail[sorted([2, 3, 1][::-1])-failures1] ______
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 720
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "set([2, 3, 1][::-1])",
              [
                  "./example.py:1:1: C415 Unnecessary subscript reversal of iterable "
                  + "within set()."
              ],
          ),
          (
              "sorted([2, 3, 1][::-1])",
              [
                  "./example.py:1:1: C415 Unnecessary subscript reversal of iterable "
                  + "within sorted()."
              ],
          ),
          (
              "sorted([2, 3, 1][::-1], reverse=True)",
              [
                  "./example.py:1:1: C415 Unnecessary subscript reversal of iterable "
                  + "within sorted()."
              ],
          ),
          (
              "reversed([2, 3, 1][::-1])",
              [
                  "./example.py:1:1: C415 Unnecessary subscript reversal of iterable "
                  + "within reversed()."
              ],
          ),
      ],
  )
  def test_C415_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_ ERROR at setup of test_C415_fail[sorted([2, 3, 1][::-1], reverse=True)-failures2] _
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 720
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "set([2, 3, 1][::-1])",
              [
                  "./example.py:1:1: C415 Unnecessary subscript reversal of iterable "
                  + "within set()."
              ],
          ),
          (
              "sorted([2, 3, 1][::-1])",
              [
                  "./example.py:1:1: C415 Unnecessary subscript reversal of iterable "
                  + "within sorted()."
              ],
          ),
          (
              "sorted([2, 3, 1][::-1], reverse=True)",
              [
                  "./example.py:1:1: C415 Unnecessary subscript reversal of iterable "
                  + "within sorted()."
              ],
          ),
          (
              "reversed([2, 3, 1][::-1])",
              [
                  "./example.py:1:1: C415 Unnecessary subscript reversal of iterable "
                  + "within reversed()."
              ],
          ),
      ],
  )
  def test_C415_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
____ ERROR at setup of test_C415_fail[reversed([2, 3, 1][::-1])-failures3] _____
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 720
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "set([2, 3, 1][::-1])",
              [
                  "./example.py:1:1: C415 Unnecessary subscript reversal of iterable "
                  + "within set()."
              ],
          ),
          (
              "sorted([2, 3, 1][::-1])",
              [
                  "./example.py:1:1: C415 Unnecessary subscript reversal of iterable "
                  + "within sorted()."
              ],
          ),
          (
              "sorted([2, 3, 1][::-1], reverse=True)",
              [
                  "./example.py:1:1: C415 Unnecessary subscript reversal of iterable "
                  + "within sorted()."
              ],
          ),
          (
              "reversed([2, 3, 1][::-1])",
              [
                  "./example.py:1:1: C415 Unnecessary subscript reversal of iterable "
                  + "within reversed()."
              ],
          ),
      ],
  )
  def test_C415_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_ ERROR at setup of test_C416_pass[{x, y for x, y, z in zip('abc', '123', 'def')}] _
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 759
  @pytest.mark.parametrize(
      "code",
      [
          "{x, y for x, y, z in zip('abc', '123', 'def')}",
          "{y: x for x, y in zip('abc', '123')}",
          "{x: y for x, (y,) in zip('a', ('1',))}",
          "{x: z for x, (y,), z in zip('a', ('1',), 'b')}",
          "[str(x) for x in range(5)]",
          "[x + 1 for x in range(5)]",
          "[x for x in range(5) if x % 2]",
          "{str(x) for x in range(5)}",
          "{x + 1 for x in range(5)}",
          "{x for x in range(5) if x % 2}",
          """\
          async def foo():
              [x async for x in range(5)]
          """,
          """\
          async def foo():
              return {x async for x in range(5)}
          """,
          "[(x, y, 1) for x, y in []]",
          # We can't assume unpacking came from tuples:
          "[(x, y) for x, y in zip('abc', '123')]",
          "[(x, y) for (x, y) in zip('abc', '123')]",
          "{(x, y) for x, y in zip('abc', '123')}",
          "{(x, y) for (x, y) in zip('abc', '123')}",
      ],
  )
  def test_C416_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
____ ERROR at setup of test_C416_pass[{y: x for x, y in zip('abc', '123')}] ____
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 759
  @pytest.mark.parametrize(
      "code",
      [
          "{x, y for x, y, z in zip('abc', '123', 'def')}",
          "{y: x for x, y in zip('abc', '123')}",
          "{x: y for x, (y,) in zip('a', ('1',))}",
          "{x: z for x, (y,), z in zip('a', ('1',), 'b')}",
          "[str(x) for x in range(5)]",
          "[x + 1 for x in range(5)]",
          "[x for x in range(5) if x % 2]",
          "{str(x) for x in range(5)}",
          "{x + 1 for x in range(5)}",
          "{x for x in range(5) if x % 2}",
          """\
          async def foo():
              [x async for x in range(5)]
          """,
          """\
          async def foo():
              return {x async for x in range(5)}
          """,
          "[(x, y, 1) for x, y in []]",
          # We can't assume unpacking came from tuples:
          "[(x, y) for x, y in zip('abc', '123')]",
          "[(x, y) for (x, y) in zip('abc', '123')]",
          "{(x, y) for x, y in zip('abc', '123')}",
          "{(x, y) for (x, y) in zip('abc', '123')}",
      ],
  )
  def test_C416_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
___ ERROR at setup of test_C416_pass[{x: y for x, (y,) in zip('a', ('1',))}] ___
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 759
  @pytest.mark.parametrize(
      "code",
      [
          "{x, y for x, y, z in zip('abc', '123', 'def')}",
          "{y: x for x, y in zip('abc', '123')}",
          "{x: y for x, (y,) in zip('a', ('1',))}",
          "{x: z for x, (y,), z in zip('a', ('1',), 'b')}",
          "[str(x) for x in range(5)]",
          "[x + 1 for x in range(5)]",
          "[x for x in range(5) if x % 2]",
          "{str(x) for x in range(5)}",
          "{x + 1 for x in range(5)}",
          "{x for x in range(5) if x % 2}",
          """\
          async def foo():
              [x async for x in range(5)]
          """,
          """\
          async def foo():
              return {x async for x in range(5)}
          """,
          "[(x, y, 1) for x, y in []]",
          # We can't assume unpacking came from tuples:
          "[(x, y) for x, y in zip('abc', '123')]",
          "[(x, y) for (x, y) in zip('abc', '123')]",
          "{(x, y) for x, y in zip('abc', '123')}",
          "{(x, y) for (x, y) in zip('abc', '123')}",
      ],
  )
  def test_C416_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_ ERROR at setup of test_C416_pass[{x: z for x, (y,), z in zip('a', ('1',), 'b')}] _
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 759
  @pytest.mark.parametrize(
      "code",
      [
          "{x, y for x, y, z in zip('abc', '123', 'def')}",
          "{y: x for x, y in zip('abc', '123')}",
          "{x: y for x, (y,) in zip('a', ('1',))}",
          "{x: z for x, (y,), z in zip('a', ('1',), 'b')}",
          "[str(x) for x in range(5)]",
          "[x + 1 for x in range(5)]",
          "[x for x in range(5) if x % 2]",
          "{str(x) for x in range(5)}",
          "{x + 1 for x in range(5)}",
          "{x for x in range(5) if x % 2}",
          """\
          async def foo():
              [x async for x in range(5)]
          """,
          """\
          async def foo():
              return {x async for x in range(5)}
          """,
          "[(x, y, 1) for x, y in []]",
          # We can't assume unpacking came from tuples:
          "[(x, y) for x, y in zip('abc', '123')]",
          "[(x, y) for (x, y) in zip('abc', '123')]",
          "{(x, y) for x, y in zip('abc', '123')}",
          "{(x, y) for (x, y) in zip('abc', '123')}",
      ],
  )
  def test_C416_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_________ ERROR at setup of test_C416_pass[[str(x) for x in range(5)]] _________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 759
  @pytest.mark.parametrize(
      "code",
      [
          "{x, y for x, y, z in zip('abc', '123', 'def')}",
          "{y: x for x, y in zip('abc', '123')}",
          "{x: y for x, (y,) in zip('a', ('1',))}",
          "{x: z for x, (y,), z in zip('a', ('1',), 'b')}",
          "[str(x) for x in range(5)]",
          "[x + 1 for x in range(5)]",
          "[x for x in range(5) if x % 2]",
          "{str(x) for x in range(5)}",
          "{x + 1 for x in range(5)}",
          "{x for x in range(5) if x % 2}",
          """\
          async def foo():
              [x async for x in range(5)]
          """,
          """\
          async def foo():
              return {x async for x in range(5)}
          """,
          "[(x, y, 1) for x, y in []]",
          # We can't assume unpacking came from tuples:
          "[(x, y) for x, y in zip('abc', '123')]",
          "[(x, y) for (x, y) in zip('abc', '123')]",
          "{(x, y) for x, y in zip('abc', '123')}",
          "{(x, y) for (x, y) in zip('abc', '123')}",
      ],
  )
  def test_C416_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_________ ERROR at setup of test_C416_pass[[x + 1 for x in range(5)]] __________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 759
  @pytest.mark.parametrize(
      "code",
      [
          "{x, y for x, y, z in zip('abc', '123', 'def')}",
          "{y: x for x, y in zip('abc', '123')}",
          "{x: y for x, (y,) in zip('a', ('1',))}",
          "{x: z for x, (y,), z in zip('a', ('1',), 'b')}",
          "[str(x) for x in range(5)]",
          "[x + 1 for x in range(5)]",
          "[x for x in range(5) if x % 2]",
          "{str(x) for x in range(5)}",
          "{x + 1 for x in range(5)}",
          "{x for x in range(5) if x % 2}",
          """\
          async def foo():
              [x async for x in range(5)]
          """,
          """\
          async def foo():
              return {x async for x in range(5)}
          """,
          "[(x, y, 1) for x, y in []]",
          # We can't assume unpacking came from tuples:
          "[(x, y) for x, y in zip('abc', '123')]",
          "[(x, y) for (x, y) in zip('abc', '123')]",
          "{(x, y) for x, y in zip('abc', '123')}",
          "{(x, y) for (x, y) in zip('abc', '123')}",
      ],
  )
  def test_C416_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_______ ERROR at setup of test_C416_pass[[x for x in range(5) if x % 2]] _______
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 759
  @pytest.mark.parametrize(
      "code",
      [
          "{x, y for x, y, z in zip('abc', '123', 'def')}",
          "{y: x for x, y in zip('abc', '123')}",
          "{x: y for x, (y,) in zip('a', ('1',))}",
          "{x: z for x, (y,), z in zip('a', ('1',), 'b')}",
          "[str(x) for x in range(5)]",
          "[x + 1 for x in range(5)]",
          "[x for x in range(5) if x % 2]",
          "{str(x) for x in range(5)}",
          "{x + 1 for x in range(5)}",
          "{x for x in range(5) if x % 2}",
          """\
          async def foo():
              [x async for x in range(5)]
          """,
          """\
          async def foo():
              return {x async for x in range(5)}
          """,
          "[(x, y, 1) for x, y in []]",
          # We can't assume unpacking came from tuples:
          "[(x, y) for x, y in zip('abc', '123')]",
          "[(x, y) for (x, y) in zip('abc', '123')]",
          "{(x, y) for x, y in zip('abc', '123')}",
          "{(x, y) for (x, y) in zip('abc', '123')}",
      ],
  )
  def test_C416_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_________ ERROR at setup of test_C416_pass[{str(x) for x in range(5)}] _________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 759
  @pytest.mark.parametrize(
      "code",
      [
          "{x, y for x, y, z in zip('abc', '123', 'def')}",
          "{y: x for x, y in zip('abc', '123')}",
          "{x: y for x, (y,) in zip('a', ('1',))}",
          "{x: z for x, (y,), z in zip('a', ('1',), 'b')}",
          "[str(x) for x in range(5)]",
          "[x + 1 for x in range(5)]",
          "[x for x in range(5) if x % 2]",
          "{str(x) for x in range(5)}",
          "{x + 1 for x in range(5)}",
          "{x for x in range(5) if x % 2}",
          """\
          async def foo():
              [x async for x in range(5)]
          """,
          """\
          async def foo():
              return {x async for x in range(5)}
          """,
          "[(x, y, 1) for x, y in []]",
          # We can't assume unpacking came from tuples:
          "[(x, y) for x, y in zip('abc', '123')]",
          "[(x, y) for (x, y) in zip('abc', '123')]",
          "{(x, y) for x, y in zip('abc', '123')}",
          "{(x, y) for (x, y) in zip('abc', '123')}",
      ],
  )
  def test_C416_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_________ ERROR at setup of test_C416_pass[{x + 1 for x in range(5)}] __________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 759
  @pytest.mark.parametrize(
      "code",
      [
          "{x, y for x, y, z in zip('abc', '123', 'def')}",
          "{y: x for x, y in zip('abc', '123')}",
          "{x: y for x, (y,) in zip('a', ('1',))}",
          "{x: z for x, (y,), z in zip('a', ('1',), 'b')}",
          "[str(x) for x in range(5)]",
          "[x + 1 for x in range(5)]",
          "[x for x in range(5) if x % 2]",
          "{str(x) for x in range(5)}",
          "{x + 1 for x in range(5)}",
          "{x for x in range(5) if x % 2}",
          """\
          async def foo():
              [x async for x in range(5)]
          """,
          """\
          async def foo():
              return {x async for x in range(5)}
          """,
          "[(x, y, 1) for x, y in []]",
          # We can't assume unpacking came from tuples:
          "[(x, y) for x, y in zip('abc', '123')]",
          "[(x, y) for (x, y) in zip('abc', '123')]",
          "{(x, y) for x, y in zip('abc', '123')}",
          "{(x, y) for (x, y) in zip('abc', '123')}",
      ],
  )
  def test_C416_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_______ ERROR at setup of test_C416_pass[{x for x in range(5) if x % 2}] _______
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 759
  @pytest.mark.parametrize(
      "code",
      [
          "{x, y for x, y, z in zip('abc', '123', 'def')}",
          "{y: x for x, y in zip('abc', '123')}",
          "{x: y for x, (y,) in zip('a', ('1',))}",
          "{x: z for x, (y,), z in zip('a', ('1',), 'b')}",
          "[str(x) for x in range(5)]",
          "[x + 1 for x in range(5)]",
          "[x for x in range(5) if x % 2]",
          "{str(x) for x in range(5)}",
          "{x + 1 for x in range(5)}",
          "{x for x in range(5) if x % 2}",
          """\
          async def foo():
              [x async for x in range(5)]
          """,
          """\
          async def foo():
              return {x async for x in range(5)}
          """,
          "[(x, y, 1) for x, y in []]",
          # We can't assume unpacking came from tuples:
          "[(x, y) for x, y in zip('abc', '123')]",
          "[(x, y) for (x, y) in zip('abc', '123')]",
          "{(x, y) for x, y in zip('abc', '123')}",
          "{(x, y) for (x, y) in zip('abc', '123')}",
      ],
  )
  def test_C416_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_ ERROR at setup of test_C416_pass[        async def foo():\n            [x async for x in range(5)]\n        ] _
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 759
  @pytest.mark.parametrize(
      "code",
      [
          "{x, y for x, y, z in zip('abc', '123', 'def')}",
          "{y: x for x, y in zip('abc', '123')}",
          "{x: y for x, (y,) in zip('a', ('1',))}",
          "{x: z for x, (y,), z in zip('a', ('1',), 'b')}",
          "[str(x) for x in range(5)]",
          "[x + 1 for x in range(5)]",
          "[x for x in range(5) if x % 2]",
          "{str(x) for x in range(5)}",
          "{x + 1 for x in range(5)}",
          "{x for x in range(5) if x % 2}",
          """\
          async def foo():
              [x async for x in range(5)]
          """,
          """\
          async def foo():
              return {x async for x in range(5)}
          """,
          "[(x, y, 1) for x, y in []]",
          # We can't assume unpacking came from tuples:
          "[(x, y) for x, y in zip('abc', '123')]",
          "[(x, y) for (x, y) in zip('abc', '123')]",
          "{(x, y) for x, y in zip('abc', '123')}",
          "{(x, y) for (x, y) in zip('abc', '123')}",
      ],
  )
  def test_C416_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_ ERROR at setup of test_C416_pass[        async def foo():\n            return {x async for x in range(5)}\n        ] _
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 759
  @pytest.mark.parametrize(
      "code",
      [
          "{x, y for x, y, z in zip('abc', '123', 'def')}",
          "{y: x for x, y in zip('abc', '123')}",
          "{x: y for x, (y,) in zip('a', ('1',))}",
          "{x: z for x, (y,), z in zip('a', ('1',), 'b')}",
          "[str(x) for x in range(5)]",
          "[x + 1 for x in range(5)]",
          "[x for x in range(5) if x % 2]",
          "{str(x) for x in range(5)}",
          "{x + 1 for x in range(5)}",
          "{x for x in range(5) if x % 2}",
          """\
          async def foo():
              [x async for x in range(5)]
          """,
          """\
          async def foo():
              return {x async for x in range(5)}
          """,
          "[(x, y, 1) for x, y in []]",
          # We can't assume unpacking came from tuples:
          "[(x, y) for x, y in zip('abc', '123')]",
          "[(x, y) for (x, y) in zip('abc', '123')]",
          "{(x, y) for x, y in zip('abc', '123')}",
          "{(x, y) for (x, y) in zip('abc', '123')}",
      ],
  )
  def test_C416_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_________ ERROR at setup of test_C416_pass[[(x, y, 1) for x, y in []]] _________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 759
  @pytest.mark.parametrize(
      "code",
      [
          "{x, y for x, y, z in zip('abc', '123', 'def')}",
          "{y: x for x, y in zip('abc', '123')}",
          "{x: y for x, (y,) in zip('a', ('1',))}",
          "{x: z for x, (y,), z in zip('a', ('1',), 'b')}",
          "[str(x) for x in range(5)]",
          "[x + 1 for x in range(5)]",
          "[x for x in range(5) if x % 2]",
          "{str(x) for x in range(5)}",
          "{x + 1 for x in range(5)}",
          "{x for x in range(5) if x % 2}",
          """\
          async def foo():
              [x async for x in range(5)]
          """,
          """\
          async def foo():
              return {x async for x in range(5)}
          """,
          "[(x, y, 1) for x, y in []]",
          # We can't assume unpacking came from tuples:
          "[(x, y) for x, y in zip('abc', '123')]",
          "[(x, y) for (x, y) in zip('abc', '123')]",
          "{(x, y) for x, y in zip('abc', '123')}",
          "{(x, y) for (x, y) in zip('abc', '123')}",
      ],
  )
  def test_C416_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
___ ERROR at setup of test_C416_pass[[(x, y) for x, y in zip('abc', '123')]] ___
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 759
  @pytest.mark.parametrize(
      "code",
      [
          "{x, y for x, y, z in zip('abc', '123', 'def')}",
          "{y: x for x, y in zip('abc', '123')}",
          "{x: y for x, (y,) in zip('a', ('1',))}",
          "{x: z for x, (y,), z in zip('a', ('1',), 'b')}",
          "[str(x) for x in range(5)]",
          "[x + 1 for x in range(5)]",
          "[x for x in range(5) if x % 2]",
          "{str(x) for x in range(5)}",
          "{x + 1 for x in range(5)}",
          "{x for x in range(5) if x % 2}",
          """\
          async def foo():
              [x async for x in range(5)]
          """,
          """\
          async def foo():
              return {x async for x in range(5)}
          """,
          "[(x, y, 1) for x, y in []]",
          # We can't assume unpacking came from tuples:
          "[(x, y) for x, y in zip('abc', '123')]",
          "[(x, y) for (x, y) in zip('abc', '123')]",
          "{(x, y) for x, y in zip('abc', '123')}",
          "{(x, y) for (x, y) in zip('abc', '123')}",
      ],
  )
  def test_C416_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
__ ERROR at setup of test_C416_pass[[(x, y) for (x, y) in zip('abc', '123')]] __
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 759
  @pytest.mark.parametrize(
      "code",
      [
          "{x, y for x, y, z in zip('abc', '123', 'def')}",
          "{y: x for x, y in zip('abc', '123')}",
          "{x: y for x, (y,) in zip('a', ('1',))}",
          "{x: z for x, (y,), z in zip('a', ('1',), 'b')}",
          "[str(x) for x in range(5)]",
          "[x + 1 for x in range(5)]",
          "[x for x in range(5) if x % 2]",
          "{str(x) for x in range(5)}",
          "{x + 1 for x in range(5)}",
          "{x for x in range(5) if x % 2}",
          """\
          async def foo():
              [x async for x in range(5)]
          """,
          """\
          async def foo():
              return {x async for x in range(5)}
          """,
          "[(x, y, 1) for x, y in []]",
          # We can't assume unpacking came from tuples:
          "[(x, y) for x, y in zip('abc', '123')]",
          "[(x, y) for (x, y) in zip('abc', '123')]",
          "{(x, y) for x, y in zip('abc', '123')}",
          "{(x, y) for (x, y) in zip('abc', '123')}",
      ],
  )
  def test_C416_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
___ ERROR at setup of test_C416_pass[{(x, y) for x, y in zip('abc', '123')}] ___
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 759
  @pytest.mark.parametrize(
      "code",
      [
          "{x, y for x, y, z in zip('abc', '123', 'def')}",
          "{y: x for x, y in zip('abc', '123')}",
          "{x: y for x, (y,) in zip('a', ('1',))}",
          "{x: z for x, (y,), z in zip('a', ('1',), 'b')}",
          "[str(x) for x in range(5)]",
          "[x + 1 for x in range(5)]",
          "[x for x in range(5) if x % 2]",
          "{str(x) for x in range(5)}",
          "{x + 1 for x in range(5)}",
          "{x for x in range(5) if x % 2}",
          """\
          async def foo():
              [x async for x in range(5)]
          """,
          """\
          async def foo():
              return {x async for x in range(5)}
          """,
          "[(x, y, 1) for x, y in []]",
          # We can't assume unpacking came from tuples:
          "[(x, y) for x, y in zip('abc', '123')]",
          "[(x, y) for (x, y) in zip('abc', '123')]",
          "{(x, y) for x, y in zip('abc', '123')}",
          "{(x, y) for (x, y) in zip('abc', '123')}",
      ],
  )
  def test_C416_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
__ ERROR at setup of test_C416_pass[{(x, y) for (x, y) in zip('abc', '123')}] __
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 759
  @pytest.mark.parametrize(
      "code",
      [
          "{x, y for x, y, z in zip('abc', '123', 'def')}",
          "{y: x for x, y in zip('abc', '123')}",
          "{x: y for x, (y,) in zip('a', ('1',))}",
          "{x: z for x, (y,), z in zip('a', ('1',), 'b')}",
          "[str(x) for x in range(5)]",
          "[x + 1 for x in range(5)]",
          "[x for x in range(5) if x % 2]",
          "{str(x) for x in range(5)}",
          "{x + 1 for x in range(5)}",
          "{x for x in range(5) if x % 2}",
          """\
          async def foo():
              [x async for x in range(5)]
          """,
          """\
          async def foo():
              return {x async for x in range(5)}
          """,
          "[(x, y, 1) for x, y in []]",
          # We can't assume unpacking came from tuples:
          "[(x, y) for x, y in zip('abc', '123')]",
          "[(x, y) for (x, y) in zip('abc', '123')]",
          "{(x, y) for x, y in zip('abc', '123')}",
          "{(x, y) for (x, y) in zip('abc', '123')}",
      ],
  )
  def test_C416_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_ ERROR at setup of test_C416_fail[{x: y for x, y in zip(range(5), range(5))}-failures0] _
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 802
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "{x: y for x, y in zip(range(5), range(5))}",
              [
                  "./example.py:1:1: C416 Unnecessary dict comprehension - "
                  + "rewrite using dict().",
              ],
          ),
          (
              "{x: y for (x, y) in zip(range(5), range(5))}",
              [
                  "./example.py:1:1: C416 Unnecessary dict comprehension - "
                  + "rewrite using dict().",
              ],
          ),
          (
              "[x for x in range(5)]",
              [
                  f"./example.py:1:{1 + list_comp_col_offset}: C416 Unnecessary "
                  + "list comprehension - rewrite using list()."
              ],
          ),
          (
              "{x for x in range(5)}",
              [
                  "./example.py:1:1: C416 Unnecessary set comprehension - "
                  + "rewrite using set().",
              ],
          ),
      ],
  )
  def test_C416_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_ ERROR at setup of test_C416_fail[{x: y for (x, y) in zip(range(5), range(5))}-failures1] _
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 802
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "{x: y for x, y in zip(range(5), range(5))}",
              [
                  "./example.py:1:1: C416 Unnecessary dict comprehension - "
                  + "rewrite using dict().",
              ],
          ),
          (
              "{x: y for (x, y) in zip(range(5), range(5))}",
              [
                  "./example.py:1:1: C416 Unnecessary dict comprehension - "
                  + "rewrite using dict().",
              ],
          ),
          (
              "[x for x in range(5)]",
              [
                  f"./example.py:1:{1 + list_comp_col_offset}: C416 Unnecessary "
                  + "list comprehension - rewrite using list()."
              ],
          ),
          (
              "{x for x in range(5)}",
              [
                  "./example.py:1:1: C416 Unnecessary set comprehension - "
                  + "rewrite using set().",
              ],
          ),
      ],
  )
  def test_C416_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
______ ERROR at setup of test_C416_fail[[x for x in range(5)]-failures2] _______
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 802
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "{x: y for x, y in zip(range(5), range(5))}",
              [
                  "./example.py:1:1: C416 Unnecessary dict comprehension - "
                  + "rewrite using dict().",
              ],
          ),
          (
              "{x: y for (x, y) in zip(range(5), range(5))}",
              [
                  "./example.py:1:1: C416 Unnecessary dict comprehension - "
                  + "rewrite using dict().",
              ],
          ),
          (
              "[x for x in range(5)]",
              [
                  f"./example.py:1:{1 + list_comp_col_offset}: C416 Unnecessary "
                  + "list comprehension - rewrite using list()."
              ],
          ),
          (
              "{x for x in range(5)}",
              [
                  "./example.py:1:1: C416 Unnecessary set comprehension - "
                  + "rewrite using set().",
              ],
          ),
      ],
  )
  def test_C416_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
______ ERROR at setup of test_C416_fail[{x for x in range(5)}-failures3] _______
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 802
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "{x: y for x, y in zip(range(5), range(5))}",
              [
                  "./example.py:1:1: C416 Unnecessary dict comprehension - "
                  + "rewrite using dict().",
              ],
          ),
          (
              "{x: y for (x, y) in zip(range(5), range(5))}",
              [
                  "./example.py:1:1: C416 Unnecessary dict comprehension - "
                  + "rewrite using dict().",
              ],
          ),
          (
              "[x for x in range(5)]",
              [
                  f"./example.py:1:{1 + list_comp_col_offset}: C416 Unnecessary "
                  + "list comprehension - rewrite using list()."
              ],
          ),
          (
              "{x for x in range(5)}",
              [
                  "./example.py:1:1: C416 Unnecessary set comprehension - "
                  + "rewrite using set().",
              ],
          ),
      ],
  )
  def test_C416_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
___________________ ERROR at setup of test_C417_pass[map()] ____________________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 841
  @pytest.mark.parametrize(
      "code",
      [
          "map()",
          "map(str, numbers)",
          "list(map())",
          "list(map(str, numbers))",
          "set(map(f, items))",
          "dict(map(enumerate, values))",
          "dict(map(lambda v: data[v], values))",
      ],
  )
  def test_C417_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_____________ ERROR at setup of test_C417_pass[map(str, numbers)] ______________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 841
  @pytest.mark.parametrize(
      "code",
      [
          "map()",
          "map(str, numbers)",
          "list(map())",
          "list(map(str, numbers))",
          "set(map(f, items))",
          "dict(map(enumerate, values))",
          "dict(map(lambda v: data[v], values))",
      ],
  )
  def test_C417_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
________________ ERROR at setup of test_C417_pass[list(map())] _________________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 841
  @pytest.mark.parametrize(
      "code",
      [
          "map()",
          "map(str, numbers)",
          "list(map())",
          "list(map(str, numbers))",
          "set(map(f, items))",
          "dict(map(enumerate, values))",
          "dict(map(lambda v: data[v], values))",
      ],
  )
  def test_C417_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
__________ ERROR at setup of test_C417_pass[list(map(str, numbers))] ___________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 841
  @pytest.mark.parametrize(
      "code",
      [
          "map()",
          "map(str, numbers)",
          "list(map())",
          "list(map(str, numbers))",
          "set(map(f, items))",
          "dict(map(enumerate, values))",
          "dict(map(lambda v: data[v], values))",
      ],
  )
  def test_C417_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_____________ ERROR at setup of test_C417_pass[set(map(f, items))] _____________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 841
  @pytest.mark.parametrize(
      "code",
      [
          "map()",
          "map(str, numbers)",
          "list(map())",
          "list(map(str, numbers))",
          "set(map(f, items))",
          "dict(map(enumerate, values))",
          "dict(map(lambda v: data[v], values))",
      ],
  )
  def test_C417_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
________ ERROR at setup of test_C417_pass[dict(map(enumerate, values))] ________
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 841
  @pytest.mark.parametrize(
      "code",
      [
          "map()",
          "map(str, numbers)",
          "list(map())",
          "list(map(str, numbers))",
          "set(map(f, items))",
          "dict(map(enumerate, values))",
          "dict(map(lambda v: data[v], values))",
      ],
  )
  def test_C417_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
____ ERROR at setup of test_C417_pass[dict(map(lambda v: data[v], values))] ____
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 841
  @pytest.mark.parametrize(
      "code",
      [
          "map()",
          "map(str, numbers)",
          "list(map())",
          "list(map(str, numbers))",
          "set(map(f, items))",
          "dict(map(enumerate, values))",
          "dict(map(lambda v: data[v], values))",
      ],
  )
  def test_C417_pass(code, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
__ ERROR at setup of test_C417_fail[map(lambda x: x * 2, iterable)-failures0] __
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 859
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "map(lambda x: x * 2, iterable)",
              [
                  "./example.py:1:1: C417 Unnecessary use of map - "
                  + "use a generator expression instead.",
              ],
          ),
          (
              "list(map(lambda x: x * 2, iterable))",
              [
                  "./example.py:1:1: C417 Unnecessary use of map - "
                  + "use a list comprehension instead.",
              ],
          ),
          (
              "set(map(lambda num: num % 2 == 0, nums))",
              [
                  "./example.py:1:1: C417 Unnecessary use of map - "
                  + "use a set comprehension instead.",
              ],
          ),
          (
              "dict(map(lambda v: (v, v ** 2), values))",
              [
                  "./example.py:1:1: C417 Unnecessary use of map - "
                  "use a dict comprehension instead.",
              ],
          ),
      ],
  )
  def test_C417_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_ ERROR at setup of test_C417_fail[list(map(lambda x: x * 2, iterable))-failures1] _
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 859
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "map(lambda x: x * 2, iterable)",
              [
                  "./example.py:1:1: C417 Unnecessary use of map - "
                  + "use a generator expression instead.",
              ],
          ),
          (
              "list(map(lambda x: x * 2, iterable))",
              [
                  "./example.py:1:1: C417 Unnecessary use of map - "
                  + "use a list comprehension instead.",
              ],
          ),
          (
              "set(map(lambda num: num % 2 == 0, nums))",
              [
                  "./example.py:1:1: C417 Unnecessary use of map - "
                  + "use a set comprehension instead.",
              ],
          ),
          (
              "dict(map(lambda v: (v, v ** 2), values))",
              [
                  "./example.py:1:1: C417 Unnecessary use of map - "
                  "use a dict comprehension instead.",
              ],
          ),
      ],
  )
  def test_C417_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_ ERROR at setup of test_C417_fail[set(map(lambda num: num % 2 == 0, nums))-failures2] _
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 859
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "map(lambda x: x * 2, iterable)",
              [
                  "./example.py:1:1: C417 Unnecessary use of map - "
                  + "use a generator expression instead.",
              ],
          ),
          (
              "list(map(lambda x: x * 2, iterable))",
              [
                  "./example.py:1:1: C417 Unnecessary use of map - "
                  + "use a list comprehension instead.",
              ],
          ),
          (
              "set(map(lambda num: num % 2 == 0, nums))",
              [
                  "./example.py:1:1: C417 Unnecessary use of map - "
                  + "use a set comprehension instead.",
              ],
          ),
          (
              "dict(map(lambda v: (v, v ** 2), values))",
              [
                  "./example.py:1:1: C417 Unnecessary use of map - "
                  "use a dict comprehension instead.",
              ],
          ),
      ],
  )
  def test_C417_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
_ ERROR at setup of test_C417_fail[dict(map(lambda v: (v, v ** 2), values))-failures3] _
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 859
  @pytest.mark.parametrize(
      "code,failures",
      [
          (
              "map(lambda x: x * 2, iterable)",
              [
                  "./example.py:1:1: C417 Unnecessary use of map - "
                  + "use a generator expression instead.",
              ],
          ),
          (
              "list(map(lambda x: x * 2, iterable))",
              [
                  "./example.py:1:1: C417 Unnecessary use of map - "
                  + "use a list comprehension instead.",
              ],
          ),
          (
              "set(map(lambda num: num % 2 == 0, nums))",
              [
                  "./example.py:1:1: C417 Unnecessary use of map - "
                  + "use a set comprehension instead.",
              ],
          ),
          (
              "dict(map(lambda v: (v, v ** 2), values))",
              [
                  "./example.py:1:1: C417 Unnecessary use of map - "
                  "use a dict comprehension instead.",
              ],
          ),
      ],
  )
  def test_C417_fail(code, failures, flake8_path):
file /workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py, line 15
  @pytest.fixture
  def flake8_path(flake8_path):
E       recursive dependency involving fixture 'flake8_path' detected
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, flake8_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/workdir/flake8-comprehensions-3.11.1/tests/test_flake8_comprehensions.py:15
- generated xml file: /workdir/results/flake8-comprehensions/3.11.1/1/cpython-test-results.xml -
=========================== short test summary info ============================
ERROR tests/test_flake8_comprehensions.py::test_version
ERROR tests/test_flake8_comprehensions.py::test_C400_pass[foo = [x + 1 for x in range(10)]]
ERROR tests/test_flake8_comprehensions.py::test_C400_fail[foo = list(x + 1 for x in range(10))-failures0]
ERROR tests/test_flake8_comprehensions.py::test_C400_fail[            foobar = list(\n                str(x)\n                for x\n                in range(10)\n            )\n            -failures1]
ERROR tests/test_flake8_comprehensions.py::test_C401_pass[foo = {x + 1 for x in range(10)}]
ERROR tests/test_flake8_comprehensions.py::test_C401_fail[foo = set(x + 1 for x in range(10))-failures0]
ERROR tests/test_flake8_comprehensions.py::test_C401_fail[            foobar = set(\n                str(x) for x\n                in range(10)\n            )\n            -failures1]
ERROR tests/test_flake8_comprehensions.py::test_C402_pass[foo = {x: str(x) for x in range(10)}]
ERROR tests/test_flake8_comprehensions.py::test_C402_pass[        foo = ['a=1', 'b=2', 'c=3']\n        dict(pair.split('=') for pair in foo)\n        ]
ERROR tests/test_flake8_comprehensions.py::test_C402_pass[        foo = [('a', 1), ('b', 2), ('c', 3)]\n        dict(pair for pair in foo if pair[1] % 2 == 0)\n        ]
ERROR tests/test_flake8_comprehensions.py::test_C402_pass[dict(((x, str(x)) for x in range(10)), c=1)]
ERROR tests/test_flake8_comprehensions.py::test_C402_fail[foo = dict((x, str(x)) for x in range(10))-failures0]
ERROR tests/test_flake8_comprehensions.py::test_C402_fail[            foobar = dict(\n                (x, str(x))\n                for x\n                in range(10)\n            )\n            -failures1]
ERROR tests/test_flake8_comprehensions.py::test_C403_pass[foo = {x + 1 for x in range(10)}]
ERROR tests/test_flake8_comprehensions.py::test_C403_fail[foo = set([x + 1 for x in range(10)])-failures0]
ERROR tests/test_flake8_comprehensions.py::test_C404_pass[foo = {x: x for x in range(10)}]
ERROR tests/test_flake8_comprehensions.py::test_C404_pass[foo = dict([x.split('=') for x in ['a=1', 'b=2']])]
ERROR tests/test_flake8_comprehensions.py::test_C404_pass[dict([(x, x) for x in range(10)], y=2)]
ERROR tests/test_flake8_comprehensions.py::test_C404_fail[foo = dict([(x, x) for x in range(10)])-failures0]
ERROR tests/test_flake8_comprehensions.py::test_C405_pass[foo = set(range)]
ERROR tests/test_flake8_comprehensions.py::test_C405_fail[foo = set([])-failures0]
ERROR tests/test_flake8_comprehensions.py::test_C405_fail[foo = set([1])-failures1]
ERROR tests/test_flake8_comprehensions.py::test_C405_fail[foo = set(())-failures2]
ERROR tests/test_flake8_comprehensions.py::test_C405_fail[foo = set((1,))-failures3]
ERROR tests/test_flake8_comprehensions.py::test_C406_pass[foo = dict(range)]
ERROR tests/test_flake8_comprehensions.py::test_C406_pass[something = (1, 2); dict([something])]
ERROR tests/test_flake8_comprehensions.py::test_C406_pass[dict([(1,)])]
ERROR tests/test_flake8_comprehensions.py::test_C406_fail[foo = dict([])-failures0]
ERROR tests/test_flake8_comprehensions.py::test_C406_fail[foo = dict([(1, 2)])-failures1]
ERROR tests/test_flake8_comprehensions.py::test_C406_fail[foo = dict(())-failures2]
ERROR tests/test_flake8_comprehensions.py::test_C406_fail[foo = dict(((1, 2),))-failures3]
ERROR tests/test_flake8_comprehensions.py::test_C408_pass[()]
ERROR tests/test_flake8_comprehensions.py::test_C408_pass[[]]
ERROR tests/test_flake8_comprehensions.py::test_C408_pass[{}]
ERROR tests/test_flake8_comprehensions.py::test_C408_pass[set()]
ERROR tests/test_flake8_comprehensions.py::test_C408_pass[        foo = [('foo', 2)]\n        dict(foo)\n        ]
ERROR tests/test_flake8_comprehensions.py::test_C408_pass[        foo = {}\n        dict(bar=1, **foo)\n        ]
ERROR tests/test_flake8_comprehensions.py::test_C408_pass[        foo = [1, 2]\n        list(foo)\n        ]
ERROR tests/test_flake8_comprehensions.py::test_C408_pass[        foo = [1, 2]\n        list(*foo)\n        ]
ERROR tests/test_flake8_comprehensions.py::test_C408_fail[tuple()-failures0]
ERROR tests/test_flake8_comprehensions.py::test_C408_fail[list()-failures1]
ERROR tests/test_flake8_comprehensions.py::test_C408_fail[dict()-failures2]
ERROR tests/test_flake8_comprehensions.py::test_C408_fail[dict(a=1)-failures3]
ERROR tests/test_flake8_comprehensions.py::test_C409_pass[foo = tuple(range)]
ERROR tests/test_flake8_comprehensions.py::test_C409_fail[foo = tuple([])-failures0]
ERROR tests/test_flake8_comprehensions.py::test_C409_fail[foo = tuple([1, 2])-failures1]
ERROR tests/test_flake8_comprehensions.py::test_C409_fail[foo = tuple(())-failures2]
ERROR tests/test_flake8_comprehensions.py::test_C409_fail[foo = tuple((1, 2))-failures3]
ERROR tests/test_flake8_comprehensions.py::test_C410_pass[foo = list(range)]
ERROR tests/test_flake8_comprehensions.py::test_C410_fail[foo = list([])-failures0]
ERROR tests/test_flake8_comprehensions.py::test_C410_fail[foo = list([1, 2])-failures1]
ERROR tests/test_flake8_comprehensions.py::test_C410_fail[foo = list(())-failures2]
ERROR tests/test_flake8_comprehensions.py::test_C410_fail[foo = list((1, 2))-failures3]
ERROR tests/test_flake8_comprehensions.py::test_C411_pass[[x + 1 for x in range(10)]]
ERROR tests/test_flake8_comprehensions.py::test_C411_fail[list([x + 1 for x in range(10)])-failures0]
ERROR tests/test_flake8_comprehensions.py::test_C413_pass[sorted([2, 3, 1])]
ERROR tests/test_flake8_comprehensions.py::test_C413_pass[sorted([2, 3, 1], reverse=True)]
ERROR tests/test_flake8_comprehensions.py::test_C413_pass[sorted([2, 3, 1], reverse=False)]
ERROR tests/test_flake8_comprehensions.py::test_C413_pass[sorted([2, 3, 1], reverse=0)]
ERROR tests/test_flake8_comprehensions.py::test_C413_pass[sorted([2, 3, 1], reverse=1)]
ERROR tests/test_flake8_comprehensions.py::test_C413_pass[reversed([2, 3, 1])]
ERROR tests/test_flake8_comprehensions.py::test_C413_fail[list(sorted([2, 3, 1]))-failures0]
ERROR tests/test_flake8_comprehensions.py::test_C413_fail[reversed(sorted([2, 3, 1]))-failures1]
ERROR tests/test_flake8_comprehensions.py::test_C413_fail[reversed(sorted([2, 3, 1], reverse=False))-failures2]
ERROR tests/test_flake8_comprehensions.py::test_C413_fail[reversed(sorted([2, 3, 1], reverse=True))-failures3]
ERROR tests/test_flake8_comprehensions.py::test_C413_fail[reversed(sorted([2, 3, 1], reverse=0))-failures4]
ERROR tests/test_flake8_comprehensions.py::test_C413_fail[reversed(sorted([2, 3, 1], reverse=1))-failures5]
ERROR tests/test_flake8_comprehensions.py::test_C413_fail[reversed(sorted([2, 3, 1], reverse=bool()))-failures6]
ERROR tests/test_flake8_comprehensions.py::test_C413_fail[reversed(sorted([2, 3, 1], reverse=not True))-failures7]
ERROR tests/test_flake8_comprehensions.py::test_C414_pass[list(set(a))]
ERROR tests/test_flake8_comprehensions.py::test_C414_pass[tuple(set(a))]
ERROR tests/test_flake8_comprehensions.py::test_C414_pass[sorted(set(a))]
ERROR tests/test_flake8_comprehensions.py::test_C414_fail[list(list(a))-failures0]
ERROR tests/test_flake8_comprehensions.py::test_C414_fail[list(tuple(a))-failures1]
ERROR tests/test_flake8_comprehensions.py::test_C414_fail[tuple(list(a))-failures2]
ERROR tests/test_flake8_comprehensions.py::test_C414_fail[tuple(tuple(a))-failures3]
ERROR tests/test_flake8_comprehensions.py::test_C414_fail[set(set(a))-failures4]
ERROR tests/test_flake8_comprehensions.py::test_C414_fail[set(list(a))-failures5]
ERROR tests/test_flake8_comprehensions.py::test_C414_fail[set(tuple(a))-failures6]
ERROR tests/test_flake8_comprehensions.py::test_C414_fail[set(sorted(a))-failures7]
ERROR tests/test_flake8_comprehensions.py::test_C414_fail[set(sorted(a, reverse=True))-failures8]
ERROR tests/test_flake8_comprehensions.py::test_C414_fail[set(reversed(a))-failures9]
ERROR tests/test_flake8_comprehensions.py::test_C414_fail[sorted(list(a))-failures10]
ERROR tests/test_flake8_comprehensions.py::test_C414_fail[sorted(tuple(a))-failures11]
ERROR tests/test_flake8_comprehensions.py::test_C414_fail[sorted(sorted(a))-failures12]
ERROR tests/test_flake8_comprehensions.py::test_C414_fail[sorted(sorted(a), reverse=True)-failures13]
ERROR tests/test_flake8_comprehensions.py::test_C414_fail[sorted(sorted(a, reverse=True))-failures14]
ERROR tests/test_flake8_comprehensions.py::test_C414_fail[sorted(sorted(a, reverse=True), reverse=True)-failures15]
ERROR tests/test_flake8_comprehensions.py::test_C414_fail[sorted(reversed(a))-failures16]
ERROR tests/test_flake8_comprehensions.py::test_C414_fail[sorted(reversed(a), reverse=True)-failures17]
ERROR tests/test_flake8_comprehensions.py::test_C415_pass[set([2, 3, 1][::1])]
ERROR tests/test_flake8_comprehensions.py::test_C415_pass[sorted([2, 3, 1][::1])]
ERROR tests/test_flake8_comprehensions.py::test_C415_pass[reversed([2, 3, 1][::1])]
ERROR tests/test_flake8_comprehensions.py::test_C415_fail[set([2, 3, 1][::-1])-failures0]
ERROR tests/test_flake8_comprehensions.py::test_C415_fail[sorted([2, 3, 1][::-1])-failures1]
ERROR tests/test_flake8_comprehensions.py::test_C415_fail[sorted([2, 3, 1][::-1], reverse=True)-failures2]
ERROR tests/test_flake8_comprehensions.py::test_C415_fail[reversed([2, 3, 1][::-1])-failures3]
ERROR tests/test_flake8_comprehensions.py::test_C416_pass[{x, y for x, y, z in zip('abc', '123', 'def')}]
ERROR tests/test_flake8_comprehensions.py::test_C416_pass[{y: x for x, y in zip('abc', '123')}]
ERROR tests/test_flake8_comprehensions.py::test_C416_pass[{x: y for x, (y,) in zip('a', ('1',))}]
ERROR tests/test_flake8_comprehensions.py::test_C416_pass[{x: z for x, (y,), z in zip('a', ('1',), 'b')}]
ERROR tests/test_flake8_comprehensions.py::test_C416_pass[[str(x) for x in range(5)]]
ERROR tests/test_flake8_comprehensions.py::test_C416_pass[[x + 1 for x in range(5)]]
ERROR tests/test_flake8_comprehensions.py::test_C416_pass[[x for x in range(5) if x % 2]]
ERROR tests/test_flake8_comprehensions.py::test_C416_pass[{str(x) for x in range(5)}]
ERROR tests/test_flake8_comprehensions.py::test_C416_pass[{x + 1 for x in range(5)}]
ERROR tests/test_flake8_comprehensions.py::test_C416_pass[{x for x in range(5) if x % 2}]
ERROR tests/test_flake8_comprehensions.py::test_C416_pass[        async def foo():\n            [x async for x in range(5)]\n        ]
ERROR tests/test_flake8_comprehensions.py::test_C416_pass[        async def foo():\n            return {x async for x in range(5)}\n        ]
ERROR tests/test_flake8_comprehensions.py::test_C416_pass[[(x, y, 1) for x, y in []]]
ERROR tests/test_flake8_comprehensions.py::test_C416_pass[[(x, y) for x, y in zip('abc', '123')]]
ERROR tests/test_flake8_comprehensions.py::test_C416_pass[[(x, y) for (x, y) in zip('abc', '123')]]
ERROR tests/test_flake8_comprehensions.py::test_C416_pass[{(x, y) for x, y in zip('abc', '123')}]
ERROR tests/test_flake8_comprehensions.py::test_C416_pass[{(x, y) for (x, y) in zip('abc', '123')}]
ERROR tests/test_flake8_comprehensions.py::test_C416_fail[{x: y for x, y in zip(range(5), range(5))}-failures0]
ERROR tests/test_flake8_comprehensions.py::test_C416_fail[{x: y for (x, y) in zip(range(5), range(5))}-failures1]
ERROR tests/test_flake8_comprehensions.py::test_C416_fail[[x for x in range(5)]-failures2]
ERROR tests/test_flake8_comprehensions.py::test_C416_fail[{x for x in range(5)}-failures3]
ERROR tests/test_flake8_comprehensions.py::test_C417_pass[map()]
ERROR tests/test_flake8_comprehensions.py::test_C417_pass[map(str, numbers)]
ERROR tests/test_flake8_comprehensions.py::test_C417_pass[list(map())]
ERROR tests/test_flake8_comprehensions.py::test_C417_pass[list(map(str, numbers))]
ERROR tests/test_flake8_comprehensions.py::test_C417_pass[set(map(f, items))]
ERROR tests/test_flake8_comprehensions.py::test_C417_pass[dict(map(enumerate, values))]
ERROR tests/test_flake8_comprehensions.py::test_C417_pass[dict(map(lambda v: data[v], values))]
ERROR tests/test_flake8_comprehensions.py::test_C417_fail[map(lambda x: x * 2, iterable)-failures0]
ERROR tests/test_flake8_comprehensions.py::test_C417_fail[list(map(lambda x: x * 2, iterable))-failures1]
ERROR tests/test_flake8_comprehensions.py::test_C417_fail[set(map(lambda num: num % 2 == 0, nums))-failures2]
ERROR tests/test_flake8_comprehensions.py::test_C417_fail[dict(map(lambda v: (v, v ** 2), values))-failures3]
============================= 129 errors in 0.43s ==============================
ERROR: InvocationError for command /workdir/flake8-comprehensions-3.11.1/.tox/cpythonlibtest-unit-test-tests/bin/pytest -v --tb=native --junitxml /workdir/results/flake8-comprehensions/3.11.1/1/cpython-test-results.xml (exited with code 1)
___________________________________ summary ____________________________________
ERROR:   cpythonlibtest-unit-test-tests: commands failed
