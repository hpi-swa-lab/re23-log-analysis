<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="0" skipped="5" tests="46" time="10.308" timestamp="2023-11-28T22:00:20.563765" hostname="a1f8948d47fc"><testcase classname="test.test_advanced.Test_ChangeAttributes" name="test_BaudrateSetting" time="0.002" /><testcase classname="test.test_advanced.Test_ChangeAttributes" name="test_BytesizeSetting" time="0.001" /><testcase classname="test.test_advanced.Test_ChangeAttributes" name="test_DoubleOpen" time="0.001" /><testcase classname="test.test_advanced.Test_ChangeAttributes" name="test_ParitySetting" time="0.001" /><testcase classname="test.test_advanced.Test_ChangeAttributes" name="test_PortOpenClose" time="0.001" /><testcase classname="test.test_advanced.Test_ChangeAttributes" name="test_PortSetting" time="0.001" /><testcase classname="test.test_advanced.Test_ChangeAttributes" name="test_RtsCtsSetting" time="0.001" /><testcase classname="test.test_advanced.Test_ChangeAttributes" name="test_StopbitsSetting" time="0.001" /><testcase classname="test.test_advanced.Test_ChangeAttributes" name="test_TimeoutSetting" time="0.001" /><testcase classname="test.test_advanced.Test_ChangeAttributes" name="test_XonXoffSetting" time="0.001" /><testcase classname="test.test_cancel.TestCancelRead" name="test_cancel_once" time="1.002" /><testcase classname="test.test_cancel.TestCancelWrite" name="test_cancel_once" time="1.003" /><testcase classname="test.test_context.Test_Context" name="test_with_idempotent" time="0.001" /><testcase classname="test.test_exclusive.Test_exclusive" name="test_exclusive_false" time="0.001"><skipped type="pytest.skip" message="exclusive test only compatible with real serial port">/workdir/pyserial-3.5/test/test_exclusive.py:32: exclusive test only compatible with real serial port</skipped></testcase><testcase classname="test.test_exclusive.Test_exclusive" name="test_exclusive_none" time="0.001"><skipped type="pytest.skip" message="exclusive test only compatible with real serial port">/workdir/pyserial-3.5/test/test_exclusive.py:27: exclusive test only compatible with real serial port</skipped></testcase><testcase classname="test.test_exclusive.Test_exclusive" name="test_exclusive_only_true" time="0.000"><skipped type="pytest.skip" message="platform is not restricted to exclusive=True (and None)">/workdir/pyserial-3.5/test/test_exclusive.py:45: platform is not restricted to exclusive=True (and None)</skipped></testcase><testcase classname="test.test_exclusive.Test_exclusive" name="test_exclusive_true" time="0.001"><skipped type="pytest.skip" message="exclusive test only compatible with real serial port">/workdir/pyserial-3.5/test/test_exclusive.py:38: exclusive test only compatible with real serial port</skipped></testcase><testcase classname="test.test_high_load.TestHighLoad" name="test0_WriteReadLoopback" time="0.012" /><testcase classname="test.test_high_load.TestHighLoad" name="test1_WriteWriteReadLoopback" time="0.011" /><testcase classname="test.test_iolib.Test_SerialAndIO" name="test_hello_raw" time="1.001" /><testcase classname="test.test_pty.Test_Pty_Serial_Open" name="test_pty_serial_open_slave" time="0.001" /><testcase classname="test.test_pty.Test_Pty_Serial_Open" name="test_pty_serial_read" time="0.001" /><testcase classname="test.test_pty.Test_Pty_Serial_Open" name="test_pty_serial_write" time="0.001" /><testcase classname="test.test_readline.Test_Readline" name="test_alternate_eol" time="0.001" /><testcase classname="test.test_readline.Test_Readline" name="test_for_in" time="1.002" /><testcase classname="test.test_readline.Test_Readline" name="test_readline" time="1.001" /><testcase classname="test.test_readline.Test_Readline" name="test_readlines" time="1.002" /><testcase classname="test.test_readline.Test_Readline" name="test_xreadlines" time="0.001" /><testcase classname="test.test_rfc2217.Test_RFC2217" name="test_failed_connection" time="0.002" /><testcase classname="test.test_rs485.Test_RS485_settings" name="test_enable_RS485" time="0.001" /><testcase classname="test.test_rs485.Test_RS485_class" name="test_RS485_class" time="0.001"><skipped type="pytest.skip" message="RS485 test only compatible with real serial port">/workdir/pyserial-3.5/test/test_rs485.py:53: RS485 test only compatible with real serial port</skipped></testcase><testcase classname="test.test_settings_dict.Test_SettingsDict" name="test_getsettings" time="0.000" /><testcase classname="test.test_settings_dict.Test_SettingsDict" name="test_init_sets_the_correct_attrs" time="0.001" /><testcase classname="test.test_settings_dict.Test_SettingsDict" name="test_partial_settings" time="0.000" /><testcase classname="test.test_settings_dict.Test_SettingsDict" name="test_unknown_settings" time="0.000" /><testcase classname="test.test_threaded.Test_threaded" name="test_framed_packet" time="1.002" /><testcase classname="test.test_threaded.Test_threaded" name="test_line_reader" time="1.003" /><testcase classname="test.test_timeout_class.TestTimeoutClass" name="test_blocking" time="0.001" /><testcase classname="test.test_timeout_class.TestTimeoutClass" name="test_changing_clock" time="0.001" /><testcase classname="test.test_timeout_class.TestTimeoutClass" name="test_non_blocking" time="0.000" /><testcase classname="test.test_timeout_class.TestTimeoutClass" name="test_simple_timeout" time="2.104" /><testcase classname="test.test_url.Test_URL" name="test_bad_url" time="0.001" /><testcase classname="test.test_url.Test_URL" name="test_custom_url" time="0.001" /><testcase classname="test.test_url.Test_URL" name="test_loop" time="0.001" /><testcase classname="test.test_util.Test_util" name="test_iterbytes" time="0.000" /><testcase classname="test.test_util.Test_util" name="test_to_bytes" time="0.000" /></testsuite></testsuites>