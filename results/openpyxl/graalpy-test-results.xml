<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="1" skipped="11" tests="2430" time="221.760" timestamp="2023-11-22T18:18:03.649000" hostname="80ac3eb7f7f2"><testcase classname="openpyxl.cell.tests.test_cell" name="test_ctor" time="0.048" /><testcase classname="openpyxl.cell.tests.test_cell" name="test_null[n]" time="0.035" /><testcase classname="openpyxl.cell.tests.test_cell" name="test_null[d]" time="0.026" /><testcase classname="openpyxl.cell.tests.test_cell" name="test_null[s]" time="0.027" /><testcase classname="openpyxl.cell.tests.test_cell" name="test_null[b]" time="0.023" /><testcase classname="openpyxl.cell.tests.test_cell" name="test_null[f]" time="0.019" /><testcase classname="openpyxl.cell.tests.test_cell" name="test_null[e]" time="0.019" /><testcase classname="openpyxl.cell.tests.test_cell" name="test_string[hello]" time="0.016" /><testcase classname="openpyxl.cell.tests.test_cell" name="test_string[.]" time="0.017" /><testcase classname="openpyxl.cell.tests.test_cell" name="test_string[0800]" time="0.019" /><testcase classname="openpyxl.cell.tests.test_cell" name="test_formula[=42]" time="0.017" /><testcase classname="openpyxl.cell.tests.test_cell" name="test_formula[=if(A1&lt;4;-1;1)]" time="0.022" /><testcase classname="openpyxl.cell.tests.test_cell" name="test_not_formula" time="0.079" /><testcase classname="openpyxl.cell.tests.test_cell" name="test_boolean[True]" time="0.023" /><testcase classname="openpyxl.cell.tests.test_cell" name="test_boolean[False]" time="0.022" /><testcase classname="openpyxl.cell.tests.test_cell" name="test_error_codes[#NULL!]" time="0.020" /><testcase classname="openpyxl.cell.tests.test_cell" name="test_error_codes[#DIV/0!]" time="0.026" /><testcase classname="openpyxl.cell.tests.test_cell" name="test_error_codes[#VALUE!]" time="0.020" /><testcase classname="openpyxl.cell.tests.test_cell" name="test_error_codes[#REF!]" time="0.023" /><testcase classname="openpyxl.cell.tests.test_cell" name="test_error_codes[#NAME?]" time="0.025" /><testcase classname="openpyxl.cell.tests.test_cell" name="test_error_codes[#NUM!]" time="0.025" /><testcase classname="openpyxl.cell.tests.test_cell" name="test_error_codes[#N/A]" time="0.024" /><testcase classname="openpyxl.cell.tests.test_cell" name="test_insert_date[value0-yyyy-mm-dd h:mm:ss]" time="0.035" /><testcase classname="openpyxl.cell.tests.test_cell" name="test_insert_date[value1-yyyy-mm-dd]" time="0.020" /><testcase classname="openpyxl.cell.tests.test_cell" name="test_insert_date[value2-h:mm:ss]" time="0.022" /><testcase classname="openpyxl.cell.tests.test_cell" name="test_timstamp" time="7.109" /><testcase classname="openpyxl.cell.tests.test_cell" name="test_time_format_datetime_subclass" time="0.012" /><testcase classname="openpyxl.cell.tests.test_cell" name="test_time_format_date_subclass" time="0.011" /><testcase classname="openpyxl.cell.tests.test_cell" name="test_time_format_no_date_subclass" time="0.015" /><testcase classname="openpyxl.cell.tests.test_cell" name="test_not_overwrite_time_format" time="0.020" /><testcase classname="openpyxl.cell.tests.test_cell" name="test_cell_formatted_as_date[None-True]" time="0.024" /><testcase classname="openpyxl.cell.tests.test_cell" name="test_cell_formatted_as_date[testme-False]" time="0.026" /><testcase classname="openpyxl.cell.tests.test_cell" name="test_cell_formatted_as_date[True-False]" time="0.021" /><testcase classname="openpyxl.cell.tests.test_cell" name="test_illegal_characters" time="0.029" /><testcase classname="openpyxl.cell.tests.test_cell" name="test_timedelta" time="0.028"><skipped type="pytest.xfail" message="" /></testcase><testcase classname="openpyxl.cell.tests.test_cell" name="test_repr" time="0.023" /><testcase classname="openpyxl.cell.tests.test_cell" name="test_repr_object" time="0.021" /><testcase classname="openpyxl.cell.tests.test_cell" name="test_comment_assignment" time="0.014" /><testcase classname="openpyxl.cell.tests.test_cell" name="test_only_one_cell_per_comment" time="0.016" /><testcase classname="openpyxl.cell.tests.test_cell" name="test_remove_comment" time="0.032" /><testcase classname="openpyxl.cell.tests.test_cell" name="test_cell_offset" time="0.022" /><testcase classname="openpyxl.cell.tests.test_cell.TestEncoding" name="test_bad_encoding" time="0.184" /><testcase classname="openpyxl.cell.tests.test_cell.TestEncoding" name="test_good_encoding" time="0.092" /><testcase classname="openpyxl.cell.tests.test_cell" name="test_font" time="0.017" /><testcase classname="openpyxl.cell.tests.test_cell" name="test_fill" time="0.019" /><testcase classname="openpyxl.cell.tests.test_cell" name="test_border" time="0.020" /><testcase classname="openpyxl.cell.tests.test_cell" name="test_number_format" time="0.019" /><testcase classname="openpyxl.cell.tests.test_cell" name="test_alignment" time="0.016" /><testcase classname="openpyxl.cell.tests.test_cell" name="test_protection" time="0.016" /><testcase classname="openpyxl.cell.tests.test_cell" name="test_pivot_button" time="0.015" /><testcase classname="openpyxl.cell.tests.test_cell" name="test_quote_prefix" time="0.020" /><testcase classname="openpyxl.cell.tests.test_cell" name="test_remove_hyperlink" time="0.036" /><testcase classname="openpyxl.cell.tests.test_cell.TestMergedCell" name="test_value" time="0.030" /><testcase classname="openpyxl.cell.tests.test_cell.TestMergedCell" name="test_data_type" time="0.023" /><testcase classname="openpyxl.cell.tests.test_cell.TestMergedCell" name="test_comment" time="0.018" /><testcase classname="openpyxl.cell.tests.test_cell.TestMergedCell" name="test_coordinate" time="0.022" /><testcase classname="openpyxl.cell.tests.test_cell.TestMergedCell" name="test_repr" time="0.016" /><testcase classname="openpyxl.cell.tests.test_cell.TestMergedCell" name="test_hyperlink" time="0.017" /><testcase classname="openpyxl.cell.tests.test_cell" name="test_write_numpy_to_cell" time="0.022" /><testcase classname="openpyxl.cell.tests.test_read_only" name="test_ctor" time="0.015" /><testcase classname="openpyxl.cell.tests.test_read_only" name="test_empty_cell" time="0.010" /><testcase classname="openpyxl.cell.tests.test_read_only" name="test_coordinate" time="0.012" /><testcase classname="openpyxl.cell.tests.test_read_only.TestStyle" name="test_style_array" time="0.021" /><testcase classname="openpyxl.cell.tests.test_read_only.TestStyle" name="test_font" time="0.012" /><testcase classname="openpyxl.cell.tests.test_read_only.TestStyle" name="test_has_style" time="0.020" /><testcase classname="openpyxl.cell.tests.test_read_only" name="test_read_only" time="0.011" /><testcase classname="openpyxl.cell.tests.test_read_only" name="test_equality" time="0.011" /><testcase classname="openpyxl.cell.tests.test_read_only" name="test_is_date" time="0.020" /><testcase classname="openpyxl.cell.tests.test_text.TestInlineFont" name="test_ctor" time="0.025" /><testcase classname="openpyxl.cell.tests.test_text.TestInlineFont" name="test_from_xml" time="0.026" /><testcase classname="openpyxl.cell.tests.test_text.TestRichText" name="test_ctor" time="0.022" /><testcase classname="openpyxl.cell.tests.test_text.TestRichText" name="test_from_xml" time="0.024" /><testcase classname="openpyxl.cell.tests.test_text.TestText" name="test_ctor" time="0.036" /><testcase classname="openpyxl.cell.tests.test_text.TestText" name="test_from_xml[&lt;is&gt;&lt;t&gt;ID&lt;/t&gt;&lt;/is&gt;-ID]" time="0.023" /><testcase classname="openpyxl.cell.tests.test_text.TestText" name="test_from_xml[\n                                 &lt;is&gt;\n                                   &lt;r&gt;\n                                     &lt;rPr /&gt;\n                                     &lt;t xml:space=&quot;preserve&quot;&gt;11 de September de 2014&lt;/t&gt;\n                                   &lt;/r&gt;\n                                 &lt;/is&gt;\n                                 -11 de September de 2014]" time="0.028" /><testcase classname="openpyxl.cell.tests.test_text.TestText" name="test_empty_element" time="0.027" /><testcase classname="openpyxl.cell.tests.test_text.TestPhoneticText" name="test_ctor" time="0.032" /><testcase classname="openpyxl.cell.tests.test_text.TestPhoneticText" name="test_from_xml" time="0.019" /><testcase classname="openpyxl.cell.tests.test_text.TestPhoneticProperties" name="test_ctor" time="0.021" /><testcase classname="openpyxl.cell.tests.test_text.TestPhoneticProperties" name="test_from_xml" time="0.022" /><testcase classname="openpyxl.cell.tests.test_writer" name="test_write_cell[etree-9781231231230-&lt;c t=&quot;n&quot; r=&quot;A1&quot;&gt;&lt;v&gt;9781231231230&lt;/v&gt;&lt;/c&gt;]" time="0.135" /><testcase classname="openpyxl.cell.tests.test_writer" name="test_write_cell[etree-value1-&lt;c t=&quot;n&quot; r=&quot;A1&quot;&gt;&lt;v&gt;3.14&lt;/v&gt;&lt;/c&gt;]" time="0.149" /><testcase classname="openpyxl.cell.tests.test_writer" name="test_write_cell[etree-1234567890-&lt;c t=&quot;n&quot; r=&quot;A1&quot;&gt;&lt;v&gt;1234567890&lt;/v&gt;&lt;/c&gt;]" time="0.095" /><testcase classname="openpyxl.cell.tests.test_writer" name="test_write_cell[etree-=sum(1+1)-&lt;c r=&quot;A1&quot;&gt;&lt;f&gt;sum(1+1)&lt;/f&gt;&lt;v&gt;&lt;/v&gt;&lt;/c&gt;]" time="0.096" /><testcase classname="openpyxl.cell.tests.test_writer" name="test_write_cell[etree-True-&lt;c t=&quot;b&quot; r=&quot;A1&quot;&gt;&lt;v&gt;1&lt;/v&gt;&lt;/c&gt;]" time="0.074" /><testcase classname="openpyxl.cell.tests.test_writer" name="test_write_cell[etree-Hello-&lt;c t=&quot;inlineStr&quot; r=&quot;A1&quot;&gt;&lt;is&gt;&lt;t&gt;Hello&lt;/t&gt;&lt;/is&gt;&lt;/c&gt;]" time="0.077" /><testcase classname="openpyxl.cell.tests.test_writer" name="test_write_cell[etree--&lt;c r=&quot;A1&quot; t=&quot;inlineStr&quot;&gt;&lt;/c&gt;]" time="0.058" /><testcase classname="openpyxl.cell.tests.test_writer" name="test_write_cell[etree-None-&lt;c r=&quot;A1&quot; t=&quot;n&quot;&gt;&lt;/c&gt;]" time="0.081" /><testcase classname="openpyxl.cell.tests.test_writer" name="test_write_cell[lxml-9781231231230-&lt;c t=&quot;n&quot; r=&quot;A1&quot;&gt;&lt;v&gt;9781231231230&lt;/v&gt;&lt;/c&gt;]" time="0.077" /><testcase classname="openpyxl.cell.tests.test_writer" name="test_write_cell[lxml-value1-&lt;c t=&quot;n&quot; r=&quot;A1&quot;&gt;&lt;v&gt;3.14&lt;/v&gt;&lt;/c&gt;]" time="0.082" /><testcase classname="openpyxl.cell.tests.test_writer" name="test_write_cell[lxml-1234567890-&lt;c t=&quot;n&quot; r=&quot;A1&quot;&gt;&lt;v&gt;1234567890&lt;/v&gt;&lt;/c&gt;]" time="0.071" /><testcase classname="openpyxl.cell.tests.test_writer" name="test_write_cell[lxml-=sum(1+1)-&lt;c r=&quot;A1&quot;&gt;&lt;f&gt;sum(1+1)&lt;/f&gt;&lt;v&gt;&lt;/v&gt;&lt;/c&gt;]" time="0.078" /><testcase classname="openpyxl.cell.tests.test_writer" name="test_write_cell[lxml-True-&lt;c t=&quot;b&quot; r=&quot;A1&quot;&gt;&lt;v&gt;1&lt;/v&gt;&lt;/c&gt;]" time="0.084" /><testcase classname="openpyxl.cell.tests.test_writer" name="test_write_cell[lxml-Hello-&lt;c t=&quot;inlineStr&quot; r=&quot;A1&quot;&gt;&lt;is&gt;&lt;t&gt;Hello&lt;/t&gt;&lt;/is&gt;&lt;/c&gt;]" time="0.097" /><testcase classname="openpyxl.cell.tests.test_writer" name="test_write_cell[lxml--&lt;c r=&quot;A1&quot; t=&quot;inlineStr&quot;&gt;&lt;/c&gt;]" time="0.081" /><testcase classname="openpyxl.cell.tests.test_writer" name="test_write_cell[lxml-None-&lt;c r=&quot;A1&quot; t=&quot;n&quot;&gt;&lt;/c&gt;]" time="0.082" /><testcase classname="openpyxl.cell.tests.test_writer" name="test_write_date[etree-value0-False-&lt;c r=&quot;A1&quot; t=&quot;n&quot; s=&quot;1&quot;&gt;&lt;v&gt;40902&lt;/v&gt;&lt;/c&gt;]" time="0.091" /><testcase classname="openpyxl.cell.tests.test_writer" name="test_write_date[etree-value1-True-&lt;c r=&quot;A1&quot; t=&quot;d&quot; s=&quot;1&quot;&gt;&lt;v&gt;2011-12-25&lt;/v&gt;&lt;/c&gt;]" time="0.085" /><testcase classname="openpyxl.cell.tests.test_writer" name="test_write_date[etree-value2-False-&lt;c r=&quot;A1&quot; t=&quot;n&quot; s=&quot;1&quot;&gt;&lt;v&gt;40902.59994212963&lt;/v&gt;&lt;/c&gt;]" time="0.101" /><testcase classname="openpyxl.cell.tests.test_writer" name="test_write_date[etree-value3-True-&lt;c r=&quot;A1&quot; t=&quot;d&quot; s=&quot;1&quot;&gt;&lt;v&gt;2011-12-25T14:23:55&lt;/v&gt;&lt;/c&gt;]" time="0.113" /><testcase classname="openpyxl.cell.tests.test_writer" name="test_write_date[etree-value4-False-&lt;c r=&quot;A1&quot; t=&quot;n&quot; s=&quot;1&quot;&gt;&lt;v&gt;0.5940393518518519&lt;/v&gt;&lt;/c&gt;]" time="0.068" /><testcase classname="openpyxl.cell.tests.test_writer" name="test_write_date[etree-value5-True-&lt;c r=&quot;A1&quot; t=&quot;d&quot; s=&quot;1&quot;&gt;&lt;v&gt;14:15:25&lt;/v&gt;&lt;/c&gt;]" time="0.076" /><testcase classname="openpyxl.cell.tests.test_writer" name="test_write_date[etree-value6-False-&lt;c r=&quot;A1&quot; t=&quot;n&quot; s=&quot;1&quot;&gt;&lt;v&gt;1.000034722395833&lt;/v&gt;&lt;/c&gt;]" time="0.083" /><testcase classname="openpyxl.cell.tests.test_writer" name="test_write_date[etree-value7-True-&lt;c r=&quot;A1&quot; t=&quot;n&quot; s=&quot;1&quot;&gt;&lt;v&gt;1.000034722395833&lt;/v&gt;&lt;/c&gt;]" time="0.097" /><testcase classname="openpyxl.cell.tests.test_writer" name="test_write_date[lxml-value0-False-&lt;c r=&quot;A1&quot; t=&quot;n&quot; s=&quot;1&quot;&gt;&lt;v&gt;40902&lt;/v&gt;&lt;/c&gt;]" time="0.152" /><testcase classname="openpyxl.cell.tests.test_writer" name="test_write_date[lxml-value1-True-&lt;c r=&quot;A1&quot; t=&quot;d&quot; s=&quot;1&quot;&gt;&lt;v&gt;2011-12-25&lt;/v&gt;&lt;/c&gt;]" time="0.185" /><testcase classname="openpyxl.cell.tests.test_writer" name="test_write_date[lxml-value2-False-&lt;c r=&quot;A1&quot; t=&quot;n&quot; s=&quot;1&quot;&gt;&lt;v&gt;40902.59994212963&lt;/v&gt;&lt;/c&gt;]" time="0.064" /><testcase classname="openpyxl.cell.tests.test_writer" name="test_write_date[lxml-value3-True-&lt;c r=&quot;A1&quot; t=&quot;d&quot; s=&quot;1&quot;&gt;&lt;v&gt;2011-12-25T14:23:55&lt;/v&gt;&lt;/c&gt;]" time="0.094" /><testcase classname="openpyxl.cell.tests.test_writer" name="test_write_date[lxml-value4-False-&lt;c r=&quot;A1&quot; t=&quot;n&quot; s=&quot;1&quot;&gt;&lt;v&gt;0.5940393518518519&lt;/v&gt;&lt;/c&gt;]" time="0.083" /><testcase classname="openpyxl.cell.tests.test_writer" name="test_write_date[lxml-value5-True-&lt;c r=&quot;A1&quot; t=&quot;d&quot; s=&quot;1&quot;&gt;&lt;v&gt;14:15:25&lt;/v&gt;&lt;/c&gt;]" time="0.107" /><testcase classname="openpyxl.cell.tests.test_writer" name="test_write_date[lxml-value6-False-&lt;c r=&quot;A1&quot; t=&quot;n&quot; s=&quot;1&quot;&gt;&lt;v&gt;1.000034722395833&lt;/v&gt;&lt;/c&gt;]" time="0.095" /><testcase classname="openpyxl.cell.tests.test_writer" name="test_write_date[lxml-value7-True-&lt;c r=&quot;A1&quot; t=&quot;n&quot; s=&quot;1&quot;&gt;&lt;v&gt;1.000034722395833&lt;/v&gt;&lt;/c&gt;]" time="0.076" /><testcase classname="openpyxl.cell.tests.test_writer" name="test_write_invalid_date[etree-value0-True]" time="0.065" /><testcase classname="openpyxl.cell.tests.test_writer" name="test_write_invalid_date[etree-value1-False]" time="0.069" /><testcase classname="openpyxl.cell.tests.test_writer" name="test_write_invalid_date[etree-value2-True]" time="0.069" /><testcase classname="openpyxl.cell.tests.test_writer" name="test_write_invalid_date[etree-value3-False]" time="0.096" /><testcase classname="openpyxl.cell.tests.test_writer" name="test_write_invalid_date[lxml-value0-True]" time="0.065" /><testcase classname="openpyxl.cell.tests.test_writer" name="test_write_invalid_date[lxml-value1-False]" time="0.077" /><testcase classname="openpyxl.cell.tests.test_writer" name="test_write_invalid_date[lxml-value2-True]" time="0.081" /><testcase classname="openpyxl.cell.tests.test_writer" name="test_write_invalid_date[lxml-value3-False]" time="0.080" /><testcase classname="openpyxl.cell.tests.test_writer" name="test_write_epoch[etree-value0-&lt;c r=&quot;A1&quot; t=&quot;n&quot; s=&quot;1&quot;&gt;&lt;v&gt;40902&lt;/v&gt;&lt;/c&gt;-epoch0]" time="0.088" /><testcase classname="openpyxl.cell.tests.test_writer" name="test_write_epoch[etree-value1-&lt;c r=&quot;A1&quot; t=&quot;n&quot; s=&quot;1&quot;&gt;&lt;v&gt;39440&lt;/v&gt;&lt;/c&gt;-epoch1]" time="0.080" /><testcase classname="openpyxl.cell.tests.test_writer" name="test_write_epoch[lxml-value0-&lt;c r=&quot;A1&quot; t=&quot;n&quot; s=&quot;1&quot;&gt;&lt;v&gt;40902&lt;/v&gt;&lt;/c&gt;-epoch0]" time="0.104" /><testcase classname="openpyxl.cell.tests.test_writer" name="test_write_epoch[lxml-value1-&lt;c r=&quot;A1&quot; t=&quot;n&quot; s=&quot;1&quot;&gt;&lt;v&gt;39440&lt;/v&gt;&lt;/c&gt;-epoch1]" time="0.083" /><testcase classname="openpyxl.cell.tests.test_writer" name="test_write_hyperlink[etree]" time="0.068" /><testcase classname="openpyxl.cell.tests.test_writer" name="test_write_hyperlink[lxml]" time="0.083" /><testcase classname="openpyxl.cell.tests.test_writer" name="test_attributes[test-test-attrs0]" time="0.072" /><testcase classname="openpyxl.cell.tests.test_writer" name="test_attributes[=SUM(A1:A2)-=SUM(A1:A2)-attrs1]" time="0.065" /><testcase classname="openpyxl.cell.tests.test_writer" name="test_attributes[value2-43337-attrs2]" time="0.070" /><testcase classname="openpyxl.cell.tests.test_writer" name="test_whitespace[etree]" time="0.072" /><testcase classname="openpyxl.cell.tests.test_writer" name="test_whitespace[lxml]" time="0.078" /><testcase classname="openpyxl.chart.tests.test_3d.TestView3D" name="test_ctor" time="0.035" /><testcase classname="openpyxl.chart.tests.test_3d.TestView3D" name="test_from_xml" time="0.020" /><testcase classname="openpyxl.chart.tests.test_3d.TestSurface" name="test_ctor" time="0.040" /><testcase classname="openpyxl.chart.tests.test_3d.TestSurface" name="test_from_xml" time="0.028" /><testcase classname="openpyxl.chart.tests.test_area_chart.TestAreaChart" name="test_ctor" time="0.049" /><testcase classname="openpyxl.chart.tests.test_area_chart.TestAreaChart" name="test_from_xml" time="0.051" /><testcase classname="openpyxl.chart.tests.test_area_chart.TestAreaChart" name="test_write" time="0.259" /><testcase classname="openpyxl.chart.tests.test_area_chart.TestAreaChart3D" name="test_ctor" time="0.065" /><testcase classname="openpyxl.chart.tests.test_area_chart.TestAreaChart3D" name="test_from_xml" time="0.048" /><testcase classname="openpyxl.chart.tests.test_axis.TestScale" name="test_ctor" time="0.021" /><testcase classname="openpyxl.chart.tests.test_axis.TestScale" name="test_from_xml" time="0.022" /><testcase classname="openpyxl.chart.tests.test_axis.TestAxis" name="test_ctor" time="0.039" /><testcase classname="openpyxl.chart.tests.test_axis.TestTextAxis" name="test_ctor" time="0.038" /><testcase classname="openpyxl.chart.tests.test_axis.TestTextAxis" name="test_from_xml" time="0.027" /><testcase classname="openpyxl.chart.tests.test_axis.TestValAx" name="test_ctor" time="0.036" /><testcase classname="openpyxl.chart.tests.test_axis.TestValAx" name="test_from_xml" time="0.031" /><testcase classname="openpyxl.chart.tests.test_axis.TestDateAx" name="test_ctor" time="0.052" /><testcase classname="openpyxl.chart.tests.test_axis.TestDateAx" name="test_from_xml" time="0.028" /><testcase classname="openpyxl.chart.tests.test_axis.TestSeriesAxis" name="test_ctor" time="0.043" /><testcase classname="openpyxl.chart.tests.test_axis.TestSeriesAxis" name="test_from_xml" time="0.027" /><testcase classname="openpyxl.chart.tests.test_axis.TestDispUnitsLabel" name="test_ctor" time="0.018" /><testcase classname="openpyxl.chart.tests.test_axis.TestDispUnitsLabel" name="test_from_xml" time="0.020" /><testcase classname="openpyxl.chart.tests.test_axis.TestDisplayUnitList" name="test_ctor" time="0.019" /><testcase classname="openpyxl.chart.tests.test_axis.TestDisplayUnitList" name="test_from_xml" time="0.015" /><testcase classname="openpyxl.chart.tests.test_axis.TestChartLines" name="test_ctor" time="1.141" /><testcase classname="openpyxl.chart.tests.test_axis.TestChartLines" name="test_from_xml" time="0.018" /><testcase classname="openpyxl.chart.tests.test_bar_chart.TestBarChart" name="test_ctor" time="0.066" /><testcase classname="openpyxl.chart.tests.test_bar_chart.TestBarChart" name="test_from_tree" time="0.042" /><testcase classname="openpyxl.chart.tests.test_bar_chart.TestBarChart" name="test_write" time="0.294" /><testcase classname="openpyxl.chart.tests.test_bar_chart.TestBarChart" name="test_series" time="0.133" /><testcase classname="openpyxl.chart.tests.test_bar_chart.TestBarChart3D" name="test_ctor" time="0.052" /><testcase classname="openpyxl.chart.tests.test_bar_chart.TestBarChart3D" name="test_from_xml" time="0.034" /><testcase classname="openpyxl.chart.tests.test_bubble_chart.TestBubbleChart" name="test_ctor" time="0.035" /><testcase classname="openpyxl.chart.tests.test_bubble_chart.TestBubbleChart" name="test_from_xml" time="0.018" /><testcase classname="openpyxl.chart.tests.test_chart.TestChartBase" name="test_ctor" time="0.014" /><testcase classname="openpyxl.chart.tests.test_chart.TestChartBase" name="test_iadd" time="0.315" /><testcase classname="openpyxl.chart.tests.test_chart.TestChartBase" name="test_invalid_add" time="0.021" /><testcase classname="openpyxl.chart.tests.test_chart.TestChartBase" name="test_set_catgories" time="0.033" /><testcase classname="openpyxl.chart.tests.test_chart.TestChartBase" name="test_add_data_cols" time="0.027" /><testcase classname="openpyxl.chart.tests.test_chart.TestChartBase" name="test_add_data_rows" time="0.022" /><testcase classname="openpyxl.chart.tests.test_chart.TestChartBase" name="test_hash_function" time="0.018" /><testcase classname="openpyxl.chart.tests.test_chart.TestChartBase" name="test_path" time="0.016" /><testcase classname="openpyxl.chart.tests.test_chart.TestChartBase" name="test_plot_area" time="0.013" /><testcase classname="openpyxl.chart.tests.test_chart.TestChartBase" name="test_save_twice" time="0.049" /><testcase classname="openpyxl.chart.tests.test_chart.TestChartBase" name="test_axIds" time="0.014" /><testcase classname="openpyxl.chart.tests.test_chart.TestChartBase" name="test_plot_visible_cells" time="0.043" /><testcase classname="openpyxl.chart.tests.test_chart.TestChartBase" name="test_pivot_source" time="0.063" /><testcase classname="openpyxl.chart.tests.test_chart.TestChartBase" name="test_pivot_format" time="0.050" /><testcase classname="openpyxl.chart.tests.test_chart.TestChartBase" name="test_reindex" time="0.039" /><testcase classname="openpyxl.chart.tests.test_chartspace.TestChartContainer" name="test_ctor" time="0.034" /><testcase classname="openpyxl.chart.tests.test_chartspace.TestChartContainer" name="test_from_xml" time="0.023" /><testcase classname="openpyxl.chart.tests.test_chartspace.TestProtection" name="test_ctor" time="0.020" /><testcase classname="openpyxl.chart.tests.test_chartspace.TestProtection" name="test_from_xml" time="0.017" /><testcase classname="openpyxl.chart.tests.test_chartspace.TestExternalData" name="test_ctor" time="0.017" /><testcase classname="openpyxl.chart.tests.test_chartspace.TestExternalData" name="test_from_xml" time="0.021" /><testcase classname="openpyxl.chart.tests.test_chartspace.TestChartSpace" name="test_ctor" time="0.031" /><testcase classname="openpyxl.chart.tests.test_chartspace.TestChartSpace" name="test_from_xml" time="0.067" /><testcase classname="openpyxl.chart.tests.test_data_source.TestNumRef" name="test_from_xml" time="0.016" /><testcase classname="openpyxl.chart.tests.test_data_source.TestNumRef" name="test_to_xml" time="0.022" /><testcase classname="openpyxl.chart.tests.test_data_source.TestNumRef" name="test_from_tree_degree_sign" time="0.024" /><testcase classname="openpyxl.chart.tests.test_data_source.TestStrRef" name="test_ctor" time="0.018" /><testcase classname="openpyxl.chart.tests.test_data_source.TestStrRef" name="test_from_xml" time="0.017" /><testcase classname="openpyxl.chart.tests.test_data_source.TestStrVal" name="test_ctor" time="0.028" /><testcase classname="openpyxl.chart.tests.test_data_source.TestStrVal" name="test_from_xml" time="0.020" /><testcase classname="openpyxl.chart.tests.test_data_source.TestStrData" name="test_ctor" time="0.018" /><testcase classname="openpyxl.chart.tests.test_data_source.TestStrData" name="test_from_xml" time="0.018" /><testcase classname="openpyxl.chart.tests.test_data_source.TestLevel" name="test_ctor" time="0.020" /><testcase classname="openpyxl.chart.tests.test_data_source.TestLevel" name="test_from_xml" time="0.012" /><testcase classname="openpyxl.chart.tests.test_data_source.TestMultiLevelStrData" name="test_ctor" time="0.018" /><testcase classname="openpyxl.chart.tests.test_data_source.TestMultiLevelStrData" name="test_from_xml" time="0.015" /><testcase classname="openpyxl.chart.tests.test_data_source.TestMultiLevelStrRef" name="test_ctor" time="0.020" /><testcase classname="openpyxl.chart.tests.test_data_source.TestMultiLevelStrRef" name="test_from_xml" time="0.017" /><testcase classname="openpyxl.chart.tests.test_data_source.TestAxDataSource" name="test_ctor" time="0.030" /><testcase classname="openpyxl.chart.tests.test_data_source.TestAxDataSource" name="test_no_source" time="0.012" /><testcase classname="openpyxl.chart.tests.test_data_source.TestAxDataSource" name="test_from_xml" time="0.016" /><testcase classname="openpyxl.chart.tests.test_error_bar.TestErrorBar" name="test_ctor" time="0.021" /><testcase classname="openpyxl.chart.tests.test_error_bar.TestErrorBar" name="test_from_xml" time="0.023" /><testcase classname="openpyxl.chart.tests.test_label.TestDataLabeList" name="test_ctor" time="0.031" /><testcase classname="openpyxl.chart.tests.test_label.TestDataLabeList" name="test_from_xml" time="0.016" /><testcase classname="openpyxl.chart.tests.test_label.TestDataLabel" name="test_ctor" time="0.023" /><testcase classname="openpyxl.chart.tests.test_label.TestDataLabel" name="test_from_xml" time="0.019" /><testcase classname="openpyxl.chart.tests.test_layout.TestManualLayout" name="test_ctor" time="0.047" /><testcase classname="openpyxl.chart.tests.test_layout.TestManualLayout" name="test_from_xml" time="0.024" /><testcase classname="openpyxl.chart.tests.test_layout.TestLayout" name="test_ctor" time="0.015" /><testcase classname="openpyxl.chart.tests.test_legend.TestLegend" name="test_ctor" time="0.032" /><testcase classname="openpyxl.chart.tests.test_legend.TestLegend" name="test_from_xml" time="0.019" /><testcase classname="openpyxl.chart.tests.test_legend.TestLegendEntry" name="test_ctor" time="0.026" /><testcase classname="openpyxl.chart.tests.test_legend.TestLegendEntry" name="test_from_xml" time="0.016" /><testcase classname="openpyxl.chart.tests.test_line_chart.TestLineChart" name="test_ctor" time="0.038" /><testcase classname="openpyxl.chart.tests.test_line_chart.TestLineChart" name="test_from_xml" time="0.026" /><testcase classname="openpyxl.chart.tests.test_line_chart.TestLineChart" name="test_axes" time="0.025" /><testcase classname="openpyxl.chart.tests.test_line_chart.TestLineChart3D" name="test_ctor" time="0.047" /><testcase classname="openpyxl.chart.tests.test_line_chart.TestLineChart3D" name="test_from_xml" time="0.029" /><testcase classname="openpyxl.chart.tests.test_marker.TestMarker" name="test_ctor" time="0.031" /><testcase classname="openpyxl.chart.tests.test_marker.TestMarker" name="test_from_xml" time="0.016" /><testcase classname="openpyxl.chart.tests.test_marker.TestDataPoint" name="test_ctor" time="0.030" /><testcase classname="openpyxl.chart.tests.test_marker.TestDataPoint" name="test_from_xml" time="0.023" /><testcase classname="openpyxl.chart.tests.test_picture.TestPictureOptions" name="test_ctor" time="0.020" /><testcase classname="openpyxl.chart.tests.test_picture.TestPictureOptions" name="test_from_xml" time="0.021" /><testcase classname="openpyxl.chart.tests.test_pie_chart.TestPieChart" name="test_ctor" time="0.029" /><testcase classname="openpyxl.chart.tests.test_pie_chart.TestPieChart" name="test_from_xml" time="0.021" /><testcase classname="openpyxl.chart.tests.test_pie_chart.TestPieChart3D" name="test_ctor" time="0.023" /><testcase classname="openpyxl.chart.tests.test_pie_chart.TestDoughnutChart" name="test_ctor" time="0.032" /><testcase classname="openpyxl.chart.tests.test_pie_chart.TestDoughnutChart" name="test_from_xml" time="0.017" /><testcase classname="openpyxl.chart.tests.test_pie_chart.TestProjectedPieChart" name="test_ctor" time="0.044" /><testcase classname="openpyxl.chart.tests.test_pie_chart.TestProjectedPieChart" name="test_from_xml" time="0.033" /><testcase classname="openpyxl.chart.tests.test_pie_chart.TestCustomSplit" name="test_ctor" time="0.077" /><testcase classname="openpyxl.chart.tests.test_pie_chart.TestCustomSplit" name="test_from_xml" time="0.014" /><testcase classname="openpyxl.chart.tests.test_pivot.TestPivotSource" name="test_ctor" time="0.023" /><testcase classname="openpyxl.chart.tests.test_pivot.TestPivotSource" name="test_from_xml" time="0.018" /><testcase classname="openpyxl.chart.tests.test_pivot.TestPivotFormat" name="test_ctor" time="0.018" /><testcase classname="openpyxl.chart.tests.test_pivot.TestPivotFormat" name="test_from_xml" time="0.015" /><testcase classname="openpyxl.chart.tests.test_plotarea.TestPlotArea" name="test_ctor" time="0.020" /><testcase classname="openpyxl.chart.tests.test_plotarea.TestPlotArea" name="test_from_xml" time="0.015" /><testcase classname="openpyxl.chart.tests.test_plotarea.TestPlotArea" name="test_multi_chart" time="0.182" /><testcase classname="openpyxl.chart.tests.test_plotarea.TestPlotArea" name="test_read_multi_chart" time="0.227" /><testcase classname="openpyxl.chart.tests.test_plotarea.TestPlotArea" name="test_read_multi_axes" time="0.327" /><testcase classname="openpyxl.chart.tests.test_plotarea.TestPlotArea" name="test_read_scatter_chart" time="0.143" /><testcase classname="openpyxl.chart.tests.test_plotarea.TestPlotArea" name="test_read_bubble_chart" time="1.197" /><testcase classname="openpyxl.chart.tests.test_plotarea.TestPlotArea" name="test_read_surface_chart_3d" time="0.240" /><testcase classname="openpyxl.chart.tests.test_plotarea.TestPlotArea" name="test_read_bar_chart_3d" time="0.117" /><testcase classname="openpyxl.chart.tests.test_plotarea.TestPlotArea" name="test_read_bar_chart_3d_no_series_axis" time="0.095" /><testcase classname="openpyxl.chart.tests.test_plotarea.TestDataTable" name="test_ctor" time="0.016" /><testcase classname="openpyxl.chart.tests.test_plotarea.TestDataTable" name="test_from_xml" time="0.015" /><testcase classname="openpyxl.chart.tests.test_print.TestPrintSettings" name="test_ctor" time="0.017" /><testcase classname="openpyxl.chart.tests.test_print.TestPrintSettings" name="test_from_xml" time="0.020" /><testcase classname="openpyxl.chart.tests.test_print.TestPageMargins" name="test_ctor" time="0.019" /><testcase classname="openpyxl.chart.tests.test_print.TestPageMargins" name="test_from_xml" time="0.025" /><testcase classname="openpyxl.chart.tests.test_radar_chart.TestRadarChart" name="test_ctor" time="0.042" /><testcase classname="openpyxl.chart.tests.test_radar_chart.TestRadarChart" name="test_from_xml" time="0.020" /><testcase classname="openpyxl.chart.tests.test_reader" name="test_read" time="0.998" /><testcase classname="openpyxl.chart.tests.test_reader" name="test_read_chart_with_no_series" time="0.129" /><testcase classname="openpyxl.chart.tests.test_reference.TestReference" name="test_ctor" time="0.012" /><testcase classname="openpyxl.chart.tests.test_reference.TestReference" name="test_single_cell" time="0.014" /><testcase classname="openpyxl.chart.tests.test_reference.TestReference" name="test_from_string" time="0.013" /><testcase classname="openpyxl.chart.tests.test_reference.TestReference" name="test_cols" time="0.013" /><testcase classname="openpyxl.chart.tests.test_reference.TestReference" name="test_rows" time="0.019" /><testcase classname="openpyxl.chart.tests.test_reference.TestReference" name="test_pop[Sheet1!A1:A10-A1-1-2]" time="0.021" /><testcase classname="openpyxl.chart.tests.test_reference.TestReference" name="test_pop[Sheet!A1:E1-A1-2-1]" time="0.025" /><testcase classname="openpyxl.chart.tests.test_reference.TestReference" name="test_length[Sheet1!A1:A10-10]" time="0.018" /><testcase classname="openpyxl.chart.tests.test_reference.TestReference" name="test_length[Sheet!A1:E1-5]" time="0.018" /><testcase classname="openpyxl.chart.tests.test_reference.TestReference" name="test_repr" time="0.014" /><testcase classname="openpyxl.chart.tests.test_scatter_chart.TestScatterChart" name="test_ctor" time="0.046" /><testcase classname="openpyxl.chart.tests.test_scatter_chart.TestScatterChart" name="test_from_xml" time="0.027" /><testcase classname="openpyxl.chart.tests.test_series.TestBarSer" name="test_from_tree" time="0.059" /><testcase classname="openpyxl.chart.tests.test_series.TestAreaSer" name="test_from_tree" time="0.059" /><testcase classname="openpyxl.chart.tests.test_series.TestBubbleSer" name="test_from_tree" time="0.181" /><testcase classname="openpyxl.chart.tests.test_series.TestPieSer" name="test_from_tree" time="0.048" /><testcase classname="openpyxl.chart.tests.test_series.TestRadarSer" name="test_from_tree" time="0.192" /><testcase classname="openpyxl.chart.tests.test_series.TestScatterSer" name="test_from_tree" time="0.094" /><testcase classname="openpyxl.chart.tests.test_series.TestSurfaceSer" name="test_from_tree" time="0.061" /><testcase classname="openpyxl.chart.tests.test_series.TestSeriesLabel" name="test_ctor" time="0.018" /><testcase classname="openpyxl.chart.tests.test_series.TestSeriesLabel" name="test_from_xml" time="0.019" /><testcase classname="openpyxl.chart.tests.test_series_factory.TestSeriesFactory" name="test_ctor" time="0.036" /><testcase classname="openpyxl.chart.tests.test_series_factory.TestSeriesFactory" name="test_manual_idx" time="0.034" /><testcase classname="openpyxl.chart.tests.test_series_factory.TestSeriesFactory" name="test_manual_order" time="0.047" /><testcase classname="openpyxl.chart.tests.test_series_factory.TestSeriesFactory" name="test_title" time="0.035" /><testcase classname="openpyxl.chart.tests.test_series_factory.TestSeriesFactory" name="test_title_from_data" time="0.045" /><testcase classname="openpyxl.chart.tests.test_series_factory.TestSeriesFactory" name="test_xy" time="0.020" /><testcase classname="openpyxl.chart.tests.test_series_factory.TestSeriesFactory" name="test_zvalues" time="0.058" /><testcase classname="openpyxl.chart.tests.test_shapes.TestShapeProperties" name="test_ctor" time="0.025" /><testcase classname="openpyxl.chart.tests.test_shapes.TestShapeProperties" name="test_from_xml" time="0.032" /><testcase classname="openpyxl.chart.tests.test_stock_chart.TestStockChart" name="test_ctor" time="0.202" /><testcase classname="openpyxl.chart.tests.test_stock_chart.TestStockChart" name="test_from_xml" time="0.022" /><testcase classname="openpyxl.chart.tests.test_surface_chart.TestSurfaceChart" name="test_ctor" time="0.043" /><testcase classname="openpyxl.chart.tests.test_surface_chart.TestSurfaceChart" name="test_from_xml" time="0.044" /><testcase classname="openpyxl.chart.tests.test_surface_chart.TestSurfaceChart3D" name="test_ctor" time="0.038" /><testcase classname="openpyxl.chart.tests.test_surface_chart.TestSurfaceChart3D" name="test_from_xml" time="0.055" /><testcase classname="openpyxl.chart.tests.test_surface_chart.TestBandFormat" name="test_ctor" time="0.020" /><testcase classname="openpyxl.chart.tests.test_surface_chart.TestBandFormat" name="test_from_xml" time="0.019" /><testcase classname="openpyxl.chart.tests.test_surface_chart.TestBandFormatList" name="test_ctor" time="0.017" /><testcase classname="openpyxl.chart.tests.test_surface_chart.TestBandFormatList" name="test_from_xml" time="0.014" /><testcase classname="openpyxl.chart.tests.test_text.TestRichText" name="test_ctor" time="0.028" /><testcase classname="openpyxl.chart.tests.test_text.TestRichText" name="test_from_xml" time="0.016" /><testcase classname="openpyxl.chart.tests.test_text.TestText" name="test_ctor" time="0.024" /><testcase classname="openpyxl.chart.tests.test_text.TestText" name="test_from_xml" time="0.017" /><testcase classname="openpyxl.chart.tests.test_text.TestText" name="test_only_one" time="0.033" /><testcase classname="openpyxl.chart.tests.test_title.TestTitle" name="test_ctor" time="0.030" /><testcase classname="openpyxl.chart.tests.test_title.TestTitle" name="test_from_xml" time="0.023" /><testcase classname="openpyxl.chart.tests.test_title" name="test_title_maker" time="0.063" /><testcase classname="openpyxl.chart.tests.test_trendline.TestTrendlineLabel" name="test_ctor" time="0.020" /><testcase classname="openpyxl.chart.tests.test_trendline.TestTrendlineLabel" name="test_from_xml" time="0.014" /><testcase classname="openpyxl.chart.tests.test_trendline.TestTrendline" name="test_ctor" time="0.032" /><testcase classname="openpyxl.chart.tests.test_trendline.TestTrendline" name="test_from_xml" time="0.021" /><testcase classname="openpyxl.chart.tests.test_updown_bars.TestUpDownBars" name="test_ctor" time="0.089" /><testcase classname="openpyxl.chart.tests.test_updown_bars.TestUpDownBars" name="test_from_xml" time="0.012" /><testcase classname="openpyxl.chartsheet.tests.test_chartsheet.TestChartsheet" name="test_ctor" time="0.033" /><testcase classname="openpyxl.chartsheet.tests.test_chartsheet.TestChartsheet" name="test_read" time="0.031" /><testcase classname="openpyxl.chartsheet.tests.test_chartsheet.TestChartsheet" name="test_write" time="0.049" /><testcase classname="openpyxl.chartsheet.tests.test_chartsheet.TestChartsheet" name="test_write_charts" time="0.046" /><testcase classname="openpyxl.chartsheet.tests.test_custom.TestCustomChartsheetView" name="test_read" time="0.021" /><testcase classname="openpyxl.chartsheet.tests.test_custom.TestCustomChartsheetView" name="test_write" time="0.027" /><testcase classname="openpyxl.chartsheet.tests.test_custom.TestCustomChartsheetViews" name="test_read" time="0.021" /><testcase classname="openpyxl.chartsheet.tests.test_custom.TestCustomChartsheetViews" name="test_write" time="0.026" /><testcase classname="openpyxl.chartsheet.tests.test_properties.TestChartsheetPr" name="test_read" time="0.017" /><testcase classname="openpyxl.chartsheet.tests.test_properties.TestChartsheetPr" name="test_write" time="0.025" /><testcase classname="openpyxl.chartsheet.tests.test_protection.TestChartsheetProtection" name="test_read" time="0.012" /><testcase classname="openpyxl.chartsheet.tests.test_protection.TestChartsheetProtection" name="test_write" time="0.081" /><testcase classname="openpyxl.chartsheet.tests.test_protection.TestChartsheetProtection" name="test_password" time="0.016" /><testcase classname="openpyxl.chartsheet.tests.test_publish.TestWebPulishItem" name="test_read" time="0.012" /><testcase classname="openpyxl.chartsheet.tests.test_publish.TestWebPulishItem" name="test_write" time="0.029" /><testcase classname="openpyxl.chartsheet.tests.test_publish.TestWebPublishItems" name="test_read" time="0.020" /><testcase classname="openpyxl.chartsheet.tests.test_publish.TestWebPublishItems" name="test_write" time="0.042" /><testcase classname="openpyxl.chartsheet.tests.test_relation.TestSheetBackgroundPicture" name="test_read" time="0.013" /><testcase classname="openpyxl.chartsheet.tests.test_relation.TestSheetBackgroundPicture" name="test_write" time="0.016" /><testcase classname="openpyxl.chartsheet.tests.test_relation.TestDrawingHF" name="test_read" time="0.014" /><testcase classname="openpyxl.chartsheet.tests.test_relation.TestDrawingHF" name="test_write" time="0.019" /><testcase classname="openpyxl.chartsheet.tests.test_views.TestChartsheetView" name="test_read" time="0.016" /><testcase classname="openpyxl.chartsheet.tests.test_views.TestChartsheetView" name="test_write" time="0.022" /><testcase classname="openpyxl.chartsheet.tests.test_views.TestChartsheetViewList" name="test_read" time="0.013" /><testcase classname="openpyxl.chartsheet.tests.test_views.TestChartsheetViewList" name="test_write" time="0.024" /><testcase classname="openpyxl.comments.tests.test_author.TestAuthor" name="test_ctor" time="0.031" /><testcase classname="openpyxl.comments.tests.test_author.TestAuthor" name="test_from_xml" time="0.017" /><testcase classname="openpyxl.comments.tests.test_comment.TestComment" name="test_ctor" time="0.013" /><testcase classname="openpyxl.comments.tests.test_comment.TestComment" name="test_bind" time="0.010" /><testcase classname="openpyxl.comments.tests.test_comment.TestComment" name="test_unbind" time="0.010" /><testcase classname="openpyxl.comments.tests.test_comment.TestComment" name="test_copy" time="0.010" /><testcase classname="openpyxl.comments.tests.test_comment_reader" name="test_read_comments" time="0.090" /><testcase classname="openpyxl.comments.tests.test_comment_reader" name="test_comments_cell_association" time="0.612" /><testcase classname="openpyxl.comments.tests.test_comment_reader" name="test_comments_with_iterators" time="0.428" /><testcase classname="openpyxl.comments.tests.test_comment_sheet.TestComment" name="test_ctor" time="0.021" /><testcase classname="openpyxl.comments.tests.test_comment_sheet.TestComment" name="test_from_xml" time="0.014" /><testcase classname="openpyxl.comments.tests.test_comment_sheet.TestCommentSheet" name="test_read_comments" time="0.049" /><testcase classname="openpyxl.comments.tests.test_comment_sheet.TestCommentSheet" name="test_from_comments" time="0.132" /><testcase classname="openpyxl.comments.tests.test_comment_sheet.TestCommentSheet" name="test_path" time="0.010" /><testcase classname="openpyxl.comments.tests.test_comment_sheet" name="test_read_google_docs" time="0.017" /><testcase classname="openpyxl.comments.tests.test_shape_writer" name="test_merge_comments_vml" time="0.185" /><testcase classname="openpyxl.comments.tests.test_shape_writer" name="test_write_comments_vml" time="0.236" /><testcase classname="openpyxl.comments.tests.test_shape_writer" name="test_shape" time="0.037" /><testcase classname="openpyxl.comments.tests.test_shape_writer" name="test_shape_with_custom_size" time="0.054" /><testcase classname="openpyxl.compat.tests.test_compat" name="test_safe_string[s-s]" time="0.017" /><testcase classname="openpyxl.compat.tests.test_compat" name="test_safe_string[0.6666666666666666-0.6666666666666666]" time="0.013" /><testcase classname="openpyxl.compat.tests.test_compat" name="test_safe_string[1-1]" time="0.022" /><testcase classname="openpyxl.compat.tests.test_compat" name="test_safe_string[None-none]" time="0.014" /><testcase classname="openpyxl.compat.tests.test_compat" name="test_safe_string[nan-]" time="0.015" /><testcase classname="openpyxl.compat.tests.test_compat" name="test_safe_string[inf-]" time="0.010" /><testcase classname="openpyxl.compat.tests.test_compat" name="test_numeric_types" time="0.011" /><testcase classname="openpyxl.compat.tests.test_compat" name="test_numpy_tostring" time="0.016" /><testcase classname="openpyxl.compat.tests.test_compat" name="test_safe_repr" time="0.009"><skipped type="pytest.skip" message="condition: sys.version_info[0]&gt;=3">/workdir/openpyxl-3.0.10/openpyxl/compat/tests/test_compat.py:69: condition: sys.version_info[0]&gt;=3</skipped></testcase><testcase classname="openpyxl.compat.tests.test_compat" name="test_deprecated_function" time="0.015" /><testcase classname="openpyxl.compat.tests.test_compat" name="test_deprecated_class" time="0.019" /><testcase classname="openpyxl.compat.tests.test_compat" name="test_deprecated_method" time="0.016" /><testcase classname="openpyxl.compat.tests.test_compat" name="test_no_deprecation_reason" time="0.012" /><testcase classname="openpyxl.compat.tests.test_compat" name="test_product" time="0.017" /><testcase classname="openpyxl.descriptors.tests.test_base.TestDescriptor" name="test_ctor" time="0.015" /><testcase classname="openpyxl.descriptors.tests.test_base.TestDescriptor" name="test_setter" time="0.013" /><testcase classname="openpyxl.descriptors.tests.test_base.TestBool" name="test_valid" time="0.013" /><testcase classname="openpyxl.descriptors.tests.test_base.TestBool" name="test_cast[1-True]" time="0.021" /><testcase classname="openpyxl.descriptors.tests.test_base.TestBool" name="test_cast[0-False0]" time="0.015" /><testcase classname="openpyxl.descriptors.tests.test_base.TestBool" name="test_cast[true-True]" time="0.014" /><testcase classname="openpyxl.descriptors.tests.test_base.TestBool" name="test_cast[false-False]" time="0.015" /><testcase classname="openpyxl.descriptors.tests.test_base.TestBool" name="test_cast[0-False1]" time="0.014" /><testcase classname="openpyxl.descriptors.tests.test_base.TestBool" name="test_cast[f-False]" time="0.017" /><testcase classname="openpyxl.descriptors.tests.test_base.TestBool" name="test_cast[-False]" time="0.014" /><testcase classname="openpyxl.descriptors.tests.test_base.TestBool" name="test_cast[value7-False]" time="0.019" /><testcase classname="openpyxl.descriptors.tests.test_base" name="test_nested" time="0.013" /><testcase classname="openpyxl.descriptors.tests.test_base.TestInt" name="test_valid" time="0.017" /><testcase classname="openpyxl.descriptors.tests.test_base.TestInt" name="test_invalid[a]" time="0.024" /><testcase classname="openpyxl.descriptors.tests.test_base.TestInt" name="test_invalid[4.5]" time="0.022" /><testcase classname="openpyxl.descriptors.tests.test_base.TestInt" name="test_invalid[None]" time="0.018" /><testcase classname="openpyxl.descriptors.tests.test_base.TestInt" name="test_cast[4-4]" time="0.016" /><testcase classname="openpyxl.descriptors.tests.test_base.TestInt" name="test_cast[4.5-4]" time="0.016" /><testcase classname="openpyxl.descriptors.tests.test_base.TestFloat" name="test_valid" time="0.016" /><testcase classname="openpyxl.descriptors.tests.test_base.TestFloat" name="test_invalid[a]" time="0.021" /><testcase classname="openpyxl.descriptors.tests.test_base.TestFloat" name="test_invalid[None]" time="0.108" /><testcase classname="openpyxl.descriptors.tests.test_base.TestFloat" name="test_cast[4.5-4.50]" time="0.015" /><testcase classname="openpyxl.descriptors.tests.test_base.TestFloat" name="test_cast[4.5-4.51]" time="0.014" /><testcase classname="openpyxl.descriptors.tests.test_base.TestFloat" name="test_cast[4-4.0]" time="0.018" /><testcase classname="openpyxl.descriptors.tests.test_base.TestAllowNone" name="test_valid" time="0.014" /><testcase classname="openpyxl.descriptors.tests.test_base.TestMax" name="test_ctor" time="0.011" /><testcase classname="openpyxl.descriptors.tests.test_base.TestMax" name="test_valid" time="0.013" /><testcase classname="openpyxl.descriptors.tests.test_base.TestMax" name="test_invalid" time="0.016" /><testcase classname="openpyxl.descriptors.tests.test_base.TestMin" name="test_ctor" time="0.010" /><testcase classname="openpyxl.descriptors.tests.test_base.TestMin" name="test_valid" time="0.018" /><testcase classname="openpyxl.descriptors.tests.test_base.TestMin" name="test_invalid" time="0.018" /><testcase classname="openpyxl.descriptors.tests.test_base.TestMinMax" name="test_ctor" time="0.013" /><testcase classname="openpyxl.descriptors.tests.test_base.TestMinMax" name="test_valid" time="0.013" /><testcase classname="openpyxl.descriptors.tests.test_base.TestMinMax" name="test_invalid" time="0.016" /><testcase classname="openpyxl.descriptors.tests.test_base.TestValues" name="test_ctor" time="0.010" /><testcase classname="openpyxl.descriptors.tests.test_base.TestValues" name="test_valid" time="0.011" /><testcase classname="openpyxl.descriptors.tests.test_base.TestValues" name="test_invalid" time="0.018" /><testcase classname="openpyxl.descriptors.tests.test_base" name="test_noneset" time="0.010" /><testcase classname="openpyxl.descriptors.tests.test_base.TestASCII" name="test_valid" time="0.013" /><testcase classname="openpyxl.descriptors.tests.test_base.TestASCII" name="test_invalid[\xfc]" time="0.018" /><testcase classname="openpyxl.descriptors.tests.test_base.TestASCII" name="test_invalid[10]" time="0.015" /><testcase classname="openpyxl.descriptors.tests.test_base.TestASCII" name="test_invalid[value2]" time="0.016" /><testcase classname="openpyxl.descriptors.tests.test_base.TestString" name="test_valid" time="0.020" /><testcase classname="openpyxl.descriptors.tests.test_base.TestString" name="test_invalid" time="0.018" /><testcase classname="openpyxl.descriptors.tests.test_base.TestTuple" name="test_valid" time="0.014" /><testcase classname="openpyxl.descriptors.tests.test_base.TestTuple" name="test_invalid" time="0.017" /><testcase classname="openpyxl.descriptors.tests.test_base.TestLength" name="test_valid" time="0.015" /><testcase classname="openpyxl.descriptors.tests.test_base.TestLength" name="test_invalid" time="0.021" /><testcase classname="openpyxl.descriptors.tests.test_excel.TestUniversalMeasure" name="test_valid[24.73mm]" time="0.016" /><testcase classname="openpyxl.descriptors.tests.test_excel.TestUniversalMeasure" name="test_valid[0cm]" time="0.015" /><testcase classname="openpyxl.descriptors.tests.test_excel.TestUniversalMeasure" name="test_valid[24pt]" time="0.014" /><testcase classname="openpyxl.descriptors.tests.test_excel.TestUniversalMeasure" name="test_valid[999pc]" time="0.015" /><testcase classname="openpyxl.descriptors.tests.test_excel.TestUniversalMeasure" name="test_valid[50pi]" time="0.016" /><testcase classname="openpyxl.descriptors.tests.test_excel.TestUniversalMeasure" name="test_invalid[24.73]" time="0.016" /><testcase classname="openpyxl.descriptors.tests.test_excel.TestUniversalMeasure" name="test_invalid[24.73zz]" time="0.014" /><testcase classname="openpyxl.descriptors.tests.test_excel.TestUniversalMeasure" name="test_invalid[24.73 mm]" time="0.015" /><testcase classname="openpyxl.descriptors.tests.test_excel.TestUniversalMeasure" name="test_invalid[None]" time="0.016" /><testcase classname="openpyxl.descriptors.tests.test_excel.TestUniversalMeasure" name="test_invalid[-24.73cm]" time="0.013" /><testcase classname="openpyxl.descriptors.tests.test_excel.TestHexBinary" name="test_valid[aa35efd]" time="0.014" /><testcase classname="openpyxl.descriptors.tests.test_excel.TestHexBinary" name="test_valid[AABBCCDD]" time="0.018" /><testcase classname="openpyxl.descriptors.tests.test_excel.TestHexBinary" name="test_invalid[GGII]" time="0.015" /><testcase classname="openpyxl.descriptors.tests.test_excel.TestHexBinary" name="test_invalid[35.5]" time="0.018" /><testcase classname="openpyxl.descriptors.tests.test_excel.TestTextPoint" name="test_valid[-400000]" time="0.019" /><testcase classname="openpyxl.descriptors.tests.test_excel.TestTextPoint" name="test_valid[400000]" time="0.017" /><testcase classname="openpyxl.descriptors.tests.test_excel.TestTextPoint" name="test_valid[0]" time="0.016" /><testcase classname="openpyxl.descriptors.tests.test_excel.TestTextPoint" name="test_invalid_value" time="0.012" /><testcase classname="openpyxl.descriptors.tests.test_excel.TestTextPoint" name="test_invalid_type" time="0.013" /><testcase classname="openpyxl.descriptors.tests.test_excel.TestPercentage" name="test_valid[15%-15000]" time="0.015" /><testcase classname="openpyxl.descriptors.tests.test_excel.TestPercentage" name="test_valid[1500-1500]" time="0.022" /><testcase classname="openpyxl.descriptors.tests.test_excel.TestPercentage" name="test_valid[15.5%-15500]" time="0.015" /><testcase classname="openpyxl.descriptors.tests.test_excel.TestPercentage" name="test_invalid[2000000]" time="0.013" /><testcase classname="openpyxl.descriptors.tests.test_excel.TestPercentage" name="test_invalid[-1000001]" time="0.017" /><testcase classname="openpyxl.descriptors.tests.test_excel.TestGuid" name="test_valid[{00000000-5BD2-4BC8-9F70-7020E1357FB2]" time="0.020" /><testcase classname="openpyxl.descriptors.tests.test_excel.TestBase64Binary" name="test_valid[==0F]" time="0.014" /><testcase classname="openpyxl.descriptors.tests.test_excel.TestCellRange" name="test_valid[A1]" time="0.026" /><testcase classname="openpyxl.descriptors.tests.test_excel.TestCellRange" name="test_valid[A1:H5]" time="0.027" /><testcase classname="openpyxl.descriptors.tests.test_excel.TestCellRange" name="test_valid[A:B]" time="0.034" /><testcase classname="openpyxl.descriptors.tests.test_excel.TestCellRange" name="test_invalid[A1:]" time="0.024" /><testcase classname="openpyxl.descriptors.tests.test_excel.TestCellRange" name="test_invalid[A1:5]" time="0.074" /><testcase classname="openpyxl.descriptors.tests.test_excel.TestCellRange" name="test_invalid[A1:B4:C7]" time="0.022" /><testcase classname="openpyxl.descriptors.tests.test_namespace" name="test_no_namespace" time="0.011" /><testcase classname="openpyxl.descriptors.tests.test_namespace" name="test_object_namespace" time="0.011" /><testcase classname="openpyxl.descriptors.tests.test_namespace" name="test_overwrite_namespace" time="0.009" /><testcase classname="openpyxl.descriptors.tests.test_nested.TestValue" name="test_to_tree" time="0.043" /><testcase classname="openpyxl.descriptors.tests.test_nested.TestValue" name="test_from_tree" time="0.016" /><testcase classname="openpyxl.descriptors.tests.test_nested.TestValue" name="test_tag_mismatch" time="0.016" /><testcase classname="openpyxl.descriptors.tests.test_nested.TestValue" name="test_nested_to_tree" time="0.023" /><testcase classname="openpyxl.descriptors.tests.test_nested.TestValue" name="test_nested_from_tree" time="0.023" /><testcase classname="openpyxl.descriptors.tests.test_nested.TestText" name="test_to_tree" time="0.020" /><testcase classname="openpyxl.descriptors.tests.test_nested.TestText" name="test_from_tree" time="0.023" /><testcase classname="openpyxl.descriptors.tests.test_nested.TestText" name="test_nested_to_tree" time="0.032" /><testcase classname="openpyxl.descriptors.tests.test_nested.TestText" name="test_nested_from_tree" time="0.022" /><testcase classname="openpyxl.descriptors.tests.test_nested" name="test_bool_value" time="0.012" /><testcase classname="openpyxl.descriptors.tests.test_nested" name="test_noneset_value" time="0.015" /><testcase classname="openpyxl.descriptors.tests.test_nested" name="test_min_max_value" time="0.018" /><testcase classname="openpyxl.descriptors.tests.test_nested" name="test_nested_integer" time="0.013" /><testcase classname="openpyxl.descriptors.tests.test_nested" name="test_nested_float" time="0.014" /><testcase classname="openpyxl.descriptors.tests.test_nested" name="test_nested_string" time="0.012" /><testcase classname="openpyxl.descriptors.tests.test_nested.TestEmptyTag" name="test_ctor[False-False]" time="0.018" /><testcase classname="openpyxl.descriptors.tests.test_nested.TestEmptyTag" name="test_ctor[True-True]" time="0.023" /><testcase classname="openpyxl.descriptors.tests.test_nested.TestEmptyTag" name="test_ctor[None-False]" time="0.016" /><testcase classname="openpyxl.descriptors.tests.test_nested.TestEmptyTag" name="test_ctor[1-True]" time="0.019" /><testcase classname="openpyxl.descriptors.tests.test_nested.TestEmptyTag" name="test_to_tree[False-&lt;break /&gt;]" time="0.023" /><testcase classname="openpyxl.descriptors.tests.test_nested.TestEmptyTag" name="test_to_tree[True-&lt;break&gt;&lt;height /&gt;&lt;/break&gt;]" time="0.026" /><testcase classname="openpyxl.descriptors.tests.test_nested.TestEmptyTag" name="test_from_xml[False-&lt;break /&gt;]" time="0.021" /><testcase classname="openpyxl.descriptors.tests.test_nested.TestEmptyTag" name="test_from_xml[True-&lt;break&gt;&lt;height /&gt;&lt;/break&gt;]" time="0.023" /><testcase classname="openpyxl.descriptors.tests.test_nested.TestCustomAttribute" name="test_to_tree" time="0.022" /><testcase classname="openpyxl.descriptors.tests.test_nested.TestCustomAttribute" name="test_from_tree" time="0.016" /><testcase classname="openpyxl.descriptors.tests.test_sequence.TestSequence" name="test_valid_ctor[value0]" time="0.021" /><testcase classname="openpyxl.descriptors.tests.test_sequence.TestSequence" name="test_valid_ctor[value1]" time="0.023" /><testcase classname="openpyxl.descriptors.tests.test_sequence.TestSequence" name="test_invalid_container[0]" time="0.017" /><testcase classname="openpyxl.descriptors.tests.test_sequence.TestSequence" name="test_invalid_container[1]" time="0.023" /><testcase classname="openpyxl.descriptors.tests.test_sequence.TestSequence" name="test_invalid_container[value2]" time="0.047" /><testcase classname="openpyxl.descriptors.tests.test_sequence.TestSequence" name="test_invalid_container[1]" time="0.021" /><testcase classname="openpyxl.descriptors.tests.test_sequence.TestSequence" name="test_invalid_container[None]" time="0.020" /><testcase classname="openpyxl.descriptors.tests.test_sequence.TestPrimitive" name="test_to_tree" time="0.034" /><testcase classname="openpyxl.descriptors.tests.test_sequence.TestPrimitive" name="test_from_xml" time="0.015" /><testcase classname="openpyxl.descriptors.tests.test_sequence.TestComplex" name="test_to_tree" time="0.037" /><testcase classname="openpyxl.descriptors.tests.test_sequence.TestComplex" name="test_from_xml" time="0.022" /><testcase classname="openpyxl.descriptors.tests.test_sequence.TestValueSequence" name="test_to_tree" time="0.033" /><testcase classname="openpyxl.descriptors.tests.test_sequence.TestValueSequence" name="test_from_tree" time="0.014" /><testcase classname="openpyxl.descriptors.tests.test_sequence.TestNestedSequence" name="test_ctor" time="0.040" /><testcase classname="openpyxl.descriptors.tests.test_sequence.TestNestedSequence" name="test_from_tree" time="0.032" /><testcase classname="openpyxl.descriptors.tests.test_sequence.TestMultiSequence" name="test_elements" time="0.021" /><testcase classname="openpyxl.descriptors.tests.test_sequence.TestMultiSequence" name="test_attrs" time="0.020" /><testcase classname="openpyxl.descriptors.tests.test_sequence.TestMultiSequence" name="test_to_tree" time="0.040" /><testcase classname="openpyxl.descriptors.tests.test_sequence.TestMultiSequence" name="test_from_xml" time="0.027" /><testcase classname="openpyxl.descriptors.tests.test_serialisable.TestSerialisable" name="test_hash" time="0.013" /><testcase classname="openpyxl.descriptors.tests.test_serialisable.TestSerialisable" name="test_add_attrs" time="0.015" /><testcase classname="openpyxl.descriptors.tests.test_serialisable.TestSerialisable" name="test_str" time="0.018" /><testcase classname="openpyxl.descriptors.tests.test_serialisable.TestSerialisable" name="test_eq" time="0.017" /><testcase classname="openpyxl.descriptors.tests.test_serialisable.TestSerialisable" name="test_ne" time="0.014" /><testcase classname="openpyxl.descriptors.tests.test_serialisable.TestSerialisable" name="test_copy" time="0.020" /><testcase classname="openpyxl.descriptors.tests.test_serialisable.TestRelation" name="test_binding" time="0.012" /><testcase classname="openpyxl.descriptors.tests.test_serialisable.TestRelation" name="test_to_tree" time="0.018" /><testcase classname="openpyxl.descriptors.tests.test_serialisable.TestRelation" name="test_from_tree" time="0.061" /><testcase classname="openpyxl.descriptors.tests.test_serialisable.TestKeywordAttribute" name="test_to_tree" time="0.018" /><testcase classname="openpyxl.descriptors.tests.test_serialisable.TestKeywordAttribute" name="test_from_tree" time="0.021" /><testcase classname="openpyxl.descriptors.tests.test_serialisable.TestKeywordNode" name="test_to_tree" time="0.027" /><testcase classname="openpyxl.descriptors.tests.test_serialisable.TestKeywordNode" name="test_from_tree" time="0.027" /><testcase classname="openpyxl.descriptors.tests.test_serialisable.TestHyphenatedAttribute" name="test_to_tree" time="0.022" /><testcase classname="openpyxl.descriptors.tests.test_serialisable.TestHyphenatedAttribute" name="test_from_tree" time="0.017" /><testcase classname="openpyxl.drawing.tests.test_color.TestColorChoice" name="test_ctor" time="0.022" /><testcase classname="openpyxl.drawing.tests.test_color.TestColorChoice" name="test_from_xml" time="0.014" /><testcase classname="openpyxl.drawing.tests.test_color.TestSystemColor" name="test_ctor" time="0.022" /><testcase classname="openpyxl.drawing.tests.test_color.TestSystemColor" name="test_from_xml" time="0.029" /><testcase classname="openpyxl.drawing.tests.test_color.TestHSLColor" name="test_ctor" time="0.022" /><testcase classname="openpyxl.drawing.tests.test_color.TestHSLColor" name="test_from_xml" time="0.018" /><testcase classname="openpyxl.drawing.tests.test_color.TestRGBPercent" name="test_ctor" time="0.020" /><testcase classname="openpyxl.drawing.tests.test_color.TestRGBPercent" name="test_from_xml" time="0.015" /><testcase classname="openpyxl.drawing.tests.test_color.TestColorMapping" name="test_ctor" time="0.029" /><testcase classname="openpyxl.drawing.tests.test_color.TestColorMapping" name="test_from_xml" time="0.019" /><testcase classname="openpyxl.drawing.tests.test_color.TestSchemeColor" name="test_ctor" time="0.027" /><testcase classname="openpyxl.drawing.tests.test_color.TestSchemeColor" name="test_from_xml" time="0.035" /><testcase classname="openpyxl.drawing.tests.test_connector.TestConnectorShape" name="test_ctor" time="0.014"><skipped type="pytest.xfail" message="" /></testcase><testcase classname="openpyxl.drawing.tests.test_connector.TestConnectorShape" name="test_from_xml" time="0.038" /><testcase classname="openpyxl.drawing.tests.test_descriptors" name="test_color_descriptor" time="0.011" /><testcase classname="openpyxl.drawing.tests.test_drawing.TestDrawing" name="test_ctor" time="0.024" /><testcase classname="openpyxl.drawing.tests.test_drawing.TestDrawing" name="test_width" time="0.018" /><testcase classname="openpyxl.drawing.tests.test_drawing.TestDrawing" name="test_proportional_width" time="0.020" /><testcase classname="openpyxl.drawing.tests.test_drawing.TestDrawing" name="test_height" time="0.017" /><testcase classname="openpyxl.drawing.tests.test_drawing.TestDrawing" name="test_proportional_height" time="0.015" /><testcase classname="openpyxl.drawing.tests.test_drawing.TestDrawing" name="test_set_dimension" time="0.016" /><testcase classname="openpyxl.drawing.tests.test_drawing.TestDrawing" name="test_get_emu" time="0.015" /><testcase classname="openpyxl.drawing.tests.test_drawing.TestDrawing" name="test_absolute_anchor" time="0.036" /><testcase classname="openpyxl.drawing.tests.test_drawing.TestDrawing" name="test_onecell_anchor" time="0.046" /><testcase classname="openpyxl.drawing.tests.test_effect.TestOuterShadow" name="test_ctor" time="0.025" /><testcase classname="openpyxl.drawing.tests.test_effect.TestOuterShadow" name="test_from_xml" time="0.021" /><testcase classname="openpyxl.drawing.tests.test_effect.TestTintEffect" name="test_ctor" time="0.018" /><testcase classname="openpyxl.drawing.tests.test_effect.TestTintEffect" name="test_from_xml" time="0.015" /><testcase classname="openpyxl.drawing.tests.test_effect.TestLuminanceEffect" name="test_ctor" time="0.019" /><testcase classname="openpyxl.drawing.tests.test_effect.TestLuminanceEffect" name="test_from_xml" time="0.015" /><testcase classname="openpyxl.drawing.tests.test_fill.TestPatternFillProperties" name="test_ctor" time="0.020" /><testcase classname="openpyxl.drawing.tests.test_fill.TestPatternFillProperties" name="test_from_xml" time="0.017" /><testcase classname="openpyxl.drawing.tests.test_fill.TestRelativeRect" name="test_ctor" time="0.117" /><testcase classname="openpyxl.drawing.tests.test_fill.TestRelativeRect" name="test_from_xml" time="0.020" /><testcase classname="openpyxl.drawing.tests.test_fill.TestRelativeRect" name="test_from_src_rect" time="0.015" /><testcase classname="openpyxl.drawing.tests.test_fill.TestStretchInfoProperties" name="test_ctor" time="0.017" /><testcase classname="openpyxl.drawing.tests.test_fill.TestStretchInfoProperties" name="test_from_xml" time="0.014" /><testcase classname="openpyxl.drawing.tests.test_fill.TestGradientStop" name="test_ctor" time="0.027" /><testcase classname="openpyxl.drawing.tests.test_fill.TestGradientStop" name="test_from_xml" time="0.017" /><testcase classname="openpyxl.drawing.tests.test_fill.TestLinearShadeProperties" name="test_ctor" time="0.016" /><testcase classname="openpyxl.drawing.tests.test_fill.TestLinearShadeProperties" name="test_from_xml" time="0.016" /><testcase classname="openpyxl.drawing.tests.test_fill.TestGradientFillProperties" name="test_ctor" time="0.017" /><testcase classname="openpyxl.drawing.tests.test_fill.TestGradientFillProperties" name="test_from_xml" time="0.017" /><testcase classname="openpyxl.drawing.tests.test_fill.TestBlip" name="test_ctor" time="0.017" /><testcase classname="openpyxl.drawing.tests.test_fill.TestBlip" name="test_from_xml" time="0.030" /><testcase classname="openpyxl.drawing.tests.test_fill.TestBlipFillProperties" name="test_ctor" time="0.018" /><testcase classname="openpyxl.drawing.tests.test_fill.TestBlipFillProperties" name="test_from_xml" time="0.014" /><testcase classname="openpyxl.drawing.tests.test_geometry.TestGradientFillProperties" name="test_ctor" time="0.015" /><testcase classname="openpyxl.drawing.tests.test_geometry.TestGradientFillProperties" name="test_from_xml" time="0.017" /><testcase classname="openpyxl.drawing.tests.test_geometry.TestTransform2D" name="test_ctor" time="0.023" /><testcase classname="openpyxl.drawing.tests.test_geometry.TestTransform2D" name="test_from_xml" time="0.022" /><testcase classname="openpyxl.drawing.tests.test_geometry.TestCamera" name="test_ctor" time="0.024" /><testcase classname="openpyxl.drawing.tests.test_geometry.TestCamera" name="test_from_xml" time="0.017" /><testcase classname="openpyxl.drawing.tests.test_geometry.TestLightRig" name="test_ctor" time="0.017" /><testcase classname="openpyxl.drawing.tests.test_geometry.TestLightRig" name="test_from_xml" time="0.016" /><testcase classname="openpyxl.drawing.tests.test_geometry.TestBevel" name="test_ctor" time="0.018" /><testcase classname="openpyxl.drawing.tests.test_geometry.TestBevel" name="test_from_xml" time="0.016" /><testcase classname="openpyxl.drawing.tests.test_geometry.TestSphereCoords" name="test_ctor" time="0.019" /><testcase classname="openpyxl.drawing.tests.test_geometry.TestSphereCoords" name="test_from_xml" time="0.017" /><testcase classname="openpyxl.drawing.tests.test_geometry.TestVector3D" name="test_ctor" time="0.023" /><testcase classname="openpyxl.drawing.tests.test_geometry.TestVector3D" name="test_from_xml" time="0.018" /><testcase classname="openpyxl.drawing.tests.test_geometry.TestPoint3D" name="test_ctor" time="0.018" /><testcase classname="openpyxl.drawing.tests.test_geometry.TestPoint3D" name="test_from_xml" time="0.016" /><testcase classname="openpyxl.drawing.tests.test_graphic.TestNonVisualGraphicFrame" name="test_ctor" time="0.026" /><testcase classname="openpyxl.drawing.tests.test_graphic.TestNonVisualGraphicFrame" name="test_from_xml" time="0.020" /><testcase classname="openpyxl.drawing.tests.test_graphic.TestGraphicData" name="test_ctor" time="0.021" /><testcase classname="openpyxl.drawing.tests.test_graphic.TestGraphicData" name="test_from_xml" time="0.020" /><testcase classname="openpyxl.drawing.tests.test_graphic.TestGraphicData" name="test_contains_chart" time="0.019" /><testcase classname="openpyxl.drawing.tests.test_graphic.TestGraphicObject" name="test_ctor" time="0.024" /><testcase classname="openpyxl.drawing.tests.test_graphic.TestGraphicObject" name="test_from_xml" time="0.023" /><testcase classname="openpyxl.drawing.tests.test_graphic.TestGraphicFrame" name="test_ctor" time="0.037" /><testcase classname="openpyxl.drawing.tests.test_graphic.TestGraphicFrame" name="test_from_xml" time="0.031" /><testcase classname="openpyxl.drawing.tests.test_graphic.TestGroupTransform2D" name="test_ctor" time="0.022" /><testcase classname="openpyxl.drawing.tests.test_graphic.TestGroupTransform2D" name="test_from_xml" time="0.024" /><testcase classname="openpyxl.drawing.tests.test_graphic.TestGroupShape" name="test_ctor" time="0.012"><skipped type="pytest.xfail" message="" /></testcase><testcase classname="openpyxl.drawing.tests.test_graphic.TestGroupShape" name="test_from_xml" time="0.032"><skipped type="pytest.xfail" message="" /></testcase><testcase classname="openpyxl.drawing.tests.test_graphic.TestNonVisualGraphicFrameProperties" name="test_ctor" time="0.019" /><testcase classname="openpyxl.drawing.tests.test_graphic.TestNonVisualGraphicFrameProperties" name="test_from_xml" time="0.013" /><testcase classname="openpyxl.drawing.tests.test_image.TestImage" name="test_import" time="0.006"><skipped type="pytest.skip" message="PIL is installed">/workdir/openpyxl-3.0.10/conftest.py:19: PIL is installed</skipped></testcase><testcase classname="openpyxl.drawing.tests.test_image.TestImage" name="test_ctor" time="0.078" /><testcase classname="openpyxl.drawing.tests.test_image.TestImage" name="test_write_image" time="0.021" /><testcase classname="openpyxl.drawing.tests.test_image.TestImage" name="test_dont_close_pil" time="0.020" /><testcase classname="openpyxl.drawing.tests.test_image.TestImage" name="test_save" time="0.028" /><testcase classname="openpyxl.drawing.tests.test_image.TestImage" name="test_convert" time="0.556" /><testcase classname="openpyxl.drawing.tests.test_line.TestLineProperties" name="test_ctor" time="0.056" /><testcase classname="openpyxl.drawing.tests.test_line.TestLineProperties" name="test_color" time="0.035" /><testcase classname="openpyxl.drawing.tests.test_line.TestLineProperties" name="test_from_xml" time="0.021" /><testcase classname="openpyxl.drawing.tests.test_line.TestLineEndProperties" name="test_ctor" time="0.015" /><testcase classname="openpyxl.drawing.tests.test_line.TestLineEndProperties" name="test_from_xml" time="0.012" /><testcase classname="openpyxl.drawing.tests.test_line.TestDashStop" name="test_ctor" time="0.015" /><testcase classname="openpyxl.drawing.tests.test_line.TestDashStop" name="test_from_xml" time="0.022" /><testcase classname="openpyxl.drawing.tests.test_picture.TestPictureLocking" name="test_ctor" time="0.020" /><testcase classname="openpyxl.drawing.tests.test_picture.TestPictureLocking" name="test_from_xml" time="0.025" /><testcase classname="openpyxl.drawing.tests.test_picture.TestNonVisualPictureProperties" name="test_ctor" time="0.021" /><testcase classname="openpyxl.drawing.tests.test_picture.TestNonVisualPictureProperties" name="test_from_xml" time="0.019" /><testcase classname="openpyxl.drawing.tests.test_picture.TestPictureNonVisual" name="test_ctor" time="0.027" /><testcase classname="openpyxl.drawing.tests.test_picture.TestPictureNonVisual" name="test_from_xml" time="0.017" /><testcase classname="openpyxl.drawing.tests.test_picture.TestPicture" name="test_ctor" time="0.046" /><testcase classname="openpyxl.drawing.tests.test_picture.TestPicture" name="test_from_xml" time="0.096" /><testcase classname="openpyxl.drawing.tests.test_properties.TestNonVisualDrawingProps" name="test_ctor" time="0.019" /><testcase classname="openpyxl.drawing.tests.test_properties.TestNonVisualDrawingProps" name="test_from_xml" time="0.014" /><testcase classname="openpyxl.drawing.tests.test_properties.TestNonVisualGroupDrawingShapeProps" name="test_ctor" time="0.017" /><testcase classname="openpyxl.drawing.tests.test_properties.TestNonVisualGroupDrawingShapeProps" name="test_from_xml" time="0.014" /><testcase classname="openpyxl.drawing.tests.test_properties.TestNonVisualGroupShape" name="test_ctor" time="0.027" /><testcase classname="openpyxl.drawing.tests.test_properties.TestNonVisualGroupShape" name="test_from_xml" time="0.023" /><testcase classname="openpyxl.drawing.tests.test_properties.TestGroupLocking" name="test_ctor" time="0.020" /><testcase classname="openpyxl.drawing.tests.test_properties.TestGroupLocking" name="test_from_xml" time="0.024" /><testcase classname="openpyxl.drawing.tests.test_properties.TestGroupShapeProperties" name="test_ctor" time="0.044" /><testcase classname="openpyxl.drawing.tests.test_properties.TestGroupShapeProperties" name="test_from_xml" time="0.013" /><testcase classname="openpyxl.drawing.tests.test_relation.TestChartRelation" name="test_ctor" time="0.020" /><testcase classname="openpyxl.drawing.tests.test_relation.TestChartRelation" name="test_from_xml" time="0.016" /><testcase classname="openpyxl.drawing.tests.test_spreadsheet_drawing.TestTwoCellAnchor" name="test_ctor" time="0.044" /><testcase classname="openpyxl.drawing.tests.test_spreadsheet_drawing.TestTwoCellAnchor" name="test_from_xml" time="0.034" /><testcase classname="openpyxl.drawing.tests.test_spreadsheet_drawing.TestOneCellAnchor" name="test_ctor" time="0.030" /><testcase classname="openpyxl.drawing.tests.test_spreadsheet_drawing.TestOneCellAnchor" name="test_from_xml" time="0.023" /><testcase classname="openpyxl.drawing.tests.test_spreadsheet_drawing.TestAbsoluteAnchor" name="test_ctor" time="0.036" /><testcase classname="openpyxl.drawing.tests.test_spreadsheet_drawing.TestAbsoluteAnchor" name="test_from_xml" time="0.022" /><testcase classname="openpyxl.drawing.tests.test_spreadsheet_drawing.TestSpreadsheetDrawing" name="test_ctor" time="0.101" /><testcase classname="openpyxl.drawing.tests.test_spreadsheet_drawing.TestSpreadsheetDrawing" name="test_write_chart" time="0.102" /><testcase classname="openpyxl.drawing.tests.test_spreadsheet_drawing.TestSpreadsheetDrawing" name="test_hash_function" time="0.014" /><testcase classname="openpyxl.drawing.tests.test_spreadsheet_drawing.TestSpreadsheetDrawing" name="test_write_picture" time="0.067" /><testcase classname="openpyxl.drawing.tests.test_spreadsheet_drawing.TestSpreadsheetDrawing" name="test_read_chart" time="0.045" /><testcase classname="openpyxl.drawing.tests.test_spreadsheet_drawing.TestSpreadsheetDrawing" name="test_read_blip[spreadsheet_drawing_with_blip.xml]" time="0.056" /><testcase classname="openpyxl.drawing.tests.test_spreadsheet_drawing.TestSpreadsheetDrawing" name="test_read_blip[two_cell_anchor_group.xml]" time="0.070" /><testcase classname="openpyxl.drawing.tests.test_spreadsheet_drawing.TestSpreadsheetDrawing" name="test_read_blip[two_cell_anchor_pic.xml]" time="0.056" /><testcase classname="openpyxl.drawing.tests.test_spreadsheet_drawing.TestSpreadsheetDrawing" name="test_ignore_external_blip" time="0.052" /><testcase classname="openpyxl.drawing.tests.test_spreadsheet_drawing.TestSpreadsheetDrawing" name="test_write_rels" time="0.026" /><testcase classname="openpyxl.drawing.tests.test_spreadsheet_drawing.TestSpreadsheetDrawing" name="test_path" time="0.012" /><testcase classname="openpyxl.drawing.tests.test_spreadsheet_drawing.TestSpreadsheetDrawing" name="test_empty" time="0.014" /><testcase classname="openpyxl.drawing.tests.test_spreadsheet_drawing.TestSpreadsheetDrawing" name="test_bool[charts]" time="0.013" /><testcase classname="openpyxl.drawing.tests.test_spreadsheet_drawing.TestSpreadsheetDrawing" name="test_bool[images]" time="0.015" /><testcase classname="openpyxl.drawing.tests.test_spreadsheet_drawing.TestSpreadsheetDrawing" name="test_image_as_pic" time="0.148" /><testcase classname="openpyxl.drawing.tests.test_spreadsheet_drawing.TestSpreadsheetDrawing" name="test_image_as_group" time="0.162" /><testcase classname="openpyxl.drawing.tests.test_spreadsheet_drawing" name="test_check_anchor_chart" time="0.024" /><testcase classname="openpyxl.drawing.tests.test_spreadsheet_drawing" name="test_check_chart_with_anchor[E17]" time="0.027" /><testcase classname="openpyxl.drawing.tests.test_spreadsheet_drawing" name="test_check_chart_with_anchor[e17]" time="0.020" /><testcase classname="openpyxl.drawing.tests.test_spreadsheet_drawing" name="test_check_anchor_image" time="0.016" /><testcase classname="openpyxl.drawing.tests.test_text.TestParagraph" name="test_ctor" time="0.018" /><testcase classname="openpyxl.drawing.tests.test_text.TestParagraph" name="test_from_xml" time="0.013" /><testcase classname="openpyxl.drawing.tests.test_text.TestParagraph" name="test_multiline" time="0.014" /><testcase classname="openpyxl.drawing.tests.test_text.TestParagraphProperties" name="test_ctor" time="0.017" /><testcase classname="openpyxl.drawing.tests.test_text.TestParagraphProperties" name="test_from_xml" time="0.021" /><testcase classname="openpyxl.drawing.tests.test_text.TestTextBox" name="test_from_xml" time="0.118" /><testcase classname="openpyxl.drawing.tests.test_text.TestCharacterProperties" name="test_ctor" time="0.029" /><testcase classname="openpyxl.drawing.tests.test_text.TestCharacterProperties" name="test_from_xml" time="0.017" /><testcase classname="openpyxl.drawing.tests.test_text.TestFont" name="test_ctor" time="0.021" /><testcase classname="openpyxl.drawing.tests.test_text.TestFont" name="test_from_xml" time="0.024" /><testcase classname="openpyxl.drawing.tests.test_text.TestHyperlink" name="test_ctor" time="0.022" /><testcase classname="openpyxl.drawing.tests.test_text.TestHyperlink" name="test_from_xml" time="0.016" /><testcase classname="openpyxl.drawing.tests.test_text.TestLineBreak" name="test_ctor" time="0.025" /><testcase classname="openpyxl.drawing.tests.test_text.TestLineBreak" name="test_from_xml" time="0.018" /><testcase classname="openpyxl.formatting.tests.test_formatting" name="test_conditional_formatting_read" time="3.059" /><testcase classname="openpyxl.formatting.tests.test_formatting.TestConditionalFormatting" name="test_ctor" time="0.018" /><testcase classname="openpyxl.formatting.tests.test_formatting.TestConditionalFormatting" name="test_from_tree" time="0.016" /><testcase classname="openpyxl.formatting.tests.test_formatting.TestConditionalFormatting" name="test_eq" time="0.011" /><testcase classname="openpyxl.formatting.tests.test_formatting.TestConditionalFormatting" name="test_hash" time="0.010" /><testcase classname="openpyxl.formatting.tests.test_formatting.TestConditionalFormatting" name="test_repr" time="0.015" /><testcase classname="openpyxl.formatting.tests.test_formatting.TestConditionalFormatting" name="test_contains" time="0.016" /><testcase classname="openpyxl.formatting.tests.test_rule.TestFormatObject" name="test_create" time="0.012" /><testcase classname="openpyxl.formatting.tests.test_rule.TestFormatObject" name="test_serialise" time="0.016" /><testcase classname="openpyxl.formatting.tests.test_rule.TestFormatObject" name="test_value_types[num-5-5.0]" time="0.013" /><testcase classname="openpyxl.formatting.tests.test_rule.TestFormatObject" name="test_value_types[percent-70-70]" time="0.013" /><testcase classname="openpyxl.formatting.tests.test_rule.TestFormatObject" name="test_value_types[max-10-10]" time="0.013" /><testcase classname="openpyxl.formatting.tests.test_rule.TestFormatObject" name="test_value_types[min-4.2-4.2]" time="0.017" /><testcase classname="openpyxl.formatting.tests.test_rule.TestFormatObject" name="test_value_types[formula-=A2*4-=A2*4]" time="0.016" /><testcase classname="openpyxl.formatting.tests.test_rule.TestFormatObject" name="test_value_types[percentile-10-10]" time="0.013" /><testcase classname="openpyxl.formatting.tests.test_rule.TestFormatObject" name="test_value_types[formula-None-None]" time="0.015" /><testcase classname="openpyxl.formatting.tests.test_rule.TestFormatObject" name="test_cell_reference" time="0.011" /><testcase classname="openpyxl.formatting.tests.test_rule.TestColorScale" name="test_create" time="0.017" /><testcase classname="openpyxl.formatting.tests.test_rule.TestColorScale" name="test_serialise" time="0.033" /><testcase classname="openpyxl.formatting.tests.test_rule.TestColorScale" name="test_two_colors" time="0.031" /><testcase classname="openpyxl.formatting.tests.test_rule.TestColorScale" name="test_three_colors" time="0.043" /><testcase classname="openpyxl.formatting.tests.test_rule.TestDataBar" name="test_create" time="0.020" /><testcase classname="openpyxl.formatting.tests.test_rule.TestDataBar" name="test_serialise" time="0.055" /><testcase classname="openpyxl.formatting.tests.test_rule.TestIconSet" name="test_create" time="0.024" /><testcase classname="openpyxl.formatting.tests.test_rule.TestIconSet" name="test_serialise" time="0.031" /><testcase classname="openpyxl.formatting.tests.test_rule.TestRule" name="test_create" time="0.200" /><testcase classname="openpyxl.formatting.tests.test_rule.TestRule" name="test_serialise" time="0.030" /><testcase classname="openpyxl.formatting.tests.test_rule.TestRule" name="test_non_ascii_formula" time="0.024" /><testcase classname="openpyxl.formatting.tests.test_rule" name="test_formula_rule" time="0.017" /><testcase classname="openpyxl.formatting.tests.test_rule" name="test_cellis_rule" time="0.017" /><testcase classname="openpyxl.formatting.tests.test_rule" name="test_operator_expansion[&lt;=-lessThanOrEqual]" time="0.017" /><testcase classname="openpyxl.formatting.tests.test_rule" name="test_operator_expansion[&gt;-greaterThan]" time="0.014" /><testcase classname="openpyxl.formatting.tests.test_rule" name="test_operator_expansion[!=-notEqual]" time="0.012" /><testcase classname="openpyxl.formatting.tests.test_rule" name="test_operator_expansion[=-equal]" time="0.013" /><testcase classname="openpyxl.formatting.tests.test_rule" name="test_operator_expansion[&gt;=-greaterThanOrEqual]" time="0.015" /><testcase classname="openpyxl.formatting.tests.test_rule" name="test_operator_expansion[==-equal]" time="0.017" /><testcase classname="openpyxl.formatting.tests.test_rule" name="test_operator_expansion[&lt;-lessThan]" time="0.016" /><testcase classname="openpyxl.formatting.tests.test_rule" name="test_iconset_rule" time="0.041" /><testcase classname="openpyxl.formatting.tests.test_rule" name="test_databar_rule" time="0.031" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizerRegexes" name="test_scientific_re[1.0E-True]" time="0.021" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizerRegexes" name="test_scientific_re[1.53321E-True]" time="0.013" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizerRegexes" name="test_scientific_re[9.999E-True]" time="0.017" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizerRegexes" name="test_scientific_re[3E-True]" time="0.016" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizerRegexes" name="test_scientific_re[12E-False]" time="0.013" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizerRegexes" name="test_scientific_re[0.1E-False]" time="0.014" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizerRegexes" name="test_scientific_re[0E-False]" time="0.016" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizerRegexes" name="test_scientific_re[-False]" time="0.013" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizerRegexes" name="test_scientific_re[E-False]" time="0.014" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizerRegexes" name="test_whitespace_re[ - ]" time="0.013" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizerRegexes" name="test_whitespace_re[ *- ]" time="0.012" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizerRegexes" name="test_whitespace_re[     -     ]" time="0.014" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizerRegexes" name="test_whitespace_re[     a-     ]" time="0.018" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizerRegexes" name="test_whitespace_re[   -   ]" time="0.015" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizerRegexes" name="test_whitespace_re[   +-   ]" time="0.012" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizerRegexes" name="test_whitespace_re[-None]" time="0.015" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizerRegexes" name="test_whitespace_re[*-None]" time="0.016" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizerRegexes" name="test_string_re[&quot;spamspamspam&quot;-&quot;spamspamspam&quot;]" time="0.017" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizerRegexes" name="test_string_re[&quot;this is &quot;&quot; a test &quot;&quot; &quot;-&quot;this is &quot;&quot; a test &quot;&quot; &quot;]" time="0.016" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizerRegexes" name="test_string_re[&quot;&quot;-&quot;&quot;]" time="0.019" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizerRegexes" name="test_string_re[&quot;spam and &quot;&quot;cheese&quot;&quot;&quot;+&quot;ignore&quot;-&quot;spam and &quot;&quot;cheese&quot;&quot;&quot;]" time="0.021" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizerRegexes" name="test_string_re['&quot;spam and &quot;&quot;cheese&quot;&quot;&quot;+&quot;ignore&quot;-None]" time="0.038" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizerRegexes" name="test_string_re[&quot;oops &quot;&quot;-None]" time="0.027" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizerRegexes" name="test_link_re['spam and ham'-'spam and ham']" time="0.022" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizerRegexes" name="test_link_re['double'' triple''' quadruple ''''-'double'' triple''']" time="0.024" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizerRegexes" name="test_link_re['sextuple '''''' and septuple''''''' and more-'sextuple '''''' and septuple''''''']" time="0.021" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizerRegexes" name="test_link_re[''-'']" time="0.017" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizerRegexes" name="test_link_re['oops ''-None]" time="0.021" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizerRegexes" name="test_link_re[gunk'hello world'-None]" time="0.020" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_init" time="0.014" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse[=IF(A$3&lt;40%,&quot;&quot;,INDEX(Pipeline!B$4:B$138,#REF!))-tokens0]" time="0.025" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse[='Summary slices'!$C$3-tokens1]" time="0.015" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse[=-MAX(Pipeline!AA4:AA138)-tokens2]" time="0.019" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse[=TEXT(-S7/1000,&quot;$#,##0&quot;&quot;M&quot;&quot;&quot;)-tokens3]" time="0.021" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse[=IF(A$3&lt;1.3E-8,&quot;&quot;,IF(ISNA('External Ref'!K7),&quot;N/A&quot;,TEXT(K7*1E+12,&quot;0&quot;)&amp;&quot;bp&quot;-tokens4]" time="0.016" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse[=+IF(A$3&lt;&gt;$B7,&quot;&quot;,(MIN(IF({TRUE, FALSE;1,2},A6:B6,$S7))&gt;=LOWER_BOUND)*($BR6&gt;$S72123))-tokens5]" time="0.026" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse[=(AW$4=$D7)+0%-tokens6]" time="0.020" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse[=$A:$A,$C:$C-tokens7]" time="0.013" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse[=3 +1-5-tokens8]" time="0.014" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse[Just text-tokens9]" time="0.018" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse[123.456-tokens10]" time="0.013" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse[31/12/1999-tokens11]" time="0.013" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse[-tokens12]" time="0.016" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse[=A1+\nA2-tokens13]" time="0.017" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse[=R[41]C[2]-tokens14]" time="0.020" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_string[&quot;spamspamspam&quot;spam-0-&quot;spamspamspam&quot;]" time="0.013" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_string[&quot;this is &quot;&quot; a test &quot;&quot; &quot;test-0-&quot;this is &quot;&quot; a test &quot;&quot; &quot;]" time="0.014" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_string[&quot;&quot;-0-&quot;&quot;]" time="0.015" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_string[a&quot;bcd&quot;&quot;efg&quot;hijk-1-&quot;bcd&quot;&quot;efg&quot;]" time="0.015" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_string[&quot;oops &quot;&quot;-0-None]" time="0.013" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_string['spam and ham'-0-'spam and ham']" time="0.016" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_string['double'' triple''' quad ''''-0-'double'' triple''']" time="0.016" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_string[123'sextuple '''''' and septuple''''''' and more-3-'sextuple '''''' and septuple''''''']" time="0.015" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_string[''-0-'']" time="0.017" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_string['oops ''-0-None]" time="0.023" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_brackets[[abc]def-0-[abc]]" time="0.018" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_brackets[[]abcdef-0-[]]" time="0.023" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_brackets[[abcdef]-0-[abcdef]]" time="0.019" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_brackets[a[bcd]ef-1-[bcd]]" time="0.014" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_brackets[ab[cde]f-2-[cde]]" time="0.018" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_brackets[R[1]C[2]-1-[1]]" time="0.016" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_brackets[R[1]C[2]-5-[2]]" time="0.018" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_nested_brackets[[a[b]c]def-0-[a[b]c]]" time="0.017" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_nested_brackets[[[]]abcdef-0-[[]]]" time="0.025" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_nested_brackets[[[abc]def]-0-[[abc]def]]" time="0.019" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_nested_brackets[a[b[c]d]e[f]-1-[b[c]d]]" time="0.018" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_nested_brackets[ab[c[d][e]][f]-2-[c[d][e]]]" time="0.018" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_nested_brackets[TableX[[#Data],[COL1]]-6-[[#Data],[COL1]]]" time="0.018" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_nested_brackets[TableX[[#Data],[COL1]:[COL2]]-6-[[#Data],[COL1]:[COL2]]]" time="0.019" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_brackets_error[[unfinished business-0]" time="0.015" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_brackets_error[unfinished [business-11]" time="0.016" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_brackets_error[[un[finished business]-0]" time="0.016" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_brackets_error[un[finished [business]-2]" time="0.015" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_error[#NULL!]" time="0.013" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_error[#DIV/0!]" time="0.018" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_error[#VALUE!]" time="0.011" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_error[#REF!]" time="0.018" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_error[#NAME?]" time="0.016" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_error[#NUM!]" time="0.017" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_error[#N/A]" time="0.014" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_error[#GETTING_DATA]" time="0.013" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_defined_name_reference_error" time="0.016" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_error_error" time="0.021" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_whitespace[ - ]" time="0.025" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_whitespace[  - ]" time="0.027" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_whitespace[   - ]" time="0.062" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_whitespace[    - ]" time="0.022" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_whitespace[     - ]" time="0.031" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_whitespace[      - ]" time="0.076" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_whitespace[       - ]" time="0.057" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_whitespace[        - ]" time="0.037" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_whitespace[         - ]" time="0.024" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_whitespace[\n-\n]" time="0.034" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_operator[&gt;=-&gt;=-OPERATOR-INFIX]" time="0.017" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_operator[&lt;=-&lt;=-OPERATOR-INFIX]" time="0.058" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_operator[&lt;&gt;-&lt;&gt;-OPERATOR-INFIX]" time="0.031" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_operator[%-%-OPERATOR-POSTFIX]" time="0.039" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_operator[*-*-OPERATOR-INFIX]" time="0.057" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_operator[/-/-OPERATOR-INFIX]" time="0.028" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_operator[^-^-OPERATOR-INFIX]" time="0.038" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_operator[&amp;-&amp;-OPERATOR-INFIX]" time="0.018" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_operator[=-=-OPERATOR-INFIX]" time="0.018" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_operator[&gt;-&gt;-OPERATOR-INFIX]" time="0.031" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_operator[&lt;-&lt;-OPERATOR-INFIX]" time="0.018" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_operator[+-+-OPERATOR-PREFIX]" time="0.017" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_operator[----OPERATOR-PREFIX]" time="0.016" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_operator[=&lt;-=-OPERATOR-INFIX]" time="0.020" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_operator[&gt;&lt;-&gt;-OPERATOR-INFIX]" time="0.030" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_operator[&lt;&lt;-&lt;-OPERATOR-INFIX]" time="0.026" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_operator[&gt;&gt;-&gt;-OPERATOR-INFIX]" time="0.030" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_opener[name-(-FUNC]" time="0.037" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_opener[-(-PAREN]" time="0.046" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_opener[-{-ARRAY]" time="0.031" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_opener_error" time="0.014" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_closer[func(a)-6-opener0]" time="0.019" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_closer[(a)-2-opener1]" time="0.023" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_closer[{a,b,c}-6-opener2]" time="0.024" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_closer_error[func(a}-6-opener0]" time="0.025" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_closer_error[(a}-2-opener1]" time="0.020" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_closer_error[{a,b,c)-6-opener2]" time="0.015" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_separator[{a;b}-2-opener0-SEP-ROW]" time="0.025" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_separator[{a,b}-2-opener1-SEP-ARG]" time="0.017" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_separator[(a,b)-2-opener2-OPERATOR-INFIX-]" time="0.025" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_separator[FUNC(a,b)-6-opener3-SEP-ARG]" time="0.026" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_parse_separator[$A$15:$B$20,$A$1:$B$5-11-None-OPERATOR-INFIX-]" time="0.029" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_check_scientific_notation[1.0E-5-4-token0-True]" time="0.053" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_check_scientific_notation[1.53321E+3-8-token1-True]" time="0.032" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_check_scientific_notation[9.9E+12-4-token2-True]" time="0.035" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_check_scientific_notation[3E+155-2-token3-True]" time="0.052" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_check_scientific_notation[12E+15-3-token4-False]" time="0.026" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_check_scientific_notation[0.1E-5-4-token5-False]" time="0.027" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_check_scientific_notation[0E+7-2-token6-False]" time="0.021" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_check_scientific_notation[12+-2-token7-False]" time="0.019" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_check_scientific_notation[13-E+-4-token8-False]" time="0.018" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_check_scientific_notation[+-0-token9-False]" time="0.018" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_check_scientific_notation[1.0e-5-4-token10-True]" time="0.028" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_check_scientific_notation[1.53321e+3-8-token11-True]" time="0.028" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_check_scientific_notation[9.9e+12-4-token12-True]" time="0.022" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_check_scientific_notation[3e+155-2-token13-True]" time="0.019" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_check_scientific_notation[12e+15-3-token14-False]" time="0.023" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_check_scientific_notation[0.1e-5-4-token15-False]" time="0.016" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_check_scientific_notation[0e+7-2-token16-False]" time="0.022" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_check_scientific_notation[12+-2-token17-False]" time="0.020" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_check_scientific_notation[13-e+-4-token18-False]" time="0.022" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_check_scientific_notation[+-0-token19-False]" time="0.018" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_assert_empty_token[-can_follow0-False]" time="0.019" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_assert_empty_token[test-can_follow1-True]" time="0.015" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_assert_empty_token[test:-can_follow2-False]" time="0.026" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_assert_empty_token[test-can_follow3-True]" time="0.013" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_assert_empty_token[test!-can_follow4-False]" time="0.018" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_assert_empty_token[test-can_follow5-True]" time="0.021" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_save_token" time="0.012" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_render[=IF(A$3&lt;40%,&quot;&quot;,INDEX(Pipeline!B$4:B$138,#REF!))]" time="0.020" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_render[='Summary slices'!$C$3]" time="0.016" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_render[=-MAX(Pipeline!AA4:AA138)]" time="0.025" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_render[=TEXT(-S7/1000,&quot;$#,##0&quot;&quot;M&quot;&quot;&quot;)]" time="0.038" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_render[=IF(A$3&lt;1.3E-8,&quot;&quot;,IF(ISNA('External Ref'!K7),&quot;N/A&quot;,TEXT(K7*1E+12,&quot;0&quot;)&amp;&quot;bp&quot;]" time="0.014" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_render[=+IF(A$3&lt;&gt;$B7,&quot;&quot;,(MIN(IF({TRUE, FALSE;1,2},A6:B6,$S7))&gt;=LOWER_BOUND)*($BR6&gt;$S72123))]" time="0.015" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_render[=(AW$4=$D7)+0%]" time="0.014" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_render[Just text]" time="0.012" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_render[123.456]" time="0.012" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_render[31/12/1999]" time="0.010" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestTokenizer" name="test_render[]" time="0.016" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestToken" name="test_init" time="0.014" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestToken" name="test_make_operand[&quot;text&quot;-TEXT]" time="0.014" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestToken" name="test_make_operand[#REF!-ERROR]" time="0.018" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestToken" name="test_make_operand[123-NUMBER]" time="0.024" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestToken" name="test_make_operand[0-NUMBER]" time="0.014" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestToken" name="test_make_operand[0.123-NUMBER]" time="0.021" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestToken" name="test_make_operand[.123-NUMBER]" time="0.016" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestToken" name="test_make_operand[1.234E5-NUMBER]" time="0.016" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestToken" name="test_make_operand[1E+5-NUMBER]" time="0.021" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestToken" name="test_make_operand[1.13E-55-NUMBER]" time="0.019" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestToken" name="test_make_operand[TRUE-LOGICAL]" time="0.015" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestToken" name="test_make_operand[FALSE-LOGICAL]" time="0.015" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestToken" name="test_make_operand[A1-RANGE]" time="0.019" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestToken" name="test_make_operand[ABCD12345-RANGE]" time="0.018" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestToken" name="test_make_operand['Hello world'!R123C[-12]-RANGE]" time="0.018" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestToken" name="test_make_operand[[outside-workbook.xlsx]'A sheet name'!$AB$122-RANGE]" time="0.013" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestToken" name="test_make_subexp[{-ARRAY-OPEN]" time="0.015" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestToken" name="test_make_subexp[}-ARRAY-CLOSE]" time="0.019" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestToken" name="test_make_subexp[(-PAREN-OPEN]" time="0.014" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestToken" name="test_make_subexp[)-PAREN-CLOSE]" time="0.021" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestToken" name="test_make_subexp[FUNC(-FUNC-OPEN]" time="0.019" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestToken" name="test_make_subexp_func" time="0.012" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestToken" name="test_get_closer[token0-)]" time="0.020" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestToken" name="test_get_closer[token1-}]" time="0.012" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestToken" name="test_get_closer[token2-)]" time="0.012" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestToken" name="test_make_separator" time="0.015" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestToken" name="test_parse_quoted_sheet_name_in_range[SUM(Inputs!$W$111:'Input 1'!W111)-tokens0]" time="0.013" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestToken" name="test_parse_quoted_sheet_name_in_range[=SUM('Inputs 1'!$W$111:'Input 1'!W111)-tokens1]" time="0.014" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestToken" name="test_parse_quoted_sheet_name_in_range[=SUM(Inputs!$W$111:'Input 1'!W111)-tokens2]" time="0.018" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestToken" name="test_parse_quoted_sheet_name_in_range[=SUM(Inputs!$W$111:'Input ''&quot;1'!W111)-tokens3]" time="0.014" /><testcase classname="openpyxl.formula.tests.test_tokenizer.TestToken" name="test_parse_quoted_sheet_name_in_range[=SUM(Inputs!$W$111:Input1!W111)-tokens4]" time="0.019" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_init[A1-1-1]" time="0.022" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_init[AA1-1-27]" time="0.014" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_init[AA1001-1001-27]" time="0.013" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_init[AA1001001001-1001001001-27]" time="0.018" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_init[XFD111-111-16384]" time="0.020" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_get_tokens[=IF(A$3&lt;40%,&quot;&quot;,INDEX(Pipeline!B$4:B$138,#REF!))]" time="0.022" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_get_tokens[='Summary slices'!$C$3]" time="0.017" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_get_tokens[=-MAX(Pipeline!AA4:AA138)]" time="0.018" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_get_tokens[=TEXT(-S7/1000,&quot;$#,##0&quot;&quot;M&quot;&quot;&quot;)]" time="0.018" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_get_tokens[=IF(A$3&lt;1.3E-8,&quot;&quot;,IF(ISNA('External Ref'!K7),&quot;N/A&quot;,TEXT(K7*1E+12,&quot;0&quot;)&amp;&quot;bp&quot;]" time="0.019" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_get_tokens[=+IF(A$3&lt;&gt;$B7,&quot;&quot;,(MIN(IF({TRUE, FALSE;1,2},A6:B6,$S7))&gt;=LOWER_BOUND)*($BR6&gt;$S72123))]" time="0.021" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_get_tokens[=$A:$A,$C:$C]" time="0.017" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_get_tokens[Just text123.456]" time="0.014" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_get_tokens[31/12/1999]" time="0.015" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_get_tokens[]" time="0.016" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_row_range_re[1:1-groups0]" time="0.017" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_row_range_re[1234:5678-groups1]" time="0.034" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_row_range_re[$1234:78910-groups2]" time="0.013" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_row_range_re[$12321:$23432-groups3]" time="0.018" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_row_range_re[112233:$445566-groups4]" time="0.016" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_row_range_re[A:A-None]" time="0.016" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_row_range_re[$ABC:AZZ-None]" time="0.015" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_row_range_re[$DEF:$FOV-None]" time="0.014" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_row_range_re[HA:$JA-None]" time="0.016" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_row_range_re[named1-None]" time="0.015" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_row_range_re[A15-None]" time="0.011" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_row_range_re[$AB303-None]" time="0.014" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_row_range_re[YY$101-None]" time="0.018" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_row_range_re[$ZZ$99-None]" time="0.013" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_row_range_re[B2:C3-None]" time="0.010" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_row_range_re[$ATV25:$BBC35-None]" time="0.014" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_row_range_re[WWW$918:WWW$919-None]" time="0.014" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_row_range_re[$III$305:$IIT$503-None]" time="0.017" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_col_range_re[1:1-None]" time="0.017" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_col_range_re[1234:5678-None]" time="0.013" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_col_range_re[$1234:78910-None]" time="0.014" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_col_range_re[$12321:$23432-None]" time="0.013" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_col_range_re[112233:$445566-None]" time="0.013" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_col_range_re[A:A-groups5]" time="0.014" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_col_range_re[$ABC:AZZ-groups6]" time="0.013" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_col_range_re[$DEF:$FOV-groups7]" time="0.013" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_col_range_re[HA:$JA-groups8]" time="0.018" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_col_range_re[named1-None]" time="0.013" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_col_range_re[A15-None]" time="0.019" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_col_range_re[$AB303-None]" time="0.043" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_col_range_re[YY$101-None]" time="0.016" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_col_range_re[$ZZ$99-None]" time="0.017" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_col_range_re[B2:C3-None]" time="0.017" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_col_range_re[$ATV25:$BBC35-None]" time="0.011" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_col_range_re[WWW$918:WWW$919-None]" time="0.012" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_col_range_re[$III$305:$IIT$503-None]" time="0.016" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_cell_ref_re[1:1-None]" time="0.017" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_cell_ref_re[1234:5678-None]" time="0.018" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_cell_ref_re[$1234:78910-None]" time="0.019" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_cell_ref_re[$12321:$23432-None]" time="0.016" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_cell_ref_re[112233:$445566-None]" time="0.018" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_cell_ref_re[A:A-None]" time="0.018" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_cell_ref_re[$ABC:AZZ-None]" time="0.033" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_cell_ref_re[$DEF:$FOV-None]" time="0.030" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_cell_ref_re[HA:$JA-None]" time="0.015" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_cell_ref_re[named1-None]" time="0.030" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_cell_ref_re[A15-groups10]" time="0.026" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_cell_ref_re[$AB303-groups11]" time="0.021" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_cell_ref_re[YY$101-groups12]" time="0.015" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_cell_ref_re[$ZZ$99-groups13]" time="0.011" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_cell_ref_re[B2:C3-None]" time="0.012" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_cell_ref_re[$ATV25:$BBC35-None]" time="0.013" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_cell_ref_re[WWW$918:WWW$919-None]" time="0.018" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_cell_ref_re[$III$305:$IIT$503-None]" time="0.016" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_translate_row[1-1-2]" time="0.020" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_translate_row[$222333-1-$222333]" time="0.018" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_translate_row[1048576--100-1048476]" time="0.019" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_translate_row[$1012023--100-$1012023]" time="0.045" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_translate_row[101-0-101]" time="0.016" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_translate_row[$101-0-$101]" time="0.017" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_translate_row[12--15-None]" time="0.018" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_translate_row[$12--15-$12]" time="0.019" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_translate_col[A-1-B]" time="0.016" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_translate_col[XED-26-XFD]" time="0.015" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_translate_col[$XED-26-$XED]" time="0.016" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_translate_col[WWW--52-WUW]" time="0.017" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_translate_col[$WWW--52-$WWW]" time="0.017" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_translate_col[ABC-0-ABC]" time="0.017" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_translate_col[$ABC-0-$ABC]" time="0.017" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_translate_col[AA--100-None]" time="0.016" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_translate_col[$AA--100-$AA]" time="0.019" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_strip_ws_name[A$3-value0]" time="0.021" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_strip_ws_name[Pipeline!B$4:B$138-value1]" time="0.016" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_strip_ws_name['Summary slices'!$C$3-value2]" time="0.017" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_strip_ws_name['Lions! Tigers! Bears!'!$OM$1-value3]" time="0.016" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_strip_ws_name[named_range_1-value4]" time="0.017" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_strip_ws_name[Sheet-2!named_range_2-value5]" time="0.016" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_translate_range[1:1-2-1-3:3]" time="0.021" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_translate_range[$1234:78910-1-10-$1234:78911]" time="0.028" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_translate_range[$12321:$23432-3-5-$12321:$23432]" time="0.025" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_translate_range[112233:$445566--3--20-112230:$445566]" time="0.028" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_translate_range[987:999-0-12-987:999]" time="0.021" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_translate_range[1:5--2-3-None]" time="0.047" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_translate_range[A:A-0-1-B:B]" time="0.025" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_translate_range[$ABC:AZZ-1-3-$ABC:BAC]" time="0.028" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_translate_range[$DEF:$FOV-25-25-$DEF:$FOV]" time="0.017" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_translate_range[HA:$JA--5--15-GL:$JA]" time="0.029" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_translate_range[named1--33-33-named1]" time="0.052" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_translate_range[A15--3-4-E12]" time="0.038" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_translate_range[$AB303-3-2-$AB306]" time="0.040" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_translate_range[YY$101-4-2-ZA$101]" time="0.035" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_translate_range[$ZZ$99-5-2-$ZZ$99]" time="0.034" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_translate_range[B2:C3-4-3-E6:F7]" time="0.031" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_translate_range[$ATV25:$BBC35-5-3-$ATV30:$BBC40]" time="0.021" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_translate_range[WWW$918:WWW$919-5-4-WXA$918:WXA$919]" time="0.035" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_translate_range[$III$305:$IIT$503-25-35-$III$305:$IIT$503]" time="0.028" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_translate_formula_range[=IF(A$3&lt;40%,&quot;&quot;,INDEX(Pipeline!B$4:B$138,#REF!))-A1-B2-=IF(B$3&lt;40%,&quot;&quot;,INDEX(Pipeline!C$4:C$138,#REF!))]" time="0.025" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_translate_formula_range[='Summary slices'!$C$3-A1-B2-='Summary slices'!$C$3]" time="0.014" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_translate_formula_range[=-MAX(Pipeline!AA4:AA138)-A1-B2-=-MAX(Pipeline!AB5:AB139)]" time="0.014" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_translate_formula_range[=TEXT(-'External Ref'!K7/DENOMINATOR,&quot;$#,##0&quot;&quot;M&quot;&quot;&quot;)-A1-B2-=TEXT(-'External Ref'!L8/DENOMINATOR,&quot;$#,##0&quot;&quot;M&quot;&quot;&quot;)]" time="0.015" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_translate_formula_range[=ROWS('Sh 1'!$1:3)+COLUMNS('Sh 2'!$A:C)-A1-B2-=ROWS('Sh 1'!$1:4)+COLUMNS('Sh 2'!$A:D)]" time="0.014" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_translate_formula_range[Just text-A1-B2-Just text]" time="0.014" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_translate_formula_range[123.456-A1-B2-123.456]" time="0.014" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_translate_formula_range[31/12/1999-A1-B2-31/12/1999]" time="0.014" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_translate_formula_range[-A1-B2-]" time="0.015" /><testcase classname="openpyxl.formula.tests.test_translate.TestTranslator" name="test_translate_formula_coordinates" time="0.012" /><testcase classname="openpyxl.packaging.tests.test_core" name="test_ctor" time="0.070" /><testcase classname="openpyxl.packaging.tests.test_core" name="test_from_tree" time="0.034" /><testcase classname="openpyxl.packaging.tests.test_core" name="test_qualified_datetime" time="0.018" /><testcase classname="openpyxl.packaging.tests.test_core" name="test_qualified_datetime_ns[abc]" time="0.027" /><testcase classname="openpyxl.packaging.tests.test_core" name="test_qualified_datetime_ns[dct]" time="0.025" /><testcase classname="openpyxl.packaging.tests.test_core" name="test_qualified_datetime_ns[dcterms]" time="0.017" /><testcase classname="openpyxl.packaging.tests.test_core" name="test_qualified_datetime_ns[xyz]" time="0.019" /><testcase classname="openpyxl.packaging.tests.test_extended.TestExtendedProperties" name="test_ctor" time="0.025" /><testcase classname="openpyxl.packaging.tests.test_extended.TestExtendedProperties" name="test_from_xml" time="0.031" /><testcase classname="openpyxl.packaging.tests.test_interface" name="test_interface" time="0.021" /><testcase classname="openpyxl.packaging.tests.test_manifest.TestFileExtension" name="test_ctor" time="0.019" /><testcase classname="openpyxl.packaging.tests.test_manifest.TestFileExtension" name="test_from_xml" time="0.015" /><testcase classname="openpyxl.packaging.tests.test_manifest.TestOverride" name="test_ctor" time="0.021" /><testcase classname="openpyxl.packaging.tests.test_manifest.TestOverride" name="test_from_xml" time="0.011" /><testcase classname="openpyxl.packaging.tests.test_manifest.TestManifest" name="test_ctor" time="0.106" /><testcase classname="openpyxl.packaging.tests.test_manifest.TestManifest" name="test_mimetypes_init" time="0.047" /><testcase classname="openpyxl.packaging.tests.test_manifest.TestManifest" name="test_from_xml" time="0.032" /><testcase classname="openpyxl.packaging.tests.test_manifest.TestManifest" name="test_filenames" time="0.030" /><testcase classname="openpyxl.packaging.tests.test_manifest.TestManifest" name="test_exts" time="0.037" /><testcase classname="openpyxl.packaging.tests.test_manifest.TestManifest" name="test_no_dupe_overrides" time="0.013" /><testcase classname="openpyxl.packaging.tests.test_manifest.TestManifest" name="test_no_dupe_types" time="0.014" /><testcase classname="openpyxl.packaging.tests.test_manifest.TestManifest" name="test_append" time="0.070" /><testcase classname="openpyxl.packaging.tests.test_manifest.TestManifest" name="test_write" time="0.079" /><testcase classname="openpyxl.packaging.tests.test_manifest.TestManifest" name="test_media[xl/media/image1.png-&lt;Default ContentType=&quot;image/png&quot; Extension=&quot;png&quot; /&gt;]" time="0.068" /><testcase classname="openpyxl.packaging.tests.test_manifest.TestManifest" name="test_media[xl/drawings/commentsDrawing.vml-&lt;Default ContentType=&quot;application/vnd.openxmlformats-officedocument.vmlDrawing&quot; Extension=&quot;vml&quot; /&gt;]" time="0.114" /><testcase classname="openpyxl.packaging.tests.test_manifest.TestManifest" name="test_vba" time="0.260" /><testcase classname="openpyxl.packaging.tests.test_manifest.TestManifest" name="test_no_defaults" time="0.013" /><testcase classname="openpyxl.packaging.tests.test_manifest.TestManifest" name="test_find" time="0.025" /><testcase classname="openpyxl.packaging.tests.test_manifest.TestManifest" name="test_find_none" time="0.012" /><testcase classname="openpyxl.packaging.tests.test_manifest.TestManifest" name="test_findall" time="0.029" /><testcase classname="openpyxl.packaging.tests.test_pivot.TestPivotCache" name="test_ctor" time="0.018" /><testcase classname="openpyxl.packaging.tests.test_pivot.TestPivotCache" name="test_from_xml" time="0.015" /><testcase classname="openpyxl.packaging.tests.test_relationship" name="test_ctor" time="0.016" /><testcase classname="openpyxl.packaging.tests.test_relationship" name="test_sequence" time="0.024" /><testcase classname="openpyxl.packaging.tests.test_relationship" name="test_read" time="0.015" /><testcase classname="openpyxl.packaging.tests.test_relationship" name="test_get_dependents[xl/_rels/workbook.xml.rels-expected0]" time="0.026" /><testcase classname="openpyxl.packaging.tests.test_relationship" name="test_get_dependents[xl/chartsheets/_rels/sheet1.xml.rels-expected1]" time="0.024" /><testcase classname="openpyxl.packaging.tests.test_relationship" name="test_get_external_link" time="0.024" /><testcase classname="openpyxl.packaging.tests.test_workbook.TestWorkbookPackage" name="test_ctor" time="0.021" /><testcase classname="openpyxl.packaging.tests.test_workbook.TestWorkbookPackage" name="test_from_xml" time="0.021" /><testcase classname="openpyxl.packaging.tests.test_workbook" name="test_read_workbook_code_name" time="0.027" /><testcase classname="openpyxl.pivot.tests.test_cache.TestCacheField" name="test_ctor" time="0.026" /><testcase classname="openpyxl.pivot.tests.test_cache.TestCacheField" name="test_from_xml" time="0.022" /><testcase classname="openpyxl.pivot.tests.test_cache.TestSharedItems" name="test_ctor" time="0.031" /><testcase classname="openpyxl.pivot.tests.test_cache.TestSharedItems" name="test_from_xml" time="0.095" /><testcase classname="openpyxl.pivot.tests.test_cache.TestWorksheetSource" name="test_ctor" time="0.023" /><testcase classname="openpyxl.pivot.tests.test_cache.TestWorksheetSource" name="test_from_xml" time="0.014" /><testcase classname="openpyxl.pivot.tests.test_cache.TestCacheSource" name="test_ctor" time="0.019" /><testcase classname="openpyxl.pivot.tests.test_cache.TestCacheSource" name="test_from_xml" time="0.020" /><testcase classname="openpyxl.pivot.tests.test_cache.TestPivotCacheDefinition" name="test_read" time="0.094" /><testcase classname="openpyxl.pivot.tests.test_cache.TestPivotCacheDefinition" name="test_to_tree" time="0.045" /><testcase classname="openpyxl.pivot.tests.test_cache.TestPivotCacheDefinition" name="test_path" time="0.025" /><testcase classname="openpyxl.pivot.tests.test_cache.TestPivotCacheDefinition" name="test_write" time="0.042" /><testcase classname="openpyxl.pivot.tests.test_cache.TestCacheHierarchy" name="test_ctor" time="0.024" /><testcase classname="openpyxl.pivot.tests.test_cache.TestCacheHierarchy" name="test_from_xml" time="0.020" /><testcase classname="openpyxl.pivot.tests.test_cache.TestMeasureDimensionMap" name="test_ctor" time="0.018" /><testcase classname="openpyxl.pivot.tests.test_cache.TestMeasureDimensionMap" name="test_from_xml" time="0.020" /><testcase classname="openpyxl.pivot.tests.test_cache.TestMeasureGroup" name="test_ctor" time="0.036" /><testcase classname="openpyxl.pivot.tests.test_cache.TestMeasureGroup" name="test_from_xml" time="0.012" /><testcase classname="openpyxl.pivot.tests.test_cache.TestPivotDimension" name="test_ctor" time="0.019" /><testcase classname="openpyxl.pivot.tests.test_cache.TestPivotDimension" name="test_from_xml" time="0.015" /><testcase classname="openpyxl.pivot.tests.test_cache.TestCalculatedMember" name="test_ctor" time="0.017" /><testcase classname="openpyxl.pivot.tests.test_cache.TestCalculatedMember" name="test_from_xml" time="0.018" /><testcase classname="openpyxl.pivot.tests.test_cache.TestServerFormat" name="test_ctor" time="0.021" /><testcase classname="openpyxl.pivot.tests.test_cache.TestServerFormat" name="test_from_xml" time="0.016" /><testcase classname="openpyxl.pivot.tests.test_cache.TestServerFormatList" name="test_ctor" time="0.025" /><testcase classname="openpyxl.pivot.tests.test_cache.TestServerFormatList" name="test_from_xml" time="0.016" /><testcase classname="openpyxl.pivot.tests.test_fields.TestError" name="test_ctor" time="0.020" /><testcase classname="openpyxl.pivot.tests.test_fields.TestError" name="test_from_xml" time="0.021" /><testcase classname="openpyxl.pivot.tests.test_fields.TestBoolean" name="test_ctor" time="0.015" /><testcase classname="openpyxl.pivot.tests.test_fields.TestBoolean" name="test_from_xml" time="0.014" /><testcase classname="openpyxl.pivot.tests.test_fields.TestMissing" name="test_ctor" time="0.013" /><testcase classname="openpyxl.pivot.tests.test_fields.TestMissing" name="test_from_xml" time="0.016" /><testcase classname="openpyxl.pivot.tests.test_fields.TestNumber" name="test_ctor" time="0.018" /><testcase classname="openpyxl.pivot.tests.test_fields.TestNumber" name="test_from_xml" time="0.018" /><testcase classname="openpyxl.pivot.tests.test_fields.TestText" name="test_ctor" time="0.014" /><testcase classname="openpyxl.pivot.tests.test_fields.TestText" name="test_from_xml" time="0.016" /><testcase classname="openpyxl.pivot.tests.test_fields.TestIndex" name="test_ctor" time="0.016" /><testcase classname="openpyxl.pivot.tests.test_fields.TestIndex" name="test_from_xml" time="0.014" /><testcase classname="openpyxl.pivot.tests.test_fields.TestDateTimeField" name="test_ctor" time="0.015" /><testcase classname="openpyxl.pivot.tests.test_fields.TestDateTimeField" name="test_from_xml" time="0.022" /><testcase classname="openpyxl.pivot.tests.test_record.TestRecord" name="test_ctor" time="0.046" /><testcase classname="openpyxl.pivot.tests.test_record.TestRecord" name="test_from_xml" time="0.060" /><testcase classname="openpyxl.pivot.tests.test_record.TestRecordList" name="test_ctor" time="0.026" /><testcase classname="openpyxl.pivot.tests.test_record.TestRecordList" name="test_from_xml" time="0.016" /><testcase classname="openpyxl.pivot.tests.test_record.TestRecordList" name="test_write" time="0.043" /><testcase classname="openpyxl.pivot.tests.test_table.TestPivotField" name="test_ctor" time="0.060" /><testcase classname="openpyxl.pivot.tests.test_table.TestPivotField" name="test_from_xml" time="0.039" /><testcase classname="openpyxl.pivot.tests.test_table.TestFieldItem" name="test_ctor" time="0.016" /><testcase classname="openpyxl.pivot.tests.test_table.TestFieldItem" name="test_from_xml" time="0.015" /><testcase classname="openpyxl.pivot.tests.test_table.TestRowColItem" name="test_ctor" time="0.016" /><testcase classname="openpyxl.pivot.tests.test_table.TestRowColItem" name="test_from_xml" time="0.013" /><testcase classname="openpyxl.pivot.tests.test_table.TestDataField" name="test_ctor" time="0.018" /><testcase classname="openpyxl.pivot.tests.test_table.TestDataField" name="test_from_xml" time="0.014" /><testcase classname="openpyxl.pivot.tests.test_table.TestLocation" name="test_ctor" time="0.014" /><testcase classname="openpyxl.pivot.tests.test_table.TestLocation" name="test_from_xml" time="0.015" /><testcase classname="openpyxl.pivot.tests.test_table.TestPivotTableStyle" name="test_ctor" time="0.021" /><testcase classname="openpyxl.pivot.tests.test_table.TestPivotTableStyle" name="test_from_xml" time="0.019" /><testcase classname="openpyxl.pivot.tests.test_table.TestPivotTableStyle" name="test_no_name" time="0.018" /><testcase classname="openpyxl.pivot.tests.test_table.TestPivotTableDefinition" name="test_ctor" time="0.136" /><testcase classname="openpyxl.pivot.tests.test_table.TestPivotTableDefinition" name="test_from_xml" time="0.055" /><testcase classname="openpyxl.pivot.tests.test_table.TestPivotTableDefinition" name="test_write" time="0.038" /><testcase classname="openpyxl.pivot.tests.test_table.TestPageField" name="test_ctor" time="0.015" /><testcase classname="openpyxl.pivot.tests.test_table.TestPageField" name="test_from_xml" time="0.013" /><testcase classname="openpyxl.pivot.tests.test_table.TestReference" name="test_ctor" time="0.022" /><testcase classname="openpyxl.pivot.tests.test_table.TestReference" name="test_from_xml" time="0.019" /><testcase classname="openpyxl.pivot.tests.test_table.TestPivotArea" name="test_ctor" time="0.026" /><testcase classname="openpyxl.pivot.tests.test_table.TestPivotArea" name="test_from_xml" time="0.027" /><testcase classname="openpyxl.pivot.tests.test_table.TestChartFormat" name="test_ctor" time="0.035" /><testcase classname="openpyxl.pivot.tests.test_table.TestChartFormat" name="test_from_xml" time="0.022" /><testcase classname="openpyxl.pivot.tests.test_table.TestPivotFilter" name="test_ctor" time="0.050" /><testcase classname="openpyxl.pivot.tests.test_table.TestPivotFilter" name="test_from_xml" time="0.042" /><testcase classname="openpyxl.pivot.tests.test_table.TestFormat" name="test_ctor" time="0.023" /><testcase classname="openpyxl.pivot.tests.test_table.TestFormat" name="test_from_xml" time="0.025" /><testcase classname="openpyxl.pivot.tests.test_table.TestConditionalFormat" name="test_ctor" time="0.023" /><testcase classname="openpyxl.pivot.tests.test_table.TestConditionalFormat" name="test_from_xml" time="0.018" /><testcase classname="openpyxl.reader.tests.test_drawings" name="test_read_charts" time="1.658" /><testcase classname="openpyxl.reader.tests.test_drawings" name="test_read_drawing" time="0.116" /><testcase classname="openpyxl.reader.tests.test_drawings" name="test_unsupport_drawing" time="0.072" /><testcase classname="openpyxl.reader.tests.test_drawings" name="test_unsupported_image_format" time="0.067" /><testcase classname="openpyxl.reader.tests.test_excel" name="test_read_empty_file" time="0.010" /><testcase classname="openpyxl.reader.tests.test_excel" name="test_load_workbook_from_fileobj" time="0.394" /><testcase classname="openpyxl.reader.tests.test_excel" name="test_find_standard_workbook_part[application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml-/xl/workbook.xml]" time="0.015" /><testcase classname="openpyxl.reader.tests.test_excel" name="test_find_standard_workbook_part[application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml-/xl/spqr.xml]" time="0.018" /><testcase classname="openpyxl.reader.tests.test_excel" name="test_find_standard_workbook_part[application/vnd.ms-excel.sheet.macroEnabled.main+xml-/xl/workbook.xml]" time="0.020" /><testcase classname="openpyxl.reader.tests.test_excel" name="test_find_standard_workbook_part[application/vnd.ms-excel.sheet.macroEnabled.main+xml-/xl/spqr.xml]" time="0.017" /><testcase classname="openpyxl.reader.tests.test_excel" name="test_find_standard_workbook_part[application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml-/xl/workbook.xml]" time="0.018" /><testcase classname="openpyxl.reader.tests.test_excel" name="test_find_standard_workbook_part[application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml-/xl/spqr.xml]" time="0.016" /><testcase classname="openpyxl.reader.tests.test_excel" name="test_find_standard_workbook_part[application/vnd.ms-excel.template.macroEnabled.main+xml-/xl/workbook.xml]" time="0.013" /><testcase classname="openpyxl.reader.tests.test_excel" name="test_find_standard_workbook_part[application/vnd.ms-excel.template.macroEnabled.main+xml-/xl/spqr.xml]" time="0.014" /><testcase classname="openpyxl.reader.tests.test_excel" name="test_no_workbook" time="0.009" /><testcase classname="openpyxl.reader.tests.test_excel" name="test_overwritten_default" time="0.011" /><testcase classname="openpyxl.reader.tests.test_excel" name="test_invalid_file_extension[.xlsb]" time="0.012" /><testcase classname="openpyxl.reader.tests.test_excel" name="test_invalid_file_extension[.xls]" time="0.011" /><testcase classname="openpyxl.reader.tests.test_excel" name="test_invalid_file_extension[no-format]" time="0.013" /><testcase classname="openpyxl.reader.tests.test_excel" name="test_style_assignment" time="1.197" /><testcase classname="openpyxl.reader.tests.test_excel" name="test_close_read[False]" time="0.849" /><testcase classname="openpyxl.reader.tests.test_excel" name="test_close_read[True]" time="0.556" /><testcase classname="openpyxl.reader.tests.test_excel" name="test_close_write[False]" time="0.073" /><testcase classname="openpyxl.reader.tests.test_excel" name="test_close_write[True]" time="0.048" /><testcase classname="openpyxl.reader.tests.test_excel" name="test_read_stringio" time="0.008" /><testcase classname="openpyxl.reader.tests.test_excel" name="test_load_workbook_with_vba" time="0.582" /><testcase classname="openpyxl.reader.tests.test_excel" name="test_no_external_links" time="0.287" /><testcase classname="openpyxl.reader.tests.test_excel.TestExcelReader" name="test_ctor" time="0.016" /><testcase classname="openpyxl.reader.tests.test_excel.TestExcelReader" name="test_read_manifest" time="0.029" /><testcase classname="openpyxl.reader.tests.test_excel.TestExcelReader" name="test_read_strings" time="0.042" /><testcase classname="openpyxl.reader.tests.test_excel.TestExcelReader" name="test_read_workbook" time="0.076" /><testcase classname="openpyxl.reader.tests.test_excel.TestExcelReader" name="test_read_workbook_theme" time="0.125" /><testcase classname="openpyxl.reader.tests.test_excel.TestExcelReader" name="test_read_workbook_hidden[False]" time="0.267" /><testcase classname="openpyxl.reader.tests.test_excel.TestExcelReader" name="test_read_workbook_hidden[True]" time="0.261" /><testcase classname="openpyxl.reader.tests.test_excel.TestExcelReader" name="test_read_chartsheet" time="0.321" /><testcase classname="openpyxl.reader.tests.test_strings" name="test_read_string_table" time="0.016" /><testcase classname="openpyxl.reader.tests.test_strings" name="test_empty_string" time="0.020" /><testcase classname="openpyxl.reader.tests.test_strings" name="test_formatted_string_table" time="0.043" /><testcase classname="openpyxl.reader.tests.test_workbook.TestWorkbookParser" name="test_ctor" time="0.087" /><testcase classname="openpyxl.reader.tests.test_workbook.TestWorkbookParser" name="test_parse_calendar" time="0.093" /><testcase classname="openpyxl.reader.tests.test_workbook.TestWorkbookParser" name="test_find_sheets" time="0.091" /><testcase classname="openpyxl.reader.tests.test_workbook.TestWorkbookParser" name="test_broken_sheet_ref" time="0.129" /><testcase classname="openpyxl.reader.tests.test_workbook.TestWorkbookParser" name="test_assign_names" time="0.080" /><testcase classname="openpyxl.reader.tests.test_workbook.TestWorkbookParser" name="test_no_links" time="0.078" /><testcase classname="openpyxl.reader.tests.test_workbook.TestWorkbookParser" name="test_pivot_caches" time="0.298" /><testcase classname="openpyxl.reader.tests.test_workbook.TestWorkbookParser" name="test_book_views" time="0.070" /><testcase classname="openpyxl.reader.tests.test_workbook.TestWorkbookParser" name="test_workbook_security" time="0.154" /><testcase classname="openpyxl.styles.tests.test_alignments" name="test_default" time="0.040" /><testcase classname="openpyxl.styles.tests.test_alignments" name="test_round_trip" time="0.011" /><testcase classname="openpyxl.styles.tests.test_alignments" name="test_alias" time="0.034" /><testcase classname="openpyxl.styles.tests.test_borders.TestBorder" name="test_create" time="0.056" /><testcase classname="openpyxl.styles.tests.test_borders.TestBorder" name="test_serialise" time="0.061" /><testcase classname="openpyxl.styles.tests.test_cell_style.TestStyleArray" name="test_ctor" time="0.012" /><testcase classname="openpyxl.styles.tests.test_cell_style.TestStyleArray" name="test_hash" time="0.012" /><testcase classname="openpyxl.styles.tests.test_cell_style.TestStyleArray" name="test_copy" time="0.030" /><testcase classname="openpyxl.styles.tests.test_cell_style.TestCellStyle" name="test_ctor" time="0.032" /><testcase classname="openpyxl.styles.tests.test_cell_style.TestCellStyle" name="test_from_xml" time="0.024" /><testcase classname="openpyxl.styles.tests.test_cell_style.TestCellStyle" name="test_to_array" time="0.015" /><testcase classname="openpyxl.styles.tests.test_cell_style.TestCellStyle" name="test_from_array" time="0.018" /><testcase classname="openpyxl.styles.tests.test_cell_style.TestCellStyleList" name="test_ctor" time="0.016" /><testcase classname="openpyxl.styles.tests.test_cell_style.TestCellStyleList" name="test_from_xml" time="0.011" /><testcase classname="openpyxl.styles.tests.test_cell_style.TestCellStyleList" name="test_to_array" time="0.088" /><testcase classname="openpyxl.styles.tests.test_colors" name="test_argb[00FFFFFF]" time="0.008" /><testcase classname="openpyxl.styles.tests.test_colors" name="test_argb[efefef]" time="0.013" /><testcase classname="openpyxl.styles.tests.test_colors.TestColor" name="test_ctor" time="0.007" /><testcase classname="openpyxl.styles.tests.test_colors.TestColor" name="test_rgb" time="0.011" /><testcase classname="openpyxl.styles.tests.test_colors.TestColor" name="test_indexed" time="0.009" /><testcase classname="openpyxl.styles.tests.test_colors.TestColor" name="test_auto" time="0.012"><failure message="AssertionError">Traceback (most recent call last):
  File "/workdir/openpyxl-3.0.10/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    result: Optional[TResult] = func()
  File "/workdir/openpyxl-3.0.10/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 262, in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/workdir/openpyxl-3.0.10/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/openpyxl-3.0.10/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/openpyxl-3.0.10/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/openpyxl-3.0.10/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/openpyxl-3.0.10/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/openpyxl-3.0.10/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 177, in pytest_runtest_call
    raise e
  File "/workdir/openpyxl-3.0.10/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 169, in pytest_runtest_call
    item.runtest()
  File "/workdir/openpyxl-3.0.10/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 1792, in runtest
    self.ihook.pytest_pyfunc_call(pyfuncitem=self)
  File "/workdir/openpyxl-3.0.10/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/openpyxl-3.0.10/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/openpyxl-3.0.10/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 113, in _multicall
    raise exception.with_traceback(exception.__traceback__)
  File "/workdir/openpyxl-3.0.10/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/openpyxl-3.0.10/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 194, in pytest_pyfunc_call
    result = testfunction(**testargs)
  File "/workdir/openpyxl-3.0.10/openpyxl/styles/tests/test_colors.py", line 38, in test_auto
    assert c.type is "auto"
AssertionError</failure></testcase><testcase classname="openpyxl.styles.tests.test_colors.TestColor" name="test_theme" time="0.009" /><testcase classname="openpyxl.styles.tests.test_colors.TestColor" name="test_tint" time="0.010" /><testcase classname="openpyxl.styles.tests.test_colors.TestColor" name="test_highlander" time="0.010" /><testcase classname="openpyxl.styles.tests.test_colors.TestColor" name="test_validation" time="0.014" /><testcase classname="openpyxl.styles.tests.test_colors.TestColor" name="test_adding" time="0.013" /><testcase classname="openpyxl.styles.tests.test_colors.TestColor" name="test_cannot_add_other_types" time="0.014" /><testcase classname="openpyxl.styles.tests.test_colors" name="test_color_descriptor" time="0.012" /><testcase classname="openpyxl.styles.tests.test_colors.TestColorList" name="test_ctor_indexed" time="0.017" /><testcase classname="openpyxl.styles.tests.test_colors.TestColorList" name="test_write" time="0.027" /><testcase classname="openpyxl.styles.tests.test_colors.TestColorList" name="test_from_xml" time="0.018" /><testcase classname="openpyxl.styles.tests.test_colors.TestColorList" name="test_empty" time="0.009" /><testcase classname="openpyxl.styles.tests.test_colors.TestColorList" name="test_no_colors" time="0.016" /><testcase classname="openpyxl.styles.tests.test_differential" name="test_parse" time="1.553" /><testcase classname="openpyxl.styles.tests.test_differential" name="test_serialise" time="0.047" /><testcase classname="openpyxl.styles.tests.test_differential.TestDifferentialStyleList" name="test_ctor" time="0.025" /><testcase classname="openpyxl.styles.tests.test_differential.TestDifferentialStyleList" name="test_from_xml" time="0.026" /><testcase classname="openpyxl.styles.tests.test_fills.TestGradientFill" name="test_empty_ctor" time="0.046" /><testcase classname="openpyxl.styles.tests.test_fills.TestGradientFill" name="test_ctor" time="0.014" /><testcase classname="openpyxl.styles.tests.test_fills.TestGradientFill" name="test_stop_sequence[colors0]" time="0.015" /><testcase classname="openpyxl.styles.tests.test_fills.TestGradientFill" name="test_stop_sequence[colors1]" time="0.016" /><testcase classname="openpyxl.styles.tests.test_fills.TestGradientFill" name="test_color_sequence[colors0-rgbs0-positions0]" time="0.020" /><testcase classname="openpyxl.styles.tests.test_fills.TestGradientFill" name="test_color_sequence[colors1-rgbs1-positions1]" time="0.020" /><testcase classname="openpyxl.styles.tests.test_fills.TestGradientFill" name="test_color_sequence[colors2-rgbs2-positions2]" time="0.015" /><testcase classname="openpyxl.styles.tests.test_fills.TestGradientFill" name="test_color_sequence[colors3-rgbs3-positions3]" time="0.013" /><testcase classname="openpyxl.styles.tests.test_fills.TestGradientFill" name="test_invalid_stop_color_mix" time="0.009" /><testcase classname="openpyxl.styles.tests.test_fills.TestGradientFill" name="test_duplicate_position" time="0.016" /><testcase classname="openpyxl.styles.tests.test_fills.TestGradientFill" name="test_dict_interface" time="0.014" /><testcase classname="openpyxl.styles.tests.test_fills.TestGradientFill" name="test_serialise" time="0.048" /><testcase classname="openpyxl.styles.tests.test_fills.TestGradientFill" name="test_create" time="0.020" /><testcase classname="openpyxl.styles.tests.test_fills.TestPatternFill" name="test_ctor" time="0.016" /><testcase classname="openpyxl.styles.tests.test_fills.TestPatternFill" name="test_dict_interface" time="0.011" /><testcase classname="openpyxl.styles.tests.test_fills.TestPatternFill" name="test_serialise" time="0.025" /><testcase classname="openpyxl.styles.tests.test_fills.TestPatternFill" name="test_create[\n                                 &lt;fill&gt;\n                                 &lt;patternFill xmlns=&quot;http://schemas.openxmlformats.org/spreadsheetml/2006/main&quot; patternType=&quot;solid&quot;&gt;\n                                   &lt;fgColor theme=&quot;0&quot; tint=&quot;-0.14999847407452621&quot;/&gt;\n                                   &lt;bgColor indexed=&quot;64&quot;/&gt;\n                                 &lt;/patternFill&gt;\n                                 &lt;/fill&gt;\n                                 -args0]" time="0.022" /><testcase classname="openpyxl.styles.tests.test_fills.TestPatternFill" name="test_create[\n                                 &lt;fill&gt;\n                                 &lt;patternFill xmlns=&quot;http://schemas.openxmlformats.org/spreadsheetml/2006/main&quot; patternType=&quot;solid&quot;&gt;\n                                   &lt;fgColor theme=&quot;0&quot;/&gt;\n                                   &lt;bgColor indexed=&quot;64&quot;/&gt;\n                                 &lt;/patternFill&gt;\n                                 &lt;/fill&gt;\n                                 -args1]" time="0.029" /><testcase classname="openpyxl.styles.tests.test_fills.TestPatternFill" name="test_create[\n                                 &lt;fill&gt;\n                                 &lt;patternFill xmlns=&quot;http://schemas.openxmlformats.org/spreadsheetml/2006/main&quot; patternType=&quot;solid&quot;&gt;\n                                   &lt;fgColor indexed=&quot;62&quot;/&gt;\n                                   &lt;bgColor indexed=&quot;64&quot;/&gt;\n                                 &lt;/patternFill&gt;\n                                 &lt;/fill&gt;\n                                 -args2]" time="0.058" /><testcase classname="openpyxl.styles.tests.test_fills" name="test_create_empty_fill" time="0.008" /><testcase classname="openpyxl.styles.tests.test_fills.TestStop" name="test_ctor" time="0.018" /><testcase classname="openpyxl.styles.tests.test_fills.TestStop" name="test_from_xml" time="0.017" /><testcase classname="openpyxl.styles.tests.test_fills.TestStop" name="test_position_valid[0]" time="0.014" /><testcase classname="openpyxl.styles.tests.test_fills.TestStop" name="test_position_valid[0.5]" time="0.016" /><testcase classname="openpyxl.styles.tests.test_fills.TestStop" name="test_position_valid[1]" time="0.013" /><testcase classname="openpyxl.styles.tests.test_fills.TestStop" name="test_position_invalid[-0.1-ValueError]" time="0.012" /><testcase classname="openpyxl.styles.tests.test_fills.TestStop" name="test_position_invalid[1.1-ValueError]" time="0.012" /><testcase classname="openpyxl.styles.tests.test_fills.TestStop" name="test_position_invalid[None-TypeError]" time="0.015" /><testcase classname="openpyxl.styles.tests.test_fills" name="test_read_fills" time="0.024" /><testcase classname="openpyxl.styles.tests.test_fonts.TestFont" name="test_ctor" time="0.012" /><testcase classname="openpyxl.styles.tests.test_fonts.TestFont" name="test_serialise" time="0.023" /><testcase classname="openpyxl.styles.tests.test_fonts.TestFont" name="test_create" time="0.024" /><testcase classname="openpyxl.styles.tests.test_fonts.TestFont" name="test_nested_empty" time="0.019" /><testcase classname="openpyxl.styles.tests.test_named_style.TestNamedStyle" name="test_ctor" time="0.015" /><testcase classname="openpyxl.styles.tests.test_named_style.TestNamedStyle" name="test_dict" time="0.011" /><testcase classname="openpyxl.styles.tests.test_named_style.TestNamedStyle" name="test_bind" time="0.063" /><testcase classname="openpyxl.styles.tests.test_named_style.TestNamedStyle" name="test_as_tuple" time="0.013" /><testcase classname="openpyxl.styles.tests.test_named_style.TestNamedStyle" name="test_as_xf" time="0.017" /><testcase classname="openpyxl.styles.tests.test_named_style.TestNamedStyle" name="test_as_name" time="0.017" /><testcase classname="openpyxl.styles.tests.test_named_style.TestNamedStyle" name="test_recalculate[font-fontId-_fonts-0]" time="0.085" /><testcase classname="openpyxl.styles.tests.test_named_style.TestNamedStyle" name="test_recalculate[fill-fillId-_fills-0]" time="0.074" /><testcase classname="openpyxl.styles.tests.test_named_style.TestNamedStyle" name="test_recalculate[border-borderId-_borders-0]" time="0.071" /><testcase classname="openpyxl.styles.tests.test_named_style.TestNamedStyle" name="test_recalculate[alignment-alignmentId-_alignments-0]" time="0.093" /><testcase classname="openpyxl.styles.tests.test_named_style.TestNamedStyle" name="test_recalculate[protection-protectionId-_protections-0]" time="0.200" /><testcase classname="openpyxl.styles.tests.test_named_style.TestNamedStyle" name="test_recalculate[number_format-numFmtId-_number_formats-164]" time="0.073" /><testcase classname="openpyxl.styles.tests.test_named_style.TestNamedCellStyle" name="test_ctor" time="0.020" /><testcase classname="openpyxl.styles.tests.test_named_style.TestNamedCellStyle" name="test_from_xml" time="0.013" /><testcase classname="openpyxl.styles.tests.test_named_style.TestNamedCellStyleList" name="test_ctor" time="0.017" /><testcase classname="openpyxl.styles.tests.test_named_style.TestNamedCellStyleList" name="test_from_xml" time="0.013" /><testcase classname="openpyxl.styles.tests.test_named_style.TestNamedCellStyleList" name="test_styles" time="0.037" /><testcase classname="openpyxl.styles.tests.test_named_style.TestNamedStyleList" name="test_append_valid" time="0.015" /><testcase classname="openpyxl.styles.tests.test_named_style.TestNamedStyleList" name="test_append_invalid" time="0.013" /><testcase classname="openpyxl.styles.tests.test_named_style.TestNamedStyleList" name="test_duplicate" time="0.016" /><testcase classname="openpyxl.styles.tests.test_named_style.TestNamedStyleList" name="test_names" time="0.014" /><testcase classname="openpyxl.styles.tests.test_named_style.TestNamedStyleList" name="test_idx" time="0.018" /><testcase classname="openpyxl.styles.tests.test_named_style.TestNamedStyleList" name="test_key" time="0.021" /><testcase classname="openpyxl.styles.tests.test_named_style.TestNamedStyleList" name="test_key_error" time="0.013" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_builtin_format" time="0.017" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_number_descriptor" time="0.012" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_strip_quotes[&quot;Y: &quot;#.000&quot;m&quot;-#.000]" time="0.013" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_strip_quotes[[Red]-]" time="0.017" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_strip_quotes[[$-404]e&quot;\xfc&quot;m&quot;\xfc&quot;d&quot;\xfc&quot;-emd]" time="0.014" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_strip_quotes[#,##0\\ [$\u20bd-46D]-#,##0\\ ]" time="0.012" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_is_date_format[DD/MM/YY-True]" time="0.012" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_is_date_format[H:MM:SS;@-True]" time="0.016" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_is_date_format[#,##0\\ [$\u20bd-46D]-False0]" time="0.014" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_is_date_format[m&quot;M&quot;d&quot;D&quot;;@-True]" time="0.015" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_is_date_format[[h]:mm:ss-True]" time="0.013" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_is_date_format[&quot;Y: &quot;0.00&quot;m&quot;;&quot;Y: &quot;-0.00&quot;m&quot;;&quot;Y: &lt;num&gt;m&quot;;@-False]" time="0.012" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_is_date_format[#,##0\\ [$\u20bd-46D]-False1]" time="0.014" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_is_date_format[&quot;$&quot;#,##0_);[Red](&quot;$&quot;#,##0)-False]" time="0.013" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_is_date_format[[$-404]e&quot;\xfc&quot;m&quot;\xfc&quot;d&quot;\xfc&quot;-True]" time="0.013" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_is_date_format[0_ ;[Red]\\-0\\ -False]" time="0.013" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_is_date_format[\\Y000000-False]" time="0.014" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_is_date_format[#,##0.0####&quot; YMD&quot;-False]" time="0.014" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_is_date_format[[h]-True]" time="0.015" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_is_date_format[[ss]-True]" time="0.015" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_is_date_format[[s].000-True]" time="0.015" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_is_date_format[[m]-True]" time="0.012" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_is_date_format[[mm]-True]" time="0.015" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_is_date_format[[Blue]\\+[h]:mm;[Red]\\-[h]:mm;[Green][h]:mm-True]" time="0.014" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_is_date_format[[&gt;=100][Magenta][s].00-True]" time="0.014" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_is_date_format[[h]:mm;[=0]\\--True]" time="0.014" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_is_date_format[[&gt;=100][Magenta].00-False]" time="0.022" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_is_date_format[[&gt;=100][Magenta]General-False]" time="0.064" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_is_timedelta_format[m:ss-False]" time="0.015" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_is_timedelta_format[[h]-True]" time="0.039" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_is_timedelta_format[[hh]-True]" time="0.023" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_is_timedelta_format[[h]:mm:ss-True]" time="0.020" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_is_timedelta_format[[hh]:mm:ss-True]" time="0.014" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_is_timedelta_format[[h]:mm:ss.000-True]" time="0.019" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_is_timedelta_format[[hh]:mm:ss.0-True]" time="0.012" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_is_timedelta_format[[h]:mm-True]" time="0.013" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_is_timedelta_format[[hh]:mm-True]" time="0.017" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_is_timedelta_format[[m]:ss-True]" time="0.017" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_is_timedelta_format[[mm]:ss-True]" time="0.016" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_is_timedelta_format[[m]:ss.000-True]" time="0.015" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_is_timedelta_format[[mm]:ss.0-True]" time="0.015" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_is_timedelta_format[[s]-True]" time="0.016" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_is_timedelta_format[[ss]-True]" time="0.032" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_is_timedelta_format[[s].000-True]" time="0.023" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_is_timedelta_format[[ss].0-True]" time="0.049" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_is_timedelta_format[[m]-True]" time="0.021" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_is_timedelta_format[[mm]-True]" time="0.034" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_is_timedelta_format[h:mm-False]" time="0.016" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_is_timedelta_format[[Blue]\\+[h]:mm;[Red]\\-[h]:mm;[h]:mm-True]" time="0.055" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_is_timedelta_format[[Blue]\\+[h]:mm;[Red]\\-[h]:mm;[Green][h]:mm-True]" time="0.026" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_is_timedelta_format[[&gt;=100][Magenta][s].00-True]" time="0.028" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_is_timedelta_format[[h]:mm;[=0]\\--True]" time="0.018" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_is_timedelta_format[[&gt;=100][Magenta].00-False]" time="0.017" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_is_timedelta_format[[&gt;=100][Magenta]General-False]" time="0.030" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_datetime[yyyy-mm-dd h:mm:ss-datetime]" time="0.022" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_datetime[dd/mm/yy-date]" time="0.025" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_datetime[d-m-date0]" time="0.028" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_datetime[d-m-date1]" time="0.029" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_datetime[d/m/y-date]" time="0.022" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_datetime[m-y-date]" time="0.015" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_datetime[h:mm AM/PM-time]" time="0.016" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_datetime[h:mm:ss AM/PM-time]" time="0.020" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_datetime[h:mm-time]" time="0.021" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_datetime[h:mm:ss-time0]" time="0.019" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_datetime[mm:ss-time]" time="0.018" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_datetime[h:mm:ss-time1]" time="0.021" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_datetime[i:s.S-time]" time="0.014" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_datetime[h:mm:ss@-time]" time="0.017" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_datetime[[hh]:mm:ss-time]" time="0.015" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_datetime[mm-dd-yy-date]" time="0.018" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_datetime[d-mmm-yy-date]" time="0.015" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_datetime[d-mmm-date]" time="0.018" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_datetime[mmm-yy-date]" time="0.017" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_datetime[m/d/yy h:mm-datetime]" time="0.018" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_datetime[yy-mm-dd-date]" time="0.018" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_datetime[yy/mm/dd@-date]" time="0.014" /><testcase classname="openpyxl.styles.tests.test_number_style" name="test_datetime[yyyy-mm-dd-date]" time="0.017" /><testcase classname="openpyxl.styles.tests.test_protection" name="test_default" time="0.018" /><testcase classname="openpyxl.styles.tests.test_protection" name="test_round_trip" time="0.016" /><testcase classname="openpyxl.styles.tests.test_proxy" name="test_ctor" time="0.018" /><testcase classname="openpyxl.styles.tests.test_proxy" name="test_non_writable" time="0.020" /><testcase classname="openpyxl.styles.tests.test_proxy" name="test_repr" time="0.016" /><testcase classname="openpyxl.styles.tests.test_proxy" name="test_copy" time="0.019" /><testcase classname="openpyxl.styles.tests.test_proxy" name="test_add" time="0.019" /><testcase classname="openpyxl.styles.tests.test_styleable" name="test_descriptor" time="0.102" /><testcase classname="openpyxl.styles.tests.test_styleable" name="test_has_style" time="0.031" /><testcase classname="openpyxl.styles.tests.test_styleable.TestNamedStyle" name="test_assign_name" time="0.030" /><testcase classname="openpyxl.styles.tests.test_styleable.TestNamedStyle" name="test_assign_style" time="0.030" /><testcase classname="openpyxl.styles.tests.test_styleable.TestNamedStyle" name="test_unknown_style" time="0.024" /><testcase classname="openpyxl.styles.tests.test_styleable.TestNamedStyle" name="test_read" time="0.036" /><testcase classname="openpyxl.styles.tests.test_styleable.TestNamedStyle" name="test_builtin" time="0.041" /><testcase classname="openpyxl.styles.tests.test_styleable.TestNamedStyle" name="test_copy_not_share" time="0.031" /><testcase classname="openpyxl.styles.tests.test_styleable.TestNamedStyle" name="test_quote_prefix" time="0.026" /><testcase classname="openpyxl.styles.tests.test_styleable.TestNamedStyle" name="test_pivot_button" time="0.024" /><testcase classname="openpyxl.styles.tests.test_stylesheet.TestStylesheet" name="test_ctor" time="0.044" /><testcase classname="openpyxl.styles.tests.test_stylesheet.TestStylesheet" name="test_from_simple" time="0.091" /><testcase classname="openpyxl.styles.tests.test_stylesheet.TestStylesheet" name="test_from_complex" time="0.508" /><testcase classname="openpyxl.styles.tests.test_stylesheet.TestStylesheet" name="test_merge_named_styles" time="0.453" /><testcase classname="openpyxl.styles.tests.test_stylesheet.TestStylesheet" name="test_unprotected_cell" time="0.186" /><testcase classname="openpyxl.styles.tests.test_stylesheet.TestStylesheet" name="test_read_cell_style" time="0.082" /><testcase classname="openpyxl.styles.tests.test_stylesheet.TestStylesheet" name="test_read_xf_no_number_format" time="0.052" /><testcase classname="openpyxl.styles.tests.test_stylesheet.TestStylesheet" name="test_none_values" time="0.081" /><testcase classname="openpyxl.styles.tests.test_stylesheet.TestStylesheet" name="test_alignment" time="0.083" /><testcase classname="openpyxl.styles.tests.test_stylesheet.TestStylesheet" name="test_rgb_colors" time="4.182" /><testcase classname="openpyxl.styles.tests.test_stylesheet.TestStylesheet" name="test_custom_number_formats" time="0.182" /><testcase classname="openpyxl.styles.tests.test_stylesheet.TestStylesheet" name="test_remove_duplicate_number_formats" time="0.097" /><testcase classname="openpyxl.styles.tests.test_stylesheet.TestStylesheet" name="test_assign_number_formats" time="0.061" /><testcase classname="openpyxl.styles.tests.test_stylesheet.TestStylesheet" name="test_named_styles" time="0.377" /><testcase classname="openpyxl.styles.tests.test_stylesheet.TestStylesheet" name="test_split_named_styles" time="0.127" /><testcase classname="openpyxl.styles.tests.test_stylesheet" name="test_no_stylesheet" time="0.077" /><testcase classname="openpyxl.styles.tests.test_stylesheet" name="test_no_styles" time="0.105" /><testcase classname="openpyxl.styles.tests.test_stylesheet" name="test_write_worksheet" time="0.140" /><testcase classname="openpyxl.styles.tests.test_stylesheet" name="test_simple_styles" time="0.182" /><testcase classname="openpyxl.styles.tests.test_stylesheet" name="test_no_default_style" time="0.103" /><testcase classname="openpyxl.styles.tests.test_table.TestTableStyle" name="test_ctor" time="0.018" /><testcase classname="openpyxl.styles.tests.test_table.TestTableStyle" name="test_from_xml" time="0.017" /><testcase classname="openpyxl.styles.tests.test_table.TestTableStyleList" name="test_ctor" time="0.021" /><testcase classname="openpyxl.styles.tests.test_table.TestTableStyleList" name="test_from_xml" time="0.016" /><testcase classname="openpyxl.styles.tests.test_table.TestTableStyleElement" name="test_ctor" time="0.020" /><testcase classname="openpyxl.styles.tests.test_table.TestTableStyleElement" name="test_from_xml" time="0.018" /><testcase classname="openpyxl.tests.test_backend" name="test_backend" time="0.013" /><testcase classname="openpyxl.tests.test_backend" name="test_namespace_register" time="0.010" /><testcase classname="openpyxl.tests.test_iter" name="test_open_many_sheets" time="12.307" /><testcase classname="openpyxl.tests.test_iter" name="test_ctor[sheet2.xml-expected0]" time="0.049" /><testcase classname="openpyxl.tests.test_iter" name="test_ctor[sheet2_no_dimension.xml-expected1]" time="0.055" /><testcase classname="openpyxl.tests.test_iter" name="test_force_dimension" time="0.237" /><testcase classname="openpyxl.tests.test_iter" name="test_calculate_dimension" time="0.272" /><testcase classname="openpyxl.tests.test_iter" name="test_file_descriptor_leak" time="3.374" /><testcase classname="openpyxl.tests.test_iter" name="test_nonstandard_name" time="0.135" /><testcase classname="openpyxl.tests.test_iter" name="test_get_max_cell[sheet2.xml]" time="0.109" /><testcase classname="openpyxl.tests.test_iter" name="test_get_max_cell[sheet2_no_dimension.xml]" time="0.122" /><testcase classname="openpyxl.tests.test_iter.TestRead" name="test_get_missing_cell[False]" time="0.271" /><testcase classname="openpyxl.tests.test_iter.TestRead" name="test_get_missing_cell[True]" time="0.232" /><testcase classname="openpyxl.tests.test_iter.TestRead" name="test_getitem[False]" time="0.365" /><testcase classname="openpyxl.tests.test_iter.TestRead" name="test_getitem[True]" time="0.292" /><testcase classname="openpyxl.tests.test_iter.TestRead" name="test_max_row[False]" time="0.264" /><testcase classname="openpyxl.tests.test_iter.TestRead" name="test_max_row[True]" time="0.265" /><testcase classname="openpyxl.tests.test_iter.TestRead" name="test_max_column[False-Sheet1 - Text-7]" time="0.334" /><testcase classname="openpyxl.tests.test_iter.TestRead" name="test_max_column[False-Sheet2 - Numbers-27]" time="0.296" /><testcase classname="openpyxl.tests.test_iter.TestRead" name="test_max_column[False-Sheet3 - Formulas-4]" time="0.461" /><testcase classname="openpyxl.tests.test_iter.TestRead" name="test_max_column[False-Sheet4 - Dates-3]" time="0.288" /><testcase classname="openpyxl.tests.test_iter.TestRead" name="test_max_column[True-Sheet1 - Text-7]" time="0.194" /><testcase classname="openpyxl.tests.test_iter.TestRead" name="test_max_column[True-Sheet2 - Numbers-27]" time="0.209" /><testcase classname="openpyxl.tests.test_iter.TestRead" name="test_max_column[True-Sheet3 - Formulas-4]" time="0.257" /><testcase classname="openpyxl.tests.test_iter.TestRead" name="test_max_column[True-Sheet4 - Dates-3]" time="0.200" /><testcase classname="openpyxl.tests.test_iter.TestRead" name="test_read_fast_integrated_text[False]" time="0.374" /><testcase classname="openpyxl.tests.test_iter.TestRead" name="test_read_fast_integrated_text[True]" time="0.213" /><testcase classname="openpyxl.tests.test_iter.TestRead" name="test_read_single_cell_range[False]" time="0.283" /><testcase classname="openpyxl.tests.test_iter.TestRead" name="test_read_single_cell_range[True]" time="0.200" /><testcase classname="openpyxl.tests.test_iter.TestRead" name="test_read_single_cell[False]" time="0.344" /><testcase classname="openpyxl.tests.test_iter.TestRead" name="test_read_single_cell[True]" time="0.232" /><testcase classname="openpyxl.tests.test_iter.TestRead" name="test_read_fast_integrated_numbers[False]" time="2.405" /><testcase classname="openpyxl.tests.test_iter.TestRead" name="test_read_fast_integrated_numbers[True]" time="0.209" /><testcase classname="openpyxl.tests.test_iter.TestRead" name="test_read_fast_integrated_numbers_2[False]" time="0.777" /><testcase classname="openpyxl.tests.test_iter.TestRead" name="test_read_fast_integrated_numbers_2[True]" time="0.224" /><testcase classname="openpyxl.tests.test_iter.TestRead" name="test_read_single_cell_date[False-A1-value0]" time="0.345" /><testcase classname="openpyxl.tests.test_iter.TestRead" name="test_read_single_cell_date[False-C1-value1]" time="0.323" /><testcase classname="openpyxl.tests.test_iter.TestRead" name="test_read_single_cell_date[True-A1-value0]" time="0.166" /><testcase classname="openpyxl.tests.test_iter.TestRead" name="test_read_single_cell_date[True-C1-value1]" time="0.203" /><testcase classname="openpyxl.tests.test_iter.TestRead" name="test_read_boolean[False-G9-True]" time="0.364" /><testcase classname="openpyxl.tests.test_iter.TestRead" name="test_read_boolean[False-G10-False]" time="0.263" /><testcase classname="openpyxl.tests.test_iter.TestRead" name="test_read_boolean[True-G9-True]" time="0.259" /><testcase classname="openpyxl.tests.test_iter.TestRead" name="test_read_boolean[True-G10-False]" time="0.228" /><testcase classname="openpyxl.tests.test_iter" name="test_read_single_cell_formula[True-5]" time="0.279" /><testcase classname="openpyxl.tests.test_iter" name="test_read_single_cell_formula[False-='Sheet2 - Numbers'!D5]" time="0.191" /><testcase classname="openpyxl.tests.test_iter" name="test_read_style_iter" time="0.519" /><testcase classname="openpyxl.tests.test_iter" name="test_read_hyperlinks_read_only" time="0.030" /><testcase classname="openpyxl.tests.test_iter" name="test_read_with_missing_cells" time="0.035" /><testcase classname="openpyxl.tests.test_iter" name="test_read_empty_sheet[False]" time="0.292" /><testcase classname="openpyxl.tests.test_iter" name="test_read_empty_sheet[True]" time="0.121" /><testcase classname="openpyxl.tests.test_iter" name="test_read_mac_date[False]" time="0.312" /><testcase classname="openpyxl.tests.test_iter" name="test_read_mac_date[True]" time="0.222" /><testcase classname="openpyxl.tests.test_iter" name="test_read_empty_rows" time="0.034" /><testcase classname="openpyxl.tests.test_read" name="test_read_general_style[A1-General]" time="0.166" /><testcase classname="openpyxl.tests.test_read" name="test_read_general_style[A2-mm-dd-yy]" time="0.285" /><testcase classname="openpyxl.tests.test_read" name="test_read_general_style[A3-0.00]" time="0.185" /><testcase classname="openpyxl.tests.test_read" name="test_read_general_style[A4-h:mm]" time="0.347" /><testcase classname="openpyxl.tests.test_read" name="test_read_general_style[A5-0.00%]" time="0.211" /><testcase classname="openpyxl.tests.test_read" name="test_read_no_theme" time="0.217" /><testcase classname="openpyxl.tests.test_vba" name="test_content_types" time="0.782" /><testcase classname="openpyxl.tests.test_vba" name="test_save_with_vba" time="0.890" /><testcase classname="openpyxl.tests.test_vba" name="test_save_with_saved_comments" time="0.452" /><testcase classname="openpyxl.tests.test_vba" name="test_save_without_vba" time="0.556" /><testcase classname="openpyxl.tests.test_vba" name="test_save_same_file" time="0.690" /><testcase classname="openpyxl.utils.tests.test_bound_dictionary" name="test_ctor[None]" time="0.014" /><testcase classname="openpyxl.utils.tests.test_bound_dictionary" name="test_ctor[int]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_bound_dictionary" name="test_coupling" time="0.008" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_coordinates" time="0.005" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_invalid_coordinate[AAA]" time="0.009" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_invalid_coordinate[AQ0]" time="0.009" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_absolute[ZF51-$ZF$51]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_absolute[ZF51:ZF53-$ZF$51:$ZF$53]" time="0.011" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_absolute[A:G-$A:$G]" time="0.008" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_absolute[A-$A]" time="0.008" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_absolute[1-$1]" time="0.012" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_column_interval" time="0.007" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_column_index[j-10]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_column_index[Jj-270]" time="0.009" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_column_index[JJj-7030]" time="0.009" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_column_index[A-1]" time="0.009" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_column_index[Z-26]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_column_index[AA-27]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_column_index[AZ-52]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_column_index[BA-53]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_column_index[BZ-78]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_column_index[ZA-677]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_column_index[ZZ-702]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_column_index[AAA-703]" time="0.009" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_column_index[AAZ-728]" time="0.011" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_column_index[ABC-731]" time="0.008" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_column_index[AZA-1353]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_column_index[ZZA-18253]" time="0.009" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_column_index[ZZZ-18278]" time="0.009" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_bad_column_index[JJJJ]" time="0.008" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_bad_column_index[]" time="0.009" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_bad_column_index[$]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_bad_column_index[1]" time="0.011" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_column_letter_boundries[0]" time="0.009" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_column_letter_boundries[18729]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_column_letter[18278-ZZZ]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_column_letter[7030-JJJ]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_column_letter[28-AB]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_column_letter[27-AA]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_column_letter[26-Z]" time="0.009" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_coordinate_tuple" time="0.005" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_range_to_tuple[Sheet1!$A$1:$A$12-Sheet1-boundaries0]" time="0.013" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_range_to_tuple['My Sheet'!A1:E6-My Sheet-boundaries1]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_range_to_tuple['E,F'!$A$1:$B$3-E,F-boundaries2]" time="0.011" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_invalid_range" time="0.007" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_quote_sheetname[In Dusseldorf-'In Dusseldorf']" time="0.009" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_quote_sheetname[My-Sheet-'My-Sheet']" time="0.010" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_quote_sheetname[Demande d'autorisation-'Demande d''autorisation']" time="0.008" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_quote_sheetname[1sheet-'1sheet']" time="0.009" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_quote_sheetname[.sheet-'.sheet']" time="0.009" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_quote_sheetname[&quot;-'&quot;']" time="0.010" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_rows_from_range" time="0.009" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_cols_from_range" time="0.010" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_bounds[C1:C4-coords0]" time="0.012" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_bounds[C1-coords1]" time="0.011" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_bounds[D:F-coords2]" time="0.012" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_bounds[A-coords3]" time="0.009" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_bounds[1:10-coords4]" time="0.011" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_bounds[1-coords5]" time="0.009" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_invalid_bounds[:]" time="0.008" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_invalid_bounds[A:]" time="0.008" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_invalid_bounds[1:]" time="0.008" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_invalid_bounds[:B]" time="0.008" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_invalid_bounds[:2]" time="0.008" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_invalid_bounds[A1:]" time="0.008" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_invalid_bounds[:B2]" time="0.009" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_invalid_bounds[A:2]" time="0.008" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_invalid_bounds[1:B]" time="0.008" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_invalid_bounds[1:B2]" time="0.008" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_invalid_bounds[A:B2]" time="0.008" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_invalid_bounds[A1:2]" time="0.009" /><testcase classname="openpyxl.utils.tests.test_cell" name="test_invalid_bounds[A1:B]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_dataframe" name="test_dataframe" time="0.223" /><testcase classname="openpyxl.utils.tests.test_dataframe" name="test_dataframe_header" time="0.268" /><testcase classname="openpyxl.utils.tests.test_dataframe" name="test_dataframe_index" time="0.208" /><testcase classname="openpyxl.utils.tests.test_dataframe" name="test_dataframe_multiindex" time="0.121" /><testcase classname="openpyxl.utils.tests.test_dataframe" name="test_expand_index_vertically" time="0.108" /><testcase classname="openpyxl.utils.tests.test_dataframe" name="test_expand_levels_horizontally" time="0.192" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_to_iso[value0-2013-07-15T06:52:33]" time="0.011" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_to_iso[value1-2013-07-15T06:52:33.123]" time="0.009" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_to_iso[value2-2013-07-15]" time="0.009" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_to_iso[value3-00:01:42]" time="0.009" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_to_iso[value4-00:01:42.123]" time="0.012" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_iso_regex[2011-06-30-date-2011-06-30]" time="0.014" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_iso_regex[12:19-time-12:19]" time="0.014" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_iso_regex[12:19:01-time-12:19:01]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_iso_regex[12:19:01.123-time-12:19:01.123]" time="0.015" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_iso_regex[12:19:01.2-time-12:19:01.2]" time="0.014" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_from_iso[2011-06-30T13:35:26Z-expected0]" time="0.011" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_from_iso[2013-03-04T12:19:01.00Z-expected1]" time="0.013" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_from_iso[2011-06-30-expected2]" time="0.015" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_from_iso[12:19-expected3]" time="0.012" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_from_iso[12:19:01-expected4]" time="0.011" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_from_iso[12:19:01.123-expected5]" time="0.009" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_from_iso[12:19:01.2-expected6]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_from_iso[2020-12-03T12:19:01.300Z-expected7]" time="0.011" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_from_iso[2020-12-03T12:19:01.030-expected8]" time="0.011" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_from_iso[2020-12-03T12:19:01.003Z-expected9]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_from_iso[2020-12-03T12:19:01.3Z-expected10]" time="0.011" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_from_iso[2020-12-03T12:19:01.03-expected11]" time="0.011" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_from_iso[PT0M-expected12]" time="0.012" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_from_iso[PT2H0M1S-expected13]" time="0.009" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_from_iso[PT25H20M1.1S-expected14]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_from_iso[PT25H70M1.123S-expected15]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_to_excel[value0-0]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_to_excel[value1-1]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_to_excel[value2-15]" time="0.011" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_to_excel[value3-59]" time="0.009" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_to_excel[value4-59.875]" time="0.102" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_to_excel[value5-61]" time="0.009" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_to_excel[value6-40196.5939815]" time="0.008" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_to_excel[value7-40167]" time="0.013" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_to_excel[value8--143617.0]" time="0.011" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_to_excel[value9--693593]" time="0.011" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_to_excel[value10-0]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_to_excel[value11-0.25]" time="0.009" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_to_excel[value12-0.25]" time="0.009" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_to_excel[value13--0.25]" time="0.008" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_to_excel_mac[value0-0]" time="0.009" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_to_excel_mac[value1-39385]" time="0.014" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_to_excel_mac[value2-38734.5939815]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_to_excel_mac[value3-38705]" time="0.013" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_to_excel_mac[value4--145079.0]" time="0.013" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_to_excel_mac[value5--695055]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_to_excel_mac[value6-0]" time="0.011" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_to_excel_mac[value7-0.25]" time="0.011" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_to_excel_mac[value8-0.25]" time="0.011" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_to_excel_mac[value9--0.25]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_from_excel[40167-expected0]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_from_excel[21980-expected1]" time="0.011" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_from_excel[59-expected2]" time="0.011" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_from_excel[-25063-expected3]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_from_excel[59.875-expected4]" time="0.009" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_from_excel[60-expected5]" time="0.009" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_from_excel[60.5-expected6]" time="0.012" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_from_excel[61-expected7]" time="0.011" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_from_excel[40372.27616898148-expected8]" time="0.012" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_from_excel[40196.5939815-expected9]" time="0.012" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_from_excel[0.125-expected10]" time="0.011" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_from_excel[42126.95833333322-expected11]" time="0.030" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_from_excel[42126.99999999988-expected12]" time="0.014" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_from_excel[0-expected13]" time="0.015" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_from_excel[0.9999999995-expected14]" time="0.013" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_from_excel[1-expected15]" time="0.011" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_from_excel[-0.25-expected16]" time="0.014" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_from_excel[None-None]" time="0.008" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_from_excel_timedelta[0-expected0]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_from_excel_timedelta[0.5-expected1]" time="0.011" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_from_excel_timedelta[-0.5-expected2]" time="0.050" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_from_excel_timedelta[1.25-expected3]" time="0.009" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_from_excel_timedelta[-1.25-expected4]" time="0.009" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_from_excel_timedelta[0.0006944443-expected5]" time="0.009" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_from_excel_timedelta[-0.0006944443-expected6]" time="0.009" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_from_excel_timedelta[0.0006944328-expected7]" time="0.009" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_from_excel_timedelta[-0.0006944328-expected8]" time="0.009" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_from_excel_timedelta[59.5-expected9]" time="0.008" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_from_excel_timedelta[60.5-expected10]" time="0.008" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_from_excel_timedelta[61.5-expected11]" time="0.009" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_from_excel_timedelta[0.9999999995-expected12]" time="0.012" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_from_excel_timedelta[1.0000000005-expected13]" time="0.012" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_from_excel_timedelta[1.0000026378-expected14]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_from_excel_timedelta[None-None]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_from_excel_mac[39385-expected0]" time="0.013" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_from_excel_mac[21980-expected1]" time="0.011" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_from_excel_mac[0-expected2]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_from_excel_mac[-25063-expected3]" time="0.012" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_from_excel_mac[0.75-expected4]" time="0.009" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_from_excel_mac[-0.25-expected5]" time="0.011" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_time_to_days[value0-0.5800000004166667]" time="0.008" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_time_to_days[value1-0.125]" time="0.011" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_time_to_days[value2-0.5800000004166667]" time="0.012" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_time_to_days[value3-0.125]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_timedelta_to_days" time="0.006" /><testcase classname="openpyxl.utils.tests.test_datetime" name="test_days_to_time" time="0.006" /><testcase classname="openpyxl.utils.tests.test_escape" name="test_escape" time="0.006" /><testcase classname="openpyxl.utils.tests.test_escape" name="test_unescape" time="0.007" /><testcase classname="openpyxl.utils.tests.test_indexed_list" name="test_ctor" time="0.008" /><testcase classname="openpyxl.utils.tests.test_indexed_list" name="test_allow_duplicate_ctor" time="0.009" /><testcase classname="openpyxl.utils.tests.test_indexed_list" name="test_function" time="0.008" /><testcase classname="openpyxl.utils.tests.test_indexed_list" name="test_contains" time="0.009" /><testcase classname="openpyxl.utils.tests.test_indexed_list" name="test_index" time="0.009" /><testcase classname="openpyxl.utils.tests.test_indexed_list" name="test_table_builder" time="0.009" /><testcase classname="openpyxl.utils.tests.test_inference" name="test_cast_numeric[4.2-4.2]" time="0.009" /><testcase classname="openpyxl.utils.tests.test_inference" name="test_cast_numeric[-42.000--42]" time="0.009" /><testcase classname="openpyxl.utils.tests.test_inference" name="test_cast_numeric[0-0]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_inference" name="test_cast_numeric[0.9999-0.9999]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_inference" name="test_cast_numeric[99E-02-0.99]" time="0.012" /><testcase classname="openpyxl.utils.tests.test_inference" name="test_cast_numeric[4-4]" time="0.009" /><testcase classname="openpyxl.utils.tests.test_inference" name="test_cast_numeric[-1E3--1000]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_inference" name="test_cast_numeric[2e+2-200]" time="0.011" /><testcase classname="openpyxl.utils.tests.test_inference" name="test_cast_percent[-3.1%--0.031]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_inference" name="test_cast_percent[3.1%-0.031]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_inference" name="test_cast_percent[4.5 %-0.045]" time="0.011" /><testcase classname="openpyxl.utils.tests.test_inference" name="test_infer_datetime[03:40:16-expected0]" time="0.015" /><testcase classname="openpyxl.utils.tests.test_inference" name="test_infer_datetime[03:40-expected1]" time="0.014" /><testcase classname="openpyxl.utils.tests.test_inference" name="test_infer_datetime[30:33.865633336-expected2]" time="0.013" /><testcase classname="openpyxl.utils.tests.test_inference" name="test_time_regex[30:33.865633336-expected0]" time="0.013" /><testcase classname="openpyxl.utils.tests.test_inference" name="test_time_regex[03:40:16-expected1]" time="0.012" /><testcase classname="openpyxl.utils.tests.test_inference" name="test_time_regex[03:40-expected2]" time="0.011" /><testcase classname="openpyxl.utils.tests.test_inference" name="test_time_regex[55:72:12-expected3]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_protection" name="test_password" time="0.006" /><testcase classname="openpyxl.utils.tests.test_units" name="test_dxa_to_inch[-120--0.08333333333333334]" time="0.009" /><testcase classname="openpyxl.utils.tests.test_units" name="test_dxa_to_inch[0-0]" time="0.009" /><testcase classname="openpyxl.utils.tests.test_units" name="test_dxa_to_inch[240-0.16666666666666669]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_units" name="test_dxa_to_inch[1440-1]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_units" name="test_dxa_to_inch[5000-3.4722222222222223]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_units" name="test_inch_to_dxa[-10--14400]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_units" name="test_inch_to_dxa[0-0]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_units" name="test_inch_to_dxa[1-1440]" time="0.011" /><testcase classname="openpyxl.utils.tests.test_units" name="test_inch_to_dxa[2.37-3412]" time="0.011" /><testcase classname="openpyxl.utils.tests.test_units" name="test_inch_to_dxa[9-12960]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_units" name="test_dxa_to_cm[-120--0.2116666666666667]" time="0.011" /><testcase classname="openpyxl.utils.tests.test_units" name="test_dxa_to_cm[0-0]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_units" name="test_dxa_to_cm[240-0.4233333333333334]" time="0.009" /><testcase classname="openpyxl.utils.tests.test_units" name="test_dxa_to_cm[1440-2.54]" time="0.008" /><testcase classname="openpyxl.utils.tests.test_units" name="test_dxa_to_cm[5000-8.819444444444445]" time="0.008" /><testcase classname="openpyxl.utils.tests.test_units" name="test_cm_to_dxa[-10--5669]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_units" name="test_cm_to_dxa[0-0]" time="0.009" /><testcase classname="openpyxl.utils.tests.test_units" name="test_cm_to_dxa[1-566]" time="0.009" /><testcase classname="openpyxl.utils.tests.test_units" name="test_cm_to_dxa[10.0-5669]" time="0.008" /><testcase classname="openpyxl.utils.tests.test_units" name="test_cm_to_dxa[1000-566929]" time="0.008" /><testcase classname="openpyxl.utils.tests.test_units" name="test_pixels_to_EMU[-10--95250]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_units" name="test_pixels_to_EMU[0-0]" time="0.011" /><testcase classname="openpyxl.utils.tests.test_units" name="test_pixels_to_EMU[1-9525]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_units" name="test_pixels_to_EMU[10.0-95250]" time="0.009" /><testcase classname="openpyxl.utils.tests.test_units" name="test_pixels_to_EMU[1000-9525000]" time="0.011" /><testcase classname="openpyxl.utils.tests.test_units" name="test_EMU_to_pixels[0-0]" time="0.011" /><testcase classname="openpyxl.utils.tests.test_units" name="test_EMU_to_pixels[1000-0]" time="0.009" /><testcase classname="openpyxl.utils.tests.test_units" name="test_EMU_to_pixels[5000-1]" time="0.032" /><testcase classname="openpyxl.utils.tests.test_units" name="test_EMU_to_pixels[9525-1]" time="0.011" /><testcase classname="openpyxl.utils.tests.test_units" name="test_EMU_to_cm[-100000--0.2778]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_units" name="test_EMU_to_cm[0-0]" time="0.011" /><testcase classname="openpyxl.utils.tests.test_units" name="test_EMU_to_cm[200000-0.5556]" time="0.009" /><testcase classname="openpyxl.utils.tests.test_units" name="test_EMU_to_cm[360000-1]" time="0.012" /><testcase classname="openpyxl.utils.tests.test_units" name="test_EMU_to_cm[500000-1.3889]" time="0.011" /><testcase classname="openpyxl.utils.tests.test_units" name="test_cm_to_EMU[-10--3600000]" time="0.009" /><testcase classname="openpyxl.utils.tests.test_units" name="test_cm_to_EMU[0-0]" time="0.008" /><testcase classname="openpyxl.utils.tests.test_units" name="test_cm_to_EMU[1-360000]" time="0.007" /><testcase classname="openpyxl.utils.tests.test_units" name="test_cm_to_EMU[3.23-1162800]" time="0.008" /><testcase classname="openpyxl.utils.tests.test_units" name="test_EMU_to_inch[-100000--0.1094]" time="0.008" /><testcase classname="openpyxl.utils.tests.test_units" name="test_EMU_to_inch[0-0]" time="0.008" /><testcase classname="openpyxl.utils.tests.test_units" name="test_EMU_to_inch[200000-0.2187]" time="0.009" /><testcase classname="openpyxl.utils.tests.test_units" name="test_EMU_to_inch[914400-1]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_units" name="test_EMU_to_inch[500000-0.5468]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_units" name="test_inch_to_EMU[-10--9144000]" time="0.009" /><testcase classname="openpyxl.utils.tests.test_units" name="test_inch_to_EMU[0-0]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_units" name="test_inch_to_EMU[1-914400]" time="0.016" /><testcase classname="openpyxl.utils.tests.test_units" name="test_inch_to_EMU[3.23-2953512]" time="0.011" /><testcase classname="openpyxl.utils.tests.test_units" name="test_pixels_to_points[-10--7.5]" time="0.011" /><testcase classname="openpyxl.utils.tests.test_units" name="test_pixels_to_points[0-0]" time="0.009" /><testcase classname="openpyxl.utils.tests.test_units" name="test_pixels_to_points[1-0.75]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_units" name="test_pixels_to_points[96-72]" time="0.011" /><testcase classname="openpyxl.utils.tests.test_units" name="test_pixels_to_points[144-108]" time="0.010" /><testcase classname="openpyxl.utils.tests.test_units" name="test_points_to_pixels[-10--13]" time="0.009" /><testcase classname="openpyxl.utils.tests.test_units" name="test_points_to_pixels[0-0]" time="0.012" /><testcase classname="openpyxl.utils.tests.test_units" name="test_points_to_pixels[1-2]" time="0.012" /><testcase classname="openpyxl.utils.tests.test_units" name="test_points_to_pixels[10.0-14]" time="0.011" /><testcase classname="openpyxl.utils.tests.test_units" name="test_points_to_pixels[72-96]" time="0.011" /><testcase classname="openpyxl.utils.tests.test_units" name="test_degrees_to_angle[-10--600000]" time="0.012" /><testcase classname="openpyxl.utils.tests.test_units" name="test_degrees_to_angle[0-0]" time="0.011" /><testcase classname="openpyxl.utils.tests.test_units" name="test_degrees_to_angle[1-60000]" time="0.009" /><testcase classname="openpyxl.utils.tests.test_units" name="test_degrees_to_angle[10.0-600000]" time="0.009" /><testcase classname="openpyxl.utils.tests.test_units" name="test_degrees_to_angle[1000-60000000]" time="0.008" /><testcase classname="openpyxl.utils.tests.test_units" name="test_angle_to_degrees[-10-0]" time="0.008" /><testcase classname="openpyxl.utils.tests.test_units" name="test_angle_to_degrees[0-0]" time="0.007" /><testcase classname="openpyxl.utils.tests.test_units" name="test_angle_to_degrees[10-0]" time="0.009" /><testcase classname="openpyxl.utils.tests.test_units" name="test_angle_to_degrees[50000-0.83]" time="0.009" /><testcase classname="openpyxl.utils.tests.test_units" name="test_angle_to_degrees[60000-1]" time="0.009" /><testcase classname="openpyxl.utils.tests.test_units" name="test_short_color[#FFFFF-#FFFFF]" time="0.029" /><testcase classname="openpyxl.utils.tests.test_units" name="test_short_color[FF000000-000000]" time="0.008" /><testcase classname="openpyxl.utils.tests.test_units" name="test_short_color[FFFF0000-FF0000]" time="0.008" /><testcase classname="openpyxl.utils.tests.test_units" name="test_short_color[FF800000-800000]" time="0.008" /><testcase classname="openpyxl.utils.tests.test_units" name="test_short_color[FFFFFF00-FFFF00]" time="0.008" /><testcase classname="openpyxl.utils.tests.test_units" name="test_short_color[FF808000-808000]" time="0.008" /><testcase classname="openpyxl.workbook.external_link.tests.test_external.TestExternalCell" name="test_read" time="0.012" /><testcase classname="openpyxl.workbook.external_link.tests.test_external.TestExternalLink" name="test_ctor" time="0.009" /><testcase classname="openpyxl.workbook.external_link.tests.test_external.TestExternalLink" name="test_write" time="0.012" /><testcase classname="openpyxl.workbook.external_link.tests.test_external.TestExternalLink" name="test_path" time="0.007" /><testcase classname="openpyxl.workbook.external_link.tests.test_external.TestExternalBook" name="test_ctor" time="0.033" /><testcase classname="openpyxl.workbook.external_link.tests.test_external.TestExternalBook" name="test_read" time="0.014" /><testcase classname="openpyxl.workbook.external_link.tests.test_external" name="test_read_ole_link" time="0.012" /><testcase classname="openpyxl.workbook.external_link.tests.test_external" name="test_read_external_link" time="0.054" /><testcase classname="openpyxl.workbook.external_link.tests.test_external" name="test_write_workbook" time="0.642" /><testcase classname="openpyxl.workbook.tests.test_child" name="test_invalid_chars[Title:]" time="0.012" /><testcase classname="openpyxl.workbook.tests.test_child" name="test_invalid_chars[title?]" time="0.010" /><testcase classname="openpyxl.workbook.tests.test_child" name="test_invalid_chars[title/]" time="0.009" /><testcase classname="openpyxl.workbook.tests.test_child" name="test_invalid_chars[title[]" time="0.009" /><testcase classname="openpyxl.workbook.tests.test_child" name="test_invalid_chars[title]]" time="0.008" /><testcase classname="openpyxl.workbook.tests.test_child" name="test_invalid_chars[title\\\\]" time="0.008" /><testcase classname="openpyxl.workbook.tests.test_child" name="test_invalid_chars[title*]" time="0.008" /><testcase classname="openpyxl.workbook.tests.test_child" name="test_duplicate_title[names0-Sheet-Sheet]" time="0.011" /><testcase classname="openpyxl.workbook.tests.test_child" name="test_duplicate_title[names1-Sheet2-Sheet21]" time="0.013" /><testcase classname="openpyxl.workbook.tests.test_child" name="test_duplicate_title[names2-R\xf3g-R\xf3g1]" time="0.013" /><testcase classname="openpyxl.workbook.tests.test_child" name="test_duplicate_title[names3-Sheet-Sheet2]" time="0.016" /><testcase classname="openpyxl.workbook.tests.test_child" name="test_duplicate_title[names4-Regex Test (-Regex Test (1]" time="0.033" /><testcase classname="openpyxl.workbook.tests.test_child" name="test_duplicate_title[names5-Sheet-Sheet]" time="0.010" /><testcase classname="openpyxl.workbook.tests.test_child" name="test_duplicate_title[names6-FOO-FOO1]" time="0.017" /><testcase classname="openpyxl.workbook.tests.test_child.TestWorkbookChild" name="test_ctor" time="0.016" /><testcase classname="openpyxl.workbook.tests.test_child.TestWorkbookChild" name="test_repr" time="0.012" /><testcase classname="openpyxl.workbook.tests.test_child.TestWorkbookChild" name="test_invalid_title" time="0.023" /><testcase classname="openpyxl.workbook.tests.test_child.TestWorkbookChild" name="test_reassign_title" time="0.009" /><testcase classname="openpyxl.workbook.tests.test_child.TestWorkbookChild" name="test_title_too_long" time="0.032" /><testcase classname="openpyxl.workbook.tests.test_child.TestWorkbookChild" name="test_set_encoded_title" time="0.011" /><testcase classname="openpyxl.workbook.tests.test_child.TestWorkbookChild" name="test_empty_title" time="0.011" /><testcase classname="openpyxl.workbook.tests.test_defined_name" name="test_reserved[_xlnm.Print_Area-True]" time="0.009" /><testcase classname="openpyxl.workbook.tests.test_defined_name" name="test_reserved[_xlnm.Print_Titles-True]" time="0.010" /><testcase classname="openpyxl.workbook.tests.test_defined_name" name="test_reserved[_xlnm.Criteria-True]" time="0.007" /><testcase classname="openpyxl.workbook.tests.test_defined_name" name="test_reserved[_xlnm._FilterDatabase-True]" time="0.007" /><testcase classname="openpyxl.workbook.tests.test_defined_name" name="test_reserved[_xlnm.Extract-True]" time="0.008" /><testcase classname="openpyxl.workbook.tests.test_defined_name" name="test_reserved[_xlnm.Consolidate_Area-True]" time="0.007" /><testcase classname="openpyxl.workbook.tests.test_defined_name" name="test_reserved[_xlnm.Sheet_Title-True]" time="0.009" /><testcase classname="openpyxl.workbook.tests.test_defined_name" name="test_reserved[_xlnm.Pi-False]" time="0.007" /><testcase classname="openpyxl.workbook.tests.test_defined_name" name="test_reserved[Pi-False]" time="0.007" /><testcase classname="openpyxl.workbook.tests.test_defined_name" name="test_print_rows[CD:DE-CD:DE]" time="0.009" /><testcase classname="openpyxl.workbook.tests.test_defined_name" name="test_print_rows[$CD:$DE-$CD:$DE]" time="0.008" /><testcase classname="openpyxl.workbook.tests.test_defined_name" name="test_print_cols[1:1-1:1]" time="0.009" /><testcase classname="openpyxl.workbook.tests.test_defined_name" name="test_print_cols[$2:$5-$2:$5]" time="0.008" /><testcase classname="openpyxl.workbook.tests.test_defined_name" name="test_print_titles[Sheet!$1:$1-expected0]" time="0.008" /><testcase classname="openpyxl.workbook.tests.test_defined_name" name="test_print_titles[Sheet!$1:$1,C:D-expected1]" time="0.008" /><testcase classname="openpyxl.workbook.tests.test_defined_name" name="test_print_titles['Blatt5'!$C:$D-expected2]" time="0.009" /><testcase classname="openpyxl.workbook.tests.test_defined_name" name="test_print_titles['Sheet 1'!$A:$A,'Sheet 1'!$1:$1-expected3]" time="0.013" /><testcase classname="openpyxl.workbook.tests.test_defined_name" name="test_unpack_print_titles[Sheet1!$1:$2,$A:$A-expected0]" time="0.014" /><testcase classname="openpyxl.workbook.tests.test_defined_name" name="test_unpack_print_titles['Sheet 1'!$A:$A,'Sheet 1'!$1:$1-expected1]" time="0.044" /><testcase classname="openpyxl.workbook.tests.test_defined_name" name="test_unpack_print_area[Sheet1!$A$1:$E$15-expected0]" time="0.015" /><testcase classname="openpyxl.workbook.tests.test_defined_name" name="test_unpack_print_area['Blatt1'!$A$1:$F$14,'Blatt1'!$H$10:$I$17,Blatt1!$I$16:$K$25-expected1]" time="0.013" /><testcase classname="openpyxl.workbook.tests.test_defined_name" name="test_unpack_print_area[MySheet!#REF!-expected2]" time="0.013" /><testcase classname="openpyxl.workbook.tests.test_defined_name" name="test_unpack_print_area['C,D'!$A$1:$B$3-expected3]" time="0.013" /><testcase classname="openpyxl.workbook.tests.test_defined_name" name="test_unpack_print_area[Sheet!$A$1:$D$5,Sheet!$B$9:$F$14-expected4]" time="0.012" /><testcase classname="openpyxl.workbook.tests.test_defined_name.TestDefinition" name="test_write" time="0.016" /><testcase classname="openpyxl.workbook.tests.test_defined_name.TestDefinition" name="test_from_xml[&lt;definedName name=&quot;B1namedrange&quot;&gt;Sheet1!$A$1&lt;/definedName&gt;-B1namedrange-Sheet1!$A$1-RANGE]" time="0.016" /><testcase classname="openpyxl.workbook.tests.test_defined_name.TestDefinition" name="test_from_xml[&lt;definedName name=&quot;references_external_workbook&quot;&gt;[1]Sheet1!$A$1&lt;/definedName&gt;-references_external_workbook-[1]Sheet1!$A$1-RANGE]" time="0.015" /><testcase classname="openpyxl.workbook.tests.test_defined_name.TestDefinition" name="test_from_xml[&lt;definedName name=&quot;references_nr_in_ext_wb&quot;&gt;[1]!B2range&lt;/definedName&gt;-references_nr_in_ext_wb-[1]!B2range-RANGE]" time="0.013" /><testcase classname="openpyxl.workbook.tests.test_defined_name.TestDefinition" name="test_from_xml[&lt;definedName name=&quot;references_other_named_range&quot;&gt;B1namedrange&lt;/definedName&gt;-references_other_named_range-B1namedrange-RANGE]" time="0.013" /><testcase classname="openpyxl.workbook.tests.test_defined_name.TestDefinition" name="test_from_xml[&lt;definedName name=&quot;pi&quot;&gt;3.14&lt;/definedName&gt;-pi-3.14-NUMBER]" time="0.014" /><testcase classname="openpyxl.workbook.tests.test_defined_name.TestDefinition" name="test_from_xml[&lt;definedName name=&quot;name&quot;&gt;&quot;charlie&quot;&lt;/definedName&gt;-name-&quot;charlie&quot;-TEXT]" time="0.021" /><testcase classname="openpyxl.workbook.tests.test_defined_name.TestDefinition" name="test_from_xml[&lt;definedName name=&quot;THE_GREAT_ANSWER&quot;&gt;'My Sheeet with a , and '''!$U$16:$U$24,'My Sheeet with a , and '''!$V$28:$V$36&lt;/definedName&gt;-THE_GREAT_ANSWER-'My Sheeet with a , and '''!$U$16:$U$24,'My Sheeet with a , and '''!$V$28:$V$36-RANGE]" time="0.019" /><testcase classname="openpyxl.workbook.tests.test_defined_name.TestDefinition" name="test_destinations[Sheet1!$C$5:$C$7,Sheet1!$C$9:$C$11,Sheet1!$E$5:$E$7-destinations0]" time="0.016" /><testcase classname="openpyxl.workbook.tests.test_defined_name.TestDefinition" name="test_destinations['Sheet 1'!$A$1-destinations1]" time="0.011" /><testcase classname="openpyxl.workbook.tests.test_defined_name.TestDefinition" name="test_dict[some_range-expected0]" time="0.011" /><testcase classname="openpyxl.workbook.tests.test_defined_name.TestDefinition" name="test_dict[Print_Titles-expected1]" time="0.010" /><testcase classname="openpyxl.workbook.tests.test_defined_name.TestDefinition" name="test_check_type['My Sheet'!$D$8-RANGE]" time="0.014" /><testcase classname="openpyxl.workbook.tests.test_defined_name.TestDefinition" name="test_check_type[Sheet1!$A$1-RANGE]" time="0.010" /><testcase classname="openpyxl.workbook.tests.test_defined_name.TestDefinition" name="test_check_type[[1]Sheet1!$A$1-RANGE]" time="0.010" /><testcase classname="openpyxl.workbook.tests.test_defined_name.TestDefinition" name="test_check_type[[1]!B2range-RANGE]" time="0.010" /><testcase classname="openpyxl.workbook.tests.test_defined_name.TestDefinition" name="test_check_type[OFFSET(MODEL!$A$1,'Stock Graphs'!$D$3-1,'Stock Graphs'!$C$25+5,'Stock Graphs'!$D$6,1)/1.65-FUNC]" time="0.013" /><testcase classname="openpyxl.workbook.tests.test_defined_name.TestDefinition" name="test_check_type[B1namedrange-RANGE]" time="0.011" /><testcase classname="openpyxl.workbook.tests.test_defined_name.TestDefinition" name="test_external_range['My Sheet'!$D$8-False]" time="0.015" /><testcase classname="openpyxl.workbook.tests.test_defined_name.TestDefinition" name="test_external_range[Sheet1!$A$1-False]" time="0.020" /><testcase classname="openpyxl.workbook.tests.test_defined_name.TestDefinition" name="test_external_range[[1]Sheet1!$A$1-True]" time="0.009" /><testcase classname="openpyxl.workbook.tests.test_defined_name.TestDefinition" name="test_external_range[[1]!B2range-True]" time="0.009" /><testcase classname="openpyxl.workbook.tests.test_defined_name.TestDefinitionList" name="test_read" time="0.062" /><testcase classname="openpyxl.workbook.tests.test_defined_name.TestDefinitionList" name="test_append" time="0.013" /><testcase classname="openpyxl.workbook.tests.test_defined_name.TestDefinitionList" name="test_append_only" time="0.013" /><testcase classname="openpyxl.workbook.tests.test_defined_name.TestDefinitionList" name="test_contains" time="0.011" /><testcase classname="openpyxl.workbook.tests.test_defined_name.TestDefinitionList" name="test_duplicate[None]" time="0.013" /><testcase classname="openpyxl.workbook.tests.test_defined_name.TestDefinitionList" name="test_duplicate[0]" time="0.012" /><testcase classname="openpyxl.workbook.tests.test_defined_name.TestDefinitionList" name="test_cleanup" time="0.023" /><testcase classname="openpyxl.workbook.tests.test_defined_name.TestDefinitionList" name="test_localnames" time="0.025" /><testcase classname="openpyxl.workbook.tests.test_defined_name.TestDefinitionList" name="test_get[MySheetValue-None-False]" time="0.028" /><testcase classname="openpyxl.workbook.tests.test_defined_name.TestDefinitionList" name="test_get[MySheetValue-0-True]" time="0.029" /><testcase classname="openpyxl.workbook.tests.test_defined_name.TestDefinitionList" name="test_get[MySheetValue-1-True]" time="0.024" /><testcase classname="openpyxl.workbook.tests.test_external_reference.TestExternalReference" name="test_ctor" time="0.016" /><testcase classname="openpyxl.workbook.tests.test_external_reference.TestExternalReference" name="test_from_xml" time="0.012" /><testcase classname="openpyxl.workbook.tests.test_function_group.TestFunctionGroup" name="test_ctor" time="0.015" /><testcase classname="openpyxl.workbook.tests.test_function_group.TestFunctionGroup" name="test_from_xml" time="0.014" /><testcase classname="openpyxl.workbook.tests.test_function_group.TestFunctionGroupList" name="test_ctor" time="0.014" /><testcase classname="openpyxl.workbook.tests.test_function_group.TestFunctionGroupList" name="test_from_xml" time="0.012" /><testcase classname="openpyxl.workbook.tests.test_properties.TestWorkbookProperties" name="test_ctor" time="0.015" /><testcase classname="openpyxl.workbook.tests.test_properties.TestWorkbookProperties" name="test_from_xml" time="0.014" /><testcase classname="openpyxl.workbook.tests.test_properties.TestCalcProperties" name="test_ctor" time="0.017" /><testcase classname="openpyxl.workbook.tests.test_properties.TestCalcProperties" name="test_from_xml" time="0.013" /><testcase classname="openpyxl.workbook.tests.test_properties.TestFileVersion" name="test_ctor" time="0.014" /><testcase classname="openpyxl.workbook.tests.test_properties.TestFileVersion" name="test_from_xml" time="0.011" /><testcase classname="openpyxl.workbook.tests.test_protection.TestWorkbookProtection" name="test_ctor" time="0.014" /><testcase classname="openpyxl.workbook.tests.test_protection.TestWorkbookProtection" name="test_ctor_with_passwords" time="0.010" /><testcase classname="openpyxl.workbook.tests.test_protection.TestWorkbookProtection" name="test_from_xml" time="0.018" /><testcase classname="openpyxl.workbook.tests.test_protection.TestFileSharing" name="test_ctor" time="0.073" /><testcase classname="openpyxl.workbook.tests.test_protection.TestFileSharing" name="test_from_xml" time="0.011" /><testcase classname="openpyxl.workbook.tests.test_smart_tags.TestSmartTag" name="test_ctor" time="0.015" /><testcase classname="openpyxl.workbook.tests.test_smart_tags.TestSmartTag" name="test_from_xml" time="0.010" /><testcase classname="openpyxl.workbook.tests.test_smart_tags.TestSmartTagList" name="test_ctor" time="0.013" /><testcase classname="openpyxl.workbook.tests.test_smart_tags.TestSmartTagList" name="test_from_xml" time="0.012" /><testcase classname="openpyxl.workbook.tests.test_smart_tags.TestSmartTagProperties" name="test_ctor" time="0.015" /><testcase classname="openpyxl.workbook.tests.test_smart_tags.TestSmartTagProperties" name="test_from_xml" time="0.014" /><testcase classname="openpyxl.workbook.tests.test_views.TestBookView" name="test_ctor" time="0.022" /><testcase classname="openpyxl.workbook.tests.test_views.TestBookView" name="test_from_xml" time="0.014" /><testcase classname="openpyxl.workbook.tests.test_views.TestCustomWorkbookView" name="test_ctor" time="0.024" /><testcase classname="openpyxl.workbook.tests.test_views.TestCustomWorkbookView" name="test_from_xml" time="0.025" /><testcase classname="openpyxl.workbook.tests.test_web.TestWebPublishObject" name="test_ctor" time="0.016" /><testcase classname="openpyxl.workbook.tests.test_web.TestWebPublishObject" name="test_from_xml" time="0.012" /><testcase classname="openpyxl.workbook.tests.test_web.TestWebPublishObjectList" name="test_ctor" time="0.014" /><testcase classname="openpyxl.workbook.tests.test_web.TestWebPublishObjectList" name="test_from_xml" time="0.012" /><testcase classname="openpyxl.workbook.tests.test_web.TestWebPublishing" name="test_ctor" time="0.014" /><testcase classname="openpyxl.workbook.tests.test_web.TestWebPublishing" name="test_from_xml" time="0.013" /><testcase classname="openpyxl.workbook.tests.test_workbook.TestWorkbook" name="test_template[None-False-application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml]" time="0.042" /><testcase classname="openpyxl.workbook.tests.test_workbook.TestWorkbook" name="test_template[None-True-application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml]" time="0.064" /><testcase classname="openpyxl.workbook.tests.test_workbook.TestWorkbook" name="test_template[True-False-application/vnd.ms-excel.sheet.macroEnabled.main+xml]" time="0.120" /><testcase classname="openpyxl.workbook.tests.test_workbook.TestWorkbook" name="test_template[True-True-application/vnd.ms-excel.template.macroEnabled.main+xml]" time="0.068" /><testcase classname="openpyxl.workbook.tests.test_workbook.TestWorkbook" name="test_named_styles" time="0.039" /><testcase classname="openpyxl.workbook.tests.test_workbook.TestWorkbook" name="test_immutable_builtins" time="0.072" /><testcase classname="openpyxl.workbook.tests.test_workbook.TestWorkbook" name="test_duplicate_table_name" time="0.050" /><testcase classname="openpyxl.workbook.tests.test_workbook.TestWorkbook" name="test_duplicate_defined_name" time="0.047" /><testcase classname="openpyxl.workbook.tests.test_workbook" name="test_get_active_sheet" time="0.045" /><testcase classname="openpyxl.workbook.tests.test_workbook" name="test_set_active_by_sheet" time="0.063" /><testcase classname="openpyxl.workbook.tests.test_workbook" name="test_set_active_by_index" time="0.153" /><testcase classname="openpyxl.workbook.tests.test_workbook" name="test_set_invalid_active_index" time="0.056"><skipped type="pytest.xfail" message="" /></testcase><testcase classname="openpyxl.workbook.tests.test_workbook" name="test_set_invalid_sheet_by_name" time="0.045" /><testcase classname="openpyxl.workbook.tests.test_workbook" name="test_set_invalid_child_as_active" time="0.092" /><testcase classname="openpyxl.workbook.tests.test_workbook" name="test_set_hidden_sheet_as_active" time="0.055" /><testcase classname="openpyxl.workbook.tests.test_workbook" name="test_no_active" time="0.033" /><testcase classname="openpyxl.workbook.tests.test_workbook" name="test_create_sheet" time="0.068" /><testcase classname="openpyxl.workbook.tests.test_workbook" name="test_create_sheet_with_name" time="0.051" /><testcase classname="openpyxl.workbook.tests.test_workbook" name="test_add_correct_sheet" time="0.057" /><testcase classname="openpyxl.workbook.tests.test_workbook" name="test_add_sheetname" time="0.044" /><testcase classname="openpyxl.workbook.tests.test_workbook" name="test_add_sheet_from_other_workbook" time="0.072" /><testcase classname="openpyxl.workbook.tests.test_workbook" name="test_create_sheet_readonly" time="0.041" /><testcase classname="openpyxl.workbook.tests.test_workbook" name="test_remove_sheet" time="0.050" /><testcase classname="openpyxl.workbook.tests.test_workbook" name="test_move_sheet" time="0.135" /><testcase classname="openpyxl.workbook.tests.test_workbook" name="test_getitem" time="0.056" /><testcase classname="openpyxl.workbook.tests.test_workbook" name="test_get_chartsheet" time="0.056" /><testcase classname="openpyxl.workbook.tests.test_workbook" name="test_del_worksheet" time="0.103" /><testcase classname="openpyxl.workbook.tests.test_workbook" name="test_del_chartsheet" time="0.043" /><testcase classname="openpyxl.workbook.tests.test_workbook" name="test_contains" time="0.044" /><testcase classname="openpyxl.workbook.tests.test_workbook" name="test_iter" time="0.039" /><testcase classname="openpyxl.workbook.tests.test_workbook" name="test_index" time="0.053" /><testcase classname="openpyxl.workbook.tests.test_workbook" name="test_get_sheet_names" time="0.096" /><testcase classname="openpyxl.workbook.tests.test_workbook" name="test_get_named_ranges" time="0.047" /><testcase classname="openpyxl.workbook.tests.test_workbook" name="test_add_named_range" time="0.070" /><testcase classname="openpyxl.workbook.tests.test_workbook" name="test_get_named_range" time="0.161" /><testcase classname="openpyxl.workbook.tests.test_workbook" name="test_remove_named_range" time="0.047" /><testcase classname="openpyxl.workbook.tests.test_workbook" name="test_remove_sheet_with_names" time="0.049" /><testcase classname="openpyxl.workbook.tests.test_workbook" name="test_add_invalid_worksheet_class_instance" time="0.008" /><testcase classname="openpyxl.workbook.tests.test_workbook.TestCopy" name="test_worksheet_copy" time="0.079" /><testcase classname="openpyxl.workbook.tests.test_workbook.TestCopy" name="test_worksheet_copy_name[TestSheet-TestSheet Copy]" time="0.086" /><testcase classname="openpyxl.workbook.tests.test_workbook.TestCopy" name="test_worksheet_copy_name[D\xfcsseldorf-D\xfcsseldorf Copy]" time="0.087" /><testcase classname="openpyxl.workbook.tests.test_workbook.TestCopy" name="test_cannot_copy_readonly" time="0.151" /><testcase classname="openpyxl.workbook.tests.test_workbook.TestCopy" name="test_cannot_copy_writeonly" time="0.043" /><testcase classname="openpyxl.workbook.tests.test_workbook.TestCopy" name="test_default_epoch" time="0.066" /><testcase classname="openpyxl.workbook.tests.test_workbook.TestCopy" name="test_assign_epoch" time="0.079" /><testcase classname="openpyxl.workbook.tests.test_workbook.TestCopy" name="test_invalid_epoch" time="0.089" /><testcase classname="openpyxl.workbook.tests.test_writer.TestWorkbookWriter" name="test_write_auto_filter" time="0.123" /><testcase classname="openpyxl.workbook.tests.test_writer.TestWorkbookWriter" name="test_write_hidden_worksheet" time="0.110" /><testcase classname="openpyxl.workbook.tests.test_writer.TestWorkbookWriter" name="test_write_workbook" time="0.161" /><testcase classname="openpyxl.workbook.tests.test_writer.TestWorkbookWriter" name="test_write_workbook_code_name" time="0.066" /><testcase classname="openpyxl.workbook.tests.test_writer.TestWorkbookWriter" name="test_print_area" time="0.085" /><testcase classname="openpyxl.workbook.tests.test_writer.TestWorkbookWriter" name="test_print_titles" time="0.078" /><testcase classname="openpyxl.workbook.tests.test_writer.TestWorkbookWriter" name="test_print_autofilter" time="0.104" /><testcase classname="openpyxl.workbook.tests.test_writer.TestWorkbookWriter" name="test_write_workbook_protection" time="0.187" /><testcase classname="openpyxl.workbook.tests.test_writer" name="test_write_hidden_single_worksheet" time="0.042" /><testcase classname="openpyxl.workbook.tests.test_writer" name="test_write_workbook_rels[None-workbook.xml.rels]" time="0.094" /><testcase classname="openpyxl.workbook.tests.test_writer" name="test_write_workbook_rels[True-workbook_vba.xml.rels]" time="0.088" /><testcase classname="openpyxl.workbook.tests.test_writer" name="test_write_root_rels" time="0.067" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestCellRange" name="test_ctor" time="0.014" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestCellRange" name="test_dict" time="0.012" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestCellRange" name="test_max_row_too_small" time="0.014" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestCellRange" name="test_max_col_too_small" time="0.009" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestCellRange" name="test_from_string[Sheet1!$A$1:B4-Sheet1-A1:B4]" time="0.014" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestCellRange" name="test_from_string[A1:B4-None-A1:B4]" time="0.015" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestCellRange" name="test_repr" time="0.011" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestCellRange" name="test_str" time="0.012" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestCellRange" name="test_eq" time="0.010" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestCellRange" name="test_ne" time="0.011" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestCellRange" name="test_copy" time="0.009" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestCellRange" name="test_shift" time="0.094" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestCellRange" name="test_shift_negative" time="0.017" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestCellRange" name="test_union" time="0.010" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestCellRange" name="test_no_union" time="0.014" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestCellRange" name="test_expand" time="0.012" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestCellRange" name="test_shrink" time="0.015" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestCellRange" name="test_size" time="0.010" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestCellRange" name="test_intersection" time="0.010" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestCellRange" name="test_no_intersection" time="0.015" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestCellRange" name="test_isdisjoint_order" time="0.012" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestCellRange" name="test_isdisjoint_by_col" time="0.010" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestCellRange" name="test_isdisjoint_by_row" time="0.010" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestCellRange" name="test_isdisjoint_in_both" time="0.013" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestCellRange" name="test_is_not_disjoint" time="0.009" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestCellRange" name="test_is_not_disjoint_in_both" time="0.010" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestCellRange" name="test_issubset" time="0.010" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestCellRange" name="test_is_not_subset" time="0.011" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestCellRange" name="test_issuperset" time="0.013" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestCellRange" name="test_is_not_superset" time="0.009" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestCellRange" name="test_contains" time="0.011" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestCellRange" name="test_doesnt_contain" time="0.010" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestCellRange" name="test_check_title[Sheet1!A1:B4-Sheet1!D5:E5-None]" time="0.015" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestCellRange" name="test_check_title[Sheet1!A1:B4-D5:E5-None]" time="0.014" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestCellRange" name="test_different_worksheets[A1:B4-Sheet1!D5:E5]" time="0.013" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestCellRange" name="test_different_worksheets[Sheet1!A1:B4-Sheet2!D5:E5]" time="0.013" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestCellRange" name="test_lt" time="0.009" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestCellRange" name="test_gt" time="0.012" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestCellRange" name="test_edge_cells" time="0.012" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestCellRange" name="test_rows" time="0.009" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestCellRange" name="test_cols" time="0.011" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestCellRange" name="test_cells" time="0.009" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestMultiCellRange" name="test_ctor" time="0.010" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestMultiCellRange" name="test_from_string" time="0.012" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestMultiCellRange" name="test_add_coord" time="0.011" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestMultiCellRange" name="test_add_cell_range" time="0.011" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestMultiCellRange" name="test_iadd" time="0.012" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestMultiCellRange" name="test_avoid_duplicates" time="0.013" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestMultiCellRange" name="test_repr" time="0.014" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestMultiCellRange" name="test_contains" time="0.011" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestMultiCellRange" name="test_doesnt_contain" time="0.010" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestMultiCellRange" name="test_eq" time="0.014" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestMultiCellRange" name="test_ne" time="0.011" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestMultiCellRange" name="test_empty" time="0.009" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestMultiCellRange" name="test_not_empty" time="0.009" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestMultiCellRange" name="test_remove" time="0.015" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestMultiCellRange" name="test_remove_invalid" time="0.022" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestMultiCellRange" name="test_iter" time="0.020" /><testcase classname="openpyxl.worksheet.tests.test_cell_range.TestMultiCellRange" name="test_copy" time="0.014" /><testcase classname="openpyxl.worksheet.tests.test_controls.TestControlProperty" name="test_ctor" time="0.049" /><testcase classname="openpyxl.worksheet.tests.test_controls.TestControlProperty" name="test_from_xml" time="0.021" /><testcase classname="openpyxl.worksheet.tests.test_datavalidation.TestDataValidation" name="test_ctor" time="0.038" /><testcase classname="openpyxl.worksheet.tests.test_datavalidation.TestDataValidation" name="test_from_xml" time="0.019" /><testcase classname="openpyxl.worksheet.tests.test_datavalidation.TestDataValidation" name="test_list_validation" time="0.016" /><testcase classname="openpyxl.worksheet.tests.test_datavalidation.TestDataValidation" name="test_hide_drop_down" time="0.021" /><testcase classname="openpyxl.worksheet.tests.test_datavalidation.TestDataValidation" name="test_writer_validation" time="0.036" /><testcase classname="openpyxl.worksheet.tests.test_datavalidation.TestDataValidation" name="test_sqref" time="0.019" /><testcase classname="openpyxl.worksheet.tests.test_datavalidation.TestDataValidation" name="test_add_after_sqref" time="0.028" /><testcase classname="openpyxl.worksheet.tests.test_datavalidation.TestDataValidation" name="test_read_formula" time="0.023" /><testcase classname="openpyxl.worksheet.tests.test_datavalidation.TestDataValidation" name="test_parser" time="0.035" /><testcase classname="openpyxl.worksheet.tests.test_datavalidation.TestDataValidation" name="test_contains" time="0.031" /><testcase classname="openpyxl.worksheet.tests.test_datavalidation.TestDataValidationList" name="test_ctor" time="0.022" /><testcase classname="openpyxl.worksheet.tests.test_datavalidation.TestDataValidationList" name="test_from_xml" time="0.012" /><testcase classname="openpyxl.worksheet.tests.test_datavalidation.TestDataValidationList" name="test_empty_dv" time="0.018" /><testcase classname="openpyxl.worksheet.tests.test_datavalidation" name="test_collapse_cell_addresses[cells0-A1]" time="0.010" /><testcase classname="openpyxl.worksheet.tests.test_datavalidation" name="test_collapse_cell_addresses[cells1-A1 B1]" time="0.148" /><testcase classname="openpyxl.worksheet.tests.test_datavalidation" name="test_collapse_cell_addresses[cells2-A1:A4 B1:B4]" time="0.013" /><testcase classname="openpyxl.worksheet.tests.test_datavalidation" name="test_collapse_cell_addresses[cells3-A1:A5]" time="0.013" /><testcase classname="openpyxl.worksheet.tests.test_datavalidation" name="test_collapse_cell_addresses[cells4-B1:B3 AA1:AA4]" time="0.014" /><testcase classname="openpyxl.worksheet.tests.test_datavalidation" name="test_expand_cell_ranges" time="0.012" /><testcase classname="openpyxl.worksheet.tests.test_dimensions" name="test_dimension_interface" time="0.012" /><testcase classname="openpyxl.worksheet.tests.test_dimensions" name="test_invalid_dimension_ctor" time="0.008" /><testcase classname="openpyxl.worksheet.tests.test_dimensions.TestRowDimension" name="test_row_dimension[ht-1-expected0]" time="0.021" /><testcase classname="openpyxl.worksheet.tests.test_dimensions.TestRowDimension" name="test_row_dimension[thickBot-True-expected1]" time="0.019" /><testcase classname="openpyxl.worksheet.tests.test_dimensions.TestRowDimension" name="test_row_dimension[thickTop-True-expected2]" time="0.019" /><testcase classname="openpyxl.worksheet.tests.test_dimensions.TestRowDimension" name="test_row_auto_assign" time="0.018" /><testcase classname="openpyxl.worksheet.tests.test_dimensions.TestRowDimension" name="test_copy" time="0.012" /><testcase classname="openpyxl.worksheet.tests.test_dimensions.TestColDimension" name="test_col_dimensions[width-1-expected0]" time="0.015" /><testcase classname="openpyxl.worksheet.tests.test_dimensions.TestColDimension" name="test_col_dimensions[bestFit-True-expected1]" time="0.017" /><testcase classname="openpyxl.worksheet.tests.test_dimensions.TestColDimension" name="test_column_dimension" time="0.021" /><testcase classname="openpyxl.worksheet.tests.test_dimensions.TestColDimension" name="test_col_reindex" time="0.014" /><testcase classname="openpyxl.worksheet.tests.test_dimensions.TestColDimension" name="test_col_width" time="0.022" /><testcase classname="openpyxl.worksheet.tests.test_dimensions.TestColDimension" name="test_col_style" time="0.085" /><testcase classname="openpyxl.worksheet.tests.test_dimensions.TestColDimension" name="test_outline_cols" time="0.018" /><testcase classname="openpyxl.worksheet.tests.test_dimensions.TestColDimension" name="test_copy" time="0.017" /><testcase classname="openpyxl.worksheet.tests.test_dimensions.TestColDimension" name="test_no_named_style" time="0.013" /><testcase classname="openpyxl.worksheet.tests.test_dimensions.TestColDimension" name="test_empty_col" time="0.014" /><testcase classname="openpyxl.worksheet.tests.test_dimensions.TestGrouping" name="test_group_columns_simple" time="0.020" /><testcase classname="openpyxl.worksheet.tests.test_dimensions.TestGrouping" name="test_group_columns_collapse" time="0.026" /><testcase classname="openpyxl.worksheet.tests.test_dimensions.TestGrouping" name="test_no_cols" time="0.010" /><testcase classname="openpyxl.worksheet.tests.test_dimensions.TestGrouping" name="test_group_rows_simple" time="0.030" /><testcase classname="openpyxl.worksheet.tests.test_dimensions.TestGrouping" name="test_group_rows_collapse" time="0.031" /><testcase classname="openpyxl.worksheet.tests.test_dimensions.TestGrouping" name="test_no_rows" time="0.009" /><testcase classname="openpyxl.worksheet.tests.test_dimensions.TestGrouping" name="test_to_tree" time="0.029" /><testcase classname="openpyxl.worksheet.tests.test_filters.TestFilterColumn" name="test_ctor" time="0.028" /><testcase classname="openpyxl.worksheet.tests.test_filters.TestFilterColumn" name="test_from_xml" time="0.102" /><testcase classname="openpyxl.worksheet.tests.test_filters.TestSortCondition" name="test_ctor" time="0.020" /><testcase classname="openpyxl.worksheet.tests.test_filters.TestSortCondition" name="test_from_xml" time="0.015" /><testcase classname="openpyxl.worksheet.tests.test_filters.TestAutoFilter" name="test_ctor" time="0.017" /><testcase classname="openpyxl.worksheet.tests.test_filters.TestAutoFilter" name="test_from_xml" time="0.013" /><testcase classname="openpyxl.worksheet.tests.test_filters.TestAutoFilter" name="test_add_filter_column" time="0.028" /><testcase classname="openpyxl.worksheet.tests.test_filters.TestAutoFilter" name="test_add_sort_condition" time="0.033" /><testcase classname="openpyxl.worksheet.tests.test_filters.TestAutoFilter" name="test_bool" time="0.009" /><testcase classname="openpyxl.worksheet.tests.test_filters.TestSortState" name="test_ctor" time="0.018" /><testcase classname="openpyxl.worksheet.tests.test_filters.TestSortState" name="test_from_xml" time="0.016" /><testcase classname="openpyxl.worksheet.tests.test_filters.TestSortState" name="test_bool" time="0.012" /><testcase classname="openpyxl.worksheet.tests.test_filters.TestIconFilter" name="test_ctor" time="0.016" /><testcase classname="openpyxl.worksheet.tests.test_filters.TestIconFilter" name="test_from_xml" time="0.014" /><testcase classname="openpyxl.worksheet.tests.test_filters.TestColorFilter" name="test_ctor" time="0.013" /><testcase classname="openpyxl.worksheet.tests.test_filters.TestColorFilter" name="test_from_xml" time="0.013" /><testcase classname="openpyxl.worksheet.tests.test_filters.TestDynamicFilter" name="test_ctor" time="0.019" /><testcase classname="openpyxl.worksheet.tests.test_filters.TestDynamicFilter" name="test_from_xml" time="0.016" /><testcase classname="openpyxl.worksheet.tests.test_filters.TestCustomFilter" name="test_ctor" time="0.019" /><testcase classname="openpyxl.worksheet.tests.test_filters.TestCustomFilter" name="test_from_xml" time="0.014" /><testcase classname="openpyxl.worksheet.tests.test_filters.TestCustomFilters" name="test_ctor" time="0.022" /><testcase classname="openpyxl.worksheet.tests.test_filters.TestCustomFilters" name="test_from_xml" time="0.015" /><testcase classname="openpyxl.worksheet.tests.test_filters.TestTop10" name="test_ctor" time="0.019" /><testcase classname="openpyxl.worksheet.tests.test_filters.TestTop10" name="test_from_xml" time="0.015" /><testcase classname="openpyxl.worksheet.tests.test_filters.TestDateGroupItem" name="test_ctor" time="0.020" /><testcase classname="openpyxl.worksheet.tests.test_filters.TestDateGroupItem" name="test_from_xml" time="0.014" /><testcase classname="openpyxl.worksheet.tests.test_filters.TestFilters" name="test_ctor" time="0.021" /><testcase classname="openpyxl.worksheet.tests.test_filters.TestFilters" name="test_write_filters" time="0.029" /><testcase classname="openpyxl.worksheet.tests.test_filters.TestFilters" name="test_from_xml" time="0.013" /><testcase classname="openpyxl.worksheet.tests.test_header" name="test_split_into_parts" time="0.007" /><testcase classname="openpyxl.worksheet.tests.test_header" name="test_cannot_split" time="0.011" /><testcase classname="openpyxl.worksheet.tests.test_header" name="test_multiline_string" time="0.008" /><testcase classname="openpyxl.worksheet.tests.test_header" name="test_parse_format[&amp;9-expected0]" time="0.011" /><testcase classname="openpyxl.worksheet.tests.test_header" name="test_parse_format[&amp;&quot;Lucida Grande,Standard&quot;-expected1]" time="0.014" /><testcase classname="openpyxl.worksheet.tests.test_header" name="test_parse_format[&amp;K000000-expected2]" time="0.010" /><testcase classname="openpyxl.worksheet.tests.test_header.TestHeaderFooterPart" name="test_ctor" time="0.013" /><testcase classname="openpyxl.worksheet.tests.test_header.TestHeaderFooterPart" name="test_read" time="0.014" /><testcase classname="openpyxl.worksheet.tests.test_header.TestHeaderFooterPart" name="test_bool" time="0.012" /><testcase classname="openpyxl.worksheet.tests.test_header.TestHeaderFooterPart" name="test_str" time="0.035" /><testcase classname="openpyxl.worksheet.tests.test_header.TestHeaderFooterItem" name="test_ctor" time="0.011" /><testcase classname="openpyxl.worksheet.tests.test_header.TestHeaderFooterItem" name="test_read" time="0.019" /><testcase classname="openpyxl.worksheet.tests.test_header.TestHeaderFooterItem" name="test_write" time="2.812" /><testcase classname="openpyxl.worksheet.tests.test_header.TestHeaderFooterItem" name="test_bool" time="0.011" /><testcase classname="openpyxl.worksheet.tests.test_header.TestHeaderFooterItem" name="test_str" time="0.010" /><testcase classname="openpyxl.worksheet.tests.test_header.TestHeaderFooter" name="test_ctor" time="0.033" /><testcase classname="openpyxl.worksheet.tests.test_header.TestHeaderFooter" name="test_from_xml" time="0.015" /><testcase classname="openpyxl.worksheet.tests.test_header.TestHeaderFooter" name="test_bool" time="0.014" /><testcase classname="openpyxl.worksheet.tests.test_hyperlink.TestHyperlink" name="test_ctor" time="0.018" /><testcase classname="openpyxl.worksheet.tests.test_hyperlink.TestHyperlink" name="test_from_xml" time="0.011" /><testcase classname="openpyxl.worksheet.tests.test_hyperlink.TestHyperlinkList" name="test_ctor" time="0.016" /><testcase classname="openpyxl.worksheet.tests.test_hyperlink.TestHyperlinkList" name="test_from_xml" time="0.010" /><testcase classname="openpyxl.worksheet.tests.test_hyperlink.TestHyperlinkList" name="test_append" time="0.010" /><testcase classname="openpyxl.worksheet.tests.test_merge.TestMergeCell" name="test_ctor" time="0.022" /><testcase classname="openpyxl.worksheet.tests.test_merge.TestMergeCell" name="test_from_xml" time="0.014" /><testcase classname="openpyxl.worksheet.tests.test_merge.TestMergeCell" name="test_copy" time="0.015" /><testcase classname="openpyxl.worksheet.tests.test_merge.TestMergedCellRange" name="test_ctor" time="0.061" /><testcase classname="openpyxl.worksheet.tests.test_merge.TestMergedCellRange" name="test_get_borders[C1]" time="0.074" /><testcase classname="openpyxl.worksheet.tests.test_merge.TestMergedCellRange" name="test_get_borders[A3]" time="0.081" /><testcase classname="openpyxl.worksheet.tests.test_merge.TestMergedCellRange" name="test_get_borders[C3]" time="0.077" /><testcase classname="openpyxl.worksheet.tests.test_merge.TestMergedCellRange" name="test_format_1x3" time="0.169" /><testcase classname="openpyxl.worksheet.tests.test_merge.TestMergedCellRange" name="test_format_3x1" time="0.095" /><testcase classname="openpyxl.worksheet.tests.test_merge.TestMergedCellRange" name="test_format_3x3" time="0.581" /><testcase classname="openpyxl.worksheet.tests.test_merge.TestMergedCellRange" name="test_format_protection" time="0.063" /><testcase classname="openpyxl.worksheet.tests.test_merge.TestMergedCellRange" name="test_copy" time="0.056" /><testcase classname="openpyxl.worksheet.tests.test_merge.TestMergedCellRange" name="test_contains" time="0.041" /><testcase classname="openpyxl.worksheet.tests.test_merge.TestMergedCellRange" name="test_not_contained" time="0.042" /><testcase classname="openpyxl.worksheet.tests.test_merge.TestMergedCellRange" name="test_empty_side" time="0.078" /><testcase classname="openpyxl.worksheet.tests.test_ole.TestObjectAnchor" name="test_ctor" time="0.041" /><testcase classname="openpyxl.worksheet.tests.test_ole.TestObjectAnchor" name="test_from_xml" time="0.013" /><testcase classname="openpyxl.worksheet.tests.test_page.TestPageMargins" name="test_ctor" time="0.007" /><testcase classname="openpyxl.worksheet.tests.test_page.TestPageMargins" name="test_write" time="0.015" /><testcase classname="openpyxl.worksheet.tests.test_page.TestPageSetup" name="test_ctor" time="0.014" /><testcase classname="openpyxl.worksheet.tests.test_page.TestPageSetup" name="test_fitToPage" time="0.063" /><testcase classname="openpyxl.worksheet.tests.test_page.TestPageSetup" name="test_autoPageBreaks" time="0.049" /><testcase classname="openpyxl.worksheet.tests.test_page.TestPageSetup" name="test_write" time="0.017" /><testcase classname="openpyxl.worksheet.tests.test_page.TestPrintOptions" name="test_ctor" time="0.011" /><testcase classname="openpyxl.worksheet.tests.test_page.TestPrintOptions" name="test_write" time="0.017" /><testcase classname="openpyxl.worksheet.tests.test_pagebreak.TestBreak" name="test_ctor" time="0.017" /><testcase classname="openpyxl.worksheet.tests.test_pagebreak.TestRowBreak" name="test_no_brks" time="0.009" /><testcase classname="openpyxl.worksheet.tests.test_pagebreak.TestRowBreak" name="test_append" time="0.009" /><testcase classname="openpyxl.worksheet.tests.test_pagebreak.TestRowBreak" name="test_to_tree" time="0.033" /><testcase classname="openpyxl.worksheet.tests.test_pagebreak.TestColBreak" name="test_to_tree" time="0.025" /><testcase classname="openpyxl.worksheet.tests.test_properties" name="test_ctor" time="0.011" /><testcase classname="openpyxl.worksheet.tests.test_properties" name="test_write_properties" time="0.104" /><testcase classname="openpyxl.worksheet.tests.test_properties" name="test_parse_properties" time="0.023" /><testcase classname="openpyxl.worksheet.tests.test_protection.TestSheetProtection" name="test_ctor" time="0.025" /><testcase classname="openpyxl.worksheet.tests.test_protection.TestSheetProtection" name="test_other_algorithm" time="0.029" /><testcase classname="openpyxl.worksheet.tests.test_protection.TestSheetProtection" name="test_bool" time="0.009" /><testcase classname="openpyxl.worksheet.tests.test_protection" name="test_ctor_with_password" time="0.010" /><testcase classname="openpyxl.worksheet.tests.test_protection" name="test_explicit_password[secret-False-DAA7]" time="0.015" /><testcase classname="openpyxl.worksheet.tests.test_protection" name="test_explicit_password[secret-True-secret]" time="0.015" /><testcase classname="openpyxl.worksheet.tests.test_read_only.TestReadOnlyWorksheet" name="test_from_xml" time="0.041" /><testcase classname="openpyxl.worksheet.tests.test_read_only.TestReadOnlyWorksheet" name="test_read_cell_from_empty_row[2-1]" time="0.043" /><testcase classname="openpyxl.worksheet.tests.test_read_only.TestReadOnlyWorksheet" name="test_read_cell_from_empty_row[3-1]" time="0.033" /><testcase classname="openpyxl.worksheet.tests.test_read_only.TestReadOnlyWorksheet" name="test_read_cell_from_empty_row[5-1]" time="0.038" /><testcase classname="openpyxl.worksheet.tests.test_read_only.TestReadOnlyWorksheet" name="test_empty_cell" time="0.024" /><testcase classname="openpyxl.worksheet.tests.test_read_only.TestReadOnlyWorksheet" name="test_pad_row_left" time="0.036" /><testcase classname="openpyxl.worksheet.tests.test_read_only.TestReadOnlyWorksheet" name="test_pad_row" time="0.036" /><testcase classname="openpyxl.worksheet.tests.test_read_only.TestReadOnlyWorksheet" name="test_pad_row_right" time="0.050" /><testcase classname="openpyxl.worksheet.tests.test_read_only.TestReadOnlyWorksheet" name="test_pad_row_cells" time="0.062" /><testcase classname="openpyxl.worksheet.tests.test_read_only.TestReadOnlyWorksheet" name="test_read_rows" time="0.095" /><testcase classname="openpyxl.worksheet.tests.test_read_only.TestReadOnlyWorksheet" name="test_pad_rows_before" time="0.038" /><testcase classname="openpyxl.worksheet.tests.test_read_only.TestReadOnlyWorksheet" name="test_pad_rows_after" time="0.042" /><testcase classname="openpyxl.worksheet.tests.test_read_only.TestReadOnlyWorksheet" name="test_pad_rows_between" time="0.093" /><testcase classname="openpyxl.worksheet.tests.test_read_only.TestReadOnlyWorksheet" name="test_pad_rows_bounded" time="0.057" /><testcase classname="openpyxl.worksheet.tests.test_read_only.TestReadOnlyWorksheet" name="test_calculate_dimension" time="0.053" /><testcase classname="openpyxl.worksheet.tests.test_read_only.TestReadOnlyWorksheet" name="test_reset_dimensions" time="0.032" /><testcase classname="openpyxl.worksheet.tests.test_read_only.TestReadOnlyWorksheet" name="test_cell" time="0.038" /><testcase classname="openpyxl.worksheet.tests.test_read_only.TestReadOnlyWorksheet" name="test_iter" time="0.043" /><testcase classname="openpyxl.worksheet.tests.test_read_only.TestReadOnlyWorksheet" name="test_cleanup_on_break" time="0.037" /><testcase classname="openpyxl.worksheet.tests.test_reader" name="test_number_convesion[4.2-4.2]" time="0.010" /><testcase classname="openpyxl.worksheet.tests.test_reader" name="test_number_convesion[-42.000--42]" time="0.011" /><testcase classname="openpyxl.worksheet.tests.test_reader" name="test_number_convesion[0-0]" time="0.017" /><testcase classname="openpyxl.worksheet.tests.test_reader" name="test_number_convesion[0.9999-0.9999]" time="0.011" /><testcase classname="openpyxl.worksheet.tests.test_reader" name="test_number_convesion[99E-02-0.99]" time="0.013" /><testcase classname="openpyxl.worksheet.tests.test_reader" name="test_number_convesion[4-4]" time="0.012" /><testcase classname="openpyxl.worksheet.tests.test_reader" name="test_number_convesion[-1E3--1000]" time="0.010" /><testcase classname="openpyxl.worksheet.tests.test_reader" name="test_number_convesion[1E-3-0.001]" time="0.013" /><testcase classname="openpyxl.worksheet.tests.test_reader" name="test_number_convesion[2e+2-200.0]" time="0.013" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetParser" name="test_read_dimension[dimension.xml-expected0]" time="0.021" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetParser" name="test_read_dimension[no_dimension.xml-None]" time="0.026" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetParser" name="test_read_dimension[invalid_dimension.xml-expected2]" time="0.022" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetParser" name="test_col_width" time="0.035" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetParser" name="test_hidden_col" time="0.015" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetParser" name="test_styled_col" time="0.033" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetParser" name="test_row_dimensions" time="0.013" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetParser" name="test_hidden_row" time="0.014" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetParser" name="test_styled_row" time="0.015" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetParser" name="test_read_row_with_exponent" time="0.014" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetParser" name="test_invalid_row_number" time="0.012" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetParser" name="test_sheet_protection" time="0.019" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetParser" name="test_formula" time="0.029" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetParser" name="test_formula_data_only" time="0.015" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetParser" name="test_string_formula_data_only" time="0.083" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetParser" name="test_number" time="0.014" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetParser" name="test_datetime" time="0.018" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetParser" name="test_timedelta" time="0.017" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetParser" name="test_mac_date" time="0.015" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetParser" name="test_out_of_range_datetime[-693595]" time="0.025" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetParser" name="test_out_of_range_datetime[2958466]" time="0.025" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetParser" name="test_string" time="0.014" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetParser" name="test_boolean" time="0.018" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetParser" name="test_inline_string" time="0.018" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetParser" name="test_inline_richtext" time="0.018" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetParser" name="test_sheet_views" time="0.014" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetParser" name="test_shared_formula" time="0.013" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetParser" name="test_array_formula" time="0.016" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetParser" name="test_extended_conditional_formatting" time="0.016" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetParser" name="test_bad_conditional_format_rule" time="0.018" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetParser" name="test_cell_without_coordinates" time="0.027" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetParser" name="test_row_and_cell_without_coordinates" time="0.020" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetParser" name="test_row_and_cell_skipping_coordinates" time="0.019" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetParser" name="test_second_row_cell_index_without_coordinates" time="0.018" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetParser" name="test_external_hyperlinks" time="0.017" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetParser" name="test_local_hyperlinks" time="0.014" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetParser" name="test_merge_cells" time="0.020" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetParser" name="test_conditonal_formatting" time="0.019" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetParser" name="test_sheet_properties" time="0.014" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetParser" name="test_sheet_format" time="0.013" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetParser" name="test_tables" time="0.012" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetParser" name="test_auto_filter" time="0.016" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetParser" name="test_page_row_break" time="0.016" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetParser" name="test_col_break" time="0.016" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetParser" name="test_scenarios" time="0.018" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetParser" name="test_legacy" time="0.014" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetParser" name="test_custom_views_breaks" time="0.019" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetReader" name="test_cells" time="0.258" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetReader" name="test_formatting" time="0.121" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetReader" name="test_merged" time="0.125" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetReader" name="test_normalize_merged_cell_link[H18-G18]" time="0.258" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetReader" name="test_normalize_merged_cell_link[G18-G18]" time="0.139" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetReader" name="test_normalize_merged_cell_link[I18-None]" time="0.160" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetReader" name="test_normalize_merged_cell_link[H23-G23]" time="0.178" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetReader" name="test_external_hyperlinks" time="0.279" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetReader" name="test_internal_hyperlinks" time="0.177" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetReader" name="test_merged_hyperlinks" time="0.185" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetReader" name="test_tables" time="0.304" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetReader" name="test_cols" time="0.141" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetReader" name="test_rows" time="0.114" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetReader" name="test_properties" time="0.132" /><testcase classname="openpyxl.worksheet.tests.test_reader.TestWorksheetReader" name="test_more_rows_than_cells" time="0.045" /><testcase classname="openpyxl.worksheet.tests.test_related" name="test_related" time="0.013" /><testcase classname="openpyxl.worksheet.tests.test_scenario.TestInputCells" name="test_ctor" time="0.167" /><testcase classname="openpyxl.worksheet.tests.test_scenario.TestInputCells" name="test_from_xml" time="0.011" /><testcase classname="openpyxl.worksheet.tests.test_scenario.TestScenario" name="test_ctor" time="0.023" /><testcase classname="openpyxl.worksheet.tests.test_scenario.TestScenario" name="test_from_xml" time="0.016" /><testcase classname="openpyxl.worksheet.tests.test_scenario.TestScenarios" name="test_ctor" time="0.021" /><testcase classname="openpyxl.worksheet.tests.test_scenario.TestScenarios" name="test_from_xml" time="0.014" /><testcase classname="openpyxl.worksheet.tests.test_table.TestTableColumn" name="test_ctor" time="0.013" /><testcase classname="openpyxl.worksheet.tests.test_table.TestTableColumn" name="test_from_xml" time="0.018" /><testcase classname="openpyxl.worksheet.tests.test_table.TestTable" name="test_ctor" time="0.021" /><testcase classname="openpyxl.worksheet.tests.test_table.TestTable" name="test_columns" time="0.050" /><testcase classname="openpyxl.worksheet.tests.test_table.TestTable" name="test_column_names" time="0.012" /><testcase classname="openpyxl.worksheet.tests.test_table.TestTable" name="test_from_xml" time="0.020" /><testcase classname="openpyxl.worksheet.tests.test_table.TestTable" name="test_path" time="0.011" /><testcase classname="openpyxl.worksheet.tests.test_table.TestTable" name="test_write" time="0.016" /><testcase classname="openpyxl.worksheet.tests.test_table.TestTableFormula" name="test_ctor" time="0.013" /><testcase classname="openpyxl.worksheet.tests.test_table.TestTableFormula" name="test_from_xml" time="0.010" /><testcase classname="openpyxl.worksheet.tests.test_table.TestTableInfo" name="test_ctor" time="0.018" /><testcase classname="openpyxl.worksheet.tests.test_table.TestTableInfo" name="test_from_xml" time="0.013" /><testcase classname="openpyxl.worksheet.tests.test_table.TestXMLColumnPr" name="test_ctor" time="0.016" /><testcase classname="openpyxl.worksheet.tests.test_table.TestXMLColumnPr" name="test_from_xml" time="0.020" /><testcase classname="openpyxl.worksheet.tests.test_table.TestTablePartList" name="test_ctor" time="0.037" /><testcase classname="openpyxl.worksheet.tests.test_table.TestTablePartList" name="test_from_xml" time="0.014" /><testcase classname="openpyxl.worksheet.tests.test_table.TestTableList" name="test_append" time="0.012" /><testcase classname="openpyxl.worksheet.tests.test_table.TestTableList" name="test_get" time="0.011" /><testcase classname="openpyxl.worksheet.tests.test_table.TestTableList" name="test_get_by_range" time="0.013" /><testcase classname="openpyxl.worksheet.tests.test_table.TestTableList" name="test_add_type_error" time="0.018" /><testcase classname="openpyxl.worksheet.tests.test_table.TestTableList" name="test_get_table_does_not_exists" time="0.021" /><testcase classname="openpyxl.worksheet.tests.test_table.TestTableList" name="test_items" time="0.017" /><testcase classname="openpyxl.worksheet.tests.test_views" name="test_show_gridlines[True-result0]" time="0.020" /><testcase classname="openpyxl.worksheet.tests.test_views" name="test_show_gridlines[False-result1]" time="0.017" /><testcase classname="openpyxl.worksheet.tests.test_views" name="test_parse" time="0.018" /><testcase classname="openpyxl.worksheet.tests.test_views" name="test_serialise" time="0.017" /><testcase classname="openpyxl.worksheet.tests.test_views.TestSheetViews" name="test_ctor" time="0.018" /><testcase classname="openpyxl.worksheet.tests.test_views.TestSheetViews" name="test_from_xml" time="0.016" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_path" time="0.045" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_new_worksheet" time="0.041" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_get_cell" time="0.173" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_invalid_cell" time="0.051" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_worksheet_dimension" time="0.056" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_fill_rows[1-0-A1]" time="0.055" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_fill_rows[9-2-C9]" time="0.082" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_iter_rows" time="0.114" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_cell_alternate_coordinates" time="0.074" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_cell_insufficient_coordinates" time="0.070" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_hyperlink_value" time="0.053" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_append" time="0.065" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_append_list" time="0.059" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_append_dict_letter" time="0.068" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_append_dict_index" time="0.064" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_bad_append" time="0.052" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_append_range" time="0.051" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_append_iterator" time="0.049" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_append_2d_list" time="0.169" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_append_cell" time="0.062" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_rows" time="0.054" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_no_rows" time="0.074" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_no_cols" time="0.054" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_one_cell" time="0.060" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_by_col" time="0.061" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_cols" time="0.081" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_values" time="0.070" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_auto_filter" time="0.069" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_getitem" time="0.065" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_getitem_invalid[key0]" time="0.062" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_getitem_invalid[key1]" time="0.062" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_getitem_invalid[:]" time="0.063" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_getitem_invalid[A0]" time="0.072" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_setitem" time="0.197" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_delitem" time="0.033" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_getslice" time="0.068" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_get_single__column[C]" time="0.061" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_get_single__column[C:C]" time="0.067" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_get_row[20]" time="0.068" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_get_row[21]" time="0.047" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_get_row[2:2]" time="0.055" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_freeze" time="0.057" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_merged_cells_lookup" time="0.536" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_merged_cell_ranges" time="0.068" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_merge_range_string" time="0.072" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_merge_coordinate" time="0.085" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_merge_more_columns_than_rows" time="0.086" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_merge_more_rows_than_columns" time="0.076" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_unmerge_range_string" time="0.061" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_unmerge_coordinate" time="0.063" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_print_titles_new[1:4-None-1:4]" time="0.052" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_print_titles_new[None-A:F-A:F]" time="0.065" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_print_titles_new[1:2-C:D-1:2,C:D]" time="0.052" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_print_area[A1:F5-result0]" time="0.041" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_print_area[cell_range1-result1]" time="0.043" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_active_cell" time="0.142" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_selected_cell" time="0.045" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_gridlines" time="0.059" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestWorksheet" name="test_add_table" time="0.060" /><testcase classname="openpyxl.worksheet.tests.test_worksheet" name="test_freeze_panes_horiz" time="0.067" /><testcase classname="openpyxl.worksheet.tests.test_worksheet" name="test_freeze_panes_vert" time="0.059" /><testcase classname="openpyxl.worksheet.tests.test_worksheet" name="test_freeze_panes_both" time="0.066" /><testcase classname="openpyxl.worksheet.tests.test_worksheet" name="test_min_column" time="0.016" /><testcase classname="openpyxl.worksheet.tests.test_worksheet" name="test_max_column" time="0.023" /><testcase classname="openpyxl.worksheet.tests.test_worksheet" name="test_min_row" time="0.019" /><testcase classname="openpyxl.worksheet.tests.test_worksheet" name="test_max_row" time="0.042" /><testcase classname="openpyxl.worksheet.tests.test_worksheet" name="test_add_chart" time="0.080" /><testcase classname="openpyxl.worksheet.tests.test_worksheet" name="test_add_image" time="0.022" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestEditableWorksheet" name="test_move_row_down" time="0.100" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestEditableWorksheet" name="test_move_col_right" time="0.047" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestEditableWorksheet" name="test_move_row_up" time="0.036" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestEditableWorksheet" name="test_insert_rows" time="0.023" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestEditableWorksheet" name="test_insert_cols" time="0.023" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestEditableWorksheet" name="test_delete_rows" time="0.023" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestEditableWorksheet" name="test_deleta_all_rows" time="0.029" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestEditableWorksheet" name="test_delete_cols" time="0.042" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestEditableWorksheet" name="test_delete_missing_cols" time="0.141" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestEditableWorksheet" name="test_delete_missing_rows" time="0.040" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestEditableWorksheet" name="test_remainder[1-3-6-remainder0]" time="0.038" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestEditableWorksheet" name="test_remainder[2-3-6-remainder1]" time="0.048" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestEditableWorksheet" name="test_remainder[3-3-6-remainder2]" time="0.040" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestEditableWorksheet" name="test_remainder[4-3-6-remainder3]" time="0.054" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestEditableWorksheet" name="test_remainder[5-3-6-remainder4]" time="0.047" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestEditableWorksheet" name="test_remainder[6-3-6-remainder5]" time="0.039" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestEditableWorksheet" name="test_remainder[6-1-6-remainder6]" time="0.044" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestEditableWorksheet" name="test_delete_last_col" time="0.039" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestEditableWorksheet" name="test_delete_last_row" time="0.039" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestEditableWorksheet" name="test_move_cell" time="0.037" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestEditableWorksheet" name="test_move_translated_fomula[False-=SUM(G1:G3)-=SUM(G1:G3)]" time="0.044" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestEditableWorksheet" name="test_move_translated_fomula[True-=SUM(G1:G3)-=SUM(I2:I4)]" time="0.048" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestEditableWorksheet" name="test_move_translated_fomula[True-I2:I4-I2:I4]" time="0.043" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestEditableWorksheet" name="test_move_nothing" time="0.044" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestEditableWorksheet" name="test_move_range_down" time="0.051" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestEditableWorksheet" name="test_move_range_up" time="0.032" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestEditableWorksheet" name="test_move_range_right" time="0.029" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestEditableWorksheet" name="test_move_range_left" time="0.042" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestEditableWorksheet" name="test_move_empty_range" time="0.044" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestEditableWorksheet" name="test_move_range_from_string" time="0.038" /><testcase classname="openpyxl.worksheet.tests.test_worksheet.TestEditableWorksheet" name="test_move_range_with_formula" time="0.045" /><testcase classname="openpyxl.worksheet.tests.test_worksheet_copy.TestWorksheetCopy" name="test_ctor" time="0.143" /><testcase classname="openpyxl.worksheet.tests.test_worksheet_copy.TestWorksheetCopy" name="test_cannot_copy_between_workbooks" time="0.074" /><testcase classname="openpyxl.worksheet.tests.test_worksheet_copy.TestWorksheetCopy" name="test_cannot_copy_to_self" time="0.051" /><testcase classname="openpyxl.worksheet.tests.test_worksheet_copy.TestWorksheetCopy" name="test_cannot_copy_junk" time="0.010" /><testcase classname="openpyxl.worksheet.tests.test_worksheet_copy.TestWorksheetCopy" name="test_merged_cell_copy" time="0.098" /><testcase classname="openpyxl.worksheet.tests.test_worksheet_copy.TestWorksheetCopy" name="test_cell_copy_value" time="0.062" /><testcase classname="openpyxl.worksheet.tests.test_worksheet_copy.TestWorksheetCopy" name="test_cell_copy_style" time="0.069" /><testcase classname="openpyxl.worksheet.tests.test_worksheet_copy.TestWorksheetCopy" name="test_cell_copy_comment" time="0.075" /><testcase classname="openpyxl.worksheet.tests.test_worksheet_copy.TestWorksheetCopy" name="test_cell_copy_hyperlink" time="0.072" /><testcase classname="openpyxl.worksheet.tests.test_worksheet_copy.TestWorksheetCopy" name="test_copy_row_dimensions" time="0.084" /><testcase classname="openpyxl.worksheet.tests.test_worksheet_copy.TestWorksheetCopy" name="test_copy_col_dimensions" time="0.066" /><testcase classname="openpyxl.worksheet.tests.test_worksheet_copy.TestWorksheetCopy" name="test_copy_page_margins" time="0.228" /><testcase classname="openpyxl.worksheet.tests.test_worksheet_copy.TestWorksheetCopy" name="test_copy_page_setup" time="0.063" /><testcase classname="openpyxl.worksheet.tests.test_worksheet_copy.TestWorksheetCopy" name="test_copy_print_options" time="0.057" /><testcase classname="openpyxl.worksheet.tests.test_worksheet_copy" name="test_copy_worksheet" time="0.329" /><testcase classname="openpyxl.worksheet.tests.test_write_only" name="test_path" time="0.014" /><testcase classname="openpyxl.worksheet.tests.test_write_only" name="test_values_to_rows" time="0.015" /><testcase classname="openpyxl.worksheet.tests.test_write_only" name="test_append" time="0.095" /><testcase classname="openpyxl.worksheet.tests.test_write_only" name="test_invalid_append[string]" time="0.022" /><testcase classname="openpyxl.worksheet.tests.test_write_only" name="test_invalid_append[row1]" time="0.021" /><testcase classname="openpyxl.worksheet.tests.test_write_only" name="test_cannot_save_twice" time="0.032" /><testcase classname="openpyxl.worksheet.tests.test_write_only" name="test_close" time="0.054" /><testcase classname="openpyxl.worksheet.tests.test_write_only" name="test_read_after_closing" time="0.042" /><testcase classname="openpyxl.worksheet.tests.test_write_only" name="test_write_only_cell" time="0.068" /><testcase classname="openpyxl.worksheet.tests.test_write_only" name="test_hyperlink" time="0.043" /><testcase classname="openpyxl.worksheet.tests.test_writer.TestWorksheetWriter" name="test_setup" time="0.056" /><testcase classname="openpyxl.worksheet.tests.test_writer.TestWorksheetWriter" name="test_properties" time="0.065" /><testcase classname="openpyxl.worksheet.tests.test_writer.TestWorksheetWriter" name="test_dimensions" time="0.071" /><testcase classname="openpyxl.worksheet.tests.test_writer.TestWorksheetWriter" name="test_format" time="0.067" /><testcase classname="openpyxl.worksheet.tests.test_writer.TestWorksheetWriter" name="test_views" time="0.090" /><testcase classname="openpyxl.worksheet.tests.test_writer.TestWorksheetWriter" name="test_cols" time="0.213" /><testcase classname="openpyxl.worksheet.tests.test_writer.TestWorksheetWriter" name="test_write_top" time="0.115" /><testcase classname="openpyxl.worksheet.tests.test_writer.TestWorksheetWriter" name="test_protection" time="0.100" /><testcase classname="openpyxl.worksheet.tests.test_writer.TestWorksheetWriter" name="test_scenarios" time="0.090" /><testcase classname="openpyxl.worksheet.tests.test_writer.TestWorksheetWriter" name="test_filter" time="0.066" /><testcase classname="openpyxl.worksheet.tests.test_writer.TestWorksheetWriter" name="test_sort" time="0.056" /><testcase classname="openpyxl.worksheet.tests.test_writer.TestWorksheetWriter" name="test_merged_cells" time="0.058" /><testcase classname="openpyxl.worksheet.tests.test_writer.TestWorksheetWriter" name="test_formatting" time="0.064" /><testcase classname="openpyxl.worksheet.tests.test_writer.TestWorksheetWriter" name="test_validations" time="0.193" /><testcase classname="openpyxl.worksheet.tests.test_writer.TestWorksheetWriter" name="test_hyperlinks" time="0.057" /><testcase classname="openpyxl.worksheet.tests.test_writer.TestWorksheetWriter" name="test_print" time="0.065" /><testcase classname="openpyxl.worksheet.tests.test_writer.TestWorksheetWriter" name="test_margins" time="0.080" /><testcase classname="openpyxl.worksheet.tests.test_writer.TestWorksheetWriter" name="test_page_setup" time="0.054" /><testcase classname="openpyxl.worksheet.tests.test_writer.TestWorksheetWriter" name="test_header" time="0.126" /><testcase classname="openpyxl.worksheet.tests.test_writer.TestWorksheetWriter" name="test_breaks" time="0.130" /><testcase classname="openpyxl.worksheet.tests.test_writer.TestWorksheetWriter" name="test_drawings" time="0.066" /><testcase classname="openpyxl.worksheet.tests.test_writer.TestWorksheetWriter" name="test_comments" time="0.053" /><testcase classname="openpyxl.worksheet.tests.test_writer.TestWorksheetWriter" name="test_legacy" time="0.045" /><testcase classname="openpyxl.worksheet.tests.test_writer.TestWorksheetWriter" name="test_vba" time="0.068" /><testcase classname="openpyxl.worksheet.tests.test_writer.TestWorksheetWriter" name="test_tables" time="0.183" /><testcase classname="openpyxl.worksheet.tests.test_writer.TestWorksheetWriter" name="test_write_tail" time="0.063" /><testcase classname="openpyxl.worksheet.tests.test_writer.TestWorksheetWriter" name="test_row_dimensons" time="0.056" /><testcase classname="openpyxl.worksheet.tests.test_writer.TestWorksheetWriter" name="test_rows_sort" time="0.055" /><testcase classname="openpyxl.worksheet.tests.test_writer.TestWorksheetWriter" name="test_write_rows" time="0.096" /><testcase classname="openpyxl.worksheet.tests.test_writer.TestWorksheetWriter" name="test_write_rows_comment" time="0.064" /><testcase classname="openpyxl.worksheet.tests.test_writer.TestWorksheetWriter" name="test_write_row" time="0.078" /><testcase classname="openpyxl.worksheet.tests.test_writer.TestWorksheetWriter" name="test_write_sheet" time="0.119" /><testcase classname="openpyxl.worksheet.tests.test_writer.TestWorksheetWriter" name="test_cleanup" time="0.067" /><testcase classname="openpyxl.writer.tests.test_excel" name="test_worksheet" time="0.070" /><testcase classname="openpyxl.writer.tests.test_excel" name="test_tables" time="0.311" /><testcase classname="openpyxl.writer.tests.test_excel" name="test_drawing" time="0.048" /><testcase classname="openpyxl.writer.tests.test_excel" name="test_write_chart" time="0.105" /><testcase classname="openpyxl.writer.tests.test_excel" name="test_write_images" time="0.018" /><testcase classname="openpyxl.writer.tests.test_excel" name="test_chartsheet" time="0.057" /><testcase classname="openpyxl.writer.tests.test_excel" name="test_comment" time="0.076" /><testcase classname="openpyxl.writer.tests.test_excel" name="test_duplicate_comment" time="0.103" /><testcase classname="openpyxl.writer.tests.test_excel" name="test_merge_vba" time="0.384" /><testcase classname="openpyxl.writer.tests.test_excel" name="test_duplicate_chart" time="0.049" /><testcase classname="openpyxl.writer.tests.test_excel" name="test_write_empty_workbook" time="0.187" /><testcase classname="openpyxl.writer.tests.test_excel" name="test_write_virtual_workbook" time="0.514" /><testcase classname="openpyxl.writer.tests.test_template" name="test_workbook_is_template[empty.xlsx-False]" time="0.398" /><testcase classname="openpyxl.writer.tests.test_template" name="test_workbook_is_template[empty.xlsm-False]" time="0.169" /><testcase classname="openpyxl.writer.tests.test_template" name="test_workbook_is_template[empty.xltx-True]" time="0.172" /><testcase classname="openpyxl.writer.tests.test_template" name="test_workbook_is_template[empty.xltm-True]" time="0.160" /><testcase classname="openpyxl.writer.tests.test_template" name="test_xl_content_type[empty.xlsx-application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml]" time="0.022" /><testcase classname="openpyxl.writer.tests.test_template" name="test_xl_content_type[empty.xlsm-application/vnd.ms-excel.sheet.macroEnabled.main+xml]" time="0.099" /><testcase classname="openpyxl.writer.tests.test_template" name="test_xl_content_type[empty.xltx-application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml]" time="0.033" /><testcase classname="openpyxl.writer.tests.test_template" name="test_xl_content_type[empty.xltm-application/vnd.ms-excel.template.macroEnabled.main+xml]" time="0.021" /><testcase classname="openpyxl.writer.tests.test_template" name="test_save_xl_as_no_template[empty.xlsx-False-application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml]" time="0.833" /><testcase classname="openpyxl.writer.tests.test_template" name="test_save_xl_as_no_template[empty.xlsm-True-application/vnd.ms-excel.sheet.macroEnabled.main+xml]" time="0.520" /><testcase classname="openpyxl.writer.tests.test_template" name="test_save_xl_as_no_template[empty.xltx-False-application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml]" time="0.603" /><testcase classname="openpyxl.writer.tests.test_template" name="test_save_xl_as_no_template[empty.xltm-True-application/vnd.ms-excel.sheet.macroEnabled.main+xml]" time="0.588" /><testcase classname="openpyxl.writer.tests.test_template" name="test_save_xl_as_template[empty.xlsx-False-application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml]" time="0.928" /><testcase classname="openpyxl.writer.tests.test_template" name="test_save_xl_as_template[empty.xlsm-True-application/vnd.ms-excel.template.macroEnabled.main+xml]" time="3.118" /><testcase classname="openpyxl.writer.tests.test_template" name="test_save_xl_as_template[empty.xltx-False-application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml]" time="1.131" /><testcase classname="openpyxl.writer.tests.test_template" name="test_save_xl_as_template[empty.xltm-True-application/vnd.ms-excel.template.macroEnabled.main+xml]" time="0.421" /><testcase classname="openpyxl.xml.tests.test_functions" name="test_localtag[&lt;root xmlns='http://openpyxl.org/ns' /&gt;-root]" time="0.013" /><testcase classname="openpyxl.xml.tests.test_functions" name="test_localtag[&lt;root /&gt;-root]" time="0.012" /><testcase classname="openpyxl.xml.tests.test_functions" name="test_fromstring[&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;\n            &lt;!DOCTYPE foo [\n            &lt;!ELEMENT foo ANY &gt;\n            &lt;!ENTITY xxe SYSTEM &quot;file:///dev/random&quot; &gt;]&gt;\n            &lt;foo&gt;&amp;xxe;&lt;/foo&gt;]" time="0.005"><skipped type="pytest.skip" message="defusedxml is required to guard against these vulnerabilities">/workdir/openpyxl-3.0.10/conftest.py:24: defusedxml is required to guard against these vulnerabilities</skipped></testcase><testcase classname="openpyxl.xml.tests.test_functions" name="test_fromstring[&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n          &lt;!DOCTYPE xmlbomb [\n          &lt;!ENTITY a &quot;1234567890&quot; &gt;\n          &lt;!ENTITY b &quot;&amp;a;&amp;a;&amp;a;&amp;a;&amp;a;&amp;a;&amp;a;&amp;a;&quot;&gt;\n          &lt;!ENTITY c &quot;&amp;b;&amp;b;&amp;b;&amp;b;&amp;b;&amp;b;&amp;b;&amp;b;&quot;&gt;\n          &lt;!ENTITY d &quot;&amp;c;&amp;c;&amp;c;&amp;c;&amp;c;&amp;c;&amp;c;&amp;c;&quot;&gt;\n          ]&gt;\n          &lt;foo&gt;&amp;d;&lt;/foo&gt;]" time="0.004"><skipped type="pytest.skip" message="defusedxml is required to guard against these vulnerabilities">/workdir/openpyxl-3.0.10/conftest.py:24: defusedxml is required to guard against these vulnerabilities</skipped></testcase><testcase classname="openpyxl.xml.tests.test_functions" name="test_fromstring[&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n          &lt;!DOCTYPE test [\n          &lt;!ENTITY % one SYSTEM &quot;http://127.0.0.1:8100/x.xml&quot; &gt;\n          %one;\n          ]&gt;]" time="0.004"><skipped type="pytest.skip" message="defusedxml is required to guard against these vulnerabilities">/workdir/openpyxl-3.0.10/conftest.py:24: defusedxml is required to guard against these vulnerabilities</skipped></testcase><testcase classname="openpyxl.xml.tests.test_functions" name="test_fromstring[&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;\n        &lt;!DOCTYPE bomb [\n        &lt;!ENTITY a &quot;{loads_of_bs}&quot;&gt;\n        ]&gt;\n        &lt;foo&gt;&amp;a;&amp;a;&amp;a;&lt;/foo&gt;]" time="0.003"><skipped type="pytest.skip" message="defusedxml is required to guard against these vulnerabilities">/workdir/openpyxl-3.0.10/conftest.py:24: defusedxml is required to guard against these vulnerabilities</skipped></testcase><testcase classname="openpyxl.xml.tests.test_functions" name="test_iterparse[&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;\n            &lt;!DOCTYPE foo [\n            &lt;!ELEMENT foo ANY &gt;\n            &lt;!ENTITY xxe SYSTEM &quot;file:///dev/random&quot; &gt;]&gt;\n            &lt;foo&gt;&amp;xxe;&lt;/foo&gt;]" time="0.011" /><testcase classname="openpyxl.xml.tests.test_functions" name="test_iterparse[&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n          &lt;!DOCTYPE xmlbomb [\n          &lt;!ENTITY a &quot;1234567890&quot; &gt;\n          &lt;!ENTITY b &quot;&amp;a;&amp;a;&amp;a;&amp;a;&amp;a;&amp;a;&amp;a;&amp;a;&quot;&gt;\n          &lt;!ENTITY c &quot;&amp;b;&amp;b;&amp;b;&amp;b;&amp;b;&amp;b;&amp;b;&amp;b;&quot;&gt;\n          &lt;!ENTITY d &quot;&amp;c;&amp;c;&amp;c;&amp;c;&amp;c;&amp;c;&amp;c;&amp;c;&quot;&gt;\n          ]&gt;\n          &lt;foo&gt;&amp;d;&lt;/foo&gt;]" time="0.008" /><testcase classname="openpyxl.xml.tests.test_functions" name="test_iterparse[&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n          &lt;!DOCTYPE test [\n          &lt;!ENTITY % one SYSTEM &quot;http://127.0.0.1:8100/x.xml&quot; &gt;\n          %one;\n          ]&gt;]" time="0.012" /><testcase classname="openpyxl.xml.tests.test_functions" name="test_iterparse[&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;\n        &lt;!DOCTYPE bomb [\n        &lt;!ENTITY a &quot;{loads_of_bs}&quot;&gt;\n        ]&gt;\n        &lt;foo&gt;&amp;a;&amp;a;&amp;a;&lt;/foo&gt;]" time="0.022" /></testsuite></testsuites>