<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="2" skipped="0" tests="110" time="431.321" timestamp="2023-11-30T03:07:44.037000" hostname="be2d8ee410eb"><testcase classname="testbook.tests.test_client" name="test_cell_index[2-2]" time="13.914" /><testcase classname="testbook.tests.test_client" name="test_cell_index[hello-1]" time="0.013" /><testcase classname="testbook.tests.test_client" name="test_cell_index_raises_error[cell_index_args0-TypeError]" time="0.012" /><testcase classname="testbook.tests.test_client" name="test_cell_index_raises_error[non-existent-tag-TestbookCellTagNotFoundError]" time="0.010" /><testcase classname="testbook.tests.test_client" name="test_value[sample_dict-expected_result0]" time="0.281" /><testcase classname="testbook.tests.test_client" name="test_value[sample_list-expected_result1]" time="0.296" /><testcase classname="testbook.tests.test_client" name="test_value[sample_list + [&quot;hello world&quot;]-expected_result2]" time="0.299" /><testcase classname="testbook.tests.test_client" name="test_value[sample_int-42]" time="0.366" /><testcase classname="testbook.tests.test_client" name="test_value[sample_int * 2-84]" time="0.275" /><testcase classname="testbook.tests.test_client" name="test_value[sample_str-hello world]" time="0.260" /><testcase classname="testbook.tests.test_client" name="test_value[sample_str + &quot; foo&quot;-hello world foo]" time="0.356" /><testcase classname="testbook.tests.test_client" name="test_value_raises_error[sample_int *= 2]" time="0.129" /><testcase classname="testbook.tests.test_client" name="test_value_raises_error[print(sample_int)]" time="0.163" /><testcase classname="testbook.tests.test_client" name="test_value_raises_error[]" time="0.013" /><testcase classname="testbook.tests.test_client" name="test_output_text[cell0-\n            hello world\n            foo\n            bar\n            ]" time="0.009" /><testcase classname="testbook.tests.test_client" name="test_output_text[cell1-]" time="0.008" /><testcase classname="testbook.tests.test_client" name="test_output_text_raises_error[cell0]" time="0.006" /><testcase classname="testbook.tests.test_client" name="test_output_text_raises_error[cell1]" time="0.007" /><testcase classname="testbook.tests.test_client" name="test_cell_execute_result_index" time="13.095" /><testcase classname="testbook.tests.test_client" name="test_cell_execute_result_tag" time="14.580" /><testcase classname="testbook.tests.test_client" name="test_cell_execute_result_indexerror" time="14.489" /><testcase classname="testbook.tests.test_client" name="test_cell_execute_result_tagnotfound" time="11.133" /><testcase classname="testbook.tests.test_datamodel" name="test_len" time="10.397" /><testcase classname="testbook.tests.test_datamodel" name="test_iter" time="0.720" /><testcase classname="testbook.tests.test_datamodel" name="test_getitem" time="0.538" /><testcase classname="testbook.tests.test_datamodel" name="test_getitem_raisesIndexError" time="0.510" /><testcase classname="testbook.tests.test_datamodel" name="test_getitem_raisesTypeError" time="0.493" /><testcase classname="testbook.tests.test_datamodel" name="test_setitem" time="1.246" /><testcase classname="testbook.tests.test_datamodel" name="test_setitem_raisesIndexError" time="0.535" /><testcase classname="testbook.tests.test_datamodel" name="test_setitem_raisesTypeError" time="0.460" /><testcase classname="testbook.tests.test_datamodel" name="test_contains" time="1.679" /><testcase classname="testbook.tests.test_execute" name="test_execute_cell" time="14.905" /><testcase classname="testbook.tests.test_execute" name="test_execute_and_show_pandas_output" time="0.196" /><testcase classname="testbook.tests.test_execute" name="test_execute_cell_tags" time="0.301" /><testcase classname="testbook.tests.test_execute" name="test_execute_cell_raises_error" time="2.336" /><testcase classname="testbook.tests.test_execute" name="test_testbook_with_execute" time="0.115" /><testcase classname="testbook.tests.test_execute" name="test_testbook_with_execute_context_manager" time="0.103" /><testcase classname="testbook.tests.test_execute" name="test_testbook_range" time="28.849" /><testcase classname="testbook.tests.test_execute" name="test_testbook_slice[slice_params0-6]" time="26.821" /><testcase classname="testbook.tests.test_execute" name="test_testbook_slice[slice_params1-4]" time="21.603" /><testcase classname="testbook.tests.test_execute" name="test_testbook_slice_raises_error" time="8.794" /><testcase classname="testbook.tests.test_execute" name="test_raise_exception" time="19.381" /><testcase classname="testbook.tests.test_execute" name="test_underscore" time="22.533" /><testcase classname="testbook.tests.test_inject" name="test_inject[None-None]" time="11.395" /><testcase classname="testbook.tests.test_inject" name="test_inject[args1-None]" time="0.114" /><testcase classname="testbook.tests.test_inject" name="test_inject[args2-None]" time="0.101" /><testcase classname="testbook.tests.test_inject" name="test_inject[args3-None]" time="0.098" /><testcase classname="testbook.tests.test_inject" name="test_inject[args4-None]" time="0.150" /><testcase classname="testbook.tests.test_inject" name="test_inject[args5-None]" time="0.119" /><testcase classname="testbook.tests.test_inject" name="test_inject[args6-None]" time="0.086" /><testcase classname="testbook.tests.test_inject" name="test_inject[args7-kwargs7]" time="0.084" /><testcase classname="testbook.tests.test_inject" name="test_inject[args8-kwargs8]" time="0.095" /><testcase classname="testbook.tests.test_inject" name="test_inject_code_block[\n            def foo():\n                print('I ran in the code block')\n            foo()\n        -I ran in the code block]" time="0.099" /><testcase classname="testbook.tests.test_inject" name="test_inject_code_block[\n            def foo(arg):\n                print(f'You passed {arg}')\n            foo('bar')\n        -You passed bar]" time="0.138" /><testcase classname="testbook.tests.test_inject" name="test_inject_raises_exception" time="0.006" /><testcase classname="testbook.tests.test_inject" name="test_inject_before_after" time="0.100" /><testcase classname="testbook.tests.test_inject" name="test_inject_pop" time="1.119" /><testcase classname="testbook.tests.test_patch.TestPatch" name="test_patch_basic[os.listdir-listdir]" time="14.848" /><testcase classname="testbook.tests.test_patch.TestPatch" name="test_patch_basic[os.popen-get_branch]" time="3.175"><failure message="testbook.exceptions.TestbookRuntimeError: An error occurred while executing the following cell:&#10;------------------&#10;&#10;_mock_rgmycrbaug.assert_called_once(*[], **{})&#10;&#10;------------------&#10;&#10;&#10;#x1B[0;31m---------------------------------------------------------------------------#x1B[0m&#10;#x1B[0;31mAssertionError#x1B[0m                            Traceback (most recent call last)&#10;Cell #x1B[0;32mIn[20], line 1#x1B[0m&#10;#x1B[0;32m----&gt; 1#x1B[0m _mock_rgmycrbaug#x1B[38;5;241m.#x1B[39massert_called_once(#x1B[38;5;241m*#x1B[39m[], #x1B[38;5;241m*#x1B[39m#x1B[38;5;241m*#x1B[39m{})&#10;&#10;File #x1B[0;32m/opt/graalpy/lib/python3.10/unittest/mock.py:898#x1B[0m, in #x1B[0;36mNonCallableMock.assert_called_once#x1B[0;34m(self)#x1B[0m&#10;#x1B[1;32m    893#x1B[0m #x1B[38;5;28;01mif#x1B[39;00m #x1B[38;5;129;01mnot#x1B[39;00m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mcall_count #x1B[38;5;241m==#x1B[39m #x1B[38;5;241m1#x1B[39m:&#10;#x1B[1;32m    894#x1B[0m     msg #x1B[38;5;241m=#x1B[39m (#x1B[38;5;124m&quot;#x1B[39m#x1B[38;5;124mExpected #x1B[39m#x1B[38;5;124m'#x1B[39m#x1B[38;5;132;01m%s#x1B[39;00m#x1B[38;5;124m'#x1B[39m#x1B[38;5;124m to have been called once. Called #x1B[39m#x1B[38;5;132;01m%s#x1B[39;00m#x1B[38;5;124m times.#x1B[39m#x1B[38;5;132;01m%s#x1B[39;00m#x1B[38;5;124m&quot;#x1B[39m&#10;#x1B[1;32m    895#x1B[0m            #x1B[38;5;241m%#x1B[39m (#x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39m_mock_name #x1B[38;5;129;01mor#x1B[39;00m #x1B[38;5;124m'#x1B[39m#x1B[38;5;124mmock#x1B[39m#x1B[38;5;124m'#x1B[39m,&#10;#x1B[1;32m    896#x1B[0m               #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mcall_count,&#10;#x1B[1;32m    897#x1B[0m               #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39m_calls_repr()))&#10;#x1B[0;32m--&gt; 898#x1B[0m     #x1B[38;5;28;01mraise#x1B[39;00m #x1B[38;5;167;01mAssertionError#x1B[39;00m(msg)&#10;&#10;#x1B[0;31mAssertionError#x1B[0m: Expected 'popen' to have been called once. Called 0 times.">Traceback (most recent call last):
  File "/workdir/testbook-0.4.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    result: Optional[TResult] = func()
  File "/workdir/testbook-0.4.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 262, in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/workdir/testbook-0.4.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/testbook-0.4.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/testbook-0.4.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/testbook-0.4.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/testbook-0.4.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/testbook-0.4.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 177, in pytest_runtest_call
    raise e
  File "/workdir/testbook-0.4.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 169, in pytest_runtest_call
    item.runtest()
  File "/workdir/testbook-0.4.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 1792, in runtest
    self.ihook.pytest_pyfunc_call(pyfuncitem=self)
  File "/workdir/testbook-0.4.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/testbook-0.4.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/testbook-0.4.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 113, in _multicall
    raise exception.with_traceback(exception.__traceback__)
  File "/workdir/testbook-0.4.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/testbook-0.4.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 194, in pytest_pyfunc_call
    result = testfunction(**testargs)
  File "/workdir/testbook-0.4.2/testbook/tests/test_patch.py", line 20, in test_patch_basic
    mock_obj.assert_called_once()
  File "/workdir/testbook-0.4.2/testbook/reference.py", line 85, in __call__
    return self.tb.value(code)
  File "/workdir/testbook-0.4.2/testbook/client.py", line 273, in value
    result = self.inject(code, pop=True)
  File "/workdir/testbook-0.4.2/testbook/client.py", line 237, in inject
    cell = TestbookNode(self.execute_cell(inject_idx)) if run else TestbookNode(code_cell)
  File "/workdir/testbook-0.4.2/testbook/client.py", line 135, in execute_cell
    raise TestbookRuntimeError(ce.evalue, ce, self._get_error_class(ce.ename))
testbook.exceptions.TestbookRuntimeError: An error occurred while executing the following cell:
------------------

_mock_rgmycrbaug.assert_called_once(*[], **{})

------------------


#x1B[0;31m---------------------------------------------------------------------------#x1B[0m
#x1B[0;31mAssertionError#x1B[0m                            Traceback (most recent call last)
Cell #x1B[0;32mIn[20], line 1#x1B[0m
#x1B[0;32m----&gt; 1#x1B[0m _mock_rgmycrbaug#x1B[38;5;241m.#x1B[39massert_called_once(#x1B[38;5;241m*#x1B[39m[], #x1B[38;5;241m*#x1B[39m#x1B[38;5;241m*#x1B[39m{})

File #x1B[0;32m/opt/graalpy/lib/python3.10/unittest/mock.py:898#x1B[0m, in #x1B[0;36mNonCallableMock.assert_called_once#x1B[0;34m(self)#x1B[0m
#x1B[1;32m    893#x1B[0m #x1B[38;5;28;01mif#x1B[39;00m #x1B[38;5;129;01mnot#x1B[39;00m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mcall_count #x1B[38;5;241m==#x1B[39m #x1B[38;5;241m1#x1B[39m:
#x1B[1;32m    894#x1B[0m     msg #x1B[38;5;241m=#x1B[39m (#x1B[38;5;124m"#x1B[39m#x1B[38;5;124mExpected #x1B[39m#x1B[38;5;124m'#x1B[39m#x1B[38;5;132;01m%s#x1B[39;00m#x1B[38;5;124m'#x1B[39m#x1B[38;5;124m to have been called once. Called #x1B[39m#x1B[38;5;132;01m%s#x1B[39;00m#x1B[38;5;124m times.#x1B[39m#x1B[38;5;132;01m%s#x1B[39;00m#x1B[38;5;124m"#x1B[39m
#x1B[1;32m    895#x1B[0m            #x1B[38;5;241m%#x1B[39m (#x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39m_mock_name #x1B[38;5;129;01mor#x1B[39;00m #x1B[38;5;124m'#x1B[39m#x1B[38;5;124mmock#x1B[39m#x1B[38;5;124m'#x1B[39m,
#x1B[1;32m    896#x1B[0m               #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mcall_count,
#x1B[1;32m    897#x1B[0m               #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39m_calls_repr()))
#x1B[0;32m--&gt; 898#x1B[0m     #x1B[38;5;28;01mraise#x1B[39;00m #x1B[38;5;167;01mAssertionError#x1B[39;00m(msg)

#x1B[0;31mAssertionError#x1B[0m: Expected 'popen' to have been called once. Called 0 times.</failure></testcase><testcase classname="testbook.tests.test_patch.TestPatch" name="test_patch_raises_error[os.listdir-listdir]" time="0.569" /><testcase classname="testbook.tests.test_patch.TestPatch" name="test_patch_raises_error[os.popen-get_branch]" time="0.581" /><testcase classname="testbook.tests.test_patch.TestPatch" name="test_patch_return_value" time="0.608"><failure message="AssertionError">Traceback (most recent call last):
  File "/workdir/testbook-0.4.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    result: Optional[TResult] = func()
  File "/workdir/testbook-0.4.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 262, in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/workdir/testbook-0.4.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/testbook-0.4.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/testbook-0.4.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/testbook-0.4.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/testbook-0.4.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/testbook-0.4.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 177, in pytest_runtest_call
    raise e
  File "/workdir/testbook-0.4.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 169, in pytest_runtest_call
    item.runtest()
  File "/workdir/testbook-0.4.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 1792, in runtest
    self.ihook.pytest_pyfunc_call(pyfuncitem=self)
  File "/workdir/testbook-0.4.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/testbook-0.4.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/testbook-0.4.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 113, in _multicall
    raise exception.with_traceback(exception.__traceback__)
  File "/workdir/testbook-0.4.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/testbook-0.4.2/.tox/graalpylibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 194, in pytest_pyfunc_call
    result = testfunction(**testargs)
  File "/workdir/testbook-0.4.2/testbook/tests/test_patch.py", line 31, in test_patch_return_value
    assert tb.ref("listdir")() == ['file1', 'file2']
AssertionError</failure></testcase><testcase classname="testbook.tests.test_patch.TestPatchDict" name="test_patch_dict[os.environ-values0]" time="2.663" /><testcase classname="testbook.tests.test_reference" name="test_create_reference" time="9.982" /><testcase classname="testbook.tests.test_reference" name="test_create_reference_getitem" time="0.565" /><testcase classname="testbook.tests.test_reference" name="test_create_reference_get" time="0.506" /><testcase classname="testbook.tests.test_reference" name="test_eq_in_notebook" time="0.504" /><testcase classname="testbook.tests.test_reference" name="test_eq_in_notebook_ref" time="1.006" /><testcase classname="testbook.tests.test_reference" name="test_function_call" time="3.780" /><testcase classname="testbook.tests.test_reference" name="test_function_call_with_ref_object" time="1.440" /><testcase classname="testbook.tests.test_reference" name="test_reference" time="5.577" /><testcase classname="testbook.tests.test_testbook" name="test_testbook_execute_all_cells" time="11.029" /><testcase classname="testbook.tests.test_testbook" name="test_testbook_class_decorator" time="9.833" /><testcase classname="testbook.tests.test_testbook" name="test_testbook_class_decorator_execute_none" time="10.289" /><testcase classname="testbook.tests.test_testbook" name="test_testbook_decorator_with_fixture" time="11.833" /><testcase classname="testbook.tests.test_testbook" name="test_testbook_decorator_with_markers[2-2]" time="10.110" /><testcase classname="testbook.tests.test_testbook" name="test_testbook_decorator_with_markers[hello-1]" time="11.735" /><testcase classname="testbook.tests.test_testbook" name="test_testbook_decorator_with_markers_order_does_not_matter[2-2]" time="9.651" /><testcase classname="testbook.tests.test_testbook" name="test_testbook_decorator_with_markers_order_does_not_matter[hello-1]" time="11.077" /><testcase classname="testbook.tests.test_testbook" name="test_testbook_execute_all_cells_context_manager" time="11.368" /><testcase classname="testbook.tests.test_testbook" name="test_testbook_class_decorator_context_manager" time="10.300" /><testcase classname="testbook.tests.test_testbook" name="test_testbook_class_decorator_execute_none_context_manager" time="10.083" /><testcase classname="testbook.tests.test_testbook" name="test_testbook_with_file_object" time="8.825" /><testcase classname="testbook.tests.test_testbook" name="test_testbook_with_notebook_node" time="10.327" /><testcase classname="testbook.tests.test_translators" name="test_translate_type_python[foo-&quot;foo&quot;]" time="0.004" /><testcase classname="testbook.tests.test_translators" name="test_translate_type_python[{&quot;foo&quot;: &quot;bar&quot;}-&quot;{\\&quot;foo\\&quot;: \\&quot;bar\\&quot;}&quot;]" time="0.004" /><testcase classname="testbook.tests.test_translators" name="test_translate_type_python[test_input2-{&quot;foo&quot;: &quot;bar&quot;}]" time="0.004" /><testcase classname="testbook.tests.test_translators" name="test_translate_type_python[test_input3-{&quot;foo&quot;: &quot;\\&quot;bar\\&quot;&quot;}]" time="0.004" /><testcase classname="testbook.tests.test_translators" name="test_translate_type_python[test_input4-{&quot;foo&quot;: [&quot;bar&quot;]}]" time="0.004" /><testcase classname="testbook.tests.test_translators" name="test_translate_type_python[test_input5-{&quot;foo&quot;: {&quot;bar&quot;: &quot;baz&quot;}}]" time="0.004" /><testcase classname="testbook.tests.test_translators" name="test_translate_type_python[test_input6-{&quot;foo&quot;: {&quot;bar&quot;: &quot;\\&quot;baz\\&quot;&quot;}}]" time="0.004" /><testcase classname="testbook.tests.test_translators" name="test_translate_type_python[test_input7-[&quot;foo&quot;]]" time="0.004" /><testcase classname="testbook.tests.test_translators" name="test_translate_type_python[test_input8-[&quot;foo&quot;, &quot;\\&quot;bar\\&quot;&quot;]]" time="0.004" /><testcase classname="testbook.tests.test_translators" name="test_translate_type_python[test_input9-[{&quot;foo&quot;: &quot;bar&quot;}]]" time="0.003" /><testcase classname="testbook.tests.test_translators" name="test_translate_type_python[test_input10-[{&quot;foo&quot;: &quot;\\&quot;bar\\&quot;&quot;}]]" time="0.004" /><testcase classname="testbook.tests.test_translators" name="test_translate_type_python[12345-12345]" time="0.004" /><testcase classname="testbook.tests.test_translators" name="test_translate_type_python[-54321--54321]" time="0.004" /><testcase classname="testbook.tests.test_translators" name="test_translate_type_python[1.2345-1.2345]" time="0.004" /><testcase classname="testbook.tests.test_translators" name="test_translate_type_python[-5432.1--5432.1]" time="0.004" /><testcase classname="testbook.tests.test_translators" name="test_translate_type_python[nan-float('nan')]" time="0.004" /><testcase classname="testbook.tests.test_translators" name="test_translate_type_python[-inf-float('-inf')]" time="0.003" /><testcase classname="testbook.tests.test_translators" name="test_translate_type_python[inf-float('inf')]" time="0.003" /><testcase classname="testbook.tests.test_translators" name="test_translate_type_python[True-True]" time="0.003" /><testcase classname="testbook.tests.test_translators" name="test_translate_type_python[False-False]" time="0.003" /><testcase classname="testbook.tests.test_translators" name="test_translate_type_python[None-None]" time="0.003" /><testcase classname="testbook.tests.test_translators" name="test_translate_type_python[test_input21-&quot;&lt;Foo val='bar'&gt;&quot;]" time="0.004" /><testcase classname="testbook.tests.test_translators" name="test_translate_float[3.14-3.14]" time="0.003" /><testcase classname="testbook.tests.test_translators" name="test_translate_float[False-false]" time="0.004" /><testcase classname="testbook.tests.test_translators" name="test_translate_float[True-true]" time="0.003" /><testcase classname="testbook.tests.test_translators" name="test_translate_assign" time="0.003" /></testsuite></testsuites>