<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="9" skipped="65" tests="1206" time="4.663" timestamp="2023-11-21T04:16:10.748403" hostname="b80581c01e0f"><testcase classname="tests.test_address.IPv4Tests" name="test_invalid" file="tests/test_address.py" line="28" time="0.001" /><testcase classname="tests.test_address.IPv4Tests" name="test_valid" file="tests/test_address.py" line="11" time="0.001" /><testcase classname="tests.test_address.IPv6Tests" name="test_invalid" file="tests/test_address.py" line="267" time="0.003" /><testcase classname="tests.test_address.IPv6Tests" name="test_valid" file="tests/test_address.py" line="81" time="0.002" /><testcase classname="tests.test_async.AsyncDetectionTests" name="test_get_default_backend" file="tests/test_async.py" line="103" time="0.003" /><testcase classname="tests.test_async.AsyncDetectionTests" name="test_sniff" file="tests/test_async.py" line="97" time="0.001" /><testcase classname="tests.test_async.NoSniffioAsyncDetectionTests" name="test_get_default_backend" file="tests/test_async.py" line="130" time="0.001" /><testcase classname="tests.test_async.NoSniffioAsyncDetectionTests" name="test_sniff" file="tests/test_async.py" line="119" time="0.001" /><testcase classname="tests.test_async.MiscBackend" name="test_bogus_backend" file="tests/test_async.py" line="149" time="0.001" /><testcase classname="tests.test_async.MiscBackend" name="test_sniff_without_run_loop" file="tests/test_async.py" line="143" time="0.001" /><testcase classname="tests.test_async.MiscQuery" name="test_source_tuple" file="tests/test_async.py" line="156" time="0.001" /><testcase classname="tests.test_async.AsyncTests" name="testCanonicalNameCNAME" file="tests/test_async.py" line="210" time="0.049" /><testcase classname="tests.test_async.AsyncTests" name="testCanonicalNameDangling" file="tests/test_async.py" line="217" time="0.090"><failure message="AssertionError: &lt;DNS name dangling-cname.dnspython.org.&gt; != &lt;DNS name dangling-target.dnspython.org.&gt;">Traceback (most recent call last):
  File "/usr/local/lib/python3.10/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/local/lib/python3.10/unittest/case.py", line 591, in run
    self._callTestMethod(testMethod)
  File "/usr/local/lib/python3.10/unittest/case.py", line 549, in _callTestMethod
    method()
  File "/workdir/dnspython-2.2.1/tests/test_async.py", line 224, in testCanonicalNameDangling
    self.assertEqual(self.async_run(run), cname)
  File "/usr/local/lib/python3.10/unittest/case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "/usr/local/lib/python3.10/unittest/case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: &lt;DNS name dangling-cname.dnspython.org.&gt; != &lt;DNS name dangling-target.dnspython.org.&gt;</failure></testcase><testcase classname="tests.test_async.AsyncTests" name="testCanonicalNameNoCNAME" file="tests/test_async.py" line="204" time="0.008" /><testcase classname="tests.test_async.AsyncTests" name="testDOHGetRequest" file="tests/test_async.py" line="430" time="0.000"><skipped type="pytest.skip" message="httpx not available">/workdir/dnspython-2.2.1/tests/test_async.py:431: httpx not available</skipped></testcase><testcase classname="tests.test_async.AsyncTests" name="testDOHGetRequestHttp1" file="tests/test_async.py" line="442" time="0.000"><skipped type="pytest.skip" message="httpx not available">/workdir/dnspython-2.2.1/tests/test_async.py:443: httpx not available</skipped></testcase><testcase classname="tests.test_async.AsyncTests" name="testDOHPostRequest" file="tests/test_async.py" line="459" time="0.000"><skipped type="pytest.skip" message="httpx not available">/workdir/dnspython-2.2.1/tests/test_async.py:460: httpx not available</skipped></testcase><testcase classname="tests.test_async.AsyncTests" name="testQueryTCP" file="tests/test_async.py" line="294" time="0.023" /><testcase classname="tests.test_async.AsyncTests" name="testQueryTCPWithSocket" file="tests/test_async.py" line="308" time="0.022" /><testcase classname="tests.test_async.AsyncTests" name="testQueryTLS" file="tests/test_async.py" line="330" time="0.057" /><testcase classname="tests.test_async.AsyncTests" name="testQueryTLSWithSocket" file="tests/test_async.py" line="345" time="0.057" /><testcase classname="tests.test_async.AsyncTests" name="testQueryUDP" file="tests/test_async.py" line="258" time="0.016" /><testcase classname="tests.test_async.AsyncTests" name="testQueryUDPFallback" file="tests/test_async.py" line="371" time="0.034" /><testcase classname="tests.test_async.AsyncTests" name="testQueryUDPFallbackNoFallback" file="tests/test_async.py" line="381" time="0.011" /><testcase classname="tests.test_async.AsyncTests" name="testQueryUDPWithSocket" file="tests/test_async.py" line="272" time="0.011" /><testcase classname="tests.test_async.AsyncTests" name="testResolve" file="tests/test_async.py" line="189" time="0.007" /><testcase classname="tests.test_async.AsyncTests" name="testResolveAddress" file="tests/test_async.py" line="197" time="0.008"><failure message="dns.resolver.NoAnswer: The DNS response does not contain an answer to the question: 8.8.8.8.in-addr.arpa. IN PTR">Traceback (most recent call last):
  File "/usr/local/lib/python3.10/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/local/lib/python3.10/unittest/case.py", line 591, in run
    self._callTestMethod(testMethod)
  File "/usr/local/lib/python3.10/unittest/case.py", line 549, in _callTestMethod
    method()
  File "/workdir/dnspython-2.2.1/tests/test_async.py", line 201, in testResolveAddress
    answer = self.async_run(run)
  File "/workdir/dnspython-2.2.1/tests/test_async.py", line 188, in async_run
    return runner(afunc())
  File "/usr/local/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/workdir/dnspython-2.2.1/tests/test_async.py", line 200, in run
    return await dns.asyncresolver.resolve_address('8.8.8.8')
  File "/workdir/dnspython-2.2.1/dns/asyncresolver.py", line 195, in resolve_address
    return await get_default_resolver().resolve_address(ipaddr, *args, **kwargs)
  File "/workdir/dnspython-2.2.1/dns/asyncresolver.py", line 120, in resolve_address
    return await self.resolve(dns.reversename.from_address(ipaddr),
  File "/workdir/dnspython-2.2.1/dns/asyncresolver.py", line 96, in resolve
    (answer, done) = resolution.query_result(response, None)
  File "/workdir/dnspython-2.2.1/dns/resolver.py", line 696, in query_result
    raise NoAnswer(response=answer.response)
dns.resolver.NoAnswer: The DNS response does not contain an answer to the question: 8.8.8.8.in-addr.arpa. IN PTR</failure></testcase><testcase classname="tests.test_async.AsyncTests" name="testResolverDOH" file="tests/test_async.py" line="471" time="0.001"><skipped type="pytest.skip" message="httpx not available">/workdir/dnspython-2.2.1/tests/test_async.py:472: httpx not available</skipped></testcase><testcase classname="tests.test_async.AsyncTests" name="testSleep" file="tests/test_async.py" line="484" time="0.102" /><testcase classname="tests.test_async.AsyncTests" name="testUDPReceiveQuery" file="tests/test_async.py" line="391" time="0.002" /><testcase classname="tests.test_async.AsyncTests" name="testUDPReceiveTimeout" file="tests/test_async.py" line="412" time="0.052" /><testcase classname="tests.test_async.AsyncTests" name="testZoneForName1" file="tests/test_async.py" line="226" time="0.035" /><testcase classname="tests.test_async.AsyncTests" name="testZoneForName2" file="tests/test_async.py" line="234" time="0.078" /><testcase classname="tests.test_async.AsyncTests" name="testZoneForName3" file="tests/test_async.py" line="242" time="0.003" /><testcase classname="tests.test_async.AsyncTests" name="testZoneForName4" file="tests/test_async.py" line="250" time="0.001" /><testcase classname="tests.test_bugs.BugsTestCase" name="test_CAA_from_wire" file="tests/test_bugs.py" line="56" time="0.002" /><testcase classname="tests.test_bugs.BugsTestCase" name="test_SOA_BIND8_TTL" file="tests/test_bugs.py" line="37" time="0.001" /><testcase classname="tests.test_bugs.BugsTestCase" name="test_TXT_conversions" file="tests/test_bugs.py" line="80" time="0.001" /><testcase classname="tests.test_bugs.BugsTestCase" name="test_empty_NSEC3_window" file="tests/test_bugs.py" line="44" time="0.002" /><testcase classname="tests.test_bugs.BugsTestCase" name="test_float_LOC" file="tests/test_bugs.py" line="31" time="0.001" /><testcase classname="tests.test_bugs.BugsTestCase" name="test_trailing_zero_APL" file="tests/test_bugs.py" line="68" time="0.001" /><testcase classname="tests.test_bugs.BugsTestCase" name="test_zero_size_APL" file="tests/test_bugs.py" line="49" time="0.001" /><testcase classname="tests.test_constants.ConstantsTestCase" name="test_dnssec_constants" file="tests/test_constants.py" line="18" time="0.001" /><testcase classname="tests.test_constants.ConstantsTestCase" name="test_edns_constants" file="tests/test_constants.py" line="36" time="0.001" /><testcase classname="tests.test_constants.ConstantsTestCase" name="test_flags_constants" file="tests/test_constants.py" line="23" time="0.000" /><testcase classname="tests.test_constants.ConstantsTestCase" name="test_message_constants" file="tests/test_constants.py" line="28" time="0.000" /><testcase classname="tests.test_constants.ConstantsTestCase" name="test_rdata_constants" file="tests/test_constants.py" line="32" time="0.001" /><testcase classname="tests.test_dnssec.DNSSECValidatorTestCase" name="testAbsoluteDSABad" file="tests/test_dnssec.py" line="302" time="0.000"><skipped type="pytest.skip" message="Python Cryptography cannot be imported">/workdir/dnspython-2.2.1/tests/test_dnssec.py:303: Python Cryptography cannot be imported</skipped></testcase><testcase classname="tests.test_dnssec.DNSSECValidatorTestCase" name="testAbsoluteDSAGood" file="tests/test_dnssec.py" line="298" time="0.000"><skipped type="pytest.skip" message="Python Cryptography cannot be imported">/workdir/dnspython-2.2.1/tests/test_dnssec.py:299: Python Cryptography cannot be imported</skipped></testcase><testcase classname="tests.test_dnssec.DNSSECValidatorTestCase" name="testAbsoluteECDSA256Bad" file="tests/test_dnssec.py" line="312" time="0.000"><skipped type="pytest.skip" message="Python Cryptography cannot be imported">/workdir/dnspython-2.2.1/tests/test_dnssec.py:313: Python Cryptography cannot be imported</skipped></testcase><testcase classname="tests.test_dnssec.DNSSECValidatorTestCase" name="testAbsoluteECDSA256Good" file="tests/test_dnssec.py" line="308" time="0.000"><skipped type="pytest.skip" message="Python Cryptography cannot be imported">/workdir/dnspython-2.2.1/tests/test_dnssec.py:309: Python Cryptography cannot be imported</skipped></testcase><testcase classname="tests.test_dnssec.DNSSECValidatorTestCase" name="testAbsoluteECDSA384Bad" file="tests/test_dnssec.py" line="322" time="0.000"><skipped type="pytest.skip" message="Python Cryptography cannot be imported">/workdir/dnspython-2.2.1/tests/test_dnssec.py:323: Python Cryptography cannot be imported</skipped></testcase><testcase classname="tests.test_dnssec.DNSSECValidatorTestCase" name="testAbsoluteECDSA384Good" file="tests/test_dnssec.py" line="318" time="0.000"><skipped type="pytest.skip" message="Python Cryptography cannot be imported">/workdir/dnspython-2.2.1/tests/test_dnssec.py:319: Python Cryptography cannot be imported</skipped></testcase><testcase classname="tests.test_dnssec.DNSSECValidatorTestCase" name="testAbsoluteED25519Bad" file="tests/test_dnssec.py" line="334" time="0.000"><skipped type="pytest.skip" message="Python Cryptography cannot be imported">/workdir/dnspython-2.2.1/tests/test_dnssec.py:335: Python Cryptography cannot be imported</skipped></testcase><testcase classname="tests.test_dnssec.DNSSECValidatorTestCase" name="testAbsoluteED25519Good" file="tests/test_dnssec.py" line="328" time="0.000"><skipped type="pytest.skip" message="Python Cryptography cannot be imported">/workdir/dnspython-2.2.1/tests/test_dnssec.py:329: Python Cryptography cannot be imported</skipped></testcase><testcase classname="tests.test_dnssec.DNSSECValidatorTestCase" name="testAbsoluteED448Bad" file="tests/test_dnssec.py" line="348" time="0.000"><skipped type="pytest.skip" message="Python Cryptography cannot be imported">/workdir/dnspython-2.2.1/tests/test_dnssec.py:349: Python Cryptography cannot be imported</skipped></testcase><testcase classname="tests.test_dnssec.DNSSECValidatorTestCase" name="testAbsoluteED448Good" file="tests/test_dnssec.py" line="342" time="0.000"><skipped type="pytest.skip" message="Python Cryptography cannot be imported">/workdir/dnspython-2.2.1/tests/test_dnssec.py:343: Python Cryptography cannot be imported</skipped></testcase><testcase classname="tests.test_dnssec.DNSSECValidatorTestCase" name="testAbsoluteKeyNotFound" file="tests/test_dnssec.py" line="411" time="0.000"><skipped type="pytest.skip" message="Python Cryptography cannot be imported">/workdir/dnspython-2.2.1/tests/test_dnssec.py:412: Python Cryptography cannot be imported</skipped></testcase><testcase classname="tests.test_dnssec.DNSSECValidatorTestCase" name="testAbsoluteRSABad" file="tests/test_dnssec.py" line="279" time="0.000"><skipped type="pytest.skip" message="Python Cryptography cannot be imported">/workdir/dnspython-2.2.1/tests/test_dnssec.py:280: Python Cryptography cannot be imported</skipped></testcase><testcase classname="tests.test_dnssec.DNSSECValidatorTestCase" name="testAbsoluteRSAGood" file="tests/test_dnssec.py" line="273" time="0.000"><skipped type="pytest.skip" message="Python Cryptography cannot be imported">/workdir/dnspython-2.2.1/tests/test_dnssec.py:274: Python Cryptography cannot be imported</skipped></testcase><testcase classname="tests.test_dnssec.DNSSECValidatorTestCase" name="testAbsoluteRSAMD5Good" file="tests/test_dnssec.py" line="265" time="0.000"><skipped type="pytest.skip" message="Python Cryptography cannot be imported">/workdir/dnspython-2.2.1/tests/test_dnssec.py:266: Python Cryptography cannot be imported</skipped></testcase><testcase classname="tests.test_dnssec.DNSSECValidatorTestCase" name="testAbsoluteRSASHA512Good" file="tests/test_dnssec.py" line="356" time="0.000"><skipped type="pytest.skip" message="Python Cryptography cannot be imported">/workdir/dnspython-2.2.1/tests/test_dnssec.py:357: Python Cryptography cannot be imported</skipped></testcase><testcase classname="tests.test_dnssec.DNSSECValidatorTestCase" name="testAlternateParameterFormats" file="tests/test_dnssec.py" line="386" time="0.000"><skipped type="pytest.skip" message="Python Cryptography cannot be imported">/workdir/dnspython-2.2.1/tests/test_dnssec.py:387: Python Cryptography cannot be imported</skipped></testcase><testcase classname="tests.test_dnssec.DNSSECValidatorTestCase" name="testDuplicateKeytag" file="tests/test_dnssec.py" line="276" time="0.000"><skipped type="pytest.skip" message="Python Cryptography cannot be imported">/workdir/dnspython-2.2.1/tests/test_dnssec.py:277: Python Cryptography cannot be imported</skipped></testcase><testcase classname="tests.test_dnssec.DNSSECValidatorTestCase" name="testGOSTNotSupported" file="tests/test_dnssec.py" line="437" time="0.000"><skipped type="pytest.skip" message="Python Cryptography cannot be imported">/workdir/dnspython-2.2.1/tests/test_dnssec.py:438: Python Cryptography cannot be imported</skipped></testcase><testcase classname="tests.test_dnssec.DNSSECValidatorTestCase" name="testOwnerNameMismatch" file="tests/test_dnssec.py" line="431" time="0.001"><skipped type="pytest.skip" message="Python Cryptography cannot be imported">/workdir/dnspython-2.2.1/tests/test_dnssec.py:432: Python Cryptography cannot be imported</skipped></testcase><testcase classname="tests.test_dnssec.DNSSECValidatorTestCase" name="testRSAMD5Keyid" file="tests/test_dnssec.py" line="269" time="0.000"><skipped type="pytest.skip" message="Python Cryptography cannot be imported">/workdir/dnspython-2.2.1/tests/test_dnssec.py:270: Python Cryptography cannot be imported</skipped></testcase><testcase classname="tests.test_dnssec.DNSSECValidatorTestCase" name="testRelativeRSABad" file="tests/test_dnssec.py" line="292" time="0.000"><skipped type="pytest.skip" message="Python Cryptography cannot be imported">/workdir/dnspython-2.2.1/tests/test_dnssec.py:293: Python Cryptography cannot be imported</skipped></testcase><testcase classname="tests.test_dnssec.DNSSECValidatorTestCase" name="testRelativeRSAGood" file="tests/test_dnssec.py" line="285" time="0.000"><skipped type="pytest.skip" message="Python Cryptography cannot be imported">/workdir/dnspython-2.2.1/tests/test_dnssec.py:286: Python Cryptography cannot be imported</skipped></testcase><testcase classname="tests.test_dnssec.DNSSECValidatorTestCase" name="testTimeBounds" file="tests/test_dnssec.py" line="416" time="0.000"><skipped type="pytest.skip" message="Python Cryptography cannot be imported">/workdir/dnspython-2.2.1/tests/test_dnssec.py:417: Python Cryptography cannot be imported</skipped></testcase><testcase classname="tests.test_dnssec.DNSSECValidatorTestCase" name="testUnknownAlgorithm" file="tests/test_dnssec.py" line="442" time="0.000"><skipped type="pytest.skip" message="Python Cryptography cannot be imported">/workdir/dnspython-2.2.1/tests/test_dnssec.py:443: Python Cryptography cannot be imported</skipped></testcase><testcase classname="tests.test_dnssec.DNSSECValidatorTestCase" name="testWildcardGoodAndBad" file="tests/test_dnssec.py" line="360" time="0.000"><skipped type="pytest.skip" message="Python Cryptography cannot be imported">/workdir/dnspython-2.2.1/tests/test_dnssec.py:361: Python Cryptography cannot be imported</skipped></testcase><testcase classname="tests.test_dnssec.DNSSECMiscTestCase" name="testDigestToBig" file="tests/test_dnssec.py" line="449" time="0.001" /><testcase classname="tests.test_dnssec.DNSSECMiscTestCase" name="testIsNotGOST" file="tests/test_dnssec.py" line="457" time="0.000" /><testcase classname="tests.test_dnssec.DNSSECMiscTestCase" name="testNSEC3HashTooBig" file="tests/test_dnssec.py" line="453" time="0.000" /><testcase classname="tests.test_dnssec.DNSSECMiscTestCase" name="testUnknownHash" file="tests/test_dnssec.py" line="460" time="0.001" /><testcase classname="tests.test_dnssec.DNSSECMakeDSTestCase" name="testInvalidAlgorithm" file="tests/test_dnssec.py" line="494" time="0.001" /><testcase classname="tests.test_dnssec.DNSSECMakeDSTestCase" name="testInvalidDigestLength" file="tests/test_dnssec.py" line="513" time="0.001" /><testcase classname="tests.test_dnssec.DNSSECMakeDSTestCase" name="testInvalidDigestLengthCDS0" file="tests/test_dnssec.py" line="530" time="0.001" /><testcase classname="tests.test_dnssec.DNSSECMakeDSTestCase" name="testMakeExampleSHA1DS" file="tests/test_dnssec.py" line="473" time="0.002" /><testcase classname="tests.test_dnssec.DNSSECMakeDSTestCase" name="testMakeExampleSHA256DS" file="tests/test_dnssec.py" line="480" time="0.001" /><testcase classname="tests.test_dnssec.DNSSECMakeDSTestCase" name="testMakeExampleSHA384DS" file="tests/test_dnssec.py" line="485" time="0.001" /><testcase classname="tests.test_dnssec.DNSSECMakeDSTestCase" name="testMakeSHA256DS" file="tests/test_dnssec.py" line="490" time="0.000" /><testcase classname="tests.test_dnssec.DNSSECMakeDSTestCase" name="testMnemonicParser" file="tests/test_dnssec.py" line="467" time="0.001" /><testcase classname="tests.test_dnssec.DNSSECMakeDSTestCase" name="testReservedDigestType" file="tests/test_dnssec.py" line="499" time="0.001" /><testcase classname="tests.test_dnssec.DNSSECMakeDSTestCase" name="testUnknownDigestType" file="tests/test_dnssec.py" line="505" time="0.001" /><testcase classname="tests.test_doh.DNSOverHTTPSTestCaseRequests" name="test_bootstrap_address" file="tests/test_doh.py" line="119" time="0.000"><skipped type="pytest.skip" message="Python requests cannot be imported; no DNS over HTTPS (DOH)">/workdir/dnspython-2.2.1/tests/test_doh.py:120: Python requests cannot be imported; no DNS over HTTPS (DOH)</skipped></testcase><testcase classname="tests.test_doh.DNSOverHTTPSTestCaseRequests" name="test_build_url_from_ip" file="tests/test_doh.py" line="100" time="0.001"><skipped type="pytest.skip" message="Python requests cannot be imported; no DNS over HTTPS (DOH)">/workdir/dnspython-2.2.1/tests/test_doh.py:101: Python requests cannot be imported; no DNS over HTTPS (DOH)</skipped></testcase><testcase classname="tests.test_doh.DNSOverHTTPSTestCaseRequests" name="test_get_request" file="tests/test_doh.py" line="86" time="0.000"><skipped type="pytest.skip" message="Python requests cannot be imported; no DNS over HTTPS (DOH)">/workdir/dnspython-2.2.1/tests/test_doh.py:87: Python requests cannot be imported; no DNS over HTTPS (DOH)</skipped></testcase><testcase classname="tests.test_doh.DNSOverHTTPSTestCaseRequests" name="test_new_session" file="tests/test_doh.py" line="136" time="0.000"><skipped type="pytest.skip" message="Python requests cannot be imported; no DNS over HTTPS (DOH)">/workdir/dnspython-2.2.1/tests/test_doh.py:137: Python requests cannot be imported; no DNS over HTTPS (DOH)</skipped></testcase><testcase classname="tests.test_doh.DNSOverHTTPSTestCaseRequests" name="test_post_request" file="tests/test_doh.py" line="93" time="0.000"><skipped type="pytest.skip" message="Python requests cannot be imported; no DNS over HTTPS (DOH)">/workdir/dnspython-2.2.1/tests/test_doh.py:94: Python requests cannot be imported; no DNS over HTTPS (DOH)</skipped></testcase><testcase classname="tests.test_doh.DNSOverHTTPSTestCaseRequests" name="test_resolver" file="tests/test_doh.py" line="142" time="0.000"><skipped type="pytest.skip" message="Python requests cannot be imported; no DNS over HTTPS (DOH)">/workdir/dnspython-2.2.1/tests/test_doh.py:143: Python requests cannot be imported; no DNS over HTTPS (DOH)</skipped></testcase><testcase classname="tests.test_doh.DNSOverHTTPSTestCaseHttpx" name="test_bootstrap_address_fails" file="tests/test_doh.py" line="205" time="0.000"><skipped type="pytest.skip" message="Python httpx cannot be imported; no DNS over HTTPS (DOH)">/workdir/dnspython-2.2.1/tests/test_doh.py:206: Python httpx cannot be imported; no DNS over HTTPS (DOH)</skipped></testcase><testcase classname="tests.test_doh.DNSOverHTTPSTestCaseHttpx" name="test_build_url_from_ip" file="tests/test_doh.py" line="186" time="0.000"><skipped type="pytest.skip" message="Python httpx cannot be imported; no DNS over HTTPS (DOH)">/workdir/dnspython-2.2.1/tests/test_doh.py:187: Python httpx cannot be imported; no DNS over HTTPS (DOH)</skipped></testcase><testcase classname="tests.test_doh.DNSOverHTTPSTestCaseHttpx" name="test_get_request" file="tests/test_doh.py" line="160" time="0.000"><skipped type="pytest.skip" message="Python httpx cannot be imported; no DNS over HTTPS (DOH)">/workdir/dnspython-2.2.1/tests/test_doh.py:161: Python httpx cannot be imported; no DNS over HTTPS (DOH)</skipped></testcase><testcase classname="tests.test_doh.DNSOverHTTPSTestCaseHttpx" name="test_get_request_http1" file="tests/test_doh.py" line="167" time="0.001"><skipped type="pytest.skip" message="Python httpx cannot be imported; no DNS over HTTPS (DOH)">/workdir/dnspython-2.2.1/tests/test_doh.py:168: Python httpx cannot be imported; no DNS over HTTPS (DOH)</skipped></testcase><testcase classname="tests.test_doh.DNSOverHTTPSTestCaseHttpx" name="test_new_session" file="tests/test_doh.py" line="225" time="0.000"><skipped type="pytest.skip" message="Python httpx cannot be imported; no DNS over HTTPS (DOH)">/workdir/dnspython-2.2.1/tests/test_doh.py:226: Python httpx cannot be imported; no DNS over HTTPS (DOH)</skipped></testcase><testcase classname="tests.test_doh.DNSOverHTTPSTestCaseHttpx" name="test_post_request" file="tests/test_doh.py" line="179" time="0.000"><skipped type="pytest.skip" message="Python httpx cannot be imported; no DNS over HTTPS (DOH)">/workdir/dnspython-2.2.1/tests/test_doh.py:180: Python httpx cannot be imported; no DNS over HTTPS (DOH)</skipped></testcase><testcase classname="tests.test_doh.DNSOverHTTPSTestCaseHttpx" name="test_resolver" file="tests/test_doh.py" line="231" time="0.000"><skipped type="pytest.skip" message="Python httpx cannot be imported; no DNS over HTTPS (DOH)">/workdir/dnspython-2.2.1/tests/test_doh.py:232: Python httpx cannot be imported; no DNS over HTTPS (DOH)</skipped></testcase><testcase classname="tests.test_edns.OptionTestCase" name="testECSOption" file="tests/test_edns.py" line="44" time="0.001" /><testcase classname="tests.test_edns.OptionTestCase" name="testECSOption25" file="tests/test_edns.py" line="58" time="0.000" /><testcase classname="tests.test_edns.OptionTestCase" name="testECSOption_from_text_invalid" file="tests/test_edns.py" line="109" time="0.000" /><testcase classname="tests.test_edns.OptionTestCase" name="testECSOption_from_text_valid" file="tests/test_edns.py" line="84" time="0.001" /><testcase classname="tests.test_edns.OptionTestCase" name="testECSOption_from_wire_invalid" file="tests/test_edns.py" line="131" time="0.001" /><testcase classname="tests.test_edns.OptionTestCase" name="testECSOption_prefix_length" file="tests/test_edns.py" line="37" time="0.000" /><testcase classname="tests.test_edns.OptionTestCase" name="testECSOption_v6" file="tests/test_edns.py" line="71" time="0.001" /><testcase classname="tests.test_edns.OptionTestCase" name="testEDEOption" file="tests/test_edns.py" line="136" time="0.000" /><testcase classname="tests.test_edns.OptionTestCase" name="testEDEOption_from_wire" file="tests/test_edns.py" line="158" time="0.001" /><testcase classname="tests.test_edns.OptionTestCase" name="testEDEOption_invalid" file="tests/test_edns.py" line="150" time="0.001" /><testcase classname="tests.test_edns.OptionTestCase" name="testGenericOption" file="tests/test_edns.py" line="28" time="0.001" /><testcase classname="tests.test_edns.OptionTestCase" name="test_basic_relations" file="tests/test_edns.py" line="173" time="0.001" /><testcase classname="tests.test_edns.OptionTestCase" name="test_incompatible_relations" file="tests/test_edns.py" line="189" time="0.001" /><testcase classname="tests.test_edns.OptionTestCase" name="test_option_registration" file="tests/test_edns.py" line="199" time="0.001" /><testcase classname="tests.test_entropy.EntropyTestCase" name="test_functions" file="tests/test_entropy.py" line="36" time="0.000" /><testcase classname="tests.test_entropy.EntropyTestCase" name="test_pool" file="tests/test_entropy.py" line="9" time="0.001" /><testcase classname="tests.test_entropy.EntropyTestCase" name="test_pool_random" file="tests/test_entropy.py" line="18" time="0.001" /><testcase classname="tests.test_entropy.EntropyTestCase" name="test_pool_random_between" file="tests/test_entropy.py" line="24" time="0.001" /><testcase classname="tests.test_entropy.EntropyForcePoolTestCase" name="test_functions" file="tests/test_entropy.py" line="52" time="0.001" /><testcase classname="tests.test_exceptions.ExceptionTestCase" name="test_custom_message" file="tests/test_exceptions.py" line="29" time="0.001" /><testcase classname="tests.test_exceptions.ExceptionTestCase" name="test_formatted_error" file="tests/test_exceptions.py" line="42" time="0.000" /><testcase classname="tests.test_exceptions.ExceptionTestCase" name="test_implicit_message" file="tests/test_exceptions.py" line="36" time="0.000" /><testcase classname="tests.test_exceptions.ExceptionTestCase" name="test_kwargs_only" file="tests/test_exceptions.py" line="51" time="0.000" /><testcase classname="tests.test_exceptions.ExceptionTestCase" name="test_kwargs_unsupported" file="tests/test_exceptions.py" line="56" time="0.001" /><testcase classname="tests.test_flags.FlagsTestCase" name="test_flags1" file="tests/test_flags.py" line="50" time="0.001" /><testcase classname="tests.test_flags.FlagsTestCase" name="test_flags2" file="tests/test_flags.py" line="54" time="0.000" /><testcase classname="tests.test_flags.FlagsTestCase" name="test_rcode1" file="tests/test_flags.py" line="25" time="0.001" /><testcase classname="tests.test_flags.FlagsTestCase" name="test_rcode2" file="tests/test_flags.py" line="28" time="0.001" /><testcase classname="tests.test_flags.FlagsTestCase" name="test_rcode3" file="tests/test_flags.py" line="31" time="0.001" /><testcase classname="tests.test_flags.FlagsTestCase" name="test_rcode4" file="tests/test_flags.py" line="34" time="0.001" /><testcase classname="tests.test_flags.FlagsTestCase" name="test_rcode6" file="tests/test_flags.py" line="38" time="0.001" /><testcase classname="tests.test_flags.FlagsTestCase" name="test_rcode7" file="tests/test_flags.py" line="42" time="0.001" /><testcase classname="tests.test_flags.FlagsTestCase" name="test_rcode8" file="tests/test_flags.py" line="45" time="0.001" /><testcase classname="tests.test_flags.FlagsTestCase" name="test_rcode_badsig" file="tests/test_flags.py" line="64" time="0.001" /><testcase classname="tests.test_flags.FlagsTestCase" name="test_rcode_badvers" file="tests/test_flags.py" line="58" time="0.000" /><testcase classname="tests.test_flags.FlagsTestCase" name="test_unknown_rcode" file="tests/test_flags.py" line="74" time="0.001" /><testcase classname="tests.test_generate.GenerateTestCase" name="testBadAndDangling" file="tests/test_generate.py" line="577" time="0.001" /><testcase classname="tests.test_generate.GenerateTestCase" name="testBadRdata" file="tests/test_generate.py" line="557" time="0.001" /><testcase classname="tests.test_generate.GenerateTestCase" name="testClassMismatch" file="tests/test_generate.py" line="567" time="0.000" /><testcase classname="tests.test_generate.GenerateTestCase" name="testFromText" file="tests/test_generate.py" line="153" time="0.001" /><testcase classname="tests.test_generate.GenerateTestCase" name="testFromText1" file="tests/test_generate.py" line="158" time="0.001" /><testcase classname="tests.test_generate.GenerateTestCase" name="testGenerate1" file="tests/test_generate.py" line="246" time="0.003" /><testcase classname="tests.test_generate.GenerateTestCase" name="testGenerate2" file="tests/test_generate.py" line="292" time="0.003" /><testcase classname="tests.test_generate.GenerateTestCase" name="testGenerate3" file="tests/test_generate.py" line="335" time="0.002" /><testcase classname="tests.test_generate.GenerateTestCase" name="testGenerate4" file="tests/test_generate.py" line="378" time="0.002" /><testcase classname="tests.test_generate.GenerateTestCase" name="testGenerate6" file="tests/test_generate.py" line="421" time="0.003" /><testcase classname="tests.test_generate.GenerateTestCase" name="testGenerate7" file="tests/test_generate.py" line="471" time="0.003" /><testcase classname="tests.test_generate.GenerateTestCase" name="testGenerate8" file="tests/test_generate.py" line="511" time="0.002" /><testcase classname="tests.test_generate.GenerateTestCase" name="testIterateAllRdatas2" file="tests/test_generate.py" line="163" time="0.002" /><testcase classname="tests.test_generate.GenerateTestCase" name="testIterateAllRdatas3" file="tests/test_generate.py" line="207" time="0.002" /><testcase classname="tests.test_generate.GenerateTestCase" name="testNoOrigin" file="tests/test_generate.py" line="552" time="0.000" /><testcase classname="tests.test_generate.GenerateTestCase" name="testUnknownRdatatype" file="tests/test_generate.py" line="572" time="0.001" /><testcase classname="tests.test_generate.GenerateTestCase" name="testUsesLastTTL" file="tests/test_generate.py" line="562" time="0.002" /><testcase classname="tests.test_grange.GRangeTestCase" name="testFailFromText1" file="tests/test_grange.py" line="65" time="0.000" /><testcase classname="tests.test_grange.GRangeTestCase" name="testFailFromText2" file="tests/test_grange.py" line="73" time="0.000" /><testcase classname="tests.test_grange.GRangeTestCase" name="testFailFromText3" file="tests/test_grange.py" line="80" time="0.000" /><testcase classname="tests.test_grange.GRangeTestCase" name="testFailFromText4" file="tests/test_grange.py" line="87" time="0.000" /><testcase classname="tests.test_grange.GRangeTestCase" name="testFromText1" file="tests/test_grange.py" line="29" time="0.000" /><testcase classname="tests.test_grange.GRangeTestCase" name="testFromText2" file="tests/test_grange.py" line="35" time="0.000" /><testcase classname="tests.test_grange.GRangeTestCase" name="testFromText3" file="tests/test_grange.py" line="41" time="0.001" /><testcase classname="tests.test_grange.GRangeTestCase" name="testFromText4" file="tests/test_grange.py" line="47" time="0.000" /><testcase classname="tests.test_grange.GRangeTestCase" name="testFromText5" file="tests/test_grange.py" line="53" time="0.000" /><testcase classname="tests.test_grange.GRangeTestCase" name="testFromText6" file="tests/test_grange.py" line="59" time="0.001" /><testcase classname="tests.test_immutable.ImmutableTestCase" name="test_constify" file="tests/test_immutable.py" line="35" time="0.001" /><testcase classname="tests.test_immutable.ImmutableTestCase" name="test_immutable_dict_hash" file="tests/test_immutable.py" line="19" time="0.000" /><testcase classname="tests.test_immutable.ImmutableTestCase" name="test_immutable_dict_hash_cache" file="tests/test_immutable.py" line="27" time="0.000" /><testcase classname="tests.test_immutable.DecoratorTestCase" name="test_basic" file="tests/test_immutable.py" line="97" time="0.001" /><testcase classname="tests.test_immutable.DecoratorTestCase" name="test_constructor_deletes_attribute" file="tests/test_immutable.py" line="120" time="0.000" /><testcase classname="tests.test_immutable.DecoratorTestCase" name="test_no_collateral_damage" file="tests/test_immutable.py" line="131" time="0.001" /><testcase classname="tests.test_immutable.CtxDecoratorTestCase" name="test_basic" file="tests/test_immutable.py" line="97" time="0.001" /><testcase classname="tests.test_immutable.CtxDecoratorTestCase" name="test_constructor_deletes_attribute" file="tests/test_immutable.py" line="120" time="0.000" /><testcase classname="tests.test_immutable.CtxDecoratorTestCase" name="test_no_collateral_damage" file="tests/test_immutable.py" line="131" time="0.001" /><testcase classname="tests.test_message.MessageTestCase" name="test_CleanTruncated" file="tests/test_message.py" line="276" time="0.002" /><testcase classname="tests.test_message.MessageTestCase" name="test_EDNSVersionCoherence" file="tests/test_message.py" line="215" time="0.000" /><testcase classname="tests.test_message.MessageTestCase" name="test_EDNS_default_payload_is_1232" file="tests/test_message.py" line="341" time="0.001" /><testcase classname="tests.test_message.MessageTestCase" name="test_EDNS_from_wire1" file="tests/test_message.py" line="143" time="0.001" /><testcase classname="tests.test_message.MessageTestCase" name="test_EDNS_from_wire2" file="tests/test_message.py" line="152" time="0.001" /><testcase classname="tests.test_message.MessageTestCase" name="test_EDNS_options_wire" file="tests/test_message.py" line="156" time="0.001" /><testcase classname="tests.test_message.MessageTestCase" name="test_EDNS_to_wire1" file="tests/test_message.py" line="138" time="0.001" /><testcase classname="tests.test_message.MessageTestCase" name="test_EDNS_to_wire2" file="tests/test_message.py" line="147" time="0.001" /><testcase classname="tests.test_message.MessageTestCase" name="test_ExtendedRcodeSetting" file="tests/test_message.py" line="207" time="0.001" /><testcase classname="tests.test_message.MessageTestCase" name="test_FindRRset" file="tests/test_message.py" line="240" time="0.001" /><testcase classname="tests.test_message.MessageTestCase" name="test_FindRRsetUnindexed" file="tests/test_message.py" line="248" time="0.001" /><testcase classname="tests.test_message.MessageTestCase" name="test_GetNonexistentRRset" file="tests/test_message.py" line="266" time="0.001" /><testcase classname="tests.test_message.MessageTestCase" name="test_GetRRset" file="tests/test_message.py" line="257" time="0.001" /><testcase classname="tests.test_message.MessageTestCase" name="test_IDNA_2003" file="tests/test_message.py" line="292" time="0.009" /><testcase classname="tests.test_message.MessageTestCase" name="test_IDNA_2008" file="tests/test_message.py" line="300" time="0.004" /><testcase classname="tests.test_message.MessageTestCase" name="test_MessyTruncated" file="tests/test_message.py" line="284" time="0.002" /><testcase classname="tests.test_message.MessageTestCase" name="test_RespondingToEDNSRequestAndSettingRA" file="tests/test_message.py" line="201" time="0.001" /><testcase classname="tests.test_message.MessageTestCase" name="test_RespondingToResponse" file="tests/test_message.py" line="194" time="0.001" /><testcase classname="tests.test_message.MessageTestCase" name="test_SettingEDNSFlagsImpliesEDNS" file="tests/test_message.py" line="224" time="0.001" /><testcase classname="tests.test_message.MessageTestCase" name="test_SettingEDNSPayloadImpliesEDNS" file="tests/test_message.py" line="228" time="0.001" /><testcase classname="tests.test_message.MessageTestCase" name="test_SettingEDNSRequestPayloadImpliesEDNS" file="tests/test_message.py" line="232" time="0.000" /><testcase classname="tests.test_message.MessageTestCase" name="test_SettingNoEDNSOptionsImpliesNoEDNS" file="tests/test_message.py" line="220" time="0.000" /><testcase classname="tests.test_message.MessageTestCase" name="test_SettingOptionsImpliesEDNS" file="tests/test_message.py" line="236" time="0.001" /><testcase classname="tests.test_message.MessageTestCase" name="test_ShortHeader" file="tests/test_message.py" line="188" time="0.000" /><testcase classname="tests.test_message.MessageTestCase" name="test_TooBig" file="tests/test_message.py" line="165" time="0.003" /><testcase classname="tests.test_message.MessageTestCase" name="test_TrailingJunk" file="tests/test_message.py" line="182" time="0.001" /><testcase classname="tests.test_message.MessageTestCase" name="test_answer1" file="tests/test_message.py" line="177" time="0.001" /><testcase classname="tests.test_message.MessageTestCase" name="test_bad_opt" file="tests/test_message.py" line="469" time="0.001" /><testcase classname="tests.test_message.MessageTestCase" name="test_bad_resolve_chaining" file="tests/test_message.py" line="550" time="0.001" /><testcase classname="tests.test_message.MessageTestCase" name="test_bad_section_number" file="tests/test_message.py" line="310" time="0.000" /><testcase classname="tests.test_message.MessageTestCase" name="test_bad_text_questions" file="tests/test_message.py" line="577" time="0.001" /><testcase classname="tests.test_message.MessageTestCase" name="test_bad_text_rrs" file="tests/test_message.py" line="599" time="0.002" /><testcase classname="tests.test_message.MessageTestCase" name="test_bad_tsig" file="tests/test_message.py" line="494" time="0.001" /><testcase classname="tests.test_message.MessageTestCase" name="test_bogus_header" file="tests/test_message.py" line="536" time="0.000" /><testcase classname="tests.test_message.MessageTestCase" name="test_class" file="tests/test_message.py" line="113" time="0.001" /><testcase classname="tests.test_message.MessageTestCase" name="test_comparison_eq1" file="tests/test_message.py" line="117" time="0.001" /><testcase classname="tests.test_message.MessageTestCase" name="test_comparison_ne1" file="tests/test_message.py" line="122" time="0.001" /><testcase classname="tests.test_message.MessageTestCase" name="test_comparison_ne2" file="tests/test_message.py" line="128" time="0.001" /><testcase classname="tests.test_message.MessageTestCase" name="test_comparison_ne3" file="tests/test_message.py" line="134" time="0.001" /><testcase classname="tests.test_message.MessageTestCase" name="test_continue_on_error" file="tests/test_message.py" line="693" time="0.003" /><testcase classname="tests.test_message.MessageTestCase" name="test_edns_properties" file="tests/test_message.py" line="428" time="0.001" /><testcase classname="tests.test_message.MessageTestCase" name="test_eflags_turns_on_edns" file="tests/test_message.py" line="526" time="0.000" /><testcase classname="tests.test_message.MessageTestCase" name="test_explicit_header_comment" file="tests/test_message.py" line="351" time="0.001" /><testcase classname="tests.test_message.MessageTestCase" name="test_from_file" file="tests/test_message.py" line="346" time="0.001" /><testcase classname="tests.test_message.MessageTestCase" name="test_from_wire_makes_Flag" file="tests/test_message.py" line="688" time="0.001" /><testcase classname="tests.test_message.MessageTestCase" name="test_generic_message_class" file="tests/test_message.py" line="449" time="0.001" /><testcase classname="tests.test_message.MessageTestCase" name="test_is_a_response_empty_question" file="tests/test_message.py" line="373" time="0.001" /><testcase classname="tests.test_message.MessageTestCase" name="test_more_not_equal_cases" file="tests/test_message.py" line="413" time="0.001" /><testcase classname="tests.test_message.MessageTestCase" name="test_non_question_setters" file="tests/test_message.py" line="360" time="0.000" /><testcase classname="tests.test_message.MessageTestCase" name="test_not_a_response" file="tests/test_message.py" line="380" time="0.001" /><testcase classname="tests.test_message.MessageTestCase" name="test_payload_turns_on_edns" file="tests/test_message.py" line="531" time="0.000" /><testcase classname="tests.test_message.MessageTestCase" name="test_question_only" file="tests/test_message.py" line="540" time="0.002" /><testcase classname="tests.test_message.MessageTestCase" name="test_read_no_content_message" file="tests/test_message.py" line="522" time="0.000" /><testcase classname="tests.test_message.MessageTestCase" name="test_repr" file="tests/test_message.py" line="356" time="0.001" /><testcase classname="tests.test_message.MessageTestCase" name="test_resolve_chaining_no_infinite_loop" file="tests/test_message.py" line="562" time="0.001" /><testcase classname="tests.test_message.MessageTestCase" name="test_section_from_number" file="tests/test_message.py" line="315" time="0.000" /><testcase classname="tests.test_message.MessageTestCase" name="test_setting_flags" file="tests/test_message.py" line="443" time="0.000" /><testcase classname="tests.test_message.MessageTestCase" name="test_setting_id" file="tests/test_message.py" line="439" time="0.000" /><testcase classname="tests.test_message.MessageTestCase" name="test_truncated_exception_message" file="tests/test_message.py" line="463" time="0.000" /><testcase classname="tests.test_message.MessageTestCase" name="test_wanting_DNSSEC_turns_on_EDNS" file="tests/test_message.py" line="334" time="0.001" /><testcase classname="tests.test_message.MessageTestCase" name="test_wanting_EDNS_true_is_EDNS0" file="tests/test_message.py" line="328" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testAbs1" file="tests/test_name.py" line="111" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testAbs2" file="tests/test_name.py" line="114" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testAbs3" file="tests/test_name.py" line="117" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testAbs4" file="tests/test_name.py" line="120" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testBadDigestable" file="tests/test_name.py" line="394" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testBadEnumToE164" file="tests/test_name.py" line="954" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testBadEscape" file="tests/test_name.py" line="368" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testBadFromWire1" file="tests/test_name.py" line="654" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testBadFromWire2" file="tests/test_name.py" line="660" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testBadFromWire3" file="tests/test_name.py" line="666" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testBadFromWire4" file="tests/test_name.py" line="672" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testBadPunycode" file="tests/test_name.py" line="1013" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testBadPunycodeStrict2008" file="tests/test_name.py" line="1040" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testBadReverseIPv4" file="tests/test_name.py" line="889" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testBadReverseIPv6" file="tests/test_name.py" line="894" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testBadSplit1" file="tests/test_name.py" line="524" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testBadSplit2" file="tests/test_name.py" line="530" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testBadToWire" file="tests/test_name.py" line="460" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testCanonicalize1" file="tests/test_name.py" line="206" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testChooseRelativity1" file="tests/test_name.py" line="578" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testChooseRelativity2" file="tests/test_name.py" line="584" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testChooseRelativity3" file="tests/test_name.py" line="590" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testChooseRelativity4" file="tests/test_name.py" line="596" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testChooseRelativity5" file="tests/test_name.py" line="602" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testChooseRelativity6" file="tests/test_name.py" line="608" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testChooseRelativity7" file="tests/test_name.py" line="614" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testCodecNotFoundRaises" file="tests/test_name.py" line="1028" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testCompare1" file="tests/test_name.py" line="147" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testCompare2" file="tests/test_name.py" line="155" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testCompare3" file="tests/test_name.py" line="163" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testCompare4" file="tests/test_name.py" line="167" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testConcat1" file="tests/test_name.py" line="326" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testConcat2" file="tests/test_name.py" line="333" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testConcat3" file="tests/test_name.py" line="340" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testConcat4" file="tests/test_name.py" line="347" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testConcat5" file="tests/test_name.py" line="354" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testConcat6" file="tests/test_name.py" line="361" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testCopy" file="tests/test_name.py" line="1053" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testDeepCopy" file="tests/test_name.py" line="1064" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testDefaultDecodeIsJustPunycode" file="tests/test_name.py" line="833" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testDerelativize1" file="tests/test_name.py" line="560" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testDerelativize2" file="tests/test_name.py" line="566" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testDerelativize3" file="tests/test_name.py" line="572" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testDigestable1" file="tests/test_name.py" line="373" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testDigestable2" file="tests/test_name.py" line="378" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testDigestable3" file="tests/test_name.py" line="385" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testDigestable4" file="tests/test_name.py" line="389" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testE164ToEnum" file="tests/test_name.py" line="942" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testEmptyLabel1" file="tests/test_name.py" line="294" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testEmptyLabel2" file="tests/test_name.py" line="299" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testEmptyLabel3" file="tests/test_name.py" line="304" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testEnumToE164" file="tests/test_name.py" line="948" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testForwardIPv4" file="tests/test_name.py" line="911" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testForwardIPv4AlternateOrigin" file="tests/test_name.py" line="923" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testForwardIPv6" file="tests/test_name.py" line="917" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testForwardIPv6AlternateOrigin" file="tests/test_name.py" line="930" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testFromTextAbs1" file="tests/test_name.py" line="57" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testFromTextBadOrigin" file="tests/test_name.py" line="1003" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testFromTextNotString" file="tests/test_name.py" line="998" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testFromTextRel1" file="tests/test_name.py" line="37" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testFromTextRel2" file="tests/test_name.py" line="41" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testFromTextRel3" file="tests/test_name.py" line="45" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testFromTextRel4" file="tests/test_name.py" line="49" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testFromTextRel5" file="tests/test_name.py" line="53" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testFromUnicode1" file="tests/test_name.py" line="700" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testFromUnicode2" file="tests/test_name.py" line="704" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testFromUnicodeAlternateDot1" file="tests/test_name.py" line="708" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testFromUnicodeAlternateDot2" file="tests/test_name.py" line="712" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testFromUnicodeAlternateDot3" file="tests/test_name.py" line="716" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testFromUnicodeAlternateRoot1" file="tests/test_name.py" line="724" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testFromUnicodeAlternateRoot2" file="tests/test_name.py" line="728" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testFromUnicodeAlternateRoot3" file="tests/test_name.py" line="732" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testFromUnicodeBadEscape" file="tests/test_name.py" line="972" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testFromUnicodeBadOrigin" file="tests/test_name.py" line="985" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testFromUnicodeEmptyLabel" file="tests/test_name.py" line="990" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testFromUnicodeEmptyName" file="tests/test_name.py" line="995" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testFromUnicodeEscapes" file="tests/test_name.py" line="785" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testFromUnicodeIDNA2003Default" file="tests/test_name.py" line="741" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testFromUnicodeIDNA2003Explicit" file="tests/test_name.py" line="736" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testFromUnicodeIDNA2008" file="tests/test_name.py" line="746" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testFromUnicodeIDNA2008Mixed" file="tests/test_name.py" line="760" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testFromUnicodeNotString" file="tests/test_name.py" line="980" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testFromUnicodeRoot" file="tests/test_name.py" line="720" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testFromUnicodeSimpleEscape" file="tests/test_name.py" line="967" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testFromWire1" file="tests/test_name.py" line="620" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testFromWire2" file="tests/test_name.py" line="633" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testFromWireNotBytes" file="tests/test_name.py" line="1008" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testGiantCompressionTable" file="tests/test_name.py" line="468" time="0.020" /><testcase classname="tests.test_name.NameTestCase" name="testHash1" file="tests/test_name.py" line="142" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testIDNA2003Misc" file="tests/test_name.py" line="860" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testIDNA2008Misc" file="tests/test_name.py" line="865" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testINDA2008Decode" file="tests/test_name.py" line="848" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testImmutable1" file="tests/test_name.py" line="101" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testImmutable2" file="tests/test_name.py" line="106" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testLabelTooLong" file="tests/test_name.py" line="312" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testLongLabel" file="tests/test_name.py" line="308" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testLongName" file="tests/test_name.py" line="317" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testNameTooLong" file="tests/test_name.py" line="321" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testNoAttributeDeletion" file="tests/test_name.py" line="1073" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testParent1" file="tests/test_name.py" line="678" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testParent2" file="tests/test_name.py" line="683" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testParent3" file="tests/test_name.py" line="688" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testParent4" file="tests/test_name.py" line="694" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testRelativize1" file="tests/test_name.py" line="536" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testRelativize2" file="tests/test_name.py" line="542" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testRelativize3" file="tests/test_name.py" line="548" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testRelativize4" file="tests/test_name.py" line="554" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testRelativizeSubtractionSyntax" file="tests/test_name.py" line="1047" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testReverseIPv4" file="tests/test_name.py" line="874" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testReverseIPv4AlternateOrigin" file="tests/test_name.py" line="899" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testReverseIPv6" file="tests/test_name.py" line="879" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testReverseIPv6AlternateOrigin" file="tests/test_name.py" line="905" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testReverseIPv6MappedIpv4" file="tests/test_name.py" line="884" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testRootLabel2003StrictDecode" file="tests/test_name.py" line="1018" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testRootLabel2008StrictDecode" file="tests/test_name.py" line="1022" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testSlice1" file="tests/test_name.py" line="279" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testSlice2" file="tests/test_name.py" line="284" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testSlice3" file="tests/test_name.py" line="289" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testSplit1" file="tests/test_name.py" line="492" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testSplit2" file="tests/test_name.py" line="500" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testSplit3" file="tests/test_name.py" line="508" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testSplit4" file="tests/test_name.py" line="516" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testStrictINDA2003Decode" file="tests/test_name.py" line="840" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testSubdomain1" file="tests/test_name.py" line="170" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testSubdomain2" file="tests/test_name.py" line="173" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testSubdomain3" file="tests/test_name.py" line="176" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testSubdomain4" file="tests/test_name.py" line="180" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testSubdomain5" file="tests/test_name.py" line="184" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testSuperdomain1" file="tests/test_name.py" line="188" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testSuperdomain2" file="tests/test_name.py" line="191" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testSuperdomain3" file="tests/test_name.py" line="194" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testSuperdomain4" file="tests/test_name.py" line="198" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testSuperdomain5" file="tests/test_name.py" line="202" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testToText1" file="tests/test_name.py" line="211" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testToText10" file="tests/test_name.py" line="254" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testToText11" file="tests/test_name.py" line="258" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testToText12" file="tests/test_name.py" line="262" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testToText13" file="tests/test_name.py" line="267" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testToText14" file="tests/test_name.py" line="272" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testToText2" file="tests/test_name.py" line="216" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testToText3" file="tests/test_name.py" line="221" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testToText4" file="tests/test_name.py" line="226" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testToText5" file="tests/test_name.py" line="230" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testToText6" file="tests/test_name.py" line="234" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testToText7" file="tests/test_name.py" line="239" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testToText8" file="tests/test_name.py" line="244" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testToText9" file="tests/test_name.py" line="249" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testToUnicode1" file="tests/test_name.py" line="790" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testToUnicode2" file="tests/test_name.py" line="795" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testToUnicode3" file="tests/test_name.py" line="800" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testToUnicode4" file="tests/test_name.py" line="805" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testToUnicode5" file="tests/test_name.py" line="814" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testToUnicode6" file="tests/test_name.py" line="825" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testToUnicodeOmitFinalDot" file="tests/test_name.py" line="854" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testToWire1" file="tests/test_name.py" line="400" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testToWire2" file="tests/test_name.py" line="407" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testToWire3" file="tests/test_name.py" line="415" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testToWire4" file="tests/test_name.py" line="424" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testToWire5" file="tests/test_name.py" line="433" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testToWire6" file="tests/test_name.py" line="443" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testToWireRelativeNameWithOrigin" file="tests/test_name.py" line="448" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testToWireRelativeNameWithoutOrigin" file="tests/test_name.py" line="454" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testTortureFromText" file="tests/test_name.py" line="61" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testUnicodeEscapify" file="tests/test_name.py" line="1078" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testUnknownReverseOrigin" file="tests/test_name.py" line="937" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testWild1" file="tests/test_name.py" line="124" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="testWild2" file="tests/test_name.py" line="128" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testWild3" file="tests/test_name.py" line="132" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testWild4" file="tests/test_name.py" line="136" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="testWild5" file="tests/test_name.py" line="139" time="0.000" /><testcase classname="tests.test_name.NameTestCase" name="test_incompatible_relations" file="tests/test_name.py" line="959" time="0.001" /><testcase classname="tests.test_name.NameTestCase" name="test_pickle" file="tests/test_name.py" line="1082" time="0.002" /><testcase classname="tests.test_namedict.NameTestCase" name="testDepth" file="tests/test_namedict.py" line="36" time="0.001" /><testcase classname="tests.test_namedict.NameTestCase" name="testLookup1" file="tests/test_namedict.py" line="39" time="0.001" /><testcase classname="tests.test_namedict.NameTestCase" name="testLookup2" file="tests/test_namedict.py" line="43" time="0.000" /><testcase classname="tests.test_namedict.NameTestCase" name="testLookup3" file="tests/test_namedict.py" line="47" time="0.001" /><testcase classname="tests.test_namedict.NameTestCase" name="testLookup4" file="tests/test_namedict.py" line="51" time="0.001" /><testcase classname="tests.test_namedict.NameTestCase" name="testLookup5" file="tests/test_namedict.py" line="55" time="0.000" /><testcase classname="tests.test_namedict.NameTestCase" name="testLookup6" file="tests/test_namedict.py" line="61" time="0.001" /><testcase classname="tests.test_namedict.NameTestCase" name="testLookup7" file="tests/test_namedict.py" line="66" time="0.001" /><testcase classname="tests.test_namedict.NameTestCase" name="testLookup8" file="tests/test_namedict.py" line="72" time="0.001" /><testcase classname="tests.test_namedict.NameTestCase" name="testRelDepth" file="tests/test_namedict.py" line="77" time="0.001" /><testcase classname="tests.test_namedict.NameTestCase" name="testRelLookup1" file="tests/test_namedict.py" line="80" time="0.001" /><testcase classname="tests.test_namedict.NameTestCase" name="testRelLookup2" file="tests/test_namedict.py" line="84" time="0.001" /><testcase classname="tests.test_namedict.NameTestCase" name="testRelLookup3" file="tests/test_namedict.py" line="88" time="0.001" /><testcase classname="tests.test_namedict.NameTestCase" name="testRelLookup4" file="tests/test_namedict.py" line="92" time="0.000" /><testcase classname="tests.test_namedict.NameTestCase" name="testRelLookup7" file="tests/test_namedict.py" line="96" time="0.000" /><testcase classname="tests.test_namedict.NameTestCase" name="test_delete_max_depth_changes" file="tests/test_namedict.py" line="115" time="0.000" /><testcase classname="tests.test_namedict.NameTestCase" name="test_delete_multiple_max_depth_changes" file="tests/test_namedict.py" line="122" time="0.001" /><testcase classname="tests.test_namedict.NameTestCase" name="test_delete_no_max_depth_change" file="tests/test_namedict.py" line="108" time="0.001" /><testcase classname="tests.test_namedict.NameTestCase" name="test_haskey" file="tests/test_namedict.py" line="151" time="0.001" /><testcase classname="tests.test_namedict.NameTestCase" name="test_iter" file="tests/test_namedict.py" line="140" time="0.001" /><testcase classname="tests.test_namedict.NameTestCase" name="test_len" file="tests/test_namedict.py" line="148" time="0.001" /><testcase classname="tests.test_namedict.NameTestCase" name="test_max_depth_increases" file="tests/test_namedict.py" line="102" time="0.001" /><testcase classname="tests.test_nsec3.NSEC3TestCase" name="test_NSEC3_bad_bitmaps" file="tests/test_nsec3.py" line="37" time="0.001" /><testcase classname="tests.test_nsec3.NSEC3TestCase" name="test_NSEC3_bitmap" file="tests/test_nsec3.py" line="27" time="0.001" /><testcase classname="tests.test_nsec3_hash.NSEC3Hash" name="test_hash_function" file="tests/test_nsec3_hash.py" line="64" time="0.001" /><testcase classname="tests.test_nsec3_hash.NSEC3Hash" name="test_hash_invalid_algorithm" file="tests/test_nsec3_hash.py" line="80" time="0.000" /><testcase classname="tests.test_nsec3_hash.NSEC3Hash" name="test_hash_invalid_salt_length" file="tests/test_nsec3_hash.py" line="69" time="0.000" /><testcase classname="tests.test_ntoaaton.NtoAAtoNTestCase" name="test_aton1" file="tests/test_ntoaaton.py" line="38" time="0.000" /><testcase classname="tests.test_ntoaaton.NtoAAtoNTestCase" name="test_aton2" file="tests/test_ntoaaton.py" line="42" time="0.000" /><testcase classname="tests.test_ntoaaton.NtoAAtoNTestCase" name="test_aton3" file="tests/test_ntoaaton.py" line="46" time="0.001" /><testcase classname="tests.test_ntoaaton.NtoAAtoNTestCase" name="test_aton4" file="tests/test_ntoaaton.py" line="50" time="0.000" /><testcase classname="tests.test_ntoaaton.NtoAAtoNTestCase" name="test_aton5" file="tests/test_ntoaaton.py" line="54" time="0.000" /><testcase classname="tests.test_ntoaaton.NtoAAtoNTestCase" name="test_aton6" file="tests/test_ntoaaton.py" line="79" time="0.000" /><testcase classname="tests.test_ntoaaton.NtoAAtoNTestCase" name="test_aton7" file="tests/test_ntoaaton.py" line="83" time="0.001" /><testcase classname="tests.test_ntoaaton.NtoAAtoNTestCase" name="test_aton8" file="tests/test_ntoaaton.py" line="87" time="0.000" /><testcase classname="tests.test_ntoaaton.NtoAAtoNTestCase" name="test_aton9" file="tests/test_ntoaaton.py" line="91" time="0.000" /><testcase classname="tests.test_ntoaaton.NtoAAtoNTestCase" name="test_bad_aton1" file="tests/test_ntoaaton.py" line="59" time="0.000" /><testcase classname="tests.test_ntoaaton.NtoAAtoNTestCase" name="test_bad_aton2" file="tests/test_ntoaaton.py" line="64" time="0.000" /><testcase classname="tests.test_ntoaaton.NtoAAtoNTestCase" name="test_bad_aton3" file="tests/test_ntoaaton.py" line="69" time="0.000" /><testcase classname="tests.test_ntoaaton.NtoAAtoNTestCase" name="test_bad_aton4" file="tests/test_ntoaaton.py" line="74" time="0.000" /><testcase classname="tests.test_ntoaaton.NtoAAtoNTestCase" name="test_bad_ntoa1" file="tests/test_ntoaaton.py" line="171" time="0.000" /><testcase classname="tests.test_ntoaaton.NtoAAtoNTestCase" name="test_bad_ntoa2" file="tests/test_ntoaaton.py" line="176" time="0.001" /><testcase classname="tests.test_ntoaaton.NtoAAtoNTestCase" name="test_bad_ntoa3" file="tests/test_ntoaaton.py" line="181" time="0.000" /><testcase classname="tests.test_ntoaaton.NtoAAtoNTestCase" name="test_bad_v4_aton" file="tests/test_ntoaaton.py" line="198" time="0.000" /><testcase classname="tests.test_ntoaaton.NtoAAtoNTestCase" name="test_bad_v6_aton" file="tests/test_ntoaaton.py" line="206" time="0.001" /><testcase classname="tests.test_ntoaaton.NtoAAtoNTestCase" name="test_bogus_family" file="tests/test_ntoaaton.py" line="318" time="0.000" /><testcase classname="tests.test_ntoaaton.NtoAAtoNTestCase" name="test_do_not_ignore_scope" file="tests/test_ntoaaton.py" line="256" time="0.001" /><testcase classname="tests.test_ntoaaton.NtoAAtoNTestCase" name="test_good_v4_aton" file="tests/test_ntoaaton.py" line="188" time="0.001" /><testcase classname="tests.test_ntoaaton.NtoAAtoNTestCase" name="test_ignore_scope" file="tests/test_ntoaaton.py" line="251" time="0.000" /><testcase classname="tests.test_ntoaaton.NtoAAtoNTestCase" name="test_is_mapped" file="tests/test_ntoaaton.py" line="224" time="0.001" /><testcase classname="tests.test_ntoaaton.NtoAAtoNTestCase" name="test_is_multicast" file="tests/test_ntoaaton.py" line="232" time="0.001" /><testcase classname="tests.test_ntoaaton.NtoAAtoNTestCase" name="test_is_multicast_bad_input" file="tests/test_ntoaaton.py" line="246" time="0.000" /><testcase classname="tests.test_ntoaaton.NtoAAtoNTestCase" name="test_isaddress" file="tests/test_ntoaaton.py" line="274" time="0.001" /><testcase classname="tests.test_ntoaaton.NtoAAtoNTestCase" name="test_low_level_address_tuple" file="tests/test_ntoaaton.py" line="283" time="0.001" /><testcase classname="tests.test_ntoaaton.NtoAAtoNTestCase" name="test_multiple_scopes_bad" file="tests/test_ntoaaton.py" line="262" time="0.001" /><testcase classname="tests.test_ntoaaton.NtoAAtoNTestCase" name="test_ntoa1" file="tests/test_ntoaaton.py" line="95" time="0.000" /><testcase classname="tests.test_ntoaaton.NtoAAtoNTestCase" name="test_ntoa10" file="tests/test_ntoaaton.py" line="140" time="0.001" /><testcase classname="tests.test_ntoaaton.NtoAAtoNTestCase" name="test_ntoa11" file="tests/test_ntoaaton.py" line="145" time="0.000" /><testcase classname="tests.test_ntoaaton.NtoAAtoNTestCase" name="test_ntoa12" file="tests/test_ntoaaton.py" line="150" time="0.000" /><testcase classname="tests.test_ntoaaton.NtoAAtoNTestCase" name="test_ntoa13" file="tests/test_ntoaaton.py" line="155" time="0.001" /><testcase classname="tests.test_ntoaaton.NtoAAtoNTestCase" name="test_ntoa14" file="tests/test_ntoaaton.py" line="160" time="0.000" /><testcase classname="tests.test_ntoaaton.NtoAAtoNTestCase" name="test_ntoa15" file="tests/test_ntoaaton.py" line="165" time="0.000" /><testcase classname="tests.test_ntoaaton.NtoAAtoNTestCase" name="test_ntoa2" file="tests/test_ntoaaton.py" line="100" time="0.000" /><testcase classname="tests.test_ntoaaton.NtoAAtoNTestCase" name="test_ntoa3" file="tests/test_ntoaaton.py" line="105" time="0.000" /><testcase classname="tests.test_ntoaaton.NtoAAtoNTestCase" name="test_ntoa4" file="tests/test_ntoaaton.py" line="110" time="0.001" /><testcase classname="tests.test_ntoaaton.NtoAAtoNTestCase" name="test_ntoa5" file="tests/test_ntoaaton.py" line="115" time="0.000" /><testcase classname="tests.test_ntoaaton.NtoAAtoNTestCase" name="test_ntoa6" file="tests/test_ntoaaton.py" line="120" time="0.000" /><testcase classname="tests.test_ntoaaton.NtoAAtoNTestCase" name="test_ntoa7" file="tests/test_ntoaaton.py" line="125" time="0.000" /><testcase classname="tests.test_ntoaaton.NtoAAtoNTestCase" name="test_ntoa8" file="tests/test_ntoaaton.py" line="130" time="0.000" /><testcase classname="tests.test_ntoaaton.NtoAAtoNTestCase" name="test_ntoa9" file="tests/test_ntoaaton.py" line="135" time="0.001" /><testcase classname="tests.test_ntoaaton.NtoAAtoNTestCase" name="test_ptontop" file="tests/test_ntoaaton.py" line="268" time="0.001" /><testcase classname="tests.test_ntoaaton.NtoAAtoNTestCase" name="test_rfc5952_section_4_2_2" file="tests/test_ntoaaton.py" line="218" time="0.001" /><testcase classname="tests.test_processing_order" name="test_processing_order_shuffle" file="tests/test_processing_order.py" line="5" time="0.003" /><testcase classname="tests.test_processing_order" name="test_processing_order_priority_mx" file="tests/test_processing_order.py" line="18" time="0.011" /><testcase classname="tests.test_processing_order" name="test_processing_order_priority_weighted" file="tests/test_processing_order.py" line="32" time="0.013" /><testcase classname="tests.test_processing_order" name="test_processing_order_priority_naptr" file="tests/test_processing_order.py" line="57" time="0.018" /><testcase classname="tests.test_processing_order" name="test_processing_order_empty" file="tests/test_processing_order.py" line="73" time="0.000" /><testcase classname="tests.test_processing_order" name="test_processing_singleton_priority" file="tests/test_processing_order.py" line="79" time="0.001" /><testcase classname="tests.test_processing_order" name="test_processing_singleton_weighted" file="tests/test_processing_order.py" line="85" time="0.001" /><testcase classname="tests.test_processing_order" name="test_processing_all_zero_weight_srv" file="tests/test_processing_order.py" line="91" time="0.010" /><testcase classname="tests.test_processing_order" name="test_processing_order_uri" file="tests/test_processing_order.py" line="104" time="0.002" /><testcase classname="tests.test_processing_order" name="test_processing_order_svcb" file="tests/test_processing_order.py" line="118" time="0.001" /><testcase classname="tests.test_query.QueryTests" name="testQueryTCP" file="tests/test_query.py" line="102" time="0.022" /><testcase classname="tests.test_query.QueryTests" name="testQueryTCPWithSocket" file="tests/test_query.py" line="114" time="0.022" /><testcase classname="tests.test_query.QueryTests" name="testQueryTLS" file="tests/test_query.py" line="132" time="0.043" /><testcase classname="tests.test_query.QueryTests" name="testQueryTLSWithSocket" file="tests/test_query.py" line="144" time="0.051" /><testcase classname="tests.test_query.QueryTests" name="testQueryUDP" file="tests/test_query.py" line="75" time="0.011" /><testcase classname="tests.test_query.QueryTests" name="testQueryUDPFallback" file="tests/test_query.py" line="165" time="0.031" /><testcase classname="tests.test_query.QueryTests" name="testQueryUDPFallbackNoFallback" file="tests/test_query.py" line="190" time="0.010" /><testcase classname="tests.test_query.QueryTests" name="testQueryUDPFallbackWithSocket" file="tests/test_query.py" line="172" time="0.032" /><testcase classname="tests.test_query.QueryTests" name="testQueryUDPWithSocket" file="tests/test_query.py" line="87" time="0.011" /><testcase classname="tests.test_query.QueryTests" name="testUDPReceiveQuery" file="tests/test_query.py" line="197" time="0.001" /><testcase classname="tests.test_query.DestinationAndSourceTests" name="test_af_inferred_from_source" file="tests/test_query.py" line="223" time="0.001" /><testcase classname="tests.test_query.DestinationAndSourceTests" name="test_af_inferred_from_where" file="tests/test_query.py" line="219" time="0.001" /><testcase classname="tests.test_query.DestinationAndSourceTests" name="test_af_mismatch" file="tests/test_query.py" line="228" time="0.001" /><testcase classname="tests.test_query.DestinationAndSourceTests" name="test_destination_is_none_of_where_url" file="tests/test_query.py" line="244" time="0.000" /><testcase classname="tests.test_query.DestinationAndSourceTests" name="test_source_port_but_no_af_inferred" file="tests/test_query.py" line="233" time="0.000" /><testcase classname="tests.test_query.DestinationAndSourceTests" name="test_v4_wildcard_source_set" file="tests/test_query.py" line="248" time="0.000" /><testcase classname="tests.test_query.DestinationAndSourceTests" name="test_v6_wildcard_source_set" file="tests/test_query.py" line="252" time="0.000" /><testcase classname="tests.test_query.DestinationAndSourceTests" name="test_where_must_be_an_address" file="tests/test_query.py" line="239" time="0.001" /><testcase classname="tests.test_query.AddressesEqualTestCase" name="test_mixed" file="tests/test_query.py" line="275" time="0.000" /><testcase classname="tests.test_query.AddressesEqualTestCase" name="test_v4" file="tests/test_query.py" line="259" time="0.000" /><testcase classname="tests.test_query.AddressesEqualTestCase" name="test_v6" file="tests/test_query.py" line="267" time="0.001" /><testcase classname="tests.test_query.XfrTests" name="test_axfr" file="tests/test_query.py" line="384" time="0.000"><skipped type="pytest.skip" message="nanonameserver required">/workdir/dnspython-2.2.1/tests/test_query.py:385: nanonameserver required</skipped></testcase><testcase classname="tests.test_query.XfrTests" name="test_axfr_bad_rcode" file="tests/test_query.py" line="418" time="0.000"><skipped type="pytest.skip" message="nanonameserver required">/workdir/dnspython-2.2.1/tests/test_query.py:419: nanonameserver required</skipped></testcase><testcase classname="tests.test_query.XfrTests" name="test_axfr_root_tsig" file="tests/test_query.py" line="401" time="0.000"><skipped type="pytest.skip" message="nanonameserver required">/workdir/dnspython-2.2.1/tests/test_query.py:402: nanonameserver required</skipped></testcase><testcase classname="tests.test_query.XfrTests" name="test_axfr_trailing_junk" file="tests/test_query.py" line="427" time="0.000"><skipped type="pytest.skip" message="nanonameserver required">/workdir/dnspython-2.2.1/tests/test_query.py:428: nanonameserver required</skipped></testcase><testcase classname="tests.test_query.XfrTests" name="test_axfr_tsig" file="tests/test_query.py" line="392" time="0.000"><skipped type="pytest.skip" message="nanonameserver required">/workdir/dnspython-2.2.1/tests/test_query.py:393: nanonameserver required</skipped></testcase><testcase classname="tests.test_query.XfrTests" name="test_axfr_udp" file="tests/test_query.py" line="410" time="0.000"><skipped type="pytest.skip" message="nanonameserver required">/workdir/dnspython-2.2.1/tests/test_query.py:411: nanonameserver required</skipped></testcase><testcase classname="tests.test_query.XfrTests" name="test_ixfr_base_serial_mismatch" file="tests/test_query.py" line="490" time="0.000"><skipped type="pytest.skip" message="nanonameserver required">/workdir/dnspython-2.2.1/tests/test_query.py:491: nanonameserver required</skipped></testcase><testcase classname="tests.test_query.XfrTests" name="test_ixfr_tcp" file="tests/test_query.py" line="437" time="0.000"><skipped type="pytest.skip" message="nanonameserver required">/workdir/dnspython-2.2.1/tests/test_query.py:438: nanonameserver required</skipped></testcase><testcase classname="tests.test_query.XfrTests" name="test_ixfr_trailing_junk" file="tests/test_query.py" line="479" time="0.000"><skipped type="pytest.skip" message="nanonameserver required">/workdir/dnspython-2.2.1/tests/test_query.py:480: nanonameserver required</skipped></testcase><testcase classname="tests.test_query.XfrTests" name="test_ixfr_udp" file="tests/test_query.py" line="451" time="0.000"><skipped type="pytest.skip" message="nanonameserver required">/workdir/dnspython-2.2.1/tests/test_query.py:452: nanonameserver required</skipped></testcase><testcase classname="tests.test_query.XfrTests" name="test_ixfr_up_to_date" file="tests/test_query.py" line="465" time="0.000"><skipped type="pytest.skip" message="nanonameserver required">/workdir/dnspython-2.2.1/tests/test_query.py:466: nanonameserver required</skipped></testcase><testcase classname="tests.test_query.TsigTests" name="test_tsig" file="tests/test_query.py" line="522" time="0.000"><skipped type="pytest.skip" message="nanonameserver required">/workdir/dnspython-2.2.1/tests/test_query.py:523: nanonameserver required</skipped></testcase><testcase classname="tests.test_query.LowLevelWaitTests" name="test_wait_for" file="tests/test_query.py" line="540" time="0.051" /><testcase classname="tests.test_query.MiscTests" name="test_matches_destination" file="tests/test_query.py" line="557" time="0.001" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_AFSDB_properties" file="tests/test_rdata.py" line="282" time="0.001" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_CERT_algorithm" file="tests/test_rdata.py" line="566" time="0.002" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_CERT_with_string_type" file="tests/test_rdata.py" line="562" time="0.001" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_DNSKEY_chunking" file="tests/test_rdata.py" line="664" time="0.004" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_GPOS_constructor_conversion" file="tests/test_rdata.py" line="406" time="0.001" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_GPOS_float_converters" file="tests/test_rdata.py" line="400" time="0.001" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_LOC_to_text_SW_hemispheres" file="tests/test_rdata.py" line="324" time="0.000" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_absolute_vs_absolute_compare" file="tests/test_rdata.py" line="744" time="0.001" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_bad_APLItem_address_length" file="tests/test_rdata.py" line="657" time="0.000" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_bad_CAA_text" file="tests/test_rdata.py" line="597" time="0.001" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_bad_GPOS_text" file="tests/test_rdata.py" line="416" time="0.001" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_bad_GPOS_wire" file="tests/test_rdata.py" line="439" time="0.000" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_bad_HIP_text" file="tests/test_rdata.py" line="607" time="0.002" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_bad_LOC_text" file="tests/test_rdata.py" line="335" time="0.001" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_bad_LOC_wire" file="tests/test_rdata.py" line="360" time="0.001" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_bad_NSAP_text" file="tests/test_rdata.py" line="589" time="0.001" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_bad_SMIMEA" file="tests/test_rdata.py" line="653" time="0.001" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_bad_URI_text" file="tests/test_rdata.py" line="576" time="0.000" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_bad_URI_wire" file="tests/test_rdata.py" line="584" time="0.000" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_bad_generic" file="tests/test_rdata.py" line="533" time="0.001" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_bad_registration_implementing_known_type_with_wrong_name" file="tests/test_rdata.py" line="550" time="0.001" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_bad_sigtime" file="tests/test_rdata.py" line="615" time="0.001" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_basic_relations" file="tests/test_rdata.py" line="235" time="0.001" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_chaos" file="tests/test_rdata.py" line="450" time="0.002" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_covered_repr" file="tests/test_rdata.py" line="544" time="0.001" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_covers_and_extended_rdatatype" file="tests/test_rdata.py" line="517" time="0.001" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_digestable_downcasing" file="tests/test_rdata.py" line="173" time="0.005" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_digestable_no_downcasing" file="tests/test_rdata.py" line="217" time="0.002" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_empty_TXT" file="tests/test_rdata.py" line="635" time="0.000" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_empty_generic" file="tests/test_rdata.py" line="541" time="0.000" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_escaped_newline_in_nonquoted_string" file="tests/test_rdata.py" line="492" time="0.000" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_escaped_newline_in_quoted_string" file="tests/test_rdata.py" line="487" time="0.001" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_escapify" file="tests/test_rdata.py" line="501" time="0.000" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_from_wire_parser" file="tests/test_rdata.py" line="475" time="0.001" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_good_SMIMEA" file="tests/test_rdata.py" line="650" time="0.000" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_immutability" file="tests/test_rdata.py" line="257" time="0.000" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_incompatible_relations" file="tests/test_rdata.py" line="247" time="0.000" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_invalid_replace" file="tests/test_rdata.py" line="99" time="0.000" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_misc_bad_WKS_text" file="tests/test_rdata.py" line="392" time="0.008" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_misc_good_LOC_text" file="tests/test_rdata.py" line="293" time="0.002" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_misc_good_WKS_text" file="tests/test_rdata.py" line="388" time="0.001" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_module_registration" file="tests/test_rdata.py" line="58" time="0.001" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_module_registration_singleton" file="tests/test_rdata.py" line="72" time="0.001" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_module_reregistration" file="tests/test_rdata.py" line="66" time="0.000" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_no_replace_class_or_type" file="tests/test_rdata.py" line="113" time="0.001" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_opt_repr" file="tests/test_rdata.py" line="463" time="0.000" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_opt_short_lengths" file="tests/test_rdata.py" line="467" time="0.000" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_pickle" file="tests/test_rdata.py" line="269" time="0.001" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_registration_implementing_known_type_with_right_name" file="tests/test_rdata.py" line="556" time="0.001" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_relative_vs_absolute_compare_strict" file="tests/test_rdata.py" line="721" time="0.001" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_relative_vs_absolute_compare_unstrict" file="tests/test_rdata.py" line="702" time="0.001" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_relative_vs_relative_compare_strict" file="tests/test_rdata.py" line="769" time="0.001" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_relative_vs_relative_compare_unstrict" file="tests/test_rdata.py" line="754" time="0.001" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_replace" file="tests/test_rdata.py" line="82" time="0.001" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_replace_comment" file="tests/test_rdata.py" line="104" time="0.001" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_str" file="tests/test_rdata.py" line="48" time="0.000" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_to_generic" file="tests/test_rdata.py" line="120" time="0.001" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_too_long_TXT" file="tests/test_rdata.py" line="640" time="0.001" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_truncate_bitmap" file="tests/test_rdata.py" line="509" time="0.000" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_txt_unicode" file="tests/test_rdata.py" line="133" time="0.001" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_uncomparable" file="tests/test_rdata.py" line="528" time="0.000" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_unicode" file="tests/test_rdata.py" line="53" time="0.001" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_unicode_idna2003_in_rdata" file="tests/test_rdata.py" line="160" time="0.001" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_unicode_idna2008_in_rdata" file="tests/test_rdata.py" line="165" time="0.001" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_unpickle" file="tests/test_rdata.py" line="480" time="0.001" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_wordbreak" file="tests/test_rdata.py" line="496" time="0.000" /><testcase classname="tests.test_rdata.RdataTestCase" name="test_zero_size" file="tests/test_rdata.py" line="330" time="0.001" /><testcase classname="tests.test_rdata.UtilTestCase" name="test_Bitmap" file="tests/test_rdata.py" line="808" time="0.000" /><testcase classname="tests.test_rdata.UtilTestCase" name="test_Bitmap_0_length_window_parse" file="tests/test_rdata.py" line="867" time="0.000" /><testcase classname="tests.test_rdata.UtilTestCase" name="test_Bitmap_empty_window_not_written" file="tests/test_rdata.py" line="853" time="0.000" /><testcase classname="tests.test_rdata.UtilTestCase" name="test_Bitmap_has_type_0_set" file="tests/test_rdata.py" line="847" time="0.000" /><testcase classname="tests.test_rdata.UtilTestCase" name="test_Bitmap_ok_parse" file="tests/test_rdata.py" line="861" time="0.000" /><testcase classname="tests.test_rdata.UtilTestCase" name="test_Bitmap_too_long_parse" file="tests/test_rdata.py" line="873" time="0.000" /><testcase classname="tests.test_rdata.UtilTestCase" name="test_Bitmap_with_duplicate_types" file="tests/test_rdata.py" line="817" time="0.000" /><testcase classname="tests.test_rdata.UtilTestCase" name="test_Bitmap_with_out_of_order_types" file="tests/test_rdata.py" line="826" time="0.000" /><testcase classname="tests.test_rdata.UtilTestCase" name="test_Bitmap_zero_padding_works" file="tests/test_rdata.py" line="835" time="0.000" /><testcase classname="tests.test_rdata.UtilTestCase" name="test_Gateway_bad_type0" file="tests/test_rdata.py" line="794" time="0.000" /><testcase classname="tests.test_rdata.UtilTestCase" name="test_Gateway_bad_type3" file="tests/test_rdata.py" line="798" time="0.000" /><testcase classname="tests.test_rdata.UtilTestCase" name="test_Gateway_type4" file="tests/test_rdata.py" line="802" time="0.000" /><testcase classname="tests.test_rdata.UtilTestCase" name="test_compressed_in_generic_is_bad" file="tests/test_rdata.py" line="879" time="0.001" /><testcase classname="tests.test_rdata.UtilTestCase" name="test_rdataset_ttl_conversion" file="tests/test_rdata.py" line="884" time="0.001" /><testcase classname="tests.test_rdata.RdataConvertersTestCase" name="test_as_bool" file="tests/test_rdata.py" line="951" time="0.000" /><testcase classname="tests.test_rdata.RdataConvertersTestCase" name="test_as_int" file="tests/test_rdata.py" line="942" time="0.000" /><testcase classname="tests.test_rdata.RdataConvertersTestCase" name="test_as_name" file="tests/test_rdata.py" line="899" time="0.000" /><testcase classname="tests.test_rdata.RdataConvertersTestCase" name="test_as_ttl" file="tests/test_rdata.py" line="957" time="0.000" /><testcase classname="tests.test_rdata.RdataConvertersTestCase" name="test_as_uint16" file="tests/test_rdata.py" line="915" time="0.000" /><testcase classname="tests.test_rdata.RdataConvertersTestCase" name="test_as_uint32" file="tests/test_rdata.py" line="924" time="0.001" /><testcase classname="tests.test_rdata.RdataConvertersTestCase" name="test_as_uint48" file="tests/test_rdata.py" line="933" time="0.000" /><testcase classname="tests.test_rdata.RdataConvertersTestCase" name="test_as_uint8" file="tests/test_rdata.py" line="906" time="0.001" /><testcase classname="tests.test_rdataset.RdatasetTestCase" name="testAddIncompatible" file="tests/test_rdataset.py" line="38" time="0.001" /><testcase classname="tests.test_rdataset.RdatasetTestCase" name="testCodec2003" file="tests/test_rdataset.py" line="13" time="0.001" /><testcase classname="tests.test_rdataset.RdatasetTestCase" name="testCodec2008" file="tests/test_rdataset.py" line="20" time="0.001" /><testcase classname="tests.test_rdataset.RdatasetTestCase" name="testCopy" file="tests/test_rdataset.py" line="31" time="0.001" /><testcase classname="tests.test_rdataset.RdatasetTestCase" name="testCoveredRepr" file="tests/test_rdataset.py" line="112" time="0.001" /><testcase classname="tests.test_rdataset.RdatasetTestCase" name="testDifferingCovers" file="tests/test_rdataset.py" line="48" time="0.001" /><testcase classname="tests.test_rdataset.RdatasetTestCase" name="testEmptyRdataList" file="tests/test_rdataset.py" line="79" time="0.000" /><testcase classname="tests.test_rdataset.RdatasetTestCase" name="testIntersectionUpdate" file="tests/test_rdataset.py" line="68" time="0.001" /><testcase classname="tests.test_rdataset.RdatasetTestCase" name="testMultilineToText" file="tests/test_rdataset.py" line="108" time="0.001" /><testcase classname="tests.test_rdataset.RdatasetTestCase" name="testNoEqualToOther" file="tests/test_rdataset.py" line="75" time="0.001" /><testcase classname="tests.test_rdataset.RdatasetTestCase" name="testRepr" file="tests/test_rdataset.py" line="93" time="0.000" /><testcase classname="tests.test_rdataset.RdatasetTestCase" name="testStr" file="tests/test_rdataset.py" line="104" time="0.001" /><testcase classname="tests.test_rdataset.RdatasetTestCase" name="testToTextNoName" file="tests/test_rdataset.py" line="83" time="0.001" /><testcase classname="tests.test_rdataset.RdatasetTestCase" name="testToTextOverrideClass" file="tests/test_rdataset.py" line="88" time="0.001" /><testcase classname="tests.test_rdataset.RdatasetTestCase" name="testTruncatedRepr" file="tests/test_rdataset.py" line="97" time="0.001" /><testcase classname="tests.test_rdataset.RdatasetTestCase" name="testUnionUpdate" file="tests/test_rdataset.py" line="61" time="0.001" /><testcase classname="tests.test_rdataset.ImmutableRdatasetTestCase" name="test_basic" file="tests/test_rdataset.py" line="125" time="0.001" /><testcase classname="tests.test_rdataset.ImmutableRdatasetTestCase" name="test_cloning" file="tests/test_rdataset.py" line="152" time="0.001" /><testcase classname="tests.test_rdtypeandclass.RdTypeAndClassTestCase" name="test_class_bytext1" file="tests/test_rdtypeandclass.py" line="32" time="0.000" /><testcase classname="tests.test_rdtypeandclass.RdTypeAndClassTestCase" name="test_class_bytext2" file="tests/test_rdtypeandclass.py" line="35" time="0.000" /><testcase classname="tests.test_rdtypeandclass.RdTypeAndClassTestCase" name="test_class_bytext_bounds1" file="tests/test_rdtypeandclass.py" line="38" time="0.000" /><testcase classname="tests.test_rdtypeandclass.RdTypeAndClassTestCase" name="test_class_bytext_bounds2" file="tests/test_rdtypeandclass.py" line="42" time="0.000" /><testcase classname="tests.test_rdtypeandclass.RdTypeAndClassTestCase" name="test_class_bytext_unknown" file="tests/test_rdtypeandclass.py" line="47" time="0.000" /><testcase classname="tests.test_rdtypeandclass.RdTypeAndClassTestCase" name="test_class_meta1" file="tests/test_rdtypeandclass.py" line="26" time="0.000" /><testcase classname="tests.test_rdtypeandclass.RdTypeAndClassTestCase" name="test_class_meta2" file="tests/test_rdtypeandclass.py" line="29" time="0.000" /><testcase classname="tests.test_rdtypeandclass.RdTypeAndClassTestCase" name="test_class_totext1" file="tests/test_rdtypeandclass.py" line="52" time="0.000" /><testcase classname="tests.test_rdtypeandclass.RdTypeAndClassTestCase" name="test_class_totext2" file="tests/test_rdtypeandclass.py" line="55" time="0.000" /><testcase classname="tests.test_rdtypeandclass.RdTypeAndClassTestCase" name="test_class_totext_bounds1" file="tests/test_rdtypeandclass.py" line="58" time="0.000" /><testcase classname="tests.test_rdtypeandclass.RdTypeAndClassTestCase" name="test_class_totext_bounds2" file="tests/test_rdtypeandclass.py" line="63" time="0.000" /><testcase classname="tests.test_rdtypeandclass.RdTypeAndClassTestCase" name="test_type0_totext" file="tests/test_rdtypeandclass.py" line="121" time="0.000" /><testcase classname="tests.test_rdtypeandclass.RdTypeAndClassTestCase" name="test_type_bytext1" file="tests/test_rdtypeandclass.py" line="85" time="0.000" /><testcase classname="tests.test_rdtypeandclass.RdTypeAndClassTestCase" name="test_type_bytext2" file="tests/test_rdtypeandclass.py" line="88" time="0.000" /><testcase classname="tests.test_rdtypeandclass.RdTypeAndClassTestCase" name="test_type_bytext_bounds1" file="tests/test_rdtypeandclass.py" line="91" time="0.000" /><testcase classname="tests.test_rdtypeandclass.RdTypeAndClassTestCase" name="test_type_bytext_bounds2" file="tests/test_rdtypeandclass.py" line="95" time="0.000" /><testcase classname="tests.test_rdtypeandclass.RdTypeAndClassTestCase" name="test_type_bytext_unknown" file="tests/test_rdtypeandclass.py" line="100" time="0.000" /><testcase classname="tests.test_rdtypeandclass.RdTypeAndClassTestCase" name="test_type_meta1" file="tests/test_rdtypeandclass.py" line="70" time="0.000" /><testcase classname="tests.test_rdtypeandclass.RdTypeAndClassTestCase" name="test_type_meta2" file="tests/test_rdtypeandclass.py" line="73" time="0.000" /><testcase classname="tests.test_rdtypeandclass.RdTypeAndClassTestCase" name="test_type_meta3" file="tests/test_rdtypeandclass.py" line="76" time="0.000" /><testcase classname="tests.test_rdtypeandclass.RdTypeAndClassTestCase" name="test_type_singleton1" file="tests/test_rdtypeandclass.py" line="79" time="0.000" /><testcase classname="tests.test_rdtypeandclass.RdTypeAndClassTestCase" name="test_type_singleton2" file="tests/test_rdtypeandclass.py" line="82" time="0.000" /><testcase classname="tests.test_rdtypeandclass.RdTypeAndClassTestCase" name="test_type_totext1" file="tests/test_rdtypeandclass.py" line="105" time="0.001" /><testcase classname="tests.test_rdtypeandclass.RdTypeAndClassTestCase" name="test_type_totext2" file="tests/test_rdtypeandclass.py" line="108" time="0.000" /><testcase classname="tests.test_rdtypeandclass.RdTypeAndClassTestCase" name="test_type_totext_bounds1" file="tests/test_rdtypeandclass.py" line="111" time="0.000" /><testcase classname="tests.test_rdtypeandclass.RdTypeAndClassTestCase" name="test_type_totext_bounds2" file="tests/test_rdtypeandclass.py" line="116" time="0.001" /><testcase classname="tests.test_rdtypeanydnskey.RdtypeAnyDnskeyTestCase" name="testFlagsAll" file="tests/test_rdtypeanydnskey.py" line="25" time="0.001" /><testcase classname="tests.test_rdtypeanydnskey.RdtypeAnyDnskeyTestCase" name="testFlagsRRToText" file="tests/test_rdtypeanydnskey.py" line="33" time="0.001" /><testcase classname="tests.test_rdtypeanyeui.RdtypeAnyEUI48TestCase" name="testFromTextDelim" file="tests/test_rdtypeanyeui.py" line="54" time="0.001" /><testcase classname="tests.test_rdtypeanyeui.RdtypeAnyEUI48TestCase" name="testFromTextExtraDash" file="tests/test_rdtypeanyeui.py" line="59" time="0.000" /><testcase classname="tests.test_rdtypeanyeui.RdtypeAnyEUI48TestCase" name="testFromTextInvalidHex" file="tests/test_rdtypeanyeui.py" line="69" time="0.000" /><testcase classname="tests.test_rdtypeanyeui.RdtypeAnyEUI48TestCase" name="testFromTextLength" file="tests/test_rdtypeanyeui.py" line="48" time="0.000" /><testcase classname="tests.test_rdtypeanyeui.RdtypeAnyEUI48TestCase" name="testFromTextMultipleTokens" file="tests/test_rdtypeanyeui.py" line="64" time="0.000" /><testcase classname="tests.test_rdtypeanyeui.RdtypeAnyEUI48TestCase" name="testFromTextOk" file="tests/test_rdtypeanyeui.py" line="41" time="0.001" /><testcase classname="tests.test_rdtypeanyeui.RdtypeAnyEUI48TestCase" name="testFromWireLength" file="tests/test_rdtypeanyeui.py" line="101" time="0.001" /><testcase classname="tests.test_rdtypeanyeui.RdtypeAnyEUI48TestCase" name="testFromWireOk" file="tests/test_rdtypeanyeui.py" line="92" time="0.000" /><testcase classname="tests.test_rdtypeanyeui.RdtypeAnyEUI48TestCase" name="testInstLength" file="tests/test_rdtypeanyeui.py" line="33" time="0.001" /><testcase classname="tests.test_rdtypeanyeui.RdtypeAnyEUI48TestCase" name="testInstOk" file="tests/test_rdtypeanyeui.py" line="25" time="0.000" /><testcase classname="tests.test_rdtypeanyeui.RdtypeAnyEUI48TestCase" name="testToTextOk" file="tests/test_rdtypeanyeui.py" line="74" time="0.000" /><testcase classname="tests.test_rdtypeanyeui.RdtypeAnyEUI48TestCase" name="testToWire" file="tests/test_rdtypeanyeui.py" line="84" time="0.001" /><testcase classname="tests.test_rdtypeanyeui.RdtypeAnyEUI64TestCase" name="testFromTextDelim" file="tests/test_rdtypeanyeui.py" line="141" time="0.001" /><testcase classname="tests.test_rdtypeanyeui.RdtypeAnyEUI64TestCase" name="testFromTextExtraDash" file="tests/test_rdtypeanyeui.py" line="147" time="0.001" /><testcase classname="tests.test_rdtypeanyeui.RdtypeAnyEUI64TestCase" name="testFromTextInvalidHex" file="tests/test_rdtypeanyeui.py" line="159" time="0.000" /><testcase classname="tests.test_rdtypeanyeui.RdtypeAnyEUI64TestCase" name="testFromTextLength" file="tests/test_rdtypeanyeui.py" line="135" time="0.000" /><testcase classname="tests.test_rdtypeanyeui.RdtypeAnyEUI64TestCase" name="testFromTextMultipleTokens" file="tests/test_rdtypeanyeui.py" line="153" time="0.000" /><testcase classname="tests.test_rdtypeanyeui.RdtypeAnyEUI64TestCase" name="testFromTextOk" file="tests/test_rdtypeanyeui.py" line="128" time="0.001" /><testcase classname="tests.test_rdtypeanyeui.RdtypeAnyEUI64TestCase" name="testFromWireLength" file="tests/test_rdtypeanyeui.py" line="192" time="0.000" /><testcase classname="tests.test_rdtypeanyeui.RdtypeAnyEUI64TestCase" name="testFromWireOk" file="tests/test_rdtypeanyeui.py" line="183" time="0.000" /><testcase classname="tests.test_rdtypeanyeui.RdtypeAnyEUI64TestCase" name="testInstLength" file="tests/test_rdtypeanyeui.py" line="120" time="0.000" /><testcase classname="tests.test_rdtypeanyeui.RdtypeAnyEUI64TestCase" name="testInstOk" file="tests/test_rdtypeanyeui.py" line="112" time="0.000" /><testcase classname="tests.test_rdtypeanyeui.RdtypeAnyEUI64TestCase" name="testToTextOk" file="tests/test_rdtypeanyeui.py" line="165" time="0.000" /><testcase classname="tests.test_rdtypeanyeui.RdtypeAnyEUI64TestCase" name="testToWire" file="tests/test_rdtypeanyeui.py" line="175" time="0.001" /><testcase classname="tests.test_rdtypeanyloc.RdtypeAnyLocTestCase" name="testEqual1" file="tests/test_rdtypeanyloc.py" line="23" time="0.001" /><testcase classname="tests.test_rdtypeanyloc.RdtypeAnyLocTestCase" name="testEqual2" file="tests/test_rdtypeanyloc.py" line="32" time="0.001" /><testcase classname="tests.test_rdtypeanyloc.RdtypeAnyLocTestCase" name="testEqual3" file="tests/test_rdtypeanyloc.py" line="43" time="0.001" /><testcase classname="tests.test_rdtypeanyloc.RdtypeAnyLocTestCase" name="testEqual4" file="tests/test_rdtypeanyloc.py" line="55" time="0.001" /><testcase classname="tests.test_rdtypeanytkey.RdtypeAnyTKeyTestCase" name="testTextNoOptionalData" file="tests/test_rdtypeanytkey.py" line="44" time="0.001" /><testcase classname="tests.test_rdtypeanytkey.RdtypeAnyTKeyTestCase" name="testTextOptionalData" file="tests/test_rdtypeanytkey.py" line="32" time="0.001" /><testcase classname="tests.test_rdtypeanytkey.RdtypeAnyTKeyTestCase" name="testWireNoOptionalData" file="tests/test_rdtypeanytkey.py" line="77" time="0.001" /><testcase classname="tests.test_rdtypeanytkey.RdtypeAnyTKeyTestCase" name="testWireOptionalData" file="tests/test_rdtypeanytkey.py" line="56" time="0.001" /><testcase classname="tests.test_renderer.RendererTestCase" name="test_basic" file="tests/test_renderer.py" line="23" time="0.001" /><testcase classname="tests.test_renderer.RendererTestCase" name="test_going_backwards_fails" file="tests/test_renderer.py" line="83" time="0.001" /><testcase classname="tests.test_renderer.RendererTestCase" name="test_multi_tsig" file="tests/test_renderer.py" line="54" time="0.001" /><testcase classname="tests.test_renderer.RendererTestCase" name="test_tsig" file="tests/test_renderer.py" line="39" time="0.001" /><testcase classname="tests.test_resolution.ResolutionTestCase" name="test_next_nameserver_no_nameservers" file="tests/test_resolution.py" line="279" time="0.001" /><testcase classname="tests.test_resolution.ResolutionTestCase" name="test_next_nameserver_retry_with_tcp" file="tests/test_resolution.py" line="259" time="0.001" /><testcase classname="tests.test_resolution.ResolutionTestCase" name="test_next_nameserver_udp" file="tests/test_resolution.py" line="230" time="0.001" /><testcase classname="tests.test_resolution.ResolutionTestCase" name="test_next_request_TSIG" file="tests/test_resolution.py" line="213" time="0.001" /><testcase classname="tests.test_resolution.ResolutionTestCase" name="test_next_request_abs" file="tests/test_resolution.py" line="25" time="0.001" /><testcase classname="tests.test_resolution.ResolutionTestCase" name="test_next_request_cache_hit" file="tests/test_resolution.py" line="103" time="0.001" /><testcase classname="tests.test_resolution.ResolutionTestCase" name="test_next_request_cached_no_answer" file="tests/test_resolution.py" line="115" time="0.001" /><testcase classname="tests.test_resolution.ResolutionTestCase" name="test_next_request_cached_nxdomain_with_search" file="tests/test_resolution.py" line="158" time="0.001" /><testcase classname="tests.test_resolution.ResolutionTestCase" name="test_next_request_cached_nxdomain_without_search" file="tests/test_resolution.py" line="137" time="0.001" /><testcase classname="tests.test_resolution.ResolutionTestCase" name="test_next_request_exhaust_causes_nxdomain" file="tests/test_resolution.py" line="63" time="0.001" /><testcase classname="tests.test_resolution.ResolutionTestCase" name="test_next_request_flags" file="tests/test_resolution.py" line="224" time="0.000" /><testcase classname="tests.test_resolution.ResolutionTestCase" name="test_next_request_rel_with_search" file="tests/test_resolution.py" line="31" time="0.001" /><testcase classname="tests.test_resolution.ResolutionTestCase" name="test_next_request_rel_without_search" file="tests/test_resolution.py" line="49" time="0.001" /><testcase classname="tests.test_resolution.ResolutionTestCase" name="test_next_request_rotate" file="tests/test_resolution.py" line="188" time="0.001" /><testcase classname="tests.test_resolution.ResolutionTestCase" name="test_no_metaqueries" file="tests/test_resolution.py" line="461" time="0.001" /><testcase classname="tests.test_resolution.ResolutionTestCase" name="test_query_result_chain_not_too_long" file="tests/test_resolution.py" line="384" time="0.002" /><testcase classname="tests.test_resolution.ResolutionTestCase" name="test_query_result_chain_too_long" file="tests/test_resolution.py" line="393" time="0.002" /><testcase classname="tests.test_resolution.ResolutionTestCase" name="test_query_result_nameserver_continuing_exception" file="tests/test_resolution.py" line="308" time="0.000" /><testcase classname="tests.test_resolution.ResolutionTestCase" name="test_query_result_nameserver_removing_exceptions" file="tests/test_resolution.py" line="289" time="0.001" /><testcase classname="tests.test_resolution.ResolutionTestCase" name="test_query_result_no_error_no_data" file="tests/test_resolution.py" line="355" time="0.001" /><testcase classname="tests.test_resolution.ResolutionTestCase" name="test_query_result_no_error_with_data" file="tests/test_resolution.py" line="332" time="0.001" /><testcase classname="tests.test_resolution.ResolutionTestCase" name="test_query_result_no_error_with_data_cached" file="tests/test_resolution.py" line="343" time="0.001" /><testcase classname="tests.test_resolution.ResolutionTestCase" name="test_query_result_nxdomain" file="tests/test_resolution.py" line="364" time="0.001" /><testcase classname="tests.test_resolution.ResolutionTestCase" name="test_query_result_nxdomain_but_has_answer" file="tests/test_resolution.py" line="373" time="0.001" /><testcase classname="tests.test_resolution.ResolutionTestCase" name="test_query_result_nxdomain_cached" file="tests/test_resolution.py" line="403" time="0.001" /><testcase classname="tests.test_resolution.ResolutionTestCase" name="test_query_result_other_unhappy_rcode" file="tests/test_resolution.py" line="450" time="0.001" /><testcase classname="tests.test_resolution.ResolutionTestCase" name="test_query_result_retry_with_tcp" file="tests/test_resolution.py" line="320" time="0.001" /><testcase classname="tests.test_resolution.ResolutionTestCase" name="test_query_result_servfail_no_retry" file="tests/test_resolution.py" line="426" time="0.001" /><testcase classname="tests.test_resolution.ResolutionTestCase" name="test_query_result_servfail_with_retry" file="tests/test_resolution.py" line="437" time="0.001" /><testcase classname="tests.test_resolution.ResolutionTestCase" name="test_query_result_yxdomain" file="tests/test_resolution.py" line="416" time="0.001" /><testcase classname="tests.test_resolver.BaseResolverTests" name="testCacheCleaning" file="tests/test_resolver.py" line="299" time="0.001" /><testcase classname="tests.test_resolver.BaseResolverTests" name="testCacheExpiration" file="tests/test_resolver.py" line="286" time="0.001" /><testcase classname="tests.test_resolver.BaseResolverTests" name="testCacheNonCleaning" file="tests/test_resolver.py" line="313" time="0.001" /><testcase classname="tests.test_resolver.BaseResolverTests" name="testEmptyAnswerSection" file="tests/test_resolver.py" line="504" time="0.001" /><testcase classname="tests.test_resolver.BaseResolverTests" name="testIndexErrorOnEmptyRRsetAccess" file="tests/test_resolver.py" line="327" time="0.001" /><testcase classname="tests.test_resolver.BaseResolverTests" name="testIndexErrorOnEmptyRRsetDelete" file="tests/test_resolver.py" line="336" time="0.001" /><testcase classname="tests.test_resolver.BaseResolverTests" name="testLRUDoesLRU" file="tests/test_resolver.py" line="370" time="0.001" /><testcase classname="tests.test_resolver.BaseResolverTests" name="testLRUExpiration" file="tests/test_resolver.py" line="393" time="0.000" /><testcase classname="tests.test_resolver.BaseResolverTests" name="testLRUReplace" file="tests/test_resolver.py" line="353" time="0.001" /><testcase classname="tests.test_resolver.BaseResolverTests" name="testRRsetDelete" file="tests/test_resolver.py" line="345" time="0.001" /><testcase classname="tests.test_resolver.BaseResolverTests" name="testRead" file="tests/test_resolver.py" line="223" time="0.000" /><testcase classname="tests.test_resolver.BaseResolverTests" name="testReadNoNameservers" file="tests/test_resolver.py" line="265" time="0.001" /><testcase classname="tests.test_resolver.BaseResolverTests" name="testReadOptions" file="tests/test_resolver.py" line="230" time="0.000" /><testcase classname="tests.test_resolver.BaseResolverTests" name="testReadOptionsBadNdots" file="tests/test_resolver.py" line="253" time="0.001" /><testcase classname="tests.test_resolver.BaseResolverTests" name="testReadOptionsBadTimeouts" file="tests/test_resolver.py" line="241" time="0.001" /><testcase classname="tests.test_resolver.BaseResolverTests" name="testReadUnknownDirective" file="tests/test_resolver.py" line="271" time="0.000" /><testcase classname="tests.test_resolver.BaseResolverTests" name="testReadUnknownOption" file="tests/test_resolver.py" line="279" time="0.000" /><testcase classname="tests.test_resolver.BaseResolverTests" name="testSearchListsAbsolute" file="tests/test_resolver.py" line="566" time="0.000" /><testcase classname="tests.test_resolver.BaseResolverTests" name="testSearchListsRelative" file="tests/test_resolver.py" line="521" time="0.001" /><testcase classname="tests.test_resolver.BaseResolverTests" name="testSetFlags" file="tests/test_resolver.py" line="585" time="0.000" /><testcase classname="tests.test_resolver.BaseResolverTests" name="testUseEDNS" file="tests/test_resolver.py" line="576" time="0.000" /><testcase classname="tests.test_resolver.BaseResolverTests" name="testUseTSIG" file="tests/test_resolver.py" line="591" time="0.001" /><testcase classname="tests.test_resolver.BaseResolverTests" name="test_LRUCache_overwrite" file="tests/test_resolver.py" line="447" time="0.001" /><testcase classname="tests.test_resolver.BaseResolverTests" name="test_LRUCache_set_max_size" file="tests/test_resolver.py" line="441" time="0.001" /><testcase classname="tests.test_resolver.BaseResolverTests" name="test_cache_flush" file="tests/test_resolver.py" line="407" time="0.001" /><testcase classname="tests.test_resolver.BaseResolverTests" name="test_cache_stats" file="tests/test_resolver.py" line="469" time="0.001" /><testcase classname="tests.test_resolver.LiveResolverTests" name="testCanonicalNameCNAME" file="tests/test_resolver.py" line="691" time="0.003" /><testcase classname="tests.test_resolver.LiveResolverTests" name="testCanonicalNameDangling" file="tests/test_resolver.py" line="696" time="0.071"><failure message="AssertionError: &lt;DNS name dangling-cname.dnspython.org.&gt; != &lt;DNS name dangling-target.dnspython.org.&gt;">Traceback (most recent call last):
  File "/usr/local/lib/python3.10/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/local/lib/python3.10/unittest/case.py", line 591, in run
    self._callTestMethod(testMethod)
  File "/usr/local/lib/python3.10/unittest/case.py", line 549, in _callTestMethod
    method()
  File "/workdir/dnspython-2.2.1/tests/test_resolver.py", line 701, in testCanonicalNameDangling
    self.assertEqual(dns.resolver.canonical_name(name), cname)
  File "/usr/local/lib/python3.10/unittest/case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "/usr/local/lib/python3.10/unittest/case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: &lt;DNS name dangling-cname.dnspython.org.&gt; != &lt;DNS name dangling-target.dnspython.org.&gt;</failure></testcase><testcase classname="tests.test_resolver.LiveResolverTests" name="testCanonicalNameNoCNAME" file="tests/test_resolver.py" line="687" time="0.003" /><testcase classname="tests.test_resolver.LiveResolverTests" name="testNameserverSetting" file="tests/test_resolver.py" line="702" time="0.001" /><testcase classname="tests.test_resolver.LiveResolverTests" name="testResolve" file="tests/test_resolver.py" line="632" time="0.002" /><testcase classname="tests.test_resolver.LiveResolverTests" name="testResolveAddress" file="tests/test_resolver.py" line="644" time="0.002"><failure message="dns.resolver.NoAnswer: The DNS response does not contain an answer to the question: 8.8.8.8.in-addr.arpa. IN PTR">Traceback (most recent call last):
  File "/usr/local/lib/python3.10/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/local/lib/python3.10/unittest/case.py", line 591, in run
    self._callTestMethod(testMethod)
  File "/usr/local/lib/python3.10/unittest/case.py", line 549, in _callTestMethod
    method()
  File "/workdir/dnspython-2.2.1/tests/test_resolver.py", line 646, in testResolveAddress
    answer = dns.resolver.resolve_address('8.8.8.8')
  File "/workdir/dnspython-2.2.1/dns/resolver.py", line 1221, in resolve_address
    return get_default_resolver().resolve_address(ipaddr, *args, **kwargs)
  File "/workdir/dnspython-2.2.1/dns/resolver.py", line 1128, in resolve_address
    return self.resolve(dns.reversename.from_address(ipaddr),
  File "/workdir/dnspython-2.2.1/dns/resolver.py", line 1090, in resolve
    (answer, done) = resolution.query_result(response, None)
  File "/workdir/dnspython-2.2.1/dns/resolver.py", line 696, in query_result
    raise NoAnswer(response=answer.response)
dns.resolver.NoAnswer: The DNS response does not contain an answer to the question: 8.8.8.8.in-addr.arpa. IN PTR</failure></testcase><testcase classname="tests.test_resolver.LiveResolverTests" name="testResolveCacheHit" file="tests/test_resolver.py" line="676" time="0.011" /><testcase classname="tests.test_resolver.LiveResolverTests" name="testResolveNXDOMAIN" file="tests/test_resolver.py" line="663" time="0.086" /><testcase classname="tests.test_resolver.LiveResolverTests" name="testResolveNodataAnswer" file="tests/test_resolver.py" line="654" time="0.009" /><testcase classname="tests.test_resolver.LiveResolverTests" name="testResolveNodataException" file="tests/test_resolver.py" line="649" time="0.003" /><testcase classname="tests.test_resolver.LiveResolverTests" name="testResolveTCP" file="tests/test_resolver.py" line="638" time="0.008" /><testcase classname="tests.test_resolver.LiveResolverTests" name="testZoneForName1" file="tests/test_resolver.py" line="609" time="0.004" /><testcase classname="tests.test_resolver.LiveResolverTests" name="testZoneForName2" file="tests/test_resolver.py" line="615" time="0.006" /><testcase classname="tests.test_resolver.LiveResolverTests" name="testZoneForName3" file="tests/test_resolver.py" line="621" time="0.002" /><testcase classname="tests.test_resolver.LiveResolverTests" name="testZoneForName4" file="tests/test_resolver.py" line="626" time="0.001" /><testcase classname="tests.test_resolver.SelectResolverTestCase" name="testCanonicalNameCNAME" file="tests/test_resolver.py" line="691" time="0.002" /><testcase classname="tests.test_resolver.SelectResolverTestCase" name="testCanonicalNameDangling" file="tests/test_resolver.py" line="696" time="0.068"><failure message="AssertionError: &lt;DNS name dangling-cname.dnspython.org.&gt; != &lt;DNS name dangling-target.dnspython.org.&gt;">Traceback (most recent call last):
  File "/usr/local/lib/python3.10/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/local/lib/python3.10/unittest/case.py", line 591, in run
    self._callTestMethod(testMethod)
  File "/usr/local/lib/python3.10/unittest/case.py", line 549, in _callTestMethod
    method()
  File "/workdir/dnspython-2.2.1/tests/test_resolver.py", line 701, in testCanonicalNameDangling
    self.assertEqual(dns.resolver.canonical_name(name), cname)
  File "/usr/local/lib/python3.10/unittest/case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "/usr/local/lib/python3.10/unittest/case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: &lt;DNS name dangling-cname.dnspython.org.&gt; != &lt;DNS name dangling-target.dnspython.org.&gt;</failure></testcase><testcase classname="tests.test_resolver.SelectResolverTestCase" name="testCanonicalNameNoCNAME" file="tests/test_resolver.py" line="687" time="0.002" /><testcase classname="tests.test_resolver.SelectResolverTestCase" name="testNameserverSetting" file="tests/test_resolver.py" line="702" time="0.001" /><testcase classname="tests.test_resolver.SelectResolverTestCase" name="testResolve" file="tests/test_resolver.py" line="632" time="0.003" /><testcase classname="tests.test_resolver.SelectResolverTestCase" name="testResolveAddress" file="tests/test_resolver.py" line="644" time="0.003"><failure message="dns.resolver.NoAnswer: The DNS response does not contain an answer to the question: 8.8.8.8.in-addr.arpa. IN PTR">Traceback (most recent call last):
  File "/usr/local/lib/python3.10/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/local/lib/python3.10/unittest/case.py", line 591, in run
    self._callTestMethod(testMethod)
  File "/usr/local/lib/python3.10/unittest/case.py", line 549, in _callTestMethod
    method()
  File "/workdir/dnspython-2.2.1/tests/test_resolver.py", line 646, in testResolveAddress
    answer = dns.resolver.resolve_address('8.8.8.8')
  File "/workdir/dnspython-2.2.1/dns/resolver.py", line 1221, in resolve_address
    return get_default_resolver().resolve_address(ipaddr, *args, **kwargs)
  File "/workdir/dnspython-2.2.1/dns/resolver.py", line 1128, in resolve_address
    return self.resolve(dns.reversename.from_address(ipaddr),
  File "/workdir/dnspython-2.2.1/dns/resolver.py", line 1090, in resolve
    (answer, done) = resolution.query_result(response, None)
  File "/workdir/dnspython-2.2.1/dns/resolver.py", line 696, in query_result
    raise NoAnswer(response=answer.response)
dns.resolver.NoAnswer: The DNS response does not contain an answer to the question: 8.8.8.8.in-addr.arpa. IN PTR</failure></testcase><testcase classname="tests.test_resolver.SelectResolverTestCase" name="testResolveCacheHit" file="tests/test_resolver.py" line="676" time="0.011" /><testcase classname="tests.test_resolver.SelectResolverTestCase" name="testResolveNXDOMAIN" file="tests/test_resolver.py" line="663" time="0.054" /><testcase classname="tests.test_resolver.SelectResolverTestCase" name="testResolveNodataAnswer" file="tests/test_resolver.py" line="654" time="0.003" /><testcase classname="tests.test_resolver.SelectResolverTestCase" name="testResolveNodataException" file="tests/test_resolver.py" line="649" time="0.003" /><testcase classname="tests.test_resolver.SelectResolverTestCase" name="testResolveTCP" file="tests/test_resolver.py" line="638" time="0.002" /><testcase classname="tests.test_resolver.SelectResolverTestCase" name="testZoneForName1" file="tests/test_resolver.py" line="609" time="0.004" /><testcase classname="tests.test_resolver.SelectResolverTestCase" name="testZoneForName2" file="tests/test_resolver.py" line="615" time="0.006" /><testcase classname="tests.test_resolver.SelectResolverTestCase" name="testZoneForName3" file="tests/test_resolver.py" line="621" time="0.002" /><testcase classname="tests.test_resolver.SelectResolverTestCase" name="testZoneForName4" file="tests/test_resolver.py" line="626" time="0.001" /><testcase classname="tests.test_resolver.PollResolverTestCase" name="testCanonicalNameCNAME" file="tests/test_resolver.py" line="691" time="0.002" /><testcase classname="tests.test_resolver.PollResolverTestCase" name="testCanonicalNameDangling" file="tests/test_resolver.py" line="696" time="0.069"><failure message="AssertionError: &lt;DNS name dangling-cname.dnspython.org.&gt; != &lt;DNS name dangling-target.dnspython.org.&gt;">Traceback (most recent call last):
  File "/usr/local/lib/python3.10/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/local/lib/python3.10/unittest/case.py", line 591, in run
    self._callTestMethod(testMethod)
  File "/usr/local/lib/python3.10/unittest/case.py", line 549, in _callTestMethod
    method()
  File "/workdir/dnspython-2.2.1/tests/test_resolver.py", line 701, in testCanonicalNameDangling
    self.assertEqual(dns.resolver.canonical_name(name), cname)
  File "/usr/local/lib/python3.10/unittest/case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "/usr/local/lib/python3.10/unittest/case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: &lt;DNS name dangling-cname.dnspython.org.&gt; != &lt;DNS name dangling-target.dnspython.org.&gt;</failure></testcase><testcase classname="tests.test_resolver.PollResolverTestCase" name="testCanonicalNameNoCNAME" file="tests/test_resolver.py" line="687" time="0.010" /><testcase classname="tests.test_resolver.PollResolverTestCase" name="testNameserverSetting" file="tests/test_resolver.py" line="702" time="0.001" /><testcase classname="tests.test_resolver.PollResolverTestCase" name="testResolve" file="tests/test_resolver.py" line="632" time="0.002" /><testcase classname="tests.test_resolver.PollResolverTestCase" name="testResolveAddress" file="tests/test_resolver.py" line="644" time="0.002"><failure message="dns.resolver.NoAnswer: The DNS response does not contain an answer to the question: 8.8.8.8.in-addr.arpa. IN PTR">Traceback (most recent call last):
  File "/usr/local/lib/python3.10/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/local/lib/python3.10/unittest/case.py", line 591, in run
    self._callTestMethod(testMethod)
  File "/usr/local/lib/python3.10/unittest/case.py", line 549, in _callTestMethod
    method()
  File "/workdir/dnspython-2.2.1/tests/test_resolver.py", line 646, in testResolveAddress
    answer = dns.resolver.resolve_address('8.8.8.8')
  File "/workdir/dnspython-2.2.1/dns/resolver.py", line 1221, in resolve_address
    return get_default_resolver().resolve_address(ipaddr, *args, **kwargs)
  File "/workdir/dnspython-2.2.1/dns/resolver.py", line 1128, in resolve_address
    return self.resolve(dns.reversename.from_address(ipaddr),
  File "/workdir/dnspython-2.2.1/dns/resolver.py", line 1090, in resolve
    (answer, done) = resolution.query_result(response, None)
  File "/workdir/dnspython-2.2.1/dns/resolver.py", line 696, in query_result
    raise NoAnswer(response=answer.response)
dns.resolver.NoAnswer: The DNS response does not contain an answer to the question: 8.8.8.8.in-addr.arpa. IN PTR</failure></testcase><testcase classname="tests.test_resolver.PollResolverTestCase" name="testResolveCacheHit" file="tests/test_resolver.py" line="676" time="0.011" /><testcase classname="tests.test_resolver.PollResolverTestCase" name="testResolveNXDOMAIN" file="tests/test_resolver.py" line="663" time="0.004" /><testcase classname="tests.test_resolver.PollResolverTestCase" name="testResolveNodataAnswer" file="tests/test_resolver.py" line="654" time="0.002" /><testcase classname="tests.test_resolver.PollResolverTestCase" name="testResolveNodataException" file="tests/test_resolver.py" line="649" time="0.002" /><testcase classname="tests.test_resolver.PollResolverTestCase" name="testResolveTCP" file="tests/test_resolver.py" line="638" time="0.002" /><testcase classname="tests.test_resolver.PollResolverTestCase" name="testZoneForName1" file="tests/test_resolver.py" line="609" time="0.004" /><testcase classname="tests.test_resolver.PollResolverTestCase" name="testZoneForName2" file="tests/test_resolver.py" line="615" time="0.006" /><testcase classname="tests.test_resolver.PollResolverTestCase" name="testZoneForName3" file="tests/test_resolver.py" line="621" time="0.002" /><testcase classname="tests.test_resolver.PollResolverTestCase" name="testZoneForName4" file="tests/test_resolver.py" line="626" time="0.001" /><testcase classname="tests.test_resolver.NXDOMAINExceptionTestCase" name="test_nxdomain_canonical_name" file="tests/test_resolver.py" line="850" time="0.003" /><testcase classname="tests.test_resolver.NXDOMAINExceptionTestCase" name="test_nxdomain_compatible" file="tests/test_resolver.py" line="740" time="0.001" /><testcase classname="tests.test_resolver.NXDOMAINExceptionTestCase" name="test_nxdomain_merge" file="tests/test_resolver.py" line="829" time="0.001" /><testcase classname="tests.test_resolver.ResolverMiscTestCase" name="test_compute_timeout" file="tests/test_resolver.py" line="878" time="0.001" /><testcase classname="tests.test_resolver.ResolverMiscTestCase" name="test_read_nonexistent_config" file="tests/test_resolver.py" line="872" time="0.001" /><testcase classname="tests.test_resolver.ResolverNameserverValidTypeTestCase" name="test_set_nameservers_invalid_type" file="tests/test_resolver.py" line="906" time="0.001" /><testcase classname="tests.test_resolver.ResolverNameserverValidTypeTestCase" name="test_set_nameservers_to_list" file="tests/test_resolver.py" line="896" time="0.000" /><testcase classname="tests.test_resolver.ResolverNameserverValidTypeTestCase" name="test_set_namservers_to_empty_list" file="tests/test_resolver.py" line="901" time="0.000" /><testcase classname="tests.test_resolver.NanoTests" name="testE164Query" file="tests/test_resolver.py" line="941" time="0.000"><skipped type="pytest.skip" message="Internet and NanoAuth required">/workdir/dnspython-2.2.1/tests/test_resolver.py:942: Internet and NanoAuth required</skipped></testcase><testcase classname="tests.test_resolver.ZoneForNameTests" name="testHelpfulNXDOMAIN" file="tests/test_resolver.py" line="1009" time="0.000"><skipped type="pytest.skip" message="Internet and NanoAuth required">/workdir/dnspython-2.2.1/tests/test_resolver.py:1010: Internet and NanoAuth required</skipped></testcase><testcase classname="tests.test_resolver.ZoneForNameTests" name="testHelpfulNoErrorNoData" file="tests/test_resolver.py" line="1019" time="0.000"><skipped type="pytest.skip" message="Internet and NanoAuth required">/workdir/dnspython-2.2.1/tests/test_resolver.py:1020: Internet and NanoAuth required</skipped></testcase><testcase classname="tests.test_resolver.ZoneForNameTests" name="testNoRootSOA" file="tests/test_resolver.py" line="1001" time="0.000"><skipped type="pytest.skip" message="Internet and NanoAuth required">/workdir/dnspython-2.2.1/tests/test_resolver.py:1002: Internet and NanoAuth required</skipped></testcase><testcase classname="tests.test_resolver" name="testResolverTimeout" file="tests/test_resolver.py" line="1046" time="0.000"><skipped type="pytest.skip" message="Internet and NanoAuth required">/workdir/dnspython-2.2.1/tests/test_resolver.py:1047: Internet and NanoAuth required</skipped></testcase><testcase classname="tests.test_resolver" name="testResolverNoNameservers" file="tests/test_resolver.py" line="1070" time="0.000"><skipped type="pytest.skip" message="Internet and NanoAuth required">/workdir/dnspython-2.2.1/tests/test_resolver.py:1071: Internet and NanoAuth required</skipped></testcase><testcase classname="tests.test_resolver" name="testZoneForNameLifetimeTimeout" file="tests/test_resolver.py" line="1100" time="0.000"><skipped type="pytest.skip" message="Internet and NanoAuth required">/workdir/dnspython-2.2.1/tests/test_resolver.py:1101: Internet and NanoAuth required</skipped></testcase><testcase classname="tests.test_resolver_override.OverrideSystemResolverTestCase" name="test_basic_getaddrinfo" file="tests/test_resolver_override.py" line="83" time="0.030" /><testcase classname="tests.test_resolver_override.OverrideSystemResolverTestCase" name="test_getaddrinfo_nxdomain" file="tests/test_resolver_override.py" line="103" time="0.132" /><testcase classname="tests.test_resolver_override.OverrideSystemResolverTestCase" name="test_getaddrinfo_only_service" file="tests/test_resolver_override.py" line="121" time="0.001" /><testcase classname="tests.test_resolver_override.OverrideSystemResolverTestCase" name="test_getaddrinfo_service" file="tests/test_resolver_override.py" line="110" time="0.022" /><testcase classname="tests.test_resolver_override.OverrideSystemResolverTestCase" name="test_gethostbyaddr" file="tests/test_resolver_override.py" line="162" time="0.012"><failure message="socket.herror: [Errno 4] No address associated with name">Traceback (most recent call last):
  File "/usr/local/lib/python3.10/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/local/lib/python3.10/unittest/case.py", line 591, in run
    self._callTestMethod(testMethod)
  File "/usr/local/lib/python3.10/unittest/case.py", line 549, in _callTestMethod
    method()
  File "/workdir/dnspython-2.2.1/tests/test_resolver_override.py", line 164, in test_gethostbyaddr
    a = dns.resolver._original_gethostbyaddr('8.8.8.8')
socket.herror: [Errno 4] No address associated with name</failure></testcase><testcase classname="tests.test_resolver_override.OverrideSystemResolverTestCase" name="test_getnameinfo_tcp" file="tests/test_resolver_override.py" line="136" time="0.011" /><testcase classname="tests.test_resolver_override.OverrideSystemResolverTestCase" name="test_getnameinfo_udp" file="tests/test_resolver_override.py" line="140" time="0.011" /><testcase classname="tests.test_resolver_override.OverrideSystemResolverTestCase" name="test_override" file="tests/test_resolver_override.py" line="33" time="0.111" /><testcase classname="tests.test_resolver_override.OverrideSystemResolverTestCase" name="test_unknown_service_fails" file="tests/test_resolver_override.py" line="132" time="0.022" /><testcase classname="tests.test_resolver_override.OverrideSystemResolverUsingFakeResolverTestCase" name="test_AI_ADDRCONFIG_fails" file="tests/test_resolver_override.py" line="200" time="0.001" /><testcase classname="tests.test_resolver_override.OverrideSystemResolverUsingFakeResolverTestCase" name="test_gethostbyaddr_of_name_fails" file="tests/test_resolver_override.py" line="204" time="0.001" /><testcase classname="tests.test_resolver_override.OverrideSystemResolverUsingFakeResolverTestCase" name="test_no_host_or_service_fails" file="tests/test_resolver_override.py" line="196" time="0.001" /><testcase classname="tests.test_resolver_override.OverrideSystemResolverUsingFakeResolverTestCase" name="test_temporary_failure" file="tests/test_resolver_override.py" line="189" time="0.001" /><testcase classname="tests.test_resolver_override.OverrideSystemResolverUsingDefaultResolverTestCase" name="test_override" file="tests/test_resolver_override.py" line="220" time="0.001" /><testcase classname="tests.test_rrset.RRsetTestCase" name="testCodec2003" file="tests/test_rrset.py" line="56" time="0.001" /><testcase classname="tests.test_rrset.RRsetTestCase" name="testCodec2008" file="tests/test_rrset.py" line="63" time="0.001" /><testcase classname="tests.test_rrset.RRsetTestCase" name="testCopy" file="tests/test_rrset.py" line="74" time="0.001" /><testcase classname="tests.test_rrset.RRsetTestCase" name="testEmptyList" file="tests/test_rrset.py" line="147" time="0.000" /><testcase classname="tests.test_rrset.RRsetTestCase" name="testEqual1" file="tests/test_rrset.py" line="25" time="0.001" /><testcase classname="tests.test_rrset.RRsetTestCase" name="testEqual2" file="tests/test_rrset.py" line="30" time="0.001" /><testcase classname="tests.test_rrset.RRsetTestCase" name="testFromRdata" file="tests/test_rrset.py" line="137" time="0.001" /><testcase classname="tests.test_rrset.RRsetTestCase" name="testFullMatch1" file="tests/test_rrset.py" line="81" time="0.001" /><testcase classname="tests.test_rrset.RRsetTestCase" name="testFullMatch2" file="tests/test_rrset.py" line="87" time="0.001" /><testcase classname="tests.test_rrset.RRsetTestCase" name="testMatchCompatibilityWithFullMatch" file="tests/test_rrset.py" line="118" time="0.001" /><testcase classname="tests.test_rrset.RRsetTestCase" name="testMatchCompatibilityWithRdatasetMatch" file="tests/test_rrset.py" line="124" time="0.001" /><testcase classname="tests.test_rrset.RRsetTestCase" name="testNoFullMatch1" file="tests/test_rrset.py" line="95" time="0.001" /><testcase classname="tests.test_rrset.RRsetTestCase" name="testNoFullMatch2" file="tests/test_rrset.py" line="103" time="0.001" /><testcase classname="tests.test_rrset.RRsetTestCase" name="testNoFullMatch3" file="tests/test_rrset.py" line="111" time="0.001" /><testcase classname="tests.test_rrset.RRsetTestCase" name="testNotEqual1" file="tests/test_rrset.py" line="35" time="0.001" /><testcase classname="tests.test_rrset.RRsetTestCase" name="testNotEqual2" file="tests/test_rrset.py" line="40" time="0.001" /><testcase classname="tests.test_rrset.RRsetTestCase" name="testNotEqual3" file="tests/test_rrset.py" line="45" time="0.001" /><testcase classname="tests.test_rrset.RRsetTestCase" name="testNotEqual4" file="tests/test_rrset.py" line="51" time="0.001" /><testcase classname="tests.test_rrset.RRsetTestCase" name="testNotEqualOtherType" file="tests/test_rrset.py" line="167" time="0.001" /><testcase classname="tests.test_rrset.RRsetTestCase" name="testRepr" file="tests/test_rrset.py" line="172" time="0.001" /><testcase classname="tests.test_rrset.RRsetTestCase" name="testTTLMinimization" file="tests/test_rrset.py" line="152" time="0.001" /><testcase classname="tests.test_rrset.RRsetTestCase" name="testToRdataset" file="tests/test_rrset.py" line="130" time="0.001" /><testcase classname="tests.test_rrset_reader" name="test_name_ttl_rdclass_forced" file="tests/test_rrset_reader.py" line="26" time="0.001" /><testcase classname="tests.test_rrset_reader" name="test_name_ttl_rdclass_forced_rdata_split" file="tests/test_rrset_reader.py" line="36" time="0.001" /><testcase classname="tests.test_rrset_reader" name="test_name_ttl_rdclass_rdtype_forced" file="tests/test_rrset_reader.py" line="44" time="0.001" /><testcase classname="tests.test_rrset_reader" name="test_name_rdclass_forced" file="tests/test_rrset_reader.py" line="51" time="0.001" /><testcase classname="tests.test_rrset_reader" name="test_rdclass_forced" file="tests/test_rrset_reader.py" line="59" time="0.001" /><testcase classname="tests.test_rrset_reader" name="test_rdclass_forced_with_origin" file="tests/test_rrset_reader.py" line="67" time="0.001" /><testcase classname="tests.test_rrset_reader" name="test_rdclass_forced_with_origin_relativized" file="tests/test_rrset_reader.py" line="76" time="0.001" /><testcase classname="tests.test_rrset_reader" name="test_rdclass_matching_default_tolerated" file="tests/test_rrset_reader.py" line="84" time="0.001" /><testcase classname="tests.test_rrset_reader" name="test_rdclass_not_matching_default_rejected" file="tests/test_rrset_reader.py" line="93" time="0.001" /><testcase classname="tests.test_rrset_reader" name="test_default_rdclass_is_none" file="tests/test_rrset_reader.py" line="102" time="0.001" /><testcase classname="tests.test_rrset_reader" name="test_name_rdclass_rdtype_force" file="tests/test_rrset_reader.py" line="108" time="0.001" /><testcase classname="tests.test_rrset_reader" name="test_rdclass_rdtype_force" file="tests/test_rrset_reader.py" line="118" time="0.001" /><testcase classname="tests.test_serial.SerialTestCase" name="test_addition_bounds" file="tests/test_serial.py" line="66" time="0.001" /><testcase classname="tests.test_serial.SerialTestCase" name="test_casting" file="tests/test_serial.py" line="78" time="0.000" /><testcase classname="tests.test_serial.SerialTestCase" name="test_incremental_ops" file="tests/test_serial.py" line="49" time="0.000" /><testcase classname="tests.test_serial.SerialTestCase" name="test_modulo" file="tests/test_serial.py" line="107" time="0.000" /><testcase classname="tests.test_serial.SerialTestCase" name="test_not_equal" file="tests/test_serial.py" line="114" time="0.000" /><testcase classname="tests.test_serial.SerialTestCase" name="test_repr" file="tests/test_serial.py" line="111" time="0.000" /><testcase classname="tests.test_serial.SerialTestCase" name="test_rfc_1982_2_bit_cases" file="tests/test_serial.py" line="13" time="0.000" /><testcase classname="tests.test_serial.SerialTestCase" name="test_rfc_1982_8_bit_cases" file="tests/test_serial.py" line="27" time="0.001" /><testcase classname="tests.test_serial.SerialTestCase" name="test_sub" file="tests/test_serial.py" line="63" time="0.000" /><testcase classname="tests.test_serial.SerialTestCase" name="test_uncastable" file="tests/test_serial.py" line="86" time="0.000" /><testcase classname="tests.test_serial.SerialTestCase" name="test_uncomparable" file="tests/test_serial.py" line="98" time="0.001" /><testcase classname="tests.test_set.SetTestCase" name="testBadSubsetSuperset" file="tests/test_set.py" line="248" time="0.001" /><testcase classname="tests.test_set.SetTestCase" name="testBadUpdates" file="tests/test_set.py" line="233" time="0.000" /><testcase classname="tests.test_set.SetTestCase" name="testCopy" file="tests/test_set.py" line="223" time="0.000" /><testcase classname="tests.test_set.SetTestCase" name="testDelitem" file="tests/test_set.py" line="200" time="0.000" /><testcase classname="tests.test_set.SetTestCase" name="testDelslice" file="tests/test_set.py" line="205" time="0.000" /><testcase classname="tests.test_set.SetTestCase" name="testDifference1" file="tests/test_set.py" line="87" time="0.000" /><testcase classname="tests.test_set.SetTestCase" name="testDifference2" file="tests/test_set.py" line="93" time="0.000" /><testcase classname="tests.test_set.SetTestCase" name="testDifference3" file="tests/test_set.py" line="99" time="0.000" /><testcase classname="tests.test_set.SetTestCase" name="testDifference4" file="tests/test_set.py" line="105" time="0.000" /><testcase classname="tests.test_set.SetTestCase" name="testDiscardNonexistent" file="tests/test_set.py" line="217" time="0.001" /><testcase classname="tests.test_set.SetTestCase" name="testGetitem" file="tests/test_set.py" line="183" time="0.000" /><testcase classname="tests.test_set.SetTestCase" name="testGetslice" file="tests/test_set.py" line="191" time="0.000" /><testcase classname="tests.test_set.SetTestCase" name="testIncrementalOperators" file="tests/test_set.py" line="253" time="0.001" /><testcase classname="tests.test_set.SetTestCase" name="testIntersection1" file="tests/test_set.py" line="63" time="0.000" /><testcase classname="tests.test_set.SetTestCase" name="testIntersection2" file="tests/test_set.py" line="69" time="0.000" /><testcase classname="tests.test_set.SetTestCase" name="testIntersection3" file="tests/test_set.py" line="75" time="0.002" /><testcase classname="tests.test_set.SetTestCase" name="testIntersection4" file="tests/test_set.py" line="81" time="0.001" /><testcase classname="tests.test_set.SetTestCase" name="testLen1" file="tests/test_set.py" line="27" time="0.001" /><testcase classname="tests.test_set.SetTestCase" name="testLen2" file="tests/test_set.py" line="31" time="0.001" /><testcase classname="tests.test_set.SetTestCase" name="testLen3" file="tests/test_set.py" line="35" time="0.001" /><testcase classname="tests.test_set.SetTestCase" name="testRemoveNonexistent" file="tests/test_set.py" line="210" time="0.001" /><testcase classname="tests.test_set.SetTestCase" name="testSelfUpdates" file="tests/test_set.py" line="238" time="0.000" /><testcase classname="tests.test_set.SetTestCase" name="testSubset1" file="tests/test_set.py" line="111" time="0.000" /><testcase classname="tests.test_set.SetTestCase" name="testSubset2" file="tests/test_set.py" line="116" time="0.001" /><testcase classname="tests.test_set.SetTestCase" name="testSubset3" file="tests/test_set.py" line="120" time="0.000" /><testcase classname="tests.test_set.SetTestCase" name="testSubset4" file="tests/test_set.py" line="125" time="0.000" /><testcase classname="tests.test_set.SetTestCase" name="testSubset5" file="tests/test_set.py" line="130" time="0.000" /><testcase classname="tests.test_set.SetTestCase" name="testSubset6" file="tests/test_set.py" line="135" time="0.001" /><testcase classname="tests.test_set.SetTestCase" name="testSuperset1" file="tests/test_set.py" line="140" time="0.001" /><testcase classname="tests.test_set.SetTestCase" name="testSuperset2" file="tests/test_set.py" line="145" time="0.000" /><testcase classname="tests.test_set.SetTestCase" name="testSuperset3" file="tests/test_set.py" line="149" time="0.001" /><testcase classname="tests.test_set.SetTestCase" name="testSuperset4" file="tests/test_set.py" line="154" time="0.000" /><testcase classname="tests.test_set.SetTestCase" name="testSuperset5" file="tests/test_set.py" line="159" time="0.000" /><testcase classname="tests.test_set.SetTestCase" name="testSuperset6" file="tests/test_set.py" line="164" time="0.001" /><testcase classname="tests.test_set.SetTestCase" name="testUnion1" file="tests/test_set.py" line="39" time="0.001" /><testcase classname="tests.test_set.SetTestCase" name="testUnion2" file="tests/test_set.py" line="45" time="0.001" /><testcase classname="tests.test_set.SetTestCase" name="testUnion3" file="tests/test_set.py" line="51" time="0.001" /><testcase classname="tests.test_set.SetTestCase" name="testUnionPlusSyntax" file="tests/test_set.py" line="57" time="0.001" /><testcase classname="tests.test_set.SetTestCase" name="testUpdate1" file="tests/test_set.py" line="169" time="0.001" /><testcase classname="tests.test_set.SetTestCase" name="testUpdate2" file="tests/test_set.py" line="176" time="0.001" /><testcase classname="tests.test_svcb.SVCBTestCase" name="test_alias_mode" file="tests/test_svcb.py" line="351" time="0.001" /><testcase classname="tests.test_svcb.SVCBTestCase" name="test_alias_not_compressed" file="tests/test_svcb.py" line="378" time="0.001" /><testcase classname="tests.test_svcb.SVCBTestCase" name="test_immutability" file="tests/test_svcb.py" line="367" time="0.001" /><testcase classname="tests.test_svcb.SVCBTestCase" name="test_misc_escape" file="tests/test_svcb.py" line="284" time="0.001" /><testcase classname="tests.test_svcb.SVCBTestCase" name="test_svcb_alpn" file="tests/test_svcb.py" line="81" time="0.002" /><testcase classname="tests.test_svcb.SVCBTestCase" name="test_svcb_ech" file="tests/test_svcb.py" line="184" time="0.001" /><testcase classname="tests.test_svcb.SVCBTestCase" name="test_svcb_general_invalid" file="tests/test_svcb.py" line="25" time="0.001" /><testcase classname="tests.test_svcb.SVCBTestCase" name="test_svcb_ipv4hint" file="tests/test_svcb.py" line="165" time="0.001" /><testcase classname="tests.test_svcb.SVCBTestCase" name="test_svcb_ipv6hint" file="tests/test_svcb.py" line="203" time="0.001" /><testcase classname="tests.test_svcb.SVCBTestCase" name="test_svcb_mandatory" file="tests/test_svcb.py" line="41" time="0.002" /><testcase classname="tests.test_svcb.SVCBTestCase" name="test_svcb_no_default_alpn" file="tests/test_svcb.py" line="122" time="0.001" /><testcase classname="tests.test_svcb.SVCBTestCase" name="test_svcb_port" file="tests/test_svcb.py" line="143" time="0.001" /><testcase classname="tests.test_svcb.SVCBTestCase" name="test_svcb_spec_failure_cases" file="tests/test_svcb.py" line="328" time="0.001" /><testcase classname="tests.test_svcb.SVCBTestCase" name="test_svcb_spec_test_vectors" file="tests/test_svcb.py" line="301" time="0.005" /><testcase classname="tests.test_svcb.SVCBTestCase" name="test_svcb_unknown" file="tests/test_svcb.py" line="227" time="0.001" /><testcase classname="tests.test_svcb.SVCBTestCase" name="test_svcb_wire" file="tests/test_svcb.py" line="255" time="0.002" /><testcase classname="tests.test_tokenizer.TokenizerTestCase" name="testBadAsName" file="tests/test_tokenizer.py" line="290" time="0.000" /><testcase classname="tests.test_tokenizer.TokenizerTestCase" name="testBadConcatenateRemaining" file="tests/test_tokenizer.py" line="325" time="0.000" /><testcase classname="tests.test_tokenizer.TokenizerTestCase" name="testBadGetEOL" file="tests/test_tokenizer.py" line="301" time="0.000" /><testcase classname="tests.test_tokenizer.TokenizerTestCase" name="testBadGetTTL" file="tests/test_tokenizer.py" line="296" time="0.000" /><testcase classname="tests.test_tokenizer.TokenizerTestCase" name="testBytesLiteral" file="tests/test_tokenizer.py" line="334" time="0.000" /><testcase classname="tests.test_tokenizer.TokenizerTestCase" name="testComment1" file="tests/test_tokenizer.py" line="94" time="0.000" /><testcase classname="tests.test_tokenizer.TokenizerTestCase" name="testComment2" file="tests/test_tokenizer.py" line="99" time="0.000" /><testcase classname="tests.test_tokenizer.TokenizerTestCase" name="testComment3" file="tests/test_tokenizer.py" line="106" time="0.000" /><testcase classname="tests.test_tokenizer.TokenizerTestCase" name="testDanglingEscapes" file="tests/test_tokenizer.py" line="306" time="0.001" /><testcase classname="tests.test_tokenizer.TokenizerTestCase" name="testEOFAfterComment" file="tests/test_tokenizer.py" line="260" time="0.000" /><testcase classname="tests.test_tokenizer.TokenizerTestCase" name="testEOL" file="tests/test_tokenizer.py" line="78" time="0.000" /><testcase classname="tests.test_tokenizer.TokenizerTestCase" name="testEOLAfterComment" file="tests/test_tokenizer.py" line="255" time="0.001" /><testcase classname="tests.test_tokenizer.TokenizerTestCase" name="testEmpty1" file="tests/test_tokenizer.py" line="67" time="0.000" /><testcase classname="tests.test_tokenizer.TokenizerTestCase" name="testEmpty2" file="tests/test_tokenizer.py" line="72" time="0.000" /><testcase classname="tests.test_tokenizer.TokenizerTestCase" name="testEscapeBounds" file="tests/test_tokenizer.py" line="275" time="0.001" /><testcase classname="tests.test_tokenizer.TokenizerTestCase" name="testEscapeUnexpectedEnd" file="tests/test_tokenizer.py" line="270" time="0.000" /><testcase classname="tests.test_tokenizer.TokenizerTestCase" name="testEscapedDelimiter1" file="tests/test_tokenizer.py" line="162" time="0.000" /><testcase classname="tests.test_tokenizer.TokenizerTestCase" name="testEscapedDelimiter1u" file="tests/test_tokenizer.py" line="180" time="0.000" /><testcase classname="tests.test_tokenizer.TokenizerTestCase" name="testEscapedDelimiter2" file="tests/test_tokenizer.py" line="168" time="0.000" /><testcase classname="tests.test_tokenizer.TokenizerTestCase" name="testEscapedDelimiter2u" file="tests/test_tokenizer.py" line="186" time="0.000" /><testcase classname="tests.test_tokenizer.TokenizerTestCase" name="testEscapedDelimiter3" file="tests/test_tokenizer.py" line="174" time="0.000" /><testcase classname="tests.test_tokenizer.TokenizerTestCase" name="testEscapedDelimiter3u" file="tests/test_tokenizer.py" line="192" time="0.000" /><testcase classname="tests.test_tokenizer.TokenizerTestCase" name="testGetEOL1" file="tests/test_tokenizer.py" line="152" time="0.000" /><testcase classname="tests.test_tokenizer.TokenizerTestCase" name="testGetEOL2" file="tests/test_tokenizer.py" line="157" time="0.000" /><testcase classname="tests.test_tokenizer.TokenizerTestCase" name="testGetString" file="tests/test_tokenizer.py" line="232" time="0.000" /><testcase classname="tests.test_tokenizer.TokenizerTestCase" name="testGetUInt" file="tests/test_tokenizer.py" line="198" time="0.000" /><testcase classname="tests.test_tokenizer.TokenizerTestCase" name="testGetUngetRegetComment" file="tests/test_tokenizer.py" line="283" time="0.000" /><testcase classname="tests.test_tokenizer.TokenizerTestCase" name="testMultiLineWithComment" file="tests/test_tokenizer.py" line="249" time="0.000" /><testcase classname="tests.test_tokenizer.TokenizerTestCase" name="testMultiLineWithEOFAfterComment" file="tests/test_tokenizer.py" line="265" time="0.001" /><testcase classname="tests.test_tokenizer.TokenizerTestCase" name="testMultiline1" file="tests/test_tokenizer.py" line="113" time="0.000" /><testcase classname="tests.test_tokenizer.TokenizerTestCase" name="testMultiline2" file="tests/test_tokenizer.py" line="119" time="0.000" /><testcase classname="tests.test_tokenizer.TokenizerTestCase" name="testMultiline3" file="tests/test_tokenizer.py" line="126" time="0.000" /><testcase classname="tests.test_tokenizer.TokenizerTestCase" name="testMultiline4" file="tests/test_tokenizer.py" line="131" time="0.000" /><testcase classname="tests.test_tokenizer.TokenizerTestCase" name="testQuotedString1" file="tests/test_tokenizer.py" line="31" time="0.000" /><testcase classname="tests.test_tokenizer.TokenizerTestCase" name="testQuotedString2" file="tests/test_tokenizer.py" line="36" time="0.000" /><testcase classname="tests.test_tokenizer.TokenizerTestCase" name="testQuotedString3" file="tests/test_tokenizer.py" line="41" time="0.000" /><testcase classname="tests.test_tokenizer.TokenizerTestCase" name="testQuotedString4" file="tests/test_tokenizer.py" line="46" time="0.000" /><testcase classname="tests.test_tokenizer.TokenizerTestCase" name="testQuotedString5" file="tests/test_tokenizer.py" line="52" time="0.000" /><testcase classname="tests.test_tokenizer.TokenizerTestCase" name="testQuotedString6" file="tests/test_tokenizer.py" line="57" time="0.000" /><testcase classname="tests.test_tokenizer.TokenizerTestCase" name="testQuotedString7" file="tests/test_tokenizer.py" line="62" time="0.000" /><testcase classname="tests.test_tokenizer.TokenizerTestCase" name="testStdinFilename" file="tests/test_tokenizer.py" line="330" time="0.000" /><testcase classname="tests.test_tokenizer.TokenizerTestCase" name="testStr" file="tests/test_tokenizer.py" line="26" time="0.000" /><testcase classname="tests.test_tokenizer.TokenizerTestCase" name="testTokenMisc" file="tests/test_tokenizer.py" line="315" time="0.001" /><testcase classname="tests.test_tokenizer.TokenizerTestCase" name="testUnget1" file="tests/test_tokenizer.py" line="136" time="0.000" /><testcase classname="tests.test_tokenizer.TokenizerTestCase" name="testUnget2" file="tests/test_tokenizer.py" line="145" time="0.000" /><testcase classname="tests.test_tokenizer.TokenizerTestCase" name="testUngetBranches" file="tests/test_tokenizer.py" line="341" time="0.000" /><testcase classname="tests.test_tokenizer.TokenizerTestCase" name="testWS1" file="tests/test_tokenizer.py" line="84" time="0.000" /><testcase classname="tests.test_tokenizer.TokenizerTestCase" name="testWS2" file="tests/test_tokenizer.py" line="89" time="0.001" /><testcase classname="tests.test_transaction" name="test_basic" file="tests/test_transaction.py" line="88" time="0.001" /><testcase classname="tests.test_transaction" name="test_get" file="tests/test_transaction.py" line="111" time="0.001" /><testcase classname="tests.test_transaction" name="test_add" file="tests/test_transaction.py" line="119" time="0.001" /><testcase classname="tests.test_transaction" name="test_replacement" file="tests/test_transaction.py" line="133" time="0.001" /><testcase classname="tests.test_transaction" name="test_delete" file="tests/test_transaction.py" line="144" time="0.001" /><testcase classname="tests.test_transaction" name="test_delete_exact" file="tests/test_transaction.py" line="162" time="0.001" /><testcase classname="tests.test_transaction" name="test_parameter_forms" file="tests/test_transaction.py" line="179" time="0.001" /><testcase classname="tests.test_transaction" name="test_bad_parameters" file="tests/test_transaction.py" line="201" time="0.001" /><testcase classname="tests.test_transaction" name="test_cannot_store_non_origin_soa" file="tests/test_transaction.py" line="227" time="0.001" /><testcase classname="tests.test_transaction" name="test_zone_basic[Zone0]" file="tests/test_transaction.py" line="259" time="0.002" /><testcase classname="tests.test_transaction" name="test_zone_basic[Zone1]" file="tests/test_transaction.py" line="259" time="0.002" /><testcase classname="tests.test_transaction" name="test_explicit_rollback_and_commit[Zone0]" file="tests/test_transaction.py" line="269" time="0.002" /><testcase classname="tests.test_transaction" name="test_explicit_rollback_and_commit[Zone1]" file="tests/test_transaction.py" line="269" time="0.002" /><testcase classname="tests.test_transaction" name="test_zone_changed[Zone0]" file="tests/test_transaction.py" line="326" time="0.002" /><testcase classname="tests.test_transaction" name="test_zone_changed[Zone1]" file="tests/test_transaction.py" line="326" time="0.002" /><testcase classname="tests.test_transaction" name="test_zone_base_layer[Zone0]" file="tests/test_transaction.py" line="356" time="0.002" /><testcase classname="tests.test_transaction" name="test_zone_base_layer[Zone1]" file="tests/test_transaction.py" line="356" time="0.002" /><testcase classname="tests.test_transaction" name="test_zone_transaction_layer[Zone0]" file="tests/test_transaction.py" line="363" time="0.002" /><testcase classname="tests.test_transaction" name="test_zone_transaction_layer[Zone1]" file="tests/test_transaction.py" line="363" time="0.002" /><testcase classname="tests.test_transaction" name="test_zone_add_and_delete[Zone0]" file="tests/test_transaction.py" line="378" time="0.002" /><testcase classname="tests.test_transaction" name="test_zone_add_and_delete[Zone1]" file="tests/test_transaction.py" line="378" time="0.002" /><testcase classname="tests.test_transaction" name="test_write_after_rollback[Zone0]" file="tests/test_transaction.py" line="404" time="0.002" /><testcase classname="tests.test_transaction" name="test_write_after_rollback[Zone1]" file="tests/test_transaction.py" line="404" time="0.002" /><testcase classname="tests.test_transaction" name="test_zone_get_deleted[Zone0]" file="tests/test_transaction.py" line="417" time="0.001" /><testcase classname="tests.test_transaction" name="test_zone_get_deleted[Zone1]" file="tests/test_transaction.py" line="417" time="0.002" /><testcase classname="tests.test_transaction" name="test_zone_bad_class[Zone0]" file="tests/test_transaction.py" line="427" time="0.001" /><testcase classname="tests.test_transaction" name="test_zone_bad_class[Zone1]" file="tests/test_transaction.py" line="427" time="0.002" /><testcase classname="tests.test_transaction" name="test_update_serial[Zone0]" file="tests/test_transaction.py" line="437" time="0.002" /><testcase classname="tests.test_transaction" name="test_update_serial[Zone1]" file="tests/test_transaction.py" line="437" time="0.003" /><testcase classname="tests.test_transaction" name="test_zone_rollback[Zone0]" file="tests/test_transaction.py" line="471" time="0.001" /><testcase classname="tests.test_transaction" name="test_zone_rollback[Zone1]" file="tests/test_transaction.py" line="471" time="0.002" /><testcase classname="tests.test_transaction" name="test_zone_ooz_name[Zone0]" file="tests/test_transaction.py" line="483" time="0.001" /><testcase classname="tests.test_transaction" name="test_zone_ooz_name[Zone1]" file="tests/test_transaction.py" line="483" time="0.002" /><testcase classname="tests.test_transaction" name="test_zone_iteration[Zone0]" file="tests/test_transaction.py" line="489" time="0.001" /><testcase classname="tests.test_transaction" name="test_zone_iteration[Zone1]" file="tests/test_transaction.py" line="489" time="0.002" /><testcase classname="tests.test_transaction" name="test_iteration_in_replacement_txn[Zone0]" file="tests/test_transaction.py" line="499" time="0.001" /><testcase classname="tests.test_transaction" name="test_iteration_in_replacement_txn[Zone1]" file="tests/test_transaction.py" line="499" time="0.002" /><testcase classname="tests.test_transaction" name="test_replacement_commit[Zone0]" file="tests/test_transaction.py" line="510" time="0.001" /><testcase classname="tests.test_transaction" name="test_replacement_commit[Zone1]" file="tests/test_transaction.py" line="510" time="0.002" /><testcase classname="tests.test_transaction" name="test_replacement_get[Zone0]" file="tests/test_transaction.py" line="522" time="0.001" /><testcase classname="tests.test_transaction" name="test_replacement_get[Zone1]" file="tests/test_transaction.py" line="522" time="0.002" /><testcase classname="tests.test_transaction" name="test_vzone_read_only" file="tests/test_transaction.py" line="532" time="0.002" /><testcase classname="tests.test_transaction" name="test_vzone_multiple_versions" file="tests/test_transaction.py" line="540" time="0.002" /><testcase classname="tests.test_transaction" name="test_vzone_open_txn_pins_versions" file="tests/test_transaction.py" line="582" time="0.002" /><testcase classname="tests.test_transaction" name="test_vzone_concurrency" file="tests/test_transaction.py" line="625" time="0.013" /><testcase classname="tests.test_tsig.TSIGTestCase" name="test_get_context" file="tests/test_tsig.py" line="24" time="0.001" /><testcase classname="tests.test_tsig.TSIGTestCase" name="test_gss_key_repr" file="tests/test_tsig.py" line="284" time="0.000" /><testcase classname="tests.test_tsig.TSIGTestCase" name="test_gssapi_context" file="tests/test_tsig.py" line="82" time="0.002" /><testcase classname="tests.test_tsig.TSIGTestCase" name="test_hmac_sha256_128" file="tests/test_tsig.py" line="239" time="0.001" /><testcase classname="tests.test_tsig.TSIGTestCase" name="test_hmac_sha384_192" file="tests/test_tsig.py" line="242" time="0.001" /><testcase classname="tests.test_tsig.TSIGTestCase" name="test_hmac_sha512_256" file="tests/test_tsig.py" line="245" time="0.001" /><testcase classname="tests.test_tsig.TSIGTestCase" name="test_non_gss_key_repr" file="tests/test_tsig.py" line="276" time="0.000" /><testcase classname="tests.test_tsig.TSIGTestCase" name="test_peer_errors" file="tests/test_tsig.py" line="215" time="0.003" /><testcase classname="tests.test_tsig.TSIGTestCase" name="test_sign_and_validate" file="tests/test_tsig.py" line="172" time="0.001" /><testcase classname="tests.test_tsig.TSIGTestCase" name="test_sign_and_validate_with_other_data" file="tests/test_tsig.py" line="191" time="0.001" /><testcase classname="tests.test_tsig.TSIGTestCase" name="test_sign_respond_and_validate" file="tests/test_tsig.py" line="198" time="0.001" /><testcase classname="tests.test_tsig.TSIGTestCase" name="test_text_hmac_sha256_128" file="tests/test_tsig.py" line="267" time="0.001" /><testcase classname="tests.test_tsig.TSIGTestCase" name="test_text_hmac_sha384_192" file="tests/test_tsig.py" line="270" time="0.001" /><testcase classname="tests.test_tsig.TSIGTestCase" name="test_text_hmac_sha512_256" file="tests/test_tsig.py" line="273" time="0.001" /><testcase classname="tests.test_tsig.TSIGTestCase" name="test_tsig_message_properties" file="tests/test_tsig.py" line="35" time="0.001" /><testcase classname="tests.test_tsig.TSIGTestCase" name="test_validate" file="tests/test_tsig.py" line="55" time="0.001" /><testcase classname="tests.test_tsig.TSIGTestCase" name="test_validate_with_bad_keyring" file="tests/test_tsig.py" line="179" time="0.001" /><testcase classname="tests.test_tsig.TSIGTestCase" name="test_verify_mac_for_context" file="tests/test_tsig.py" line="48" time="0.001" /><testcase classname="tests.test_tsigkeyring.TSIGKeyRingTestCase" name="test_from_alt_text" file="tests/test_tsigkeyring.py" line="33" time="0.000" /><testcase classname="tests.test_tsigkeyring.TSIGKeyRingTestCase" name="test_from_and_to_text" file="tests/test_tsigkeyring.py" line="53" time="0.001" /><testcase classname="tests.test_tsigkeyring.TSIGKeyRingTestCase" name="test_from_old_text" file="tests/test_tsigkeyring.py" line="38" time="0.000" /><testcase classname="tests.test_tsigkeyring.TSIGKeyRingTestCase" name="test_from_text" file="tests/test_tsigkeyring.py" line="28" time="0.001" /><testcase classname="tests.test_tsigkeyring.TSIGKeyRingTestCase" name="test_old_from_and_to_text" file="tests/test_tsigkeyring.py" line="59" time="0.001" /><testcase classname="tests.test_tsigkeyring.TSIGKeyRingTestCase" name="test_old_to_text" file="tests/test_tsigkeyring.py" line="48" time="0.000" /><testcase classname="tests.test_tsigkeyring.TSIGKeyRingTestCase" name="test_to_text" file="tests/test_tsigkeyring.py" line="43" time="0.001" /><testcase classname="tests.test_ttl.TTLTestCase" name="test_bind_style_bad_unit" file="tests/test_ttl.py" line="17" time="0.001" /><testcase classname="tests.test_ttl.TTLTestCase" name="test_bind_style_leading_unit" file="tests/test_ttl.py" line="25" time="0.000" /><testcase classname="tests.test_ttl.TTLTestCase" name="test_bind_style_no_unit" file="tests/test_ttl.py" line="21" time="0.000" /><testcase classname="tests.test_ttl.TTLTestCase" name="test_bind_style_ok" file="tests/test_ttl.py" line="8" time="0.000" /><testcase classname="tests.test_ttl.TTLTestCase" name="test_bind_style_ok2" file="tests/test_ttl.py" line="12" time="0.000" /><testcase classname="tests.test_ttl.TTLTestCase" name="test_bind_style_unit_without_digits" file="tests/test_ttl.py" line="29" time="0.000" /><testcase classname="tests.test_ttl.TTLTestCase" name="test_empty" file="tests/test_ttl.py" line="33" time="0.000" /><testcase classname="tests.test_update.UpdateTestCase" name="test_TSIG" file="tests/test_update.py" line="246" time="0.001" /><testcase classname="tests.test_update.UpdateTestCase" name="test_added_rdata" file="tests/test_update.py" line="311" time="0.001" /><testcase classname="tests.test_update.UpdateTestCase" name="test_added_rdataset" file="tests/test_update.py" line="290" time="0.001" /><testcase classname="tests.test_update.UpdateTestCase" name="test_any_any_with_rdata_from_wire" file="tests/test_update.py" line="221" time="0.001" /><testcase classname="tests.test_update.UpdateTestCase" name="test_any_with_rdata_from_wire" file="tests/test_update.py" line="216" time="0.001" /><testcase classname="tests.test_update.UpdateTestCase" name="test_bad_zone_class_from_wire" file="tests/test_update.py" line="231" time="0.000" /><testcase classname="tests.test_update.UpdateTestCase" name="test_bad_zone_multi_from_wire" file="tests/test_update.py" line="236" time="0.001" /><testcase classname="tests.test_update.UpdateTestCase" name="test_bad_zone_type_from_wire" file="tests/test_update.py" line="226" time="0.000" /><testcase classname="tests.test_update.UpdateTestCase" name="test_delete_rdataset" file="tests/test_update.py" line="304" time="0.001" /><testcase classname="tests.test_update.UpdateTestCase" name="test_deleted_rdata" file="tests/test_update.py" line="333" time="0.001" /><testcase classname="tests.test_update.UpdateTestCase" name="test_from_text1" file="tests/test_update.py" line="189" time="0.001" /><testcase classname="tests.test_update.UpdateTestCase" name="test_from_wire" file="tests/test_update.py" line="196" time="0.002" /><testcase classname="tests.test_update.UpdateTestCase" name="test_good_explicit_delete_wire" file="tests/test_update.py" line="202" time="0.001" /><testcase classname="tests.test_update.UpdateTestCase" name="test_is_response" file="tests/test_update.py" line="256" time="0.001" /><testcase classname="tests.test_update.UpdateTestCase" name="test_making_UpdateSection" file="tests/test_update.py" line="263" time="0.000" /><testcase classname="tests.test_update.UpdateTestCase" name="test_no_zone_section_from_wire" file="tests/test_update.py" line="241" time="0.001" /><testcase classname="tests.test_update.UpdateTestCase" name="test_none_with_rdata_from_wire" file="tests/test_update.py" line="211" time="0.001" /><testcase classname="tests.test_update.UpdateTestCase" name="test_replaced_rdata" file="tests/test_update.py" line="322" time="0.001" /><testcase classname="tests.test_update.UpdateTestCase" name="test_replaced_rdataset" file="tests/test_update.py" line="297" time="0.001" /><testcase classname="tests.test_update.UpdateTestCase" name="test_setters" file="tests/test_update.py" line="269" time="0.000" /><testcase classname="tests.test_update.UpdateTestCase" name="test_to_wire1" file="tests/test_update.py" line="144" time="0.001" /><testcase classname="tests.test_update.UpdateTestCase" name="test_to_wire2" file="tests/test_update.py" line="159" time="0.001" /><testcase classname="tests.test_update.UpdateTestCase" name="test_to_wire3" file="tests/test_update.py" line="174" time="0.001" /><testcase classname="tests.test_wire.BinaryTestCase" name="test_basic" file="tests/test_wire.py" line="11" time="0.000" /><testcase classname="tests.test_wire.BinaryTestCase" name="test_compressed_name" file="tests/test_wire.py" line="45" time="0.001" /><testcase classname="tests.test_wire.BinaryTestCase" name="test_name" file="tests/test_wire.py" line="26" time="0.000" /><testcase classname="tests.test_wire.BinaryTestCase" name="test_not_reading_everything_in_restriction" file="tests/test_wire.py" line="73" time="0.000" /><testcase classname="tests.test_wire.BinaryTestCase" name="test_relativized_name" file="tests/test_wire.py" line="36" time="0.000" /><testcase classname="tests.test_wire.BinaryTestCase" name="test_restriction_does_not_mask_exception" file="tests/test_wire.py" line="82" time="0.001" /><testcase classname="tests.test_wire.BinaryTestCase" name="test_seek" file="tests/test_wire.py" line="57" time="0.001" /><testcase classname="tests.test_xfr" name="test_basic_axfr" file="tests/test_xfr.py" line="261" time="0.003" /><testcase classname="tests.test_xfr" name="test_basic_axfr_unversioned" file="tests/test_xfr.py" line="271" time="0.002" /><testcase classname="tests.test_xfr" name="test_basic_axfr_two_parts" file="tests/test_xfr.py" line="281" time="0.003" /><testcase classname="tests.test_xfr" name="test_axfr_unexpected_origin" file="tests/test_xfr.py" line="295" time="0.001" /><testcase classname="tests.test_xfr" name="test_basic_ixfr" file="tests/test_xfr.py" line="303" time="0.005" /><testcase classname="tests.test_xfr" name="test_basic_ixfr_unversioned" file="tests/test_xfr.py" line="314" time="0.004" /><testcase classname="tests.test_xfr" name="test_compressed_ixfr" file="tests/test_xfr.py" line="324" time="0.004" /><testcase classname="tests.test_xfr" name="test_basic_ixfr_many_parts" file="tests/test_xfr.py" line="335" time="0.006" /><testcase classname="tests.test_xfr" name="test_good_empty_ixfr" file="tests/test_xfr.py" line="349" time="0.002" /><testcase classname="tests.test_xfr" name="test_retry_tcp_ixfr" file="tests/test_xfr.py" line="360" time="0.002" /><testcase classname="tests.test_xfr" name="test_bad_empty_ixfr" file="tests/test_xfr.py" line="369" time="0.002" /><testcase classname="tests.test_xfr" name="test_serial_went_backwards_ixfr" file="tests/test_xfr.py" line="378" time="0.002" /><testcase classname="tests.test_xfr" name="test_ixfr_is_axfr" file="tests/test_xfr.py" line="387" time="0.004" /><testcase classname="tests.test_xfr" name="test_ixfr_requires_serial" file="tests/test_xfr.py" line="398" time="0.002" /><testcase classname="tests.test_xfr" name="test_ixfr_unexpected_end_bad_diff_sequence" file="tests/test_xfr.py" line="404" time="0.003" /><testcase classname="tests.test_xfr" name="test_udp_ixfr_unexpected_end_just_stops" file="tests/test_xfr.py" line="415" time="0.003" /><testcase classname="tests.test_xfr" name="test_ixfr_bad_serial" file="tests/test_xfr.py" line="426" time="0.002" /><testcase classname="tests.test_xfr" name="test_no_udp_with_axfr" file="tests/test_xfr.py" line="435" time="0.000" /><testcase classname="tests.test_xfr" name="test_refused" file="tests/test_xfr.py" line="512" time="0.002" /><testcase classname="tests.test_xfr" name="test_bad_qname" file="tests/test_xfr.py" line="521" time="0.002" /><testcase classname="tests.test_xfr" name="test_bad_qtype" file="tests/test_xfr.py" line="530" time="0.001" /><testcase classname="tests.test_xfr" name="test_soa_not_first" file="tests/test_xfr.py" line="539" time="0.002" /><testcase classname="tests.test_xfr" name="test_no_answer" file="tests/test_xfr.py" line="553" time="0.002" /><testcase classname="tests.test_xfr" name="test_axfr_answers_after_final_soa" file="tests/test_xfr.py" line="562" time="0.002" /><testcase classname="tests.test_xfr" name="test_make_query_basic" file="tests/test_xfr.py" line="578" time="0.001" /><testcase classname="tests.test_xfr" name="test_make_query_bad_serial" file="tests/test_xfr.py" line="606" time="0.000" /><testcase classname="tests.test_xfr" name="test_extract_serial_from_query" file="tests/test_xfr.py" line="615" time="0.001" /><testcase classname="tests.test_xfr" name="test_sync_inbound_xfr" file="tests/test_xfr.py" line="648" time="0.000"><skipped type="pytest.skip" message="requires nanonameserver">/workdir/dnspython-2.2.1/tests/test_xfr.py:649: requires nanonameserver</skipped></testcase><testcase classname="tests.test_xfr" name="test_asyncio_inbound_xfr" file="tests/test_xfr.py" line="672" time="0.000"><skipped type="pytest.skip" message="requires nanonameserver">/workdir/dnspython-2.2.1/tests/test_xfr.py:673: requires nanonameserver</skipped></testcase><testcase classname="tests.test_xfr" name="test_sync_retry_tcp_inbound_xfr" file="tests/test_xfr.py" line="743" time="0.000"><skipped type="pytest.skip" message="requires nanonameserver">/workdir/dnspython-2.2.1/tests/test_xfr.py:744: requires nanonameserver</skipped></testcase><testcase classname="tests.test_xfr" name="test_asyncio_retry_tcp_inbound_xfr" file="tests/test_xfr.py" line="767" time="0.000"><skipped type="pytest.skip" message="requires nanonameserver">/workdir/dnspython-2.2.1/tests/test_xfr.py:768: requires nanonameserver</skipped></testcase><testcase classname="tests.test_zone.ZoneTestCase" name="testBadClass" file="tests/test_zone.py" line="821" time="0.001" /><testcase classname="tests.test_zone.ZoneTestCase" name="testBadDirective" file="tests/test_zone.py" line="752" time="0.001" /><testcase classname="tests.test_zone.ZoneTestCase" name="testBadReplacement" file="tests/test_zone.py" line="687" time="0.002" /><testcase classname="tests.test_zone.ZoneTestCase" name="testCnameAndOtherDataAddCname" file="tests/test_zone.py" line="921" time="0.002" /><testcase classname="tests.test_zone.ZoneTestCase" name="testCnameAndOtherDataAddOther" file="tests/test_zone.py" line="897" time="0.003" /><testcase classname="tests.test_zone.ZoneTestCase" name="testCnameAndOtherDataInZonefile" file="tests/test_zone.py" line="936" time="0.001" /><testcase classname="tests.test_zone.ZoneTestCase" name="testCodec2003" file="tests/test_zone.py" line="788" time="0.001" /><testcase classname="tests.test_zone.ZoneTestCase" name="testCodec2008" file="tests/test_zone.py" line="797" time="0.001" /><testcase classname="tests.test_zone.ZoneTestCase" name="testComments" file="tests/test_zone.py" line="865" time="0.001" /><testcase classname="tests.test_zone.ZoneTestCase" name="testDangling" file="tests/test_zone.py" line="831" time="0.001" /><testcase classname="tests.test_zone.ZoneTestCase" name="testDeleteRdataset1" file="tests/test_zone.py" line="533" time="0.001" /><testcase classname="tests.test_zone.ZoneTestCase" name="testDeleteRdataset2" file="tests/test_zone.py" line="539" time="0.001" /><testcase classname="tests.test_zone.ZoneTestCase" name="testDollarOriginSetsZoneOriginIfUnknown" file="tests/test_zone.py" line="856" time="0.001" /><testcase classname="tests.test_zone.ZoneTestCase" name="testEqual" file="tests/test_zone.py" line="442" time="0.002" /><testcase classname="tests.test_zone.ZoneTestCase" name="testFindRRset1" file="tests/test_zone.py" line="478" time="0.002" /><testcase classname="tests.test_zone.ZoneTestCase" name="testFindRRset2" file="tests/test_zone.py" line="484" time="0.001" /><testcase classname="tests.test_zone.ZoneTestCase" name="testFindRdataset1" file="tests/test_zone.py" line="466" time="0.001" /><testcase classname="tests.test_zone.ZoneTestCase" name="testFindRdataset2" file="tests/test_zone.py" line="472" time="0.001" /><testcase classname="tests.test_zone.ZoneTestCase" name="testFirstRRStartsWithWhitespace" file="tests/test_zone.py" line="757" time="0.001" /><testcase classname="tests.test_zone.ZoneTestCase" name="testFromFile1" file="tests/test_zone.py" line="285" time="0.042" /><testcase classname="tests.test_zone.ZoneTestCase" name="testFromFile2" file="tests/test_zone.py" line="298" time="0.030" /><testcase classname="tests.test_zone.ZoneTestCase" name="testFromText" file="tests/test_zone.py" line="411" time="0.002" /><testcase classname="tests.test_zone.ZoneTestCase" name="testGetRRset1" file="tests/test_zone.py" line="508" time="0.002" /><testcase classname="tests.test_zone.ZoneTestCase" name="testGetRRset2" file="tests/test_zone.py" line="514" time="0.001" /><testcase classname="tests.test_zone.ZoneTestCase" name="testGetRdataset1" file="tests/test_zone.py" line="490" time="0.001" /><testcase classname="tests.test_zone.ZoneTestCase" name="testGetRdataset2" file="tests/test_zone.py" line="496" time="0.001" /><testcase classname="tests.test_zone.ZoneTestCase" name="testGetRdatasetWithRelativeNameFromAbsoluteZone" file="tests/test_zone.py" line="501" time="0.002" /><testcase classname="tests.test_zone.ZoneTestCase" name="testInclude" file="tests/test_zone.py" line="746" time="0.044" /><testcase classname="tests.test_zone.ZoneTestCase" name="testIterateAllRdatas" file="tests/test_zone.py" line="633" time="0.002" /><testcase classname="tests.test_zone.ZoneTestCase" name="testIterateAllRdatasets" file="tests/test_zone.py" line="609" time="0.001" /><testcase classname="tests.test_zone.ZoneTestCase" name="testIterateNodes" file="tests/test_zone.py" line="595" time="0.001" /><testcase classname="tests.test_zone.ZoneTestCase" name="testIterateRdatas" file="tests/test_zone.py" line="619" time="0.002" /><testcase classname="tests.test_zone.ZoneTestCase" name="testIterateRdatasets" file="tests/test_zone.py" line="602" time="0.001" /><testcase classname="tests.test_zone.ZoneTestCase" name="testNameInZoneWhereNameIsNotValid" file="tests/test_zone.py" line="946" time="0.001" /><testcase classname="tests.test_zone.ZoneTestCase" name="testNameInZoneWithStr" file="tests/test_zone.py" line="941" time="0.001" /><testcase classname="tests.test_zone.ZoneTestCase" name="testNoNS" file="tests/test_zone.py" line="741" time="0.001" /><testcase classname="tests.test_zone.ZoneTestCase" name="testNoSOA" file="tests/test_zone.py" line="736" time="0.001" /><testcase classname="tests.test_zone.ZoneTestCase" name="testNoTTL" file="tests/test_zone.py" line="731" time="0.001" /><testcase classname="tests.test_zone.ZoneTestCase" name="testNodeDeleteRdataset1" file="tests/test_zone.py" line="581" time="0.002" /><testcase classname="tests.test_zone.ZoneTestCase" name="testNodeDeleteRdataset2" file="tests/test_zone.py" line="588" time="0.002" /><testcase classname="tests.test_zone.ZoneTestCase" name="testNodeFindRdataset1" file="tests/test_zone.py" line="545" time="0.002" /><testcase classname="tests.test_zone.ZoneTestCase" name="testNodeFindRdataset2" file="tests/test_zone.py" line="552" time="0.001" /><testcase classname="tests.test_zone.ZoneTestCase" name="testNodeFindRdataset3" file="tests/test_zone.py" line="559" time="0.001" /><testcase classname="tests.test_zone.ZoneTestCase" name="testNodeGetRdataset1" file="tests/test_zone.py" line="568" time="0.001" /><testcase classname="tests.test_zone.ZoneTestCase" name="testNodeGetRdataset2" file="tests/test_zone.py" line="575" time="0.001" /><testcase classname="tests.test_zone.ZoneTestCase" name="testNodeGetSetDel" file="tests/test_zone.py" line="664" time="0.001" /><testcase classname="tests.test_zone.ZoneTestCase" name="testNodeReplaceRdatasetConvertsRRsets" file="tests/test_zone.py" line="888" time="0.000" /><testcase classname="tests.test_zone.ZoneTestCase" name="testNotEqual1" file="tests/test_zone.py" line="448" time="0.002" /><testcase classname="tests.test_zone.ZoneTestCase" name="testNotEqual2" file="tests/test_zone.py" line="454" time="0.002" /><testcase classname="tests.test_zone.ZoneTestCase" name="testNotEqual3" file="tests/test_zone.py" line="460" time="0.002" /><testcase classname="tests.test_zone.ZoneTestCase" name="testReplaceRdataset1" file="tests/test_zone.py" line="519" time="0.001" /><testcase classname="tests.test_zone.ZoneTestCase" name="testReplaceRdataset2" file="tests/test_zone.py" line="526" time="0.001" /><testcase classname="tests.test_zone.ZoneTestCase" name="testTTLFromLast" file="tests/test_zone.py" line="719" time="0.001" /><testcase classname="tests.test_zone.ZoneTestCase" name="testTTLFromSOA" file="tests/test_zone.py" line="706" time="0.001" /><testcase classname="tests.test_zone.ZoneTestCase" name="testTTLs" file="tests/test_zone.py" line="694" time="0.001" /><testcase classname="tests.test_zone.ZoneTestCase" name="testToFileBinary" file="tests/test_zone.py" line="341" time="0.028" /><testcase classname="tests.test_zone.ZoneTestCase" name="testToFileBinaryStream" file="tests/test_zone.py" line="319" time="0.002" /><testcase classname="tests.test_zone.ZoneTestCase" name="testToFileBinaryWithOrigin" file="tests/test_zone.py" line="397" time="0.028" /><testcase classname="tests.test_zone.ZoneTestCase" name="testToFileFilename" file="tests/test_zone.py" line="355" time="0.028" /><testcase classname="tests.test_zone.ZoneTestCase" name="testToFileTextual" file="tests/test_zone.py" line="327" time="0.028" /><testcase classname="tests.test_zone.ZoneTestCase" name="testToFileTextualStream" file="tests/test_zone.py" line="311" time="0.002" /><testcase classname="tests.test_zone.ZoneTestCase" name="testToFileTextualWithOrigin" file="tests/test_zone.py" line="383" time="0.028" /><testcase classname="tests.test_zone.ZoneTestCase" name="testToText" file="tests/test_zone.py" line="367" time="0.028" /><testcase classname="tests.test_zone.ZoneTestCase" name="testTorture1" file="tests/test_zone.py" line="421" time="0.028" /><testcase classname="tests.test_zone.ZoneTestCase" name="testUncomparable" file="tests/test_zone.py" line="874" time="0.001" /><testcase classname="tests.test_zone.ZoneTestCase" name="testUnknownOrigin" file="tests/test_zone.py" line="816" time="0.001" /><testcase classname="tests.test_zone.ZoneTestCase" name="testUnknownRdatatype" file="tests/test_zone.py" line="826" time="0.001" /><testcase classname="tests.test_zone.ZoneTestCase" name="testUnsorted" file="tests/test_zone.py" line="879" time="0.002" /><testcase classname="tests.test_zone.ZoneTestCase" name="testUseLastTTL" file="tests/test_zone.py" line="851" time="0.001" /><testcase classname="tests.test_zone.ZoneTestCase" name="testValidateNameRelativizesNameInZone" file="tests/test_zone.py" line="860" time="0.001" /><testcase classname="tests.test_zone.ZoneTestCase" name="testZoneFromXFR" file="tests/test_zone.py" line="779" time="0.003" /><testcase classname="tests.test_zone.ZoneTestCase" name="testZoneMiscCases" file="tests/test_zone.py" line="809" time="0.002" /><testcase classname="tests.test_zone.ZoneTestCase" name="testZoneOrigin" file="tests/test_zone.py" line="765" time="0.000" /><testcase classname="tests.test_zone.ZoneTestCase" name="testZoneOriginNone" file="tests/test_zone.py" line="776" time="0.001" /><testcase classname="tests.test_zone.VersionedZoneTestCase" name="testCannotSpecifyBothSerialAndVersionIdToReader" file="tests/test_zone.py" line="996" time="0.002" /><testcase classname="tests.test_zone.VersionedZoneTestCase" name="testCnameAndOtherDataAddCname" file="tests/test_zone.py" line="1061" time="0.002" /><testcase classname="tests.test_zone.VersionedZoneTestCase" name="testCnameAndOtherDataAddOther" file="tests/test_zone.py" line="1035" time="0.003" /><testcase classname="tests.test_zone.VersionedZoneTestCase" name="testImmutableNodes" file="tests/test_zone.py" line="969" time="0.002" /><testcase classname="tests.test_zone.VersionedZoneTestCase" name="testNoRelativizeReader" file="tests/test_zone.py" line="1014" time="0.002" /><testcase classname="tests.test_zone.VersionedZoneTestCase" name="testNoRelativizeReaderAbsoluteGet" file="tests/test_zone.py" line="1028" time="0.002" /><testcase classname="tests.test_zone.VersionedZoneTestCase" name="testNoRelativizeReaderOriginInText" file="tests/test_zone.py" line="1021" time="0.002" /><testcase classname="tests.test_zone.VersionedZoneTestCase" name="testSelectDefaultPruningPolicy" file="tests/test_zone.py" line="984" time="0.002" /><testcase classname="tests.test_zone.VersionedZoneTestCase" name="testSetAlternatePruningPolicyInConstructor" file="tests/test_zone.py" line="990" time="0.000" /><testcase classname="tests.test_zone.VersionedZoneTestCase" name="testUnknownSerial" file="tests/test_zone.py" line="1008" time="0.002" /><testcase classname="tests.test_zone.VersionedZoneTestCase" name="testUnknownVersion" file="tests/test_zone.py" line="1002" time="0.001" /><testcase classname="tests.test_zone.VersionedZoneTestCase" name="testUseTransaction" file="tests/test_zone.py" line="953" time="0.002" /><testcase classname="tests.test_zonedigest.ZoneDigestTestCase" name="test_relative_zone_sorting" file="tests/test_zonedigest.py" line="187" time="0.003" /><testcase classname="tests.test_zonedigest.ZoneDigestTestCase" name="test_zonemd_complex" file="tests/test_zonedigest.py" line="120" time="0.004" /><testcase classname="tests.test_zonedigest.ZoneDigestTestCase" name="test_zonemd_invalid_digest_length" file="tests/test_zonedigest.py" line="166" time="0.001" /><testcase classname="tests.test_zonedigest.ZoneDigestTestCase" name="test_zonemd_multiple_digests" file="tests/test_zonedigest.py" line="127" time="0.003" /><testcase classname="tests.test_zonedigest.ZoneDigestTestCase" name="test_zonemd_no_digest" file="tests/test_zonedigest.py" line="141" time="0.001" /><testcase classname="tests.test_zonedigest.ZoneDigestTestCase" name="test_zonemd_parse_rdata" file="tests/test_zonedigest.py" line="150" time="0.001" /><testcase classname="tests.test_zonedigest.ZoneDigestTestCase" name="test_zonemd_parse_rdata_reserved" file="tests/test_zonedigest.py" line="172" time="0.001" /><testcase classname="tests.test_zonedigest.ZoneDigestTestCase" name="test_zonemd_simple" file="tests/test_zonedigest.py" line="105" time="0.002" /><testcase classname="tests.test_zonedigest.ZoneDigestTestCase" name="test_zonemd_simple_absolute" file="tests/test_zonedigest.py" line="112" time="0.002" /><testcase classname="tests.test_zonedigest.ZoneDigestTestCase" name="test_zonemd_unknown_hash_algorithm" file="tests/test_zonedigest.py" line="161" time="0.001" /><testcase classname="tests.test_zonedigest.ZoneDigestTestCase" name="test_zonemd_unknown_scheme" file="tests/test_zonedigest.py" line="156" time="0.002" /></testsuite></testsuites>