<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="1" skipped="0" tests="366" time="3.496" timestamp="2023-11-22T02:31:41.996391" hostname="80ac3eb7f7f2"><testcase classname="README.rst" name="README.rst" time="0.055" /><testcase classname="docs.api.rst" name="api.rst" time="0.002" /><testcase classname="docs.attributes.rst" name="attributes.rst" time="0.002" /><testcase classname="docs.basic_usage.rst" name="basic_usage.rst" time="0.015" /><testcase classname="docs.custom_dot.rst" name="custom_dot.rst" time="0.002" /><testcase classname="docs.engines.rst" name="engines.rst" time="0.001" /><testcase classname="docs.escapes.rst" name="escapes.rst" time="0.014" /><testcase classname="docs.existing_files.rst" name="existing_files.rst" time="0.015" /><testcase classname="docs.formats.rst" name="formats.rst" time="0.013" /><testcase classname="docs.integration_with_viewers.rst" name="integration_with_viewers.rst" time="0.002" /><testcase classname="docs.neato_no_op.rst" name="neato_no_op.rst" time="0.016" /><testcase classname="docs.node_ports.rst" name="node_ports.rst" time="0.002" /><testcase classname="docs.piped_output.rst" name="piped_output.rst" time="0.023" /><testcase classname="docs.quoting.rst" name="quoting.rst" time="0.013" /><testcase classname="docs.raw_dot.rst" name="raw_dot.rst" time="0.014" /><testcase classname="docs.styling.rst" name="styling.rst" time="0.002" /><testcase classname="docs.subgraphs_and_clusters.rst" name="subgraphs_and_clusters.rst" time="0.014" /><testcase classname="docs.unflatten.rst" name="unflatten.rst" time="0.005" /><testcase classname="graphviz.__init__" name="graphviz" time="0.002" /><testcase classname="graphviz._tools" name="graphviz._tools.attach" time="0.002" /><testcase classname="graphviz._tools" name="graphviz._tools.mapping_items" time="0.001" /><testcase classname="graphviz.graphs" name="graphviz.graphs" time="0.014" /><testcase classname="graphviz.jupyter_integration" name="graphviz.jupyter_integration.JupyterIntegration._repr_mimebundle_" time="0.045" /><testcase classname="graphviz.piping" name="graphviz.piping.Pipe.pipe" time="0.030" /><testcase classname="graphviz.quoting" name="graphviz.quoting.a_list" time="0.002" /><testcase classname="graphviz.quoting" name="graphviz.quoting.attr_list" time="0.001" /><testcase classname="graphviz.quoting" name="graphviz.quoting.escape" time="0.001" /><testcase classname="graphviz.quoting" name="graphviz.quoting.nohtml" time="0.001" /><testcase classname="graphviz.quoting" name="graphviz.quoting.quote" time="0.001" /><testcase classname="graphviz.quoting" name="graphviz.quoting.quote_edge" time="0.001" /><testcase classname="graphviz.rendering" name="graphviz.rendering.Render.render" time="0.015" /><testcase classname="graphviz.backend.piping" name="graphviz.backend.piping.pipe" time="0.013" /><testcase classname="graphviz.backend.piping" name="graphviz.backend.piping.pipe_lines" time="0.013" /><testcase classname="graphviz.backend.piping" name="graphviz.backend.piping.pipe_lines_string" time="0.013" /><testcase classname="graphviz.backend.piping" name="graphviz.backend.piping.pipe_string" time="0.012" /><testcase classname="graphviz.backend.rendering" name="graphviz.backend.rendering.get_supported_formats" time="0.002" /><testcase classname="graphviz.backend.rendering" name="graphviz.backend.rendering.get_supported_suffixes" time="0.001" /><testcase classname="graphviz.backend.rendering" name="graphviz.backend.rendering.infer_format" time="0.005" /><testcase classname="graphviz.backend.rendering" name="graphviz.backend.rendering.render" time="0.035" /><testcase classname="graphviz.backend.upstream_version" name="graphviz.backend.upstream_version.version" time="0.008" /><testcase classname="tests.test_all_classes" name="test_copy[Graph]" time="0.001" /><testcase classname="tests.test_all_classes" name="test_copy[Digraph]" time="0.001" /><testcase classname="tests.test_all_classes" name="test_copy[Source]" time="0.001" /><testcase classname="tests.test_all_classes" name="test_str[Graph]" time="0.001" /><testcase classname="tests.test_all_classes" name="test_str[Digraph]" time="0.001" /><testcase classname="tests.test_all_classes" name="test_str[Source]" time="0.001" /><testcase classname="tests.test_all_classes" name="test_invalid_parameter_raises_valuerror[Graph-engine-ValueError-unknown engine]" time="0.002" /><testcase classname="tests.test_all_classes" name="test_invalid_parameter_raises_valuerror[Graph-format-ValueError-unknown format]" time="0.002" /><testcase classname="tests.test_all_classes" name="test_invalid_parameter_raises_valuerror[Graph-renderer-ValueError-unknown renderer]" time="0.002" /><testcase classname="tests.test_all_classes" name="test_invalid_parameter_raises_valuerror[Graph-formatter-ValueError-unknown formatter]" time="0.002" /><testcase classname="tests.test_all_classes" name="test_invalid_parameter_raises_valuerror[Graph-encoding-LookupError-encoding]" time="0.003" /><testcase classname="tests.test_all_classes" name="test_invalid_parameter_raises_valuerror[Digraph-engine-ValueError-unknown engine]" time="0.001" /><testcase classname="tests.test_all_classes" name="test_invalid_parameter_raises_valuerror[Digraph-format-ValueError-unknown format]" time="0.001" /><testcase classname="tests.test_all_classes" name="test_invalid_parameter_raises_valuerror[Digraph-renderer-ValueError-unknown renderer]" time="0.001" /><testcase classname="tests.test_all_classes" name="test_invalid_parameter_raises_valuerror[Digraph-formatter-ValueError-unknown formatter]" time="0.001" /><testcase classname="tests.test_all_classes" name="test_invalid_parameter_raises_valuerror[Digraph-encoding-LookupError-encoding]" time="0.001" /><testcase classname="tests.test_all_classes" name="test_invalid_parameter_raises_valuerror[Source-engine-ValueError-unknown engine]" time="0.001" /><testcase classname="tests.test_all_classes" name="test_invalid_parameter_raises_valuerror[Source-format-ValueError-unknown format]" time="0.001" /><testcase classname="tests.test_all_classes" name="test_invalid_parameter_raises_valuerror[Source-renderer-ValueError-unknown renderer]" time="0.001" /><testcase classname="tests.test_all_classes" name="test_invalid_parameter_raises_valuerror[Source-formatter-ValueError-unknown formatter]" time="0.001" /><testcase classname="tests.test_all_classes" name="test_invalid_parameter_raises_valuerror[Source-encoding-LookupError-encoding]" time="0.001" /><testcase classname="tests.test_all_classes" name="test_encoding_none[Graph]" time="0.001" /><testcase classname="tests.test_all_classes" name="test_encoding_none[Digraph]" time="0.001" /><testcase classname="tests.test_all_classes" name="test_encoding_none[Source]" time="0.001" /><testcase classname="tests.test_all_classes" name="test_render_raises_before_save[Graph-kwargs0]" time="0.013" /><testcase classname="tests.test_all_classes" name="test_render_raises_before_save[Digraph-kwargs0]" time="0.010" /><testcase classname="tests.test_all_classes" name="test_render_raises_before_save[Source-kwargs0]" time="0.014" /><testcase classname="tests.test_all_classes" name="test_render_raises_before_save_mocked[Graph-kwargs0]" time="0.014" /><testcase classname="tests.test_all_classes" name="test_render_raises_before_save_mocked[Graph-kwargs1]" time="0.004" /><testcase classname="tests.test_all_classes" name="test_render_raises_before_save_mocked[Graph-kwargs2]" time="0.004" /><testcase classname="tests.test_all_classes" name="test_render_raises_before_save_mocked[Graph-kwargs3]" time="0.004" /><testcase classname="tests.test_all_classes" name="test_render_raises_before_save_mocked[Digraph-kwargs0]" time="0.004" /><testcase classname="tests.test_all_classes" name="test_render_raises_before_save_mocked[Digraph-kwargs1]" time="0.004" /><testcase classname="tests.test_all_classes" name="test_render_raises_before_save_mocked[Digraph-kwargs2]" time="0.004" /><testcase classname="tests.test_all_classes" name="test_render_raises_before_save_mocked[Digraph-kwargs3]" time="0.004" /><testcase classname="tests.test_all_classes" name="test_render_raises_before_save_mocked[Source-kwargs0]" time="0.004" /><testcase classname="tests.test_all_classes" name="test_render_raises_before_save_mocked[Source-kwargs1]" time="0.004" /><testcase classname="tests.test_all_classes" name="test_render_raises_before_save_mocked[Source-kwargs2]" time="0.005" /><testcase classname="tests.test_all_classes" name="test_render_raises_before_save_mocked[Source-kwargs3]" time="0.005" /><testcase classname="tests.test_all_classes" name="test_render_mocked[Graph]" time="0.008" /><testcase classname="tests.test_all_classes" name="test_render_mocked[Digraph]" time="0.029" /><testcase classname="tests.test_all_classes" name="test_render_mocked[Source]" time="0.008" /><testcase classname="tests.test_all_classes" name="test_render_outfile_mocked[Graph]" time="0.007" /><testcase classname="tests.test_all_classes" name="test_render_outfile_mocked[Digraph]" time="0.007" /><testcase classname="tests.test_all_classes" name="test_render_outfile_mocked[Source]" time="0.007" /><testcase classname="tests.test_all_classes" name="test_format_renderer_formatter_mocked[quiet=False-Graph]" time="0.004" /><testcase classname="tests.test_all_classes" name="test_format_renderer_formatter_mocked[quiet=False-Digraph]" time="0.005" /><testcase classname="tests.test_all_classes" name="test_format_renderer_formatter_mocked[quiet=False-Source]" time="0.004" /><testcase classname="tests.test_all_classes" name="test_format_renderer_formatter_mocked[quiet=True-Graph]" time="0.004" /><testcase classname="tests.test_all_classes" name="test_format_renderer_formatter_mocked[quiet=True-Digraph]" time="0.004" /><testcase classname="tests.test_all_classes" name="test_format_renderer_formatter_mocked[quiet=True-Source]" time="0.004" /><testcase classname="tests.test_all_classes" name="test_neato_no_op_mocked[quiet=False-Graph-None]" time="0.006" /><testcase classname="tests.test_all_classes" name="test_neato_no_op_mocked[quiet=False-Graph-False]" time="0.004" /><testcase classname="tests.test_all_classes" name="test_neato_no_op_mocked[quiet=False-Graph-True]" time="0.005" /><testcase classname="tests.test_all_classes" name="test_neato_no_op_mocked[quiet=False-Graph-0]" time="0.004" /><testcase classname="tests.test_all_classes" name="test_neato_no_op_mocked[quiet=False-Graph-1]" time="0.005" /><testcase classname="tests.test_all_classes" name="test_neato_no_op_mocked[quiet=False-Graph-2]" time="0.004" /><testcase classname="tests.test_all_classes" name="test_neato_no_op_mocked[quiet=False-Digraph-None]" time="0.004" /><testcase classname="tests.test_all_classes" name="test_neato_no_op_mocked[quiet=False-Digraph-False]" time="0.005" /><testcase classname="tests.test_all_classes" name="test_neato_no_op_mocked[quiet=False-Digraph-True]" time="0.005" /><testcase classname="tests.test_all_classes" name="test_neato_no_op_mocked[quiet=False-Digraph-0]" time="0.004" /><testcase classname="tests.test_all_classes" name="test_neato_no_op_mocked[quiet=False-Digraph-1]" time="0.004" /><testcase classname="tests.test_all_classes" name="test_neato_no_op_mocked[quiet=False-Digraph-2]" time="0.004" /><testcase classname="tests.test_all_classes" name="test_neato_no_op_mocked[quiet=False-Source-None]" time="0.004" /><testcase classname="tests.test_all_classes" name="test_neato_no_op_mocked[quiet=False-Source-False]" time="0.005" /><testcase classname="tests.test_all_classes" name="test_neato_no_op_mocked[quiet=False-Source-True]" time="0.005" /><testcase classname="tests.test_all_classes" name="test_neato_no_op_mocked[quiet=False-Source-0]" time="0.005" /><testcase classname="tests.test_all_classes" name="test_neato_no_op_mocked[quiet=False-Source-1]" time="0.007" /><testcase classname="tests.test_all_classes" name="test_neato_no_op_mocked[quiet=False-Source-2]" time="0.005" /><testcase classname="tests.test_all_classes" name="test_neato_no_op_mocked[quiet=True-Graph-None]" time="0.005" /><testcase classname="tests.test_all_classes" name="test_neato_no_op_mocked[quiet=True-Graph-False]" time="0.005" /><testcase classname="tests.test_all_classes" name="test_neato_no_op_mocked[quiet=True-Graph-True]" time="0.005" /><testcase classname="tests.test_all_classes" name="test_neato_no_op_mocked[quiet=True-Graph-0]" time="0.005" /><testcase classname="tests.test_all_classes" name="test_neato_no_op_mocked[quiet=True-Graph-1]" time="0.005" /><testcase classname="tests.test_all_classes" name="test_neato_no_op_mocked[quiet=True-Graph-2]" time="0.005" /><testcase classname="tests.test_all_classes" name="test_neato_no_op_mocked[quiet=True-Digraph-None]" time="0.005" /><testcase classname="tests.test_all_classes" name="test_neato_no_op_mocked[quiet=True-Digraph-False]" time="0.005" /><testcase classname="tests.test_all_classes" name="test_neato_no_op_mocked[quiet=True-Digraph-True]" time="0.005" /><testcase classname="tests.test_all_classes" name="test_neato_no_op_mocked[quiet=True-Digraph-0]" time="0.005" /><testcase classname="tests.test_all_classes" name="test_neato_no_op_mocked[quiet=True-Digraph-1]" time="0.005" /><testcase classname="tests.test_all_classes" name="test_neato_no_op_mocked[quiet=True-Digraph-2]" time="0.005" /><testcase classname="tests.test_all_classes" name="test_neato_no_op_mocked[quiet=True-Source-None]" time="0.005" /><testcase classname="tests.test_all_classes" name="test_neato_no_op_mocked[quiet=True-Source-False]" time="0.005" /><testcase classname="tests.test_all_classes" name="test_neato_no_op_mocked[quiet=True-Source-True]" time="0.006" /><testcase classname="tests.test_all_classes" name="test_neato_no_op_mocked[quiet=True-Source-0]" time="0.005" /><testcase classname="tests.test_all_classes" name="test_neato_no_op_mocked[quiet=True-Source-1]" time="0.005" /><testcase classname="tests.test_all_classes" name="test_neato_no_op_mocked[quiet=True-Source-2]" time="0.005" /><testcase classname="tests.test_all_classes" name="test_save_mocked[Graph]" time="0.006" /><testcase classname="tests.test_all_classes" name="test_save_mocked[Digraph]" time="0.006" /><testcase classname="tests.test_all_classes" name="test_save_mocked[Source]" time="0.005" /><testcase classname="tests.test_all_classes" name="test_pipe_mocked[quiet=False-Graph-None]" time="0.005" /><testcase classname="tests.test_all_classes" name="test_pipe_mocked[quiet=False-Graph-ascii]" time="0.007" /><testcase classname="tests.test_all_classes" name="test_pipe_mocked[quiet=False-Graph-utf-8]" time="0.005" /><testcase classname="tests.test_all_classes" name="test_pipe_mocked[quiet=False-Digraph-None]" time="0.005" /><testcase classname="tests.test_all_classes" name="test_pipe_mocked[quiet=False-Digraph-ascii]" time="0.005" /><testcase classname="tests.test_all_classes" name="test_pipe_mocked[quiet=False-Digraph-utf-8]" time="0.005" /><testcase classname="tests.test_all_classes" name="test_pipe_mocked[quiet=False-Source-None]" time="0.005" /><testcase classname="tests.test_all_classes" name="test_pipe_mocked[quiet=False-Source-ascii]" time="0.005" /><testcase classname="tests.test_all_classes" name="test_pipe_mocked[quiet=False-Source-utf-8]" time="0.005" /><testcase classname="tests.test_all_classes" name="test_pipe_mocked[quiet=True-Graph-None]" time="0.005" /><testcase classname="tests.test_all_classes" name="test_pipe_mocked[quiet=True-Graph-ascii]" time="0.006" /><testcase classname="tests.test_all_classes" name="test_pipe_mocked[quiet=True-Graph-utf-8]" time="0.007" /><testcase classname="tests.test_all_classes" name="test_pipe_mocked[quiet=True-Digraph-None]" time="0.006" /><testcase classname="tests.test_all_classes" name="test_pipe_mocked[quiet=True-Digraph-ascii]" time="0.008" /><testcase classname="tests.test_all_classes" name="test_pipe_mocked[quiet=True-Digraph-utf-8]" time="0.006" /><testcase classname="tests.test_all_classes" name="test_pipe_mocked[quiet=True-Source-None]" time="0.005" /><testcase classname="tests.test_all_classes" name="test_pipe_mocked[quiet=True-Source-ascii]" time="0.006" /><testcase classname="tests.test_all_classes" name="test_pipe_mocked[quiet=True-Source-utf-8]" time="0.005" /><testcase classname="tests.test_all_classes" name="test_pipe_lines_mocked[Graph]" time="0.004" /><testcase classname="tests.test_all_classes" name="test_pipe_lines_mocked[Digraph]" time="0.004" /><testcase classname="tests.test_all_classes" name="test_pipe_lines_mocked[Source]" time="0.003" /><testcase classname="tests.test_all_classes" name="test_pipe_lines_called_process_error[Graph]" time="0.009" /><testcase classname="tests.test_all_classes" name="test_pipe_lines_called_process_error[Digraph]" time="0.009" /><testcase classname="tests.test_all_classes" name="test_pipe_lines_called_process_error[Source]" time="0.009" /><testcase classname="tests.test_all_classes" name="test_pipe_lines_called_process_error_mocked[Graph]" time="0.004" /><testcase classname="tests.test_all_classes" name="test_pipe_lines_called_process_error_mocked[Digraph]" time="0.003" /><testcase classname="tests.test_all_classes" name="test_pipe_lines_called_process_error_mocked[Source]" time="0.003" /><testcase classname="tests.test_all_classes" name="test_repr_mimebundle_image_svg_xml_mocked[Graph]" time="0.003" /><testcase classname="tests.test_all_classes" name="test_repr_mimebundle_image_svg_xml_mocked[Digraph]" time="0.003" /><testcase classname="tests.test_all_classes" name="test_repr_mimebundle_image_svg_xml_mocked[Source]" time="0.003" /><testcase classname="tests.test_all_classes" name="test_repr_mimebundle_image_png_mocked[Graph]" time="0.003" /><testcase classname="tests.test_all_classes" name="test_repr_mimebundle_image_png_mocked[Digraph]" time="0.003" /><testcase classname="tests.test_all_classes" name="test_repr_mimebundle_image_png_mocked[Source]" time="0.003" /><testcase classname="tests.test_all_classes" name="test_repr_mimebundle_image_jpeg_mocked[Graph]" time="0.003" /><testcase classname="tests.test_all_classes" name="test_repr_mimebundle_image_jpeg_mocked[Digraph]" time="0.003" /><testcase classname="tests.test_all_classes" name="test_repr_mimebundle_image_jpeg_mocked[Source]" time="0.003" /><testcase classname="tests.test_all_classes" name="test_unflatten[Graph]" time="0.003" /><testcase classname="tests.test_all_classes" name="test_unflatten[Digraph]" time="0.002" /><testcase classname="tests.test_all_classes" name="test_unflatten[Source]" time="0.003" /><testcase classname="tests.test_all_classes" name="test_unflatten_mocked[Graph]" time="0.005" /><testcase classname="tests.test_all_classes" name="test_unflatten_mocked[Digraph]" time="0.004" /><testcase classname="tests.test_all_classes" name="test_unflatten_mocked[Source]" time="0.004" /><testcase classname="tests.test_all_classes" name="test_view_mocked[Graph]" time="0.003" /><testcase classname="tests.test_all_classes" name="test_view_mocked[Digraph]" time="0.003" /><testcase classname="tests.test_all_classes" name="test_view_mocked[Source]" time="0.003" /><testcase classname="tests.test_all_classes" name="test__view_unknown_platform[Graph]" time="0.002" /><testcase classname="tests.test_all_classes" name="test__view_unknown_platform[Digraph]" time="0.001" /><testcase classname="tests.test_all_classes" name="test__view_unknown_platform[Source]" time="0.001" /><testcase classname="tests.test_all_classes" name="test__view_mocked[platform='darwin'-Graph]" time="0.003" /><testcase classname="tests.test_all_classes" name="test__view_mocked[platform='darwin'-Digraph]" time="0.003" /><testcase classname="tests.test_all_classes" name="test__view_mocked[platform='darwin'-Source]" time="0.003" /><testcase classname="tests.test_all_classes" name="test__view_mocked[platform='freebsd'-Graph]" time="0.003" /><testcase classname="tests.test_all_classes" name="test__view_mocked[platform='freebsd'-Digraph]" time="0.003" /><testcase classname="tests.test_all_classes" name="test__view_mocked[platform='freebsd'-Source]" time="0.003" /><testcase classname="tests.test_all_classes" name="test__view_mocked[platform='linux'-Graph]" time="0.003" /><testcase classname="tests.test_all_classes" name="test__view_mocked[platform='linux'-Digraph]" time="0.003" /><testcase classname="tests.test_all_classes" name="test__view_mocked[platform='linux'-Source]" time="0.003" /><testcase classname="tests.test_all_classes" name="test__view_mocked[platform='windows'-Graph]" time="0.003" /><testcase classname="tests.test_all_classes" name="test__view_mocked[platform='windows'-Digraph]" time="0.003" /><testcase classname="tests.test_all_classes" name="test__view_mocked[platform='windows'-Source]" time="0.003" /><testcase classname="tests.test_graphs" name="test_init_filename[Graph]" time="0.001" /><testcase classname="tests.test_graphs" name="test_init_filename[Digraph]" time="0.001" /><testcase classname="tests.test_graphs" name="test_init_body[Graph-...-...]" time="0.001" /><testcase classname="tests.test_graphs" name="test_init_body[Digraph-...-...]" time="0.001" /><testcase classname="tests.test_graphs" name="test_subgraph_render[Graph-...]" time="0.014" /><testcase classname="tests.test_graphs" name="test_subgraph_render[Digraph-...]" time="0.014" /><testcase classname="tests.test_graphs" name="test_clear[Graph-False]" time="0.001" /><testcase classname="tests.test_graphs" name="test_clear[Graph-True]" time="0.001" /><testcase classname="tests.test_graphs" name="test_clear[Digraph-False]" time="0.001" /><testcase classname="tests.test_graphs" name="test_clear[Digraph-True]" time="0.001" /><testcase classname="tests.test_graphs" name="test_iter_subgraph_strict[Graph]" time="0.001" /><testcase classname="tests.test_graphs" name="test_iter_subgraph_strict[Digraph]" time="0.001" /><testcase classname="tests.test_graphs" name="test_iter_strict[Graph-...]" time="0.001" /><testcase classname="tests.test_graphs" name="test_iter_strict[Digraph-...]" time="0.001" /><testcase classname="tests.test_graphs" name="test_attr_invalid_kw[Graph]" time="0.001" /><testcase classname="tests.test_graphs" name="test_attr_invalid_kw[Digraph]" time="0.001" /><testcase classname="tests.test_graphs" name="test_attr_kw_none[Graph-...]" time="0.001" /><testcase classname="tests.test_graphs" name="test_attr_kw_none[Digraph-...]" time="0.001" /><testcase classname="tests.test_graphs" name="test_escaped_quotes_and_escapes[Graph-...]" time="0.001" /><testcase classname="tests.test_graphs" name="test_escaped_quotes_and_escapes[Digraph-...]" time="0.001" /><testcase classname="tests.test_graphs" name="test_subgraph_graph_none[Graph-...]" time="0.001" /><testcase classname="tests.test_graphs" name="test_subgraph_graph_none[Digraph-...]" time="0.001" /><testcase classname="tests.test_graphs" name="test_subgraph_graph_notsole[Graph]" time="0.001" /><testcase classname="tests.test_graphs" name="test_subgraph_graph_notsole[Digraph]" time="0.001" /><testcase classname="tests.test_graphs" name="test_subgraph_mixed[Graph, Digraph]" time="0.001" /><testcase classname="tests.test_graphs" name="test_subgraph_mixed[Digraph, Graph]" time="0.001" /><testcase classname="tests.test_graphs" name="test_subgraph_reflexive[Graph-...]" time="0.001" /><testcase classname="tests.test_graphs" name="test_subgraph_reflexive[Digraph-...]" time="0.001" /><testcase classname="tests.test_graphs" name="test_subgraph" time="0.001" /><testcase classname="tests.test_graphs" name="test_label_html" time="0.001" /><testcase classname="tests.test_init" name="test_set_default_engine_invalid" time="0.001" /><testcase classname="tests.test_init" name="test_set_default_format_invalid" time="0.001" /><testcase classname="tests.test_init" name="test_set_default_engine" time="0.001" /><testcase classname="tests.test_init" name="test_set_default_format" time="0.001" /><testcase classname="tests.test_init" name="test_set_jupyter_format" time="0.001" /><testcase classname="tests.test_jupyter_integration" name="test_get_jupyter_format_mimetype_invalid_raises_unknown" time="0.001" /><testcase classname="tests.test_jupyter_integration" name="test_get_jupyter_mimetype_format_normalizes" time="0.001" /><testcase classname="tests.test_jupyter_integration" name="test_get_jupyter_mimetype_format_raises_unsupported" time="0.001" /><testcase classname="tests.test_jupyter_integration" name="test_repr_image_svg_xml_encoding" time="0.008" /><testcase classname="tests.test_jupyter_integration" name="test_repr_image_svg_xml_encoding_mocked[utf-8]" time="0.006" /><testcase classname="tests.test_jupyter_integration" name="test_repr_image_svg_xml_encoding_mocked[ascii]" time="0.004" /><testcase classname="tests.test_jupyter_integration" name="test_repr_image_svg_xml_encoding_mocked[latin1]" time="0.005" /><testcase classname="tests.test_parameters" name="test_parameters[Graph]" time="0.001" /><testcase classname="tests.test_parameters" name="test_parameters[Digraph]" time="0.001" /><testcase classname="tests.test_parameters" name="test_parameters[Source]" time="0.001" /><testcase classname="tests.test_parameters" name="test_verify_parameter_raises_unknown[verify_engine]" time="0.001" /><testcase classname="tests.test_parameters" name="test_verify_parameter_raises_unknown[verify_format]" time="0.001" /><testcase classname="tests.test_parameters" name="test_verify_parameter_raises_unknown[verify_renderer]" time="0.001" /><testcase classname="tests.test_parameters" name="test_verify_parameter_raises_unknown[verify_formatter]" time="0.001" /><testcase classname="tests.test_parameters" name="test_verify_parameter_none_required_false_passes[verify_engine]" time="0.001" /><testcase classname="tests.test_parameters" name="test_verify_parameter_none_required_false_passes[verify_format]" time="0.001" /><testcase classname="tests.test_parameters" name="test_verify_parameter_none_required_false_passes[verify_renderer]" time="0.001" /><testcase classname="tests.test_parameters" name="test_verify_parameter_none_required_false_passes[verify_formatter]" time="0.001" /><testcase classname="tests.test_parameters" name="test_verify_parameter_none_required_raises_missing[verify_engine]" time="0.001" /><testcase classname="tests.test_parameters" name="test_verify_parameter_none_required_raises_missing[verify_format]" time="0.001" /><testcase classname="tests.test_parameters" name="test_verify_parameter_none_required_raises_missing[verify_renderer]" time="0.001" /><testcase classname="tests.test_parameters" name="test_verify_parameter_none_required_raises_missing[verify_formatter]" time="0.001" /><testcase classname="tests.test_quoting" name="test_deprecated_escape[G]" time="0.001" /><testcase classname="tests.test_quoting" name="test_deprecated_escape[E]" time="0.001" /><testcase classname="tests.test_quoting" name="test_deprecated_escape[T]" time="0.001" /><testcase classname="tests.test_quoting" name="test_deprecated_escape[H]" time="0.001" /><testcase classname="tests.test_quoting" name="test_deprecated_escape[L]" time="0.001" /><testcase classname="tests.test_quoting" name="test_deprecated_escape[l]" time="0.001" /><testcase classname="tests.test_quoting" name="test_quote[&quot;spam&quot;-&quot;\\&quot;spam\\&quot;&quot;]" time="0.001" /><testcase classname="tests.test_quoting" name="test_quote[node-&quot;node&quot;]" time="0.001" /><testcase classname="tests.test_quoting" name="test_quote[EDGE-&quot;EDGE&quot;]" time="0.001" /><testcase classname="tests.test_quoting" name="test_quote[Graph-&quot;Graph&quot;]" time="0.001" /><testcase classname="tests.test_quoting" name="test_quote[\\G \\N \\E \\T \\H \\L-&quot;\\G \\N \\E \\T \\H \\L&quot;]" time="0.001" /><testcase classname="tests.test_quoting" name="test_quote[\\n \\l \\r-&quot;\\n \\l \\r&quot;]" time="0.001" /><testcase classname="tests.test_quoting" name="test_quote[\r\n-&quot;\r\n&quot;]" time="0.001" /><testcase classname="tests.test_quoting" name="test_quote[\\\\n-&quot;\\\\n&quot;]" time="0.001" /><testcase classname="tests.test_quoting" name="test_quote[\u0665.\u0660-&quot;\u0665.\u0660&quot;]" time="0.001" /><testcase classname="tests.test_quoting" name="test_quote[\\&quot;spam-&quot;\\&quot;spam&quot;]" time="0.001" /><testcase classname="tests.test_quoting" name="test_quote[\\\\&quot;spam-&quot;\\\\\\&quot;spam&quot;]" time="0.001" /><testcase classname="tests.test_quoting" name="test_quote[\\\\\\&quot;spam-&quot;\\\\\\&quot;spam&quot;]" time="0.001" /><testcase classname="tests.test_quoting" name="test_quote[\\\\\\\\&quot;spam-&quot;\\\\\\\\\\&quot;spam&quot;]" time="0.001" /><testcase classname="tests.test_quoting" name="test_attr_list[attributes0- [spam=eggs]]" time="0.001" /><testcase classname="tests.test_quoting" name="test_attr_list[attributes1- [spam=eggs]]" time="0.001" /><testcase classname="tests.test_quoting" name="test_nohtml[spam-spam-spam]" time="0.001" /><testcase classname="tests.test_quoting" name="test_nohtml[&lt;&gt;-*-&lt;&gt;-&lt;&gt;-*-&lt;&gt;-&quot;&lt;&gt;-*-&lt;&gt;&quot;]" time="0.001" /><testcase classname="tests.test_saving" name="test_saves_source_from_file" time="0.002" /><testcase classname="tests.test_sources" name="test_source_parameter[engine]" time="0.001" /><testcase classname="tests.test_sources" name="test_source_parameter[format]" time="0.001" /><testcase classname="tests.test_sources" name="test_source_parameter[encoding]" time="0.001" /><testcase classname="tests.test_sources" name="test_init" time="0.001" /><testcase classname="tests.test_sources" name="test_init_filename" time="0.001" /><testcase classname="tests.test_sources" name="test_filepath" time="0.001" /><testcase classname="tests.test_sources" name="test_from_file" time="0.003" /><testcase classname="tests.test_sources" name="test_source_iter" time="0.001" /><testcase classname="tests.test_tools" name="test_mkdirs_invalid" time="0.002" /><testcase classname="tests.test_tools" name="test_mkdirs" time="0.003" /><testcase classname="tests.test_tools" name="test_deprecate_positional_args[FutureWarning- third='third' ]" time="0.002" /><testcase classname="tests.test_tools" name="test_deprecate_positional_args[DeprecationWarning- third='third' ]" time="0.001" /><testcase classname="tests.test_tools" name="test_deprecate_positional_args[PendingDeprecationWarning- third='third' ]" time="0.001" /><testcase classname="tests.test_tools" name="test_deprecate_positional_args[None-None]" time="0.001" /><testcase classname="tests.backend.test_execute" name="test_missing_executable[render-args0]" time="0.002" /><testcase classname="tests.backend.test_execute" name="test_missing_executable[pipe-args1]" time="0.002" /><testcase classname="tests.backend.test_execute" name="test_missing_executable[unflatten-args2]" time="0.002" /><testcase classname="tests.backend.test_execute" name="test_missing_executable[version-args3]" time="0.002" /><testcase classname="tests.backend.test_execute" name="test_run_check_oserror" time="0.001" /><testcase classname="tests.backend.test_execute" name="test_run_check_called_process_error_mocked[quiet=False]" time="0.003" /><testcase classname="tests.backend.test_execute" name="test_run_check_called_process_error_mocked[quiet=True]" time="0.003" /><testcase classname="tests.backend.test_execute" name="test_run_check_input_lines_mocked" time="0.057" /><testcase classname="tests.backend.test_piping" name="test_pipe_invalid_data[quiet=False]" time="0.025" /><testcase classname="tests.backend.test_piping" name="test_pipe_invalid_data[quiet=True]" time="0.024" /><testcase classname="tests.backend.test_piping" name="test_pipe_pipe_invalid_data_mocked[quiet=False]" time="0.012" /><testcase classname="tests.backend.test_piping" name="test_pipe_pipe_invalid_data_mocked[quiet=True]" time="0.008" /><testcase classname="tests.backend.test_piping" name="test_pipe[dot-svg-None-None-(?s)^&lt;\\?xml .+&lt;/svg&gt;\\s*$]" time="0.013" /><testcase classname="tests.backend.test_piping" name="test_pipe[dot-ps-ps-core-%!PS-]" time="0.012" /><testcase classname="tests.backend.test_piping" name="test_pipe[sfdp-svg-None-None-(?s)^&lt;\\?xml .+&lt;/svg&gt;\\s*$]" time="0.037"><failure message="graphviz.backend.execute.CalledProcessError: Command '[PosixPath('dot'), '-Ksfdp', '-Tsvg']' returned non-zero exit status 1. [stderr: b'Error: remove_overlap: Graphviz not built with triangulation library\n']">Traceback (most recent call last):
  File "/workdir/graphviz-0.20.1/graphviz/backend/execute.py", line 91, in run_check
    proc.check_returncode()
  File "/usr/local/lib/python3.10/subprocess.py", line 457, in check_returncode
    raise CalledProcessError(self.returncode, self.args, self.stdout,
subprocess.CalledProcessError: Command '[PosixPath('dot'), '-Ksfdp', '-Tsvg']' returned non-zero exit status 1.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workdir/graphviz-0.20.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    result: Optional[TResult] = func()
  File "/workdir/graphviz-0.20.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 262, in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/workdir/graphviz-0.20.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/graphviz-0.20.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/graphviz-0.20.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 152, in _multicall
    return outcome.get_result()
  File "/workdir/graphviz-0.20.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_result.py", line 114, in get_result
    raise exc.with_traceback(exc.__traceback__)
  File "/workdir/graphviz-0.20.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/graphviz-0.20.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 177, in pytest_runtest_call
    raise e
  File "/workdir/graphviz-0.20.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/runner.py", line 169, in pytest_runtest_call
    item.runtest()
  File "/workdir/graphviz-0.20.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 1792, in runtest
    self.ihook.pytest_pyfunc_call(pyfuncitem=self)
  File "/workdir/graphviz-0.20.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_hooks.py", line 493, in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
  File "/workdir/graphviz-0.20.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_manager.py", line 115, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/workdir/graphviz-0.20.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 113, in _multicall
    raise exception.with_traceback(exception.__traceback__)
  File "/workdir/graphviz-0.20.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/pluggy/_callers.py", line 77, in _multicall
    res = hook_impl.function(*args)
  File "/workdir/graphviz-0.20.1/.tox/cpythonlibtest-unit-test-tests/lib/python3.10/site-packages/_pytest/python.py", line 194, in pytest_pyfunc_call
    result = testfunction(**testargs)
  File "/workdir/graphviz-0.20.1/tests/backend/test_piping.py", line 79, in test_pipe
    out = graphviz.pipe(engine, format_, data,
  File "/workdir/graphviz-0.20.1/graphviz/_tools.py", line 171, in wrapper
    return func(*args, **kwargs)
  File "/workdir/graphviz-0.20.1/graphviz/backend/piping.py", line 59, in pipe
    proc = execute.run_check(cmd, capture_output=True, quiet=quiet, **kwargs)
  File "/workdir/graphviz-0.20.1/graphviz/backend/execute.py", line 93, in run_check
    raise CalledProcessError(*e.args)
graphviz.backend.execute.CalledProcessError: Command '[PosixPath('dot'), '-Ksfdp', '-Tsvg']' returned non-zero exit status 1. [stderr: b'Error: remove_overlap: Graphviz not built with triangulation library\n']</failure></testcase><testcase classname="tests.backend.test_piping" name="test_pipe_mocked[quiet=False]" time="0.003" /><testcase classname="tests.backend.test_piping" name="test_pipe_mocked[quiet=True]" time="0.003" /><testcase classname="tests.backend.test_piping" name="test_pipe_string_mocked[quiet=False]" time="0.003" /><testcase classname="tests.backend.test_piping" name="test_pipe_string_mocked[quiet=True]" time="0.003" /><testcase classname="tests.backend.test_piping" name="test_pipe_lines_mocked[quiet=False]" time="0.045" /><testcase classname="tests.backend.test_piping" name="test_pipe_lines_mocked[quiet=True]" time="0.068" /><testcase classname="tests.backend.test_piping" name="test_pipe_lines_string_mocked[quiet=False]" time="0.044" /><testcase classname="tests.backend.test_piping" name="test_pipe_lines_string_mocked[quiet=True]" time="0.044" /><testcase classname="tests.backend.test_rendering" name="test_render_missing_file[quiet=False]" time="0.008" /><testcase classname="tests.backend.test_rendering" name="test_render_missing_file[quiet=True]" time="0.007" /><testcase classname="tests.backend.test_rendering" name="test_render_unknown_parameter_raises[args0-ValueError-unknown engine]" time="0.001" /><testcase classname="tests.backend.test_rendering" name="test_render_unknown_parameter_raises[args1-ValueError-unknown format]" time="0.001" /><testcase classname="tests.backend.test_rendering" name="test_render_unknown_parameter_raises[args2-ValueError-unknown renderer]" time="0.001" /><testcase classname="tests.backend.test_rendering" name="test_render_unknown_parameter_raises[args3-RequiredArgumentError-without renderer]" time="0.001" /><testcase classname="tests.backend.test_rendering" name="test_render_unknown_parameter_raises[args4-ValueError-unknown formatter]" time="0.001" /><testcase classname="tests.backend.test_rendering" name="test_render[dot-pdf-None-None-pdf]" time="0.014" /><testcase classname="tests.backend.test_rendering" name="test_render[dot-plain-dot-core-core.dot.plain]" time="0.013" /><testcase classname="tests.backend.test_rendering" name="test_render_img" time="0.016" /><testcase classname="tests.backend.test_rendering" name="test_render_outfile_differnt_parent" time="0.014" /><testcase classname="tests.backend.test_rendering" name="test_render_mocked[quiet=False-None]" time="0.004" /><testcase classname="tests.backend.test_rendering" name="test_render_mocked[quiet=False-dot_sources]" time="0.004" /><testcase classname="tests.backend.test_rendering" name="test_render_mocked[quiet=True-None]" time="0.004" /><testcase classname="tests.backend.test_rendering" name="test_render_mocked[quiet=True-dot_sources]" time="0.003" /><testcase classname="tests.backend.test_rendering" name="test_render_raises_mocked[args0-kwargs0-RequiredArgumentError-filepath: \\(required]" time="0.004" /><testcase classname="tests.backend.test_rendering" name="test_render_raises_mocked[args1-kwargs1-RequiredArgumentError-filepath: \\(required]" time="0.004" /><testcase classname="tests.backend.test_rendering" name="test_render_raises_mocked[args2-kwargs2-RequiredArgumentError-format: \\(required]" time="0.005" /><testcase classname="tests.backend.test_rendering" name="test_render_raises_mocked[args3-kwargs3-RequiredArgumentError-filepath: \\(required]" time="0.004" /><testcase classname="tests.backend.test_rendering" name="test_render_raises_mocked[args4-kwargs4-ValueError-outfile 'spam\\.gv' must be different from input file 'spam\\.gv']" time="0.004" /><testcase classname="tests.backend.test_rendering" name="test_render_raises_mocked[args5-kwargs5-ValueError-overwrite_filepath cannot be combined with raise_if_result_exists]" time="0.004" /><testcase classname="tests.backend.test_rendering" name="test_render_raises_mocked[args6-kwargs6-FileExistsError-output file exists: 'spam.png']" time="0.004" /><testcase classname="tests.backend.test_rendering" name="test_get_outfile[spam.gv-kwargs0-spam.gv.pdf]" time="0.001" /><testcase classname="tests.backend.test_rendering" name="test_get_outfile[spam.gv-kwargs1-spam.gv.dot.plain]" time="0.001" /><testcase classname="tests.backend.test_rendering" name="test_get_filepath[spam.pdf-spam.gv]" time="0.001" /><testcase classname="tests.backend.test_rendering" name="test_get_filepath[spam-spam.gv]" time="0.001" /><testcase classname="tests.backend.test_rendering" name="test_get_format[spam.gv.pdf-None-pdf]" time="0.001" /><testcase classname="tests.backend.test_rendering" name="test_get_format[spam.jpeg-None-jpeg]" time="0.001" /><testcase classname="tests.backend.test_rendering" name="test_get_format[spam.SVG-None-svg]" time="0.001" /><testcase classname="tests.backend.test_rendering" name="test_get_format[spam.pdf-None-pdf]" time="0.001" /><testcase classname="tests.backend.test_rendering" name="test_get_format[spam.pdf-pdf-pdf]" time="0.001" /><testcase classname="tests.backend.test_rendering" name="test_get_format_warns[spam.jpg-jpeg-jpeg-FormatSuffixMismatchWarning-expected format 'jpg' from outfile differs from given format: 'jpeg']" time="0.002" /><testcase classname="tests.backend.test_rendering" name="test_get_format_warns[spam.dot-plain-plain-FormatSuffixMismatchWarning-expected format 'dot' from outfile differs from given format: 'plain']" time="0.002" /><testcase classname="tests.backend.test_rendering" name="test_get_format_warns[spam-svg-svg-UnknownSuffixWarning-unknown outfile suffix '' \\(expected: '\\.svg'\\)]" time="0.002" /><testcase classname="tests.backend.test_rendering" name="test_get_format_warns[spam.peng-png-png-UnknownSuffixWarning-unknown outfile suffix '.peng' \\(expected: '\\.png'\\)]" time="0.002" /><testcase classname="tests.backend.test_rendering" name="test_get_format_warns[spam-pdf-pdf-UnknownSuffixWarning-unknown outfile suffix '' \\(expected: '\\.pdf'\\)]" time="0.002" /><testcase classname="tests.backend.test_rendering" name="test_get_format_raises[spam-RequiredArgumentError-cannot infer rendering format from suffix '' of outfile: 'spam']" time="0.001" /><testcase classname="tests.backend.test_rendering" name="test_get_format_raises[spam.peng-RequiredArgumentError-cannot infer rendering format from suffix '.peng' of outfile: 'spam.peng']" time="0.001" /><testcase classname="tests.backend.test_rendering" name="test_get_format_raises[spam.wav-RequiredArgumentError-cannot infer rendering format from suffix '.wav' of outfile: 'spam.wav']" time="0.002" /><testcase classname="tests.backend.test_unflattening" name="test_unflatten_stagger_missing" time="0.001" /><testcase classname="tests.backend.test_unflattening" name="test_unflatten[digraph {1 -&gt; 2; 1 -&gt; 3; 1 -&gt; 4}-kwargs0-digraph { 1 -&gt; 2 [minlen=1]; 1 -&gt; 3 [minlen=2]; 1 -&gt; 4 [minlen=3]; }]" time="0.002" /><testcase classname="tests.backend.test_unflattening" name="test_unflatten_mocked" time="0.003" /><testcase classname="tests.backend.test_upstream_version" name="test_version" time="0.008" /><testcase classname="tests.backend.test_upstream_version" name="test_version_mocked[dot - graphviz version 1.2.3 (mocked)-expected0]" time="0.003" /><testcase classname="tests.backend.test_upstream_version" name="test_version_mocked[dot - graphviz version 2.43.20190912.0211 (20190912.0211)\n-expected1]" time="0.003" /><testcase classname="tests.backend.test_upstream_version" name="test_version_mocked[dot - graphviz version 2.44.2~dev.20200927.0217 (20200927.0217)\n-expected2]" time="0.003" /><testcase classname="tests.backend.test_upstream_version" name="test_version_mocked[dot - graphviz version 2.44.1 (mocked)\n-expected3]" time="0.003" /><testcase classname="tests.backend.test_upstream_version" name="test_version_mocked[dot - graphviz version 2.44.2~dev.20200704.1652 (mocked)\n-expected4]" time="0.004" /><testcase classname="tests.backend.test_upstream_version" name="test_version_parsefail_mocked" time="0.003" /><testcase classname="tests.backend.test_viewing" name="test_view_unknown_platform" time="0.001" /><testcase classname="tests.backend.test_viewing" name="test_view_mocked[platform='darwin'-quiet=False]" time="0.045" /><testcase classname="tests.backend.test_viewing" name="test_view_mocked[platform='darwin'-quiet=True]" time="0.045" /><testcase classname="tests.backend.test_viewing" name="test_view_mocked[platform='freebsd'-quiet=False]" time="0.045" /><testcase classname="tests.backend.test_viewing" name="test_view_mocked[platform='freebsd'-quiet=True]" time="0.044" /><testcase classname="tests.backend.test_viewing" name="test_view_mocked[platform='linux'-quiet=False]" time="0.045" /><testcase classname="tests.backend.test_viewing" name="test_view_mocked[platform='linux'-quiet=True]" time="0.082" /><testcase classname="tests.backend.test_viewing" name="test_view_mocked[platform='windows'-quiet=False]" time="0.043" /><testcase classname="tests.backend.test_viewing" name="test_view_mocked[platform='windows'-quiet=True]" time="0.075" /></testsuite></testsuites>